{"version":3,"file":"static/js/588.55bd62b0.chunk.js","mappings":"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","sources":["hooks/useHydration/useHydration.ts","hooks/usePortalRef/usePortalRef.ts","webpack://boxxerworld-customiser/./src/components/nav/NavButtons/NavButtons.module.scss?b4ae","webpack://boxxerworld-customiser/./src/components/ui/DontShowAgain/DontShowAgain.module.scss?2c56","components/ui/DontShowAgain/DontShowAgain.tsx","components/ui/Button/ContainedButton.tsx","components/nav/NavButtons/NavButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFitting/NavFitting.module.scss?96df","components/ui/Button/CapsuleNavButton.tsx","components/ui/Button/ContainedNavButton.tsx","components/nav/NavFitting/NavFitting.tsx","components/ui/Image/getSrcSets.ts","webpack://boxxerworld-customiser/./src/components/ui/Image/Image.module.scss?e41e","components/ui/Image/Image.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFlags/NavFlags.module.scss?2098","components/nav/NavFlags/NavFlagsSelect.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavDecalAdjust/NavDecalAdjust.module.scss?c425","components/nav/NavDecalAdjust/NavDecalAdjust.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavEditButtons/NavEditButtons.module.scss?6ae0","components/nav/NavEditButtons/NavEditButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavOptionEdit/NavOptionEdit.module.scss?d15e","components/nav/NavOptionEdit/NavOptionEdit.tsx","components/nav/NavFlags/NavFlagsFlag.tsx","components/nav/NavFlags/NavFlags.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavHeader/NavHeader.module.scss?a403","components/nav/NavHeader/NavHeader.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavImages/NavImages.module.scss?0415","components/nav/NavImages/NavImagesImage.tsx","components/nav/NavImages/NavImagesUpload.tsx","components/nav/NavImages/NavImagesSelect.tsx","components/nav/NavImages/NavImages.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/MaterialGroup.module.scss?bec8","components/nav/MaterialGroup/MaterialGroupState.ts","components/nav/MaterialGroup/Material.tsx","components/nav/MaterialGroup/MaterialType.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/SelectedMaterialInfo.module.scss?ad46","components/nav/MaterialGroup/SelectedMaterialInfo.tsx","components/nav/MaterialGroup/MaterialGroup.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavPart/NavPart.module.scss?e3f3","components/ui/Button/TogglePillButton.tsx","components/nav/NavPart/NavPart.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormInput/FormInput.module.scss?a3cb","components/ui/FormInput/FormInput.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormSelect/FormSelect.module.scss?5df1","components/ui/FormSelect/FormSelect.tsx","services/size.ts","webpack://boxxerworld-customiser/./src/components/nav/NavSize/NavSize.module.scss?68ae","components/nav/NavSize/NavSize.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavText.module.scss?7ead","components/ui/Price/Price.module.scss","components/ui/Price/Price.tsx","components/nav/NavText/NavTextFinish.tsx","components/nav/NavText/NavTextNameTypes.tsx","components/nav/NavText/NavTextOutline.tsx","components/nav/NavText/NavTextSelect.tsx","components/nav/NavText/NavTextText.tsx","components/nav/NavText/NavTextsSelection.tsx","lib/canvas.ts","lib/img.util.ts","webpack://boxxerworld-customiser/./src/components/three/CustomiserCanvas/NavTextScene.module.scss?f04f","components/three/CustomiserCanvas/NavTextScene.tsx","components/nav/NavText/NavTextPreview.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavTextCategories.module.scss?c8c9","components/nav/NavText/NavTextCategories.tsx","components/ui/Button/NextStepButton.tsx","components/ui/Button/PrevStepButton.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavTextNavSteps.module.scss?13e7","components/ui/Button/CancelStepButton.tsx","components/ui/Button/ApplyButton.tsx","components/nav/NavText/NavTextNavSteps.tsx","components/nav/NavText/NavTextInput.tsx","components/nav/NavText/NavText.tsx","webpack://boxxerworld-customiser/./src/components/nav/CustomiserNav/CustomiserNav.module.scss?394a","components/nav/NavHeader/NavHeaderScroll.tsx","components/nav/CustomiserNav/CustomiserNav.tsx","webpack://boxxerworld-customiser/./src/components/layout/Header/Header.module.scss?47aa","components/layout/Header/Header.tsx","webpack://boxxerworld-customiser/./src/components/layout/Customiser/Customiser.module.scss?e94f","components/layout/Customiser/Customiser.tsx","lib/shopify.ts","components/three/Loadable/Loadable.tsx","components/three/MouseHelper/MouseHelper.tsx","webpack://boxxerworld-customiser/./src/components/three/CustomiserCanvas/CustomiserCanvas.module.scss?7972","components/three/CustomiserCanvas/CustomiserCanvas.tsx","components/three/Lights/Lights.tsx"],"sourcesContent":["import { useCustomiserStore } from '@store/customiser';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const useHydration = () => {\r\n  const [hydrated, setHydrated] = useState(useCustomiserStore.persist.hasHydrated);\r\n\r\n  useEffect(() => {\r\n    const unsubHydrate = useCustomiserStore.persist.onHydrate(() => setHydrated(false)); // Note: this is just in case you want to take into account manual rehydrations. You can remove this if you don't need it/don't want it.\r\n    const unsubFinishHydration = useCustomiserStore.persist.onFinishHydration(() =>\r\n      setHydrated(true),\r\n    );\r\n\r\n    setHydrated(useCustomiserStore.persist.hasHydrated());\r\n\r\n    return () => {\r\n      unsubHydrate();\r\n      unsubFinishHydration();\r\n    };\r\n  }, []);\r\n\r\n  return hydrated;\r\n};\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nexport const usePortalRef = (id: string) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const portalRef = useRef<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) {\r\n      portalRef.current = document.getElementById(id);\r\n      if (portalRef.current) {\r\n        setLoaded(true);\r\n      }\r\n    }\r\n  }, [id, loaded]);\r\n\r\n  return loaded ? portalRef.current : null;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavButtons_root__ON-jJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"DontShowAgain_root__zOI6r\",\"notifContainer\":\"DontShowAgain_notifContainer__adaGf\",\"notifControlContainer\":\"DontShowAgain_notifControlContainer__gVQq0\",\"btnContainer\":\"DontShowAgain_btnContainer__We3vg\"};","import React, { useState, useEffect } from 'react';\r\nimport styles from './DontShowAgain.module.scss';\r\n\r\nconst DontShowAgain = ({\r\n  children,\r\n  notifName = 'hideShowNotification',\r\n  setShowNotification,\r\n  cb,\r\n}: {\r\n  children: React.ReactNode;\r\n  notifName: string;\r\n  setShowNotification: React.Dispatch<React.SetStateAction<boolean>>;\r\n  cb?: () => void;\r\n}) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const handleDismiss = () => {\r\n    setShowNotification(false);\r\n    if (isChecked) {\r\n      localStorage.setItem(notifName, '1');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.root}>\r\n        <span className={styles.notifContainer}>\r\n          {children}\r\n          <div className={styles.notifControlContainer}>\r\n            <label>\r\n              <input type='checkbox' onChange={(e) => setIsChecked(e.target.checked)} />\r\n              Don&apos;t show again\r\n            </label>\r\n            <span className={styles.btnContainer}>\r\n              <button onClick={handleDismiss}>Cancel</button>\r\n              <button\r\n                onClick={() => {\r\n                  handleDismiss();\r\n                  cb && cb();\r\n                }}\r\n              >\r\n                Okay\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DontShowAgain;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface ContainedButtonProps {\r\n  onClick?: () => void;\r\n  isClickable?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n\r\n  isSelected?: boolean;\r\n}\r\n\r\nconst ContainedButton = ({ onClick, isClickable, classNames, children }: ContainedButtonProps) => {\r\n  const buttonClassNames = `\r\n      ${styles.containedButton}\r\n      ${classNames}\r\n      ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    `;\r\n  return (\r\n    <button className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ContainedButton;\r\n","import { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavButtons.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\nimport DontShowAgain from '../../ui/DontShowAgain';\r\nimport { useState } from 'react';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\nexport interface NavButtonsProps {\r\n  className?: string;\r\n  confirmText?: string | Falsey;\r\n  confirmStorage?: string;\r\n}\r\n\r\nconst NavButtons = ({ className, confirmText, confirmStorage }: NavButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const cancelPartChange = useCustomiserStore((state) => state.cancelPartChange);\r\n  const resetNav = useCustomiserStore((state) => state.resetNav);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const notifTitle = confirmStorage;\r\n  const localStorageItem = localStorage.getItem(notifTitle || '');\r\n  const shouldShowNotification = !localStorageItem;\r\n\r\n  if (!portalRef || !popupPortalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className={rootClassName}>\r\n        <ContainedButton onClick={() => cancelPartChange()}>Cancel</ContainedButton>\r\n        <ContainedButton\r\n          onClick={() => {\r\n            if (!confirmText) {\r\n              resetNav();\r\n            } else {\r\n              if (shouldShowNotification) {\r\n                setShowPopup(true);\r\n              } else {\r\n                resetNav();\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          Save\r\n        </ContainedButton>\r\n      </div>\r\n      {confirmText &&\r\n        showPopup &&\r\n        shouldShowNotification &&\r\n        notifTitle &&\r\n        ReactDOM.createPortal(\r\n          <DontShowAgain cb={resetNav} setShowNotification={setShowPopup} notifName={notifTitle}>\r\n            <span>{confirmText}</span>\r\n          </DontShowAgain>,\r\n          popupPortalRef,\r\n        )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"fittingOption\":\"NavFitting_fittingOption__XQUUG\",\"fittingButtons\":\"NavFitting_fittingButtons__Y1hdd\",\"fittingButton\":\"NavFitting_fittingButton__djmDJ\",\"navButtonContainer\":\"NavFitting_navButtonContainer__K9a4D\"};","import styles from './Button.module.scss';\r\n\r\ninterface CapsuleButtonProps {\r\n  onClick?: () => void;\r\n  isClickable?: boolean;\r\n  isSelected?: boolean;\r\n  isFinished?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst CapsuleNavButton = ({\r\n  onClick,\r\n  isClickable,\r\n  isSelected,\r\n  isFinished,\r\n  classNames,\r\n  children,\r\n}: CapsuleButtonProps) => {\r\n  const buttonClassNames = `\r\n    ${styles.capsuleNavButton}\r\n    ${classNames}\r\n    ${isSelected ? styles.selected : ''}\r\n    ${isFinished ? styles.finished : ''}\r\n    `;\r\n  return (\r\n    <span className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default CapsuleNavButton;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface CapsuleButtonProps {\r\n  onClick?: () => void;\r\n  isSelected?: boolean;\r\n  isFinished?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ContainedNavButton = ({\r\n  onClick,\r\n  isSelected,\r\n  isFinished,\r\n  classNames,\r\n  children,\r\n}: CapsuleButtonProps) => {\r\n  const buttonClassNames = `\r\n    ${styles.containedNavButton}\r\n    ${classNames}\r\n    ${isSelected ? styles.selected : ''}\r\n    ${isFinished ? styles.finished : ''}\r\n    `;\r\n  return (\r\n    <span className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ContainedNavButton;\r\n","import OptionButton from '@components/ui/OptionButton';\r\nimport { CustomProductOptionFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { motion } from 'framer-motion';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavFitting.module.scss';\r\nimport { FocusCameraOnPart } from '@components/layout/Customiser/Customiser';\r\nimport CapsuleButton from '@components/ui/Button/CapsuleNavButton';\r\nimport { useState } from 'react';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\nimport ContainedNavButton from '@components/ui/Button/ContainedNavButton';\r\n\r\nexport interface FittingOptionProps {\r\n  option: CustomProductOptionFragment;\r\n  focusCameraOnPart?: FocusCameraOnPart;\r\n}\r\n\r\nconst FittingOption = ({ option, focusCameraOnPart }: FittingOptionProps) => {\r\n  const selectedModels = useCustomiserStore((state) => state.selectedModels);\r\n  const setSelectedModel = useCustomiserStore((state) => state.setSelectedModel);\r\n\r\n  if (!option) {\r\n    return null;\r\n  }\r\n\r\n  const getSelected = selectedModels.find((m) => m.optionId === option.id)?.model;\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={styles.fittingOption}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <div className={styles.fittingButtons}>\r\n          {option.models?.map((m) => (\r\n            <ContainedNavButton\r\n              key={m?.id}\r\n              isSelected={getSelected?.id === m?.model?.data?.id}\r\n              classNames={styles.fittingButton}\r\n              onClick={() => {\r\n                setSelectedModel(option.id, m?.model?.data);\r\n                focusCameraOnPart && focusCameraOnPart(option.name);\r\n              }}\r\n            >\r\n              {m?.model?.data?.attributes?.name}\r\n            </ContainedNavButton>\r\n          ))}\r\n        </div>\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface NavFittingProps {\r\n  focusCameraOnPart?: FocusCameraOnPart;\r\n}\r\nconst NavFitting = ({ focusCameraOnPart }: NavFittingProps) => {\r\n  const fittingOptions = useCustomiserStore(\r\n    (state) => state.customProduct?.attributes?.options,\r\n  ) as Array<CustomProductOptionFragment>;\r\n\r\n  const fittingOptionsTitles = fittingOptions?.map((o) => o.name);\r\n\r\n  const [navStep, setNavStep] = useState(0);\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className={styles.navButtonContainer}>\r\n        {fittingOptionsTitles.map((title, i) => {\r\n          return (\r\n            <CapsuleButton\r\n              isFinished={navStep > i}\r\n              isSelected={navStep === i}\r\n              onClick={() => setNavStep(i)}\r\n              key={i}\r\n            >\r\n              {title}\r\n            </CapsuleButton>\r\n          );\r\n        })}\r\n      </div>\r\n      <div>\r\n        <b>Select {fittingOptionsTitles[navStep]}:</b>\r\n      </div>\r\n      <br />\r\n      {\r\n        <FittingOption\r\n          focusCameraOnPart={focusCameraOnPart}\r\n          key={fittingOptions[navStep]?.id}\r\n          option={fittingOptions[navStep]}\r\n        />\r\n      }\r\n      <NavButtons />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavFitting;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Formats } from './types';\r\n\r\nfunction getSrcSet(formats: Formats): string | null {\r\n  if (!formats) return null;\r\n\r\n  const fff = Object.entries(formats)\r\n    .map((f) => {\r\n      return f[1]\r\n        ? {\r\n            width: f[1].width,\r\n            url: f[1].url,\r\n          }\r\n        : null;\r\n    })\r\n    .filter((format) => format);\r\n\r\n  return !fff.length\r\n    ? null\r\n    : fff\r\n        .sort((a, b) => {\r\n          if (a?.width && b?.width && a.width < b.width) return -1;\r\n          if (a?.width && b?.width && a.width > b.width) return 1;\r\n          return 0;\r\n        })\r\n        .reduce((acc: any, current: any, index: number, array: any) => {\r\n          return acc + `${current.url} ${current.width}w${index < array.length - 1 ? ', ' : ''}`;\r\n        }, '');\r\n}\r\n\r\nexport default function getSrcSets(formats: Formats): string | null {\r\n  return getSrcSet(formats);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Image_root__u7aDb\"};","import { ImageFragment, Maybe } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { CSSProperties, useMemo } from 'react';\r\nimport getSrcSets from './getSrcSets';\r\n\r\nimport styles from './Image.module.scss';\r\n\r\nexport interface ImageProps {\r\n  className?: string;\r\n  image?: Maybe<ImageFragment>;\r\n  sizes?: string;\r\n}\r\n\r\nconst Image = ({ className, image, sizes }: ImageProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  if (!image) {\r\n    return null;\r\n  }\r\n\r\n  const relativeHeight = useMemo(() => {\r\n    if (image.attributes?.height && image.attributes?.width) {\r\n      return (image.attributes.height / image.attributes.width) * 100;\r\n    }\r\n    return 100;\r\n  }, [image]);\r\n\r\n  const style = { '--image-padding-top': `${relativeHeight}%` } as CSSProperties;\r\n\r\n  const srcSet = useMemo(() => getSrcSets(image.attributes?.formats), [image]);\r\n\r\n  return (\r\n    <div className={rootClassName} style={style}>\r\n      {srcSet && (\r\n        <img src={image.attributes?.url} srcSet={srcSet} sizes={sizes ? sizes : '100vw'} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"flags\":\"NavFlags_flags__S52CT\",\"flag\":\"NavFlags_flag__gtrVs\",\"flagItem\":\"NavFlags_flagItem__rI7sv\",\"flagItemImage\":\"NavFlags_flagItemImage__6ov2x\"};","import Image from '@components/ui/Image';\r\nimport { FlagFragment } from '@graphql/generated/graphql';\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\n\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsSelectProps {\r\n  editFlag?: FlagCustomiser;\r\n  flags: FlagFragment[];\r\n}\r\n\r\nexport const NavFlagsSelect = ({ editFlag, flags }: NavFlagsSelectProps) => {\r\n  const { addFlag, updateFlag } = useCustomiserStore((state) => state);\r\n\r\n  const flagSelected = (flag: FlagFragment) => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        flag: flag,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addFlag({\r\n        flag: flag,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flags}>\r\n      {flags?.map((f) => (\r\n        <div className={styles.flag} key={f.id} onClick={() => flagSelected(f)}>\r\n          <Image image={f.attributes?.image.data} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavDecalAdjust_root__t6vBt\",\"root__rotate\":\"NavDecalAdjust_root__rotate__jXeZv\",\"rotate\":\"NavDecalAdjust_rotate__adO98\",\"scale\":\"NavDecalAdjust_scale__gq4ry\",\"iconContainer\":\"NavDecalAdjust_iconContainer__nW-8U\",\"rotateIcon\":\"NavDecalAdjust_rotateIcon__fOqK4\",\"adjustControls\":\"NavDecalAdjust_adjustControls__ioLx3\"};","/* eslint-disable react/prop-types */\r\nimport { GraphicPriceEntity, GraphicPriceFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport ReactSlider from 'react-slider';\r\nimport styles from './NavDecalAdjust.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\nimport { FaCircleMinus, FaCirclePlus } from 'react-icons/fa6';\r\nimport { useState } from 'react';\r\n\r\nimport { GiClockwiseRotation, GiAnticlockwiseRotation } from 'react-icons/gi';\r\n\r\nexport interface NavDecalAdjustProps {\r\n  className?: string;\r\n  prices?: GraphicPriceFragment[];\r\n  scale?: number;\r\n  rotation?: number;\r\n  onScale?: (event: number, price?: GraphicPriceEntity) => void;\r\n  onRotate?: (event: number) => void;\r\n}\r\n\r\nconst range = (start: number, stop: number, step: number) =>\r\n  Array.from({ length: (stop - start) / step + 1 }, (value, index) => start + index * step);\r\n\r\nconst NavDecalAdjust = ({\r\n  className,\r\n  scale = 1,\r\n  rotation = 0,\r\n  prices,\r\n  onScale,\r\n  onRotate,\r\n}: NavDecalAdjustProps) => {\r\n  const scaleAdjust = 0.15;\r\n  const rotateAdjust = 7.5;\r\n  const portalRef = usePortalRef('CustomiserCanvasControls');\r\n\r\n  const [currentScale, setCurrentScale] = useState(scale);\r\n  const [currentRotate, setCurrentRotate] = useState(rotation);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  const rootRotateClassName = cn(styles.root, className, styles.root__rotate);\r\n  const min = 1;\r\n  const max = 2;\r\n  const numberOfSteps = prices?.length ?? 10;\r\n  const step = (max - min) / (numberOfSteps - 1);\r\n  const marks = range(min, max, step);\r\n\r\n  const formattedPrices = prices?.map((p, i) => ({\r\n    ...p,\r\n    markKey: Number(marks[i].toFixed(5)),\r\n  }));\r\n\r\n  const onChange = (value: number) => {\r\n    const price = formattedPrices?.find((p) => p.markKey === value);\r\n    if (onScale) onScale(value, price);\r\n  };\r\n\r\n  const addScale = () => {\r\n    setCurrentScale((cur) => {\r\n      onScale && onScale(cur + scaleAdjust);\r\n      return cur + scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const subtractScale = () => {\r\n    setCurrentScale((cur) => {\r\n      if (cur - scaleAdjust <= 0) return cur;\r\n      onScale && onScale(cur - scaleAdjust);\r\n      return cur - scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur - rotateAdjust);\r\n      return cur - rotateAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateCounterClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur + rotateAdjust);\r\n      return cur + rotateAdjust;\r\n    });\r\n  };\r\n\r\n  return createPortal(\r\n    <>\r\n      <div className={rootRotateClassName}>\r\n        <span>\r\n          <h4>Size</h4>\r\n          <span className={styles.iconContainer}>\r\n            <span onClick={subtractScale}>\r\n              <FaCircleMinus />\r\n            </span>\r\n            <span onClick={addScale}>\r\n              <FaCirclePlus />\r\n            </span>\r\n          </span>\r\n        </span>\r\n        <span>\r\n          <h4>Rotate</h4>\r\n          <span className={styles.iconContainer}>\r\n            <span className={styles.rotateIcon} onClick={rotateCounterClockwise}>\r\n              <GiAnticlockwiseRotation />\r\n            </span>\r\n            <span className={styles.rotateIcon} onClick={rotateClockwise}>\r\n              <GiClockwiseRotation />\r\n            </span>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavDecalAdjust;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavEditButtons_root__43Hm3\"};","import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavEditButtons.module.scss';\r\n\r\nexport interface NavEditButtonsProps {\r\n  className?: string;\r\n  onApply?: () => void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst NavEditButtons = ({ className, disabled, onApply }: NavEditButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={rootClassName}>\r\n      <Button onClick={onApply}>Canacel</Button>\r\n      <Button colour='red' onClick={onApply} disabled={disabled}>\r\n        Save\r\n      </Button>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavEditButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavOptionEdit_root__q-pp0\",\"eyeIcon\":\"NavOptionEdit_eyeIcon__v85fP\"};","import cn from 'classnames';\r\n\r\nimport styles from './NavOptionEdit.module.scss';\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa6';\r\nimport { MouseEventHandler } from 'react';\r\n\r\nexport interface NavOptionEditProps {\r\n  className?: string;\r\n  onEdit?: () => void;\r\n  onDelete?: () => void;\r\n  isVisible?: boolean;\r\n  toggleVisibility?: () => void;\r\n}\r\n\r\nconst NavOptionEdit = ({\r\n  className,\r\n  onEdit,\r\n  onDelete,\r\n  isVisible = true,\r\n  toggleVisibility,\r\n}: NavOptionEditProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const isVisibleEye = typeof isVisible === undefined ? true : isVisible;\r\n\r\n  const handleIsVisible: MouseEventHandler<HTMLSpanElement> = (event) => {\r\n    event.stopPropagation();\r\n    toggleVisibility && toggleVisibility();\r\n  };\r\n  return (\r\n    <div className={rootClassName}>\r\n      <span onClick={handleIsVisible} className={styles.eyeIcon}>\r\n        {isVisibleEye ? <FaEye /> : <FaEyeSlash />}\r\n      </span>\r\n      <button onClick={onEdit}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24.785 24.788'>\r\n          <path d='M24.785 6.739 18.046 0 0 18.049v6.739h6.739Zm-6.738-3.218 3.218 3.218-1.351 1.352-3.217-3.218Zm-3.112 3.112 3.218 3.218L7.467 20.538l-3.218-3.22ZM2.489 22.298v-3.219l3.218 3.218Z' />\r\n        </svg>\r\n      </button>\r\n      <button onClick={onDelete}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.601 23.219'>\r\n          <path d='m14.601 11.609-1.489-1.489L2.992 0 .001 2.978l8.631 8.631-8.631 8.632 2.991 2.978L13.112 13.1Z' />\r\n          <path d='m9 11.609 1.489 1.489 10.12 10.12L23.6 20.24l-8.631-8.631L23.6 2.977 20.609-.001l-10.12 10.119Z' />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavOptionEdit;\r\n","import Image from '@components/ui/Image';\r\n\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsFlagProps {\r\n  flag: FlagCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavFlagsFlag = ({ flag, setShowSelector: setSelectModel }: NavFlagsFlagProps) => {\r\n  const { updateFlag, deleteFlag } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (flag.key) {\r\n      updateFlag(flag.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (flag.key) {\r\n      deleteFlag(flag.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flagItem}>\r\n      <div className={styles.flagItemImage}>\r\n        <Image image={flag.flag?.attributes?.image.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import { startTransition, useState } from 'react';\r\nimport { NavFlagsSelect } from './NavFlagsSelect';\r\n\r\nimport Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\nimport styles from './NavFlags.module.scss';\r\nimport { NavFlagsFlag } from './NavFlagsFlag';\r\nimport { GraphicPriceEntity, useGetFlagsQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nconst NavFlags = () => {\r\n  const flags = useCustomiserStore((state) => state.flags);\r\n  const updateFlag = useCustomiserStore((state) => state.updateFlag);\r\n  const editFlag = flags?.find((g) => g.edit);\r\n\r\n  const [showSelector, setShowSelector] = useState(false);\r\n\r\n  const { data: flagQuery } = useGetFlagsQuery(\r\n    graphQLClient,\r\n    {\r\n      pagination: { limit: 500 },\r\n    },\r\n    {\r\n      select: (data) => ({ flags: data.flags?.data, prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addFlag = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editFlag?.key) updateFlag(editFlag.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyFlag = () => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editFlag?.decalScale}\r\n            rotation={editFlag?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={flagQuery?.prices}\r\n          />\r\n          {flagQuery?.flags && <NavFlagsSelect editFlag={editFlag} flags={flagQuery.flags} />}\r\n          <NavEditButtons disabled={!editFlag} onApply={applyFlag} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Flags</h3>\r\n            {flags?.map((flag) => (\r\n              <NavFlagsFlag key={flag.key} flag={flag} setShowSelector={setShowSelector} />\r\n            ))}\r\n            <Button colour='red' onClick={addFlag}>\r\n              Add Flag\r\n            </Button>\r\n          </div>\r\n          <NavButtons />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavFlags;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavHeader_root__jnadG\",\"menu\":\"NavHeader_menu__Mmpjx\",\"nav\":\"NavHeader_nav__mJbli\",\"title\":\"NavHeader_title__tOyZd\",\"minimizeIcon\":\"NavHeader_minimizeIcon__GKC2n\",\"minimized\":\"NavHeader_minimized__04mp3\",\"navIcon\":\"NavHeader_navIcon__6iUBm\"};","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport styles from './NavHeader.module.scss';\r\nimport InfoButton from '@components/ui/InfoButton';\r\n\r\nexport interface NavHeaderProps {\r\n  className?: string;\r\n  toggle: () => void;\r\n  isOpen: boolean;\r\n  isMinimized?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst NavHeader = ({ className, toggle, isOpen, isMinimized = false, onClick }: NavHeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedNav = useCustomiserStore((state) => state.selectedNav);\r\n\r\n  if (isOpen) {\r\n    return null;\r\n  }\r\n\r\n  const minimizeIconClassname = cn(styles.minimizeIcon, {\r\n    [styles.minimized]: isMinimized,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div id='NavHeader' className={rootClassName}>\r\n        <div className={styles.nav}>\r\n          {/* <div className={styles.title}>{selectedNav?.name}</div> */}\r\n          <div className={minimizeIconClassname} onClick={onClick}>\r\n            <svg viewBox='0 0 330 330'>\r\n              <path\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                id='XMLID_224_'\r\n                d='M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394  l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393  C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z'\r\n              />\r\n            </svg>\r\n          </div>\r\n          {/* <InfoButton title={selectedNav?.name} /> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavHeader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dropZone\":\"NavImages_dropZone__4YMrM\",\"image\":\"NavImages_image__svpqZ\",\"graphicItem\":\"NavImages_graphicItem__XenKS\",\"graphicItemImage\":\"NavImages_graphicItemImage__8GS2T\"};","import Image from '@components/ui/Image';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesImageProps {\r\n  graphic: GraphicCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavImagesImage = ({\r\n  graphic,\r\n  setShowSelector: setSelectModel,\r\n}: NavImagesImageProps) => {\r\n  const { updateGraphic, deleteGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (graphic.key) {\r\n      updateGraphic(graphic.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (graphic.key) {\r\n      deleteGraphic(graphic.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphicItem}>\r\n      <div className={styles.graphicItemImage}>\r\n        <Image image={graphic.graphic?.attributes?.image?.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  GraphicFragment,\r\n  useCreateGraphicMutation,\r\n  useUploadMultipleFilesMutation,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { Dispatch, SetStateAction, useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesUploadProps {\r\n  setGraphic: (graphic: GraphicFragment) => void;\r\n}\r\n\r\nexport const NavImagesUpload = ({ setGraphic }: NavImagesUploadProps) => {\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const { mutate: createGraphicMutation } = useCreateGraphicMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const graphic = data.createGraphic?.data;\r\n      setSaving(false);\r\n      if (graphic) setGraphic(graphic);\r\n    },\r\n  });\r\n\r\n  const { mutate: fileUploadMutate } = useUploadMultipleFilesMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const fileIDs = data.multipleUpload.map((f) => f?.data?.id) as string[];\r\n      createGraphicMutation({ data: { image: fileIDs[0], customer: true, name: fileIDs[0] } });\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback((acceptedFiles: File[]) => {\r\n    setSaving(true);\r\n    fileUploadMutate({ files: acceptedFiles });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'image/jpeg': [],\r\n      'image/png': [],\r\n    },\r\n    maxFiles: 1,\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h5>Upload an image</h5>\r\n      <div className={styles.dropZone} {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <div>\r\n          <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.219 29.191'>\r\n            <g>\r\n              <path d='M11.609 0 10.12 1.489 0 11.609 2.978 14.6l8.631-8.631 8.632 8.631 2.978-2.991L13.1 1.489Z' />\r\n              <path d='M14.356 29.191h-5v-26h5Z' />\r\n            </g>\r\n          </svg>\r\n          {saving ? (\r\n            <h5>Please wait...</h5>\r\n          ) : isDragActive ? (\r\n            <h5>Drop images here ...</h5>\r\n          ) : (\r\n            <h5>Click or drag images here to upload</h5>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { GraphicFragment } from '@graphql/generated/graphql';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState } from 'react';\r\nimport Image from '@components/ui/Image';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesUpload } from './NavImagesUpload';\r\nimport Button from '@components/ui/Button';\r\n\r\nexport interface NavImagesSelectProps {\r\n  editGraphic?: GraphicCustomiser;\r\n  graphic?: GraphicFragment;\r\n}\r\n\r\nexport const NavImagesSelect = ({ editGraphic, graphic }: NavImagesSelectProps) => {\r\n  const [currentGraphic, setCurrentGraphic] = useState<GraphicFragment | undefined>(graphic);\r\n  const { addGraphic, updateGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const graphicSelected = (graphic: GraphicFragment) => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        graphic,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addGraphic({\r\n        graphic,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setGraphic = (graphic: GraphicFragment) => {\r\n    setCurrentGraphic(graphic);\r\n    graphicSelected(graphic);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphics}>\r\n      {currentGraphic ? (\r\n        <>\r\n          <Image className={styles.image} image={currentGraphic.attributes?.image?.data} />\r\n          <Button onClick={() => setCurrentGraphic(undefined)}>Change Image</Button>\r\n        </>\r\n      ) : (\r\n        <NavImagesUpload setGraphic={setGraphic} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import Button from '@components/ui/Button';\r\nimport { GraphicPriceEntity, useGetImagesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { startTransition, useState } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesImage } from './NavImagesImage';\r\nimport { NavImagesSelect } from './NavImagesSelect';\r\n\r\nconst NavImages = () => {\r\n  const [showSelector, setShowSelector] = useState(false);\r\n  const graphics = useCustomiserStore((state) => state.graphics);\r\n  const updateGraphic = useCustomiserStore((state) => state.updateGraphic);\r\n  const editGraphic = graphics?.find((g) => g.edit);\r\n\r\n  const { data: imageQuery } = useGetImagesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => ({ prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addImage = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editGraphic?.key) updateGraphic(editGraphic.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyImage = () => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editGraphic?.decalScale}\r\n            rotation={editGraphic?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={imageQuery?.prices}\r\n          />\r\n          <NavImagesSelect editGraphic={editGraphic} graphic={editGraphic?.graphic} />\r\n          <NavEditButtons disabled={!editGraphic} onApply={applyImage} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Images</h3>\r\n            {graphics?.map((graphic) => (\r\n              <NavImagesImage\r\n                key={graphic.key}\r\n                graphic={graphic}\r\n                setShowSelector={setShowSelector}\r\n              />\r\n            ))}\r\n            <Button colour='red' onClick={addImage}>\r\n              Add Image\r\n            </Button>\r\n          </div>\r\n          <NavButtons />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavImages;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MaterialGroup_root__M5bHl\",\"colourGroups\":\"MaterialGroup_colourGroups__G3KSo\",\"materialType\":\"MaterialGroup_materialType__X63YP\",\"materialType__title\":\"MaterialGroup_materialType__title__nQjVb\",\"materials\":\"MaterialGroup_materials__iAoDB\",\"selected\":\"MaterialGroup_selected__YMvLv\"};","import { create, StateCreator, StoreApi } from 'zustand';\r\nimport createContext from 'zustand/context';\r\nimport produce from 'immer';\r\nimport { devtools } from 'zustand/middleware';\r\nimport {\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n} from '@graphql/generated/graphql';\r\nimport { uniqBy } from 'lodash';\r\n\r\nconst uniqueColourGroups = (array: MaterialColourGroupEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterialTypes = (array: MaterialTypeEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterials = (array: MaterialEntity[]) => uniqBy(array, 'id');\r\ninterface MaterialGroupInitialState {\r\n  colourGroups: MaterialColourGroupEntity[];\r\n  materialTypes: MaterialTypeEntity[];\r\n  materials: MaterialEntity[];\r\n  selectedColourGroup?: MaterialColourGroupEntity;\r\n  selectedMaterialType?: MaterialTypeEntity;\r\n}\r\nexport interface MaterialGroupState extends MaterialGroupInitialState {\r\n  resetMaterialGroup: () => void;\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => void;\r\n  filteredMaterials: () => MaterialEntity[];\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => void;\r\n  setMaterialType: (materialType: MaterialTypeEntity) => void;\r\n}\r\n\r\nconst initialState: MaterialGroupInitialState = {\r\n  colourGroups: [],\r\n  materialTypes: [],\r\n  materials: [],\r\n};\r\n\r\nconst createMaterialGroup: StateCreator<MaterialGroupState, [['zustand/devtools', never]], []> = (\r\n  set,\r\n  get,\r\n) => ({\r\n  ...initialState,\r\n  filteredMaterials: () => {\r\n    const materials = get().materials;\r\n    const colourGroup = get().selectedColourGroup;\r\n    const filteredMaterials = materials.filter((m) =>\r\n      m.attributes?.colourGroups?.data.find((g) => g.id === colourGroup?.id),\r\n    );\r\n    return filteredMaterials;\r\n  },\r\n  resetMaterialGroup: () => set(initialState),\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        const colourGroups = materials.flatMap(\r\n          (d) => d.attributes?.colourGroups?.data,\r\n        ) as MaterialColourGroupEntity[];\r\n        state.colourGroups = uniqueColourGroups(colourGroups);\r\n        if (colourGroup) {\r\n          state.selectedColourGroup = colourGroup;\r\n        } else {\r\n          state.selectedColourGroup = state.colourGroups[0];\r\n        }\r\n\r\n        const materialTypes = materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n\r\n        if (materialType) {\r\n          state.selectedMaterialType = materialType;\r\n        } else {\r\n          state.selectedMaterialType = state.materialTypes[0];\r\n        }\r\n\r\n        state.materials = uniqueMaterials(materials);\r\n      }),\r\n    );\r\n  },\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedColourGroup = colourGroup;\r\n        const materialTypes = state.materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n      }),\r\n    );\r\n  },\r\n  setMaterialType: (materialType: MaterialTypeEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedMaterialType = materialType;\r\n      }),\r\n    );\r\n  },\r\n});\r\n\r\nexport const { Provider, useStore: useMaterialGroupStore } =\r\n  createContext<StoreApi<MaterialGroupState>>();\r\n\r\nexport const createStore = () => create<MaterialGroupState>()(devtools(createMaterialGroup));\r\n","import { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialProps {\r\n  className?: string;\r\n  material: MaterialFragment;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const Material = ({\r\n  className,\r\n  material,\r\n  onMaterialSelected,\r\n  selectedMaterialId,\r\n}: MaterialProps) => {\r\n  const rootClassName = cn(styles.material, className, {\r\n    [styles.selected]: material.id === selectedMaterialId,\r\n  });\r\n\r\n  const mapImage = material?.attributes?.images?.find((i) => i?.mapType === 'map');\r\n\r\n  const onClick = () => {\r\n    if (material) {\r\n      onMaterialSelected(material);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className={rootClassName} onClick={onClick} data-name={material.attributes?.name}>\r\n      {mapImage && <img src={mapImage?.image?.data?.attributes?.formats['thumbnail'].url} />}\r\n    </button>\r\n  );\r\n};\r\n","import PillButton from '@components/ui/PillButton';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { Material } from './Material';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { useMaterialGroupStore } from './MaterialGroupState';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialTypeProps {\r\n  className?: string;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const MaterialType = ({\r\n  className,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  selectedMaterialId,\r\n}: MaterialTypeProps) => {\r\n  const rootClassName = cn(styles.materialType, className);\r\n\r\n  const {\r\n    materialTypes,\r\n    filteredMaterials: getFilteredMaterials,\r\n    materials,\r\n  } = useMaterialGroupStore();\r\n\r\n  const filteredMaterials = hideColorGroups ? materials : getFilteredMaterials();\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && <h5>Texture</h5>}\r\n      {materialTypes.map((mt) => (\r\n        <div key={mt.id} className={styles.materialType}>\r\n          <h6 className={styles.materialType__title}>{mt.attributes?.name}</h6>\r\n          <div className={styles.materials}>\r\n            {filteredMaterials\r\n              .filter((m) => m.attributes?.type?.data?.id === mt.id)\r\n              .map((m) => (\r\n                <Material\r\n                  key={m.id}\r\n                  material={m}\r\n                  onMaterialSelected={onMaterialSelected}\r\n                  selectedMaterialId={selectedMaterialId}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SelectedMaterialInfo_root__kIp+x\",\"root__noMaterial\":\"SelectedMaterialInfo_root__noMaterial__dtWKf\",\"currencyContainer\":\"SelectedMaterialInfo_currencyContainer__s15RH\",\"materialName\":\"SelectedMaterialInfo_materialName__vha4F\"};","import { FC, useMemo } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport styles from './SelectedMaterialInfo.module.scss';\r\n\r\nconst SelectedMaterialInfo: FC = () => {\r\n  const portalRef = usePortalRef('CustomiserNavMaterial');\r\n  const { selectedPart, parts } = useCustomiserStore();\r\n\r\n  const selectedMaterial = useMemo(\r\n    () => parts.find((part) => part.part.id === selectedPart?.id)?.material,\r\n    [selectedPart, parts],\r\n  );\r\n\r\n  if (!portalRef) return null;\r\n\r\n  if (!selectedMaterial) {\r\n    return ReactDOM.createPortal(\r\n      <div className={cn(styles.root, styles.root__noMaterial)}>No material selected.</div>,\r\n      portalRef,\r\n    );\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={styles.root}>\r\n      <span>\r\n        <div className={styles.materialName}>{selectedMaterial.attributes?.name}</div>\r\n        <small>\r\n          <i>TODO: Add currency</i>\r\n        </small>\r\n      </span>\r\n      {/* TODO: Add currency */}\r\n      <div className={styles.currencyContainer}>\r\n        ${selectedMaterial.attributes?.price?.data?.attributes?.price}\r\n      </div>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default SelectedMaterialInfo;\r\n","import {\r\n  InputMaybe,\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialFragment,\r\n  MaterialGroupEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n  useGetMaterialsQuery,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nimport cn from 'classnames';\r\nimport { useEffect } from 'react';\r\n\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { createStore, Provider, useMaterialGroupStore } from './MaterialGroupState';\r\nimport { MaterialType } from './MaterialType';\r\nimport SelectedMaterialInfo from './SelectedMaterialInfo';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialGroupProps {\r\n  className?: string;\r\n  materialGroup?: Maybe<MaterialGroupEntity>;\r\n  materialType?: Maybe<MaterialTypeEntity>;\r\n  colourGroup?: Maybe<MaterialColourGroupEntity>;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nconst MaterialGroupLoader = ({\r\n  className,\r\n  materialGroup,\r\n  materialType,\r\n  colourGroup,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  selectedMaterialId,\r\n}: MaterialGroupProps) => {\r\n  const colourGroups = useMaterialGroupStore((state) => state.colourGroups);\r\n  const selectedColourGroup = useMaterialGroupStore((state) => state.selectedColourGroup);\r\n  const setMaterials = useMaterialGroupStore((state) => state.setMaterials);\r\n  const setColourGroup = useMaterialGroupStore((state) => state.setColourGroup);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const typeIds = materialGroup?.attributes?.materialTypes\r\n    ? (materialGroup.attributes.materialTypes.data.map((t) => t.id) as InputMaybe<string>[])\r\n    : [];\r\n\r\n  const { data: materials } = useGetMaterialsQuery(\r\n    graphQLClient,\r\n    { filters: { type: { id: { in: typeIds } } }, pagination: { pageSize: 200 } },\r\n    {\r\n      select: (data) => data.materials?.data as MaterialEntity[],\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (materials?.length) {\r\n      // // TODO - remove: temporary for testing rainbow\r\n      // if (!materials.find((a) => a.id === '999')) {\r\n      //   // eslint-disable-next-line\r\n      //   // @ts-ignore\r\n      //   materials.push(testMaterial);\r\n      // }\r\n      // console.log('materials', materials);\r\n      setMaterials(materials, materialType, colourGroup);\r\n    }\r\n  }, [materials]);\r\n\r\n  if (!materialGroup) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && (\r\n        <>\r\n          <h5>Colour</h5>\r\n          <div className={styles.colourGroups}>\r\n            {colourGroups.map((group) => {\r\n              const styles: React.CSSProperties | undefined = {\r\n                background: group.attributes?.colour ?? '#000',\r\n              };\r\n              if (selectedColourGroup?.id === group.id) {\r\n                styles.outline = `4px solid ${group.attributes?.colour}`;\r\n              }\r\n\r\n              return (\r\n                <button key={group.id} onClick={() => setColourGroup(group)}>\r\n                  <svg\r\n                    style={styles}\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    viewBox='0 0 42 42'\r\n                    // strokeWidth={4}\r\n                    // stroke={\r\n                    //   selectedColourGroup?.id === group.id\r\n                    //     ? '#000'\r\n                    //     : group.attributes?.colour ?? '#000'\r\n                    // }\r\n                    fill={'transparent'}\r\n                  >\r\n                    <rect width='100%' height='100%' />\r\n                  </svg>\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n      <MaterialType\r\n        hideColorGroups={hideColorGroups}\r\n        onMaterialSelected={onMaterialSelected}\r\n        selectedMaterialId={selectedMaterialId}\r\n      />\r\n      <SelectedMaterialInfo />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MaterialGroup = (props: MaterialGroupProps) => {\r\n  return (\r\n    <Provider createStore={createStore}>\r\n      <MaterialGroupLoader {...props} />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default MaterialGroup;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"NavPart_buttonContainer__3whqC\",\"showOptional\":\"NavPart_showOptional__s6PPL\"};","import styles from './Button.module.scss';\r\n\r\ninterface TogglePillButtonProps {\r\n  onClick?: () => void;\r\n  children: React.ReactNode;\r\n  isOn?: boolean;\r\n\r\n  className?: string;\r\n}\r\n\r\nconst TogglePillButton = ({ onClick, children, isOn, className }: TogglePillButtonProps) => {\r\n  console.log('isOn', isOn);\r\n  const buttonClassNames = `\r\n    ${styles.togglePillButton}\r\n    ${className}\r\n    ${isOn ? styles.on : ''}\r\n  `;\r\n  return (\r\n    <button className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TogglePillButton;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport { CustomProductPartFragment, MaterialFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport NavButtons from '../NavButtons';\r\n\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { FaMinus } from 'react-icons/fa';\r\n\r\nimport styles from './NavPart.module.scss';\r\nimport TogglePillButton from '@components/ui/Button/TogglePillButton';\r\n\r\nexport interface NavPartProps {\r\n  className?: string;\r\n  part: CustomProductPartFragment;\r\n}\r\n\r\nconst NavPart = ({ className, part }: NavPartProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedPart = useCustomiserStore((state) => state.selectedPart);\r\n  const setPart = useCustomiserStore((state) => state.setPart);\r\n  const removePart = useCustomiserStore((state) => state.removePart);\r\n  const parts = useCustomiserStore((state) => state.parts);\r\n  const currentPart = useMemo(() => parts.find((p) => p.part.id === part?.id), [part]);\r\n  const [showOptional, setShowOptional] = useState(false);\r\n\r\n  let selectedMaterialId = parts.find((part) => part.part.name === selectedPart?.name)?.material.id;\r\n  const confirmText = !selectedMaterialId\r\n    ? 'Are you sure you want to continue with the default color?'\r\n    : null;\r\n\r\n  if (!part?.materialGroup?.data) {\r\n    return null;\r\n  }\r\n\r\n  const onMaterialSelected = (material: MaterialFragment) => {\r\n    if (selectedPart && material) {\r\n      selectedMaterialId = material.id;\r\n      setPart(selectedPart, material);\r\n    }\r\n  };\r\n\r\n  const optionalOnClick = (show: boolean) => {\r\n    setShowOptional(show);\r\n    if (!show) {\r\n      removePart(part);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (part.optional && !showOptional && currentPart) {\r\n      setShowOptional(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        key={part.id}\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <div className={styles.buttonContainer}>\r\n          {part.optional && (\r\n            <TogglePillButton\r\n              className={styles.showOptional}\r\n              isOn={showOptional}\r\n              onClick={() => optionalOnClick(!showOptional)}\r\n            >\r\n              {showOptional ? (\r\n                <>\r\n                  <FaMinus />\r\n                  &ensp;Remove\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <IoMdAdd />\r\n                  &ensp;Add\r\n                </>\r\n              )}{' '}\r\n              {part.name}\r\n            </TogglePillButton>\r\n          )}\r\n        </div>\r\n        {(!part.optional || (part.optional && showOptional)) && (\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <MaterialGroup\r\n              materialGroup={part.materialGroup.data}\r\n              materialType={currentPart?.material.attributes?.type?.data}\r\n              colourGroup={currentPart?.material.attributes?.colourGroups?.data[0]}\r\n              onMaterialSelected={onMaterialSelected}\r\n              selectedMaterialId={selectedMaterialId}\r\n            />\r\n          </Suspense>\r\n        )}\r\n      </motion.div>\r\n      <NavButtons confirmStorage='partsMaterial' confirmText={confirmText} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavPart;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormInput_root__cf10F\",\"input\":\"FormInput_input__gRXur\",\"label\":\"FormInput_label__9L2lb\"};","import cn from 'classnames';\r\nimport { InputHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormInput.module.scss';\r\n\r\nexport interface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormInput = ({ className, placeholder, children, ...props }: FormInputProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <input className={styles.input} {...props} placeholder=' ' />\r\n      <label className={styles.label}>{placeholder}</label>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormSelect_root__li+Rt\",\"select\":\"FormSelect_select__ftYcv\",\"icon\":\"FormSelect_icon__juFw+\"};","import cn from 'classnames';\r\nimport { SelectHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormSelect.module.scss';\r\n\r\nexport interface FormSelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormSelect = ({ className, children, ...props }: FormSelectProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <select className={styles.select} {...props}>\r\n        {children}\r\n      </select>\r\n      <svg xmlns='http://www.w3.org/2000/svg' className={styles.icon} viewBox='0 0 18.108 30.546'>\r\n        <path d='m2.835 30.545-2.836-2.836 12.387-12.436L0 2.835 2.836-.001l15.272 15.274Z' />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSelect;\r\n","import { ShopifyProductVariantFragment } from '@graphql/generated/graphql-shopify';\r\n\r\nconst getSizeVariation = (\r\n  unit: string,\r\n  weight: number,\r\n  variations: Array<ShopifyProductVariantFragment>,\r\n) => {\r\n  let size = '';\r\n  if (unit === 'KGS') {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 10:\r\n        size = 'BABY';\r\n        break;\r\n      case 10 <= weight && weight < 16:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 16 <= weight && weight < 22:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 22 <= weight && weight < 30:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 30 <= weight && weight < 40:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 40 <= weight && weight < 50:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 50 <= weight && weight < 59:\r\n        size = 'XS';\r\n        break;\r\n      case 59 <= weight && weight < 69:\r\n        size = 'S';\r\n        break;\r\n      case 69 <= weight && weight < 79:\r\n        size = 'M';\r\n        break;\r\n      case 79 <= weight && weight < 90:\r\n        size = 'L';\r\n        break;\r\n      case 90 <= weight && weight < 101:\r\n        size = 'XL';\r\n        break;\r\n      case 101 <= weight && weight < 111:\r\n        size = '2XL';\r\n        break;\r\n      case 111 <= weight && weight < 120:\r\n        size = '3XL';\r\n        break;\r\n      case 120 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  } else {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 22:\r\n        size = 'BABY';\r\n        break;\r\n      case 22 <= weight && weight < 35.3:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 35.3 <= weight && weight < 48.5:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 48.5 <= weight && weight < 66.1:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 66.1 <= weight && weight < 88.2:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 88.2 <= weight && weight < 110.2:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 110.2 <= weight && weight < 130:\r\n        size = 'XS';\r\n        break;\r\n      case 130 <= weight && weight < 152.1:\r\n        size = 'S';\r\n        break;\r\n      case 152.1 <= weight && weight < 174.2:\r\n        size = 'M';\r\n        break;\r\n      case 174.2 <= weight && weight < 198.4:\r\n        size = 'L';\r\n        break;\r\n      case 198.4 <= weight && weight < 222.7:\r\n        size = 'XL';\r\n        break;\r\n      case 222.7 <= weight && weight < 244.7:\r\n        size = '2XL';\r\n        break;\r\n      case 244.7 <= weight && weight < 264.6:\r\n        size = '3XL';\r\n        break;\r\n      case 264.6 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  }\r\n\r\n  return variations.find((v) => v.sku?.endsWith(size));\r\n};\r\n\r\nexport default getSizeVariation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"variations\":\"NavSize_variations__cMdjc\",\"unitToggle\":\"NavSize_unitToggle__LqIuI\",\"toggleButton\":\"NavSize_toggleButton__5PZDI\",\"toggleButtonSelected\":\"NavSize_toggleButtonSelected__au+Rx\"};","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport getSizeVariation from '@services/size';\r\nimport { UNIT } from '@store/constants';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { ChangeEvent, useEffect } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavSize.module.scss';\r\n\r\nexport interface NavSizeProps {\r\n  className?: string;\r\n}\r\n\r\nconst NavSize = ({ className }: NavSizeProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const variations = useCustomiserStore((state) => state.variations);\r\n  const setSizing = useCustomiserStore((state) => state.setSizing);\r\n  const weight = useCustomiserStore((state) => state.sizing?.weight);\r\n  const height = useCustomiserStore((state) => state.sizing?.height);\r\n  const variation = useCustomiserStore((state) => state.sizing?.variation);\r\n\r\n  useEffect(() => {\r\n    if (weight?.value && weight.unit) {\r\n      const variation = getSizeVariation(weight.unit, weight.value, variations);\r\n      setSizing(undefined, undefined, variation);\r\n    }\r\n  }, [weight, variations]);\r\n\r\n  const onHeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing({ value: Number(e.target.value), unit: 'CM' });\r\n  };\r\n\r\n  const onWeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing(undefined, { value: Number(e.target.value), unit: 'KGS' });\r\n  };\r\n\r\n  const onVariationChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const id = e.target.value;\r\n    const selectedVariation = variations.find((v) => v.id === id);\r\n    setSizing(undefined, undefined, selectedVariation);\r\n  };\r\n\r\n  const setHeightUnit = (unit: string) => {\r\n    setSizing({ value: height?.value, unit });\r\n  };\r\n\r\n  const setWeightUnit = (unit: string) => {\r\n    setSizing(undefined, { value: weight?.value, unit });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <h3>Size Details</h3>\r\n        <p>\r\n          To help us make sure the size you’ve selected is correct, enter your height and weight\r\n          below.\r\n        </p>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Height'\r\n          step='0.1'\r\n          required\r\n          value={height?.value ? height.value : ''}\r\n          onChange={onHeightChange}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.CM,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.CM)}\r\n            >\r\n              {UNIT.HEIGHT.CM}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.INCH,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.INCH)}\r\n            >\r\n              {UNIT.HEIGHT.INCH}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Weight'\r\n          step='0.1'\r\n          required\r\n          value={weight?.value ? weight.value : ''}\r\n          onChange={onWeightChange}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.KG,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.KG)}\r\n            >\r\n              {UNIT.WEIGHT.KG}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.LB,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.LB)}\r\n            >\r\n              {UNIT.WEIGHT.LB}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <h3>Suggested Size</h3>\r\n        <FormSelect value={variation?.id} onChange={onVariationChange}>\r\n          {variations.map((v) => (\r\n            <option key={v.id} value={v.id}>\r\n              {v.title}\r\n            </option>\r\n          ))}\r\n        </FormSelect>\r\n      </motion.div>\r\n      <NavButtons />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavSize;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"arial\":\"NavText_arial__de7L4\",\"oswald\":\"NavText_oswald__siLdE\",\"college\":\"NavText_college__YR6iT\",\"ballantines\":\"NavText_ballantines__1B1LU\",\"navTextEdit\":\"NavText_navTextEdit__8WUIS\",\"textItem\":\"NavText_textItem__nQrv4\",\"textItemText\":\"NavText_textItemText__op7hZ\",\"finishSelections\":\"NavText_finishSelections__fH4yd\",\"disabled\":\"NavText_disabled__M-nHo\",\"showOutline\":\"NavText_showOutline__T7KEv\",\"fontSelection\":\"NavText_fontSelection__AH-QM\",\"font\":\"NavText_font__v43yE\",\"finishSelection\":\"NavText_finishSelection__CfQ+O\",\"selected\":\"NavText_selected__SIXSo\",\"pricing\":\"NavText_pricing__qUsci\",\"materialGroup\":\"NavText_materialGroup__j+DTa\",\"navTextsSelection\":\"NavText_navTextsSelection__gJNy+\",\"title\":\"NavText_title__u+YKh\",\"titleText\":\"NavText_titleText__lFoUP\",\"textPreview\":\"NavText_textPreview__CfhSo\",\"noText\":\"NavText_noText__Parmv\",\"textPreview__imgContainer\":\"NavText_textPreview__imgContainer__6SJ9b\",\"promptMessage\":\"NavText_promptMessage__iKeIZ\",\"applyTextBtnContainer\":\"NavText_applyTextBtnContainer__I8nfd\",\"navHeaderSaveText\":\"NavText_navHeaderSaveText__h8PoA\",\"selectedCategoryItem\":\"NavText_selectedCategoryItem__jjmwJ\",\"finishedCategoryItem\":\"NavText_finishedCategoryItem__AC3wU\",\"categoryDisplayName\":\"NavText_categoryDisplayName__pATtN\",\"textInputContainer\":\"NavText_textInputContainer__KQMDX\",\"textInput\":\"NavText_textInput__Z49KW\",\"textDone\":\"NavText_textDone__rPeDE\",\"textPreviewTextInput\":\"NavText_textPreviewTextInput__lQXU8\"};","// extracted by mini-css-extract-plugin\nexport default {};","import cn from 'classnames';\r\n\r\nimport styles from './Price.module.scss';\r\n\r\nexport interface PriceProps {\r\n  className?: string;\r\n  price?: number;\r\n  priceString?: string;\r\n}\r\n\r\nconst Price = ({ className, price, priceString }: PriceProps) => {\r\n  const rootClassName = cn('price-item', styles.root, className);\r\n  // TODO - Make currency change depending on selected currency.\r\n  const currency = '£';\r\n\r\n  const formattedPrice =\r\n    price !== undefined ? `${currency}${price.toFixed(2)}` : `${currency}${priceString}`;\r\n\r\n  if (!formattedPrice) {\r\n    return null;\r\n  }\r\n\r\n  return <span className={rootClassName}>{formattedPrice}</span>;\r\n};\r\n\r\nexport default Price;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useMemo, useState } from 'react';\r\n\r\nimport Price from '@components/ui/Price';\r\nimport { NAME_TYPE_LUXURY_ID } from '@store/constants';\r\nimport cn from 'classnames';\r\nimport styles from './NavText.module.scss';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\n\r\nexport interface NavTextFinishProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingCrystal?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextFinish: FC<NavTextFinishProps> = ({ editText = {}, setIsPickingCrystal }) => {\r\n  const { selectedName } = editText;\r\n  const selectedMaterialId = editText?.crystalBackground?.id;\r\n\r\n  const [crystals, setCrystals] = useState<boolean>(editText?.crystalPrice ? true : false);\r\n  const [puff, setPuff] = useState<boolean>(editText?.puffPrice ? true : false);\r\n\r\n  const hasPuffOption = useMemo(() => selectedName?.id === NAME_TYPE_LUXURY_ID, [selectedName]);\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  useEffect(() => {\r\n    setPuff(editText.puffPrice ? true : false);\r\n  }, [editText.puffPrice]);\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setCrystalBackground = (crystalBackground: MaterialFragment | undefined) => {\r\n    if (editText?.key) {\r\n      console.log('crystalBackground', crystalBackground);\r\n      updateText(editText.key, {\r\n        crystalBackground,\r\n      });\r\n    }\r\n  };\r\n\r\n  const addCrystals = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setCrystals(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          crystalPrice: {\r\n            price: selectedName.attributes?.crystalPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.crystalPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          crystalPrice: undefined,\r\n          crystalBackground: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const addPuff = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setPuff(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          puffPrice: {\r\n            price: selectedName.attributes?.puffPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.puffPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          puffPrice: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.finishSelections}>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: !crystals,\r\n          })}\r\n          onClick={() => {\r\n            setIsPickingCrystal && setIsPickingCrystal(false);\r\n            addCrystals(false);\r\n          }}\r\n        >\r\n          No Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: crystals,\r\n          })}\r\n          onClick={() => {\r\n            addCrystals(true);\r\n            setIsPickingCrystal && setIsPickingCrystal(true);\r\n          }}\r\n        >\r\n          Add Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.crystalPrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {!crystals && (\r\n        <div className={styles.finishSelections}>\r\n          <div\r\n            className={cn(styles.finishSelection, { [styles.selected]: !puff })}\r\n            onClick={() => addPuff(false)}\r\n          >\r\n            Flat\r\n            <div className={styles.pricing}>\r\n              {' +'}\r\n              <Price price={0} />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: puff,\r\n              [styles.disabled]: !hasPuffOption,\r\n            })}\r\n            onClick={() => addPuff(true)}\r\n          >\r\n            Add 3D Puff\r\n            {hasPuffOption ? (\r\n              <div className={styles.pricing}>\r\n                {' +'}\r\n                <Price price={selectedName.attributes?.puffPrice?.price} />\r\n              </div>\r\n            ) : (\r\n              <div className={styles.pricing}>(Only available for luxury colors)</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {crystals && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName.attributes?.materialGroup?.data}\r\n          materialType={editText.material?.attributes?.type?.data}\r\n          colourGroup={editText.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setCrystalBackground}\r\n          className={styles.materialGroup}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextFinish;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment, NameEntity, useGetNamesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextNameTypesProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextNameTypes = ({ editText = {} }: NavTextNameTypesProps) => {\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const selectedMaterialId = editText?.material?.id;\r\n\r\n  const { selectedName } = editText;\r\n  const prevSelectedName = useRef(selectedName);\r\n\r\n  const { data: names } = useGetNamesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => data.names?.data,\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (editText?.key && selectedName && prevSelectedName.current !== selectedName) {\r\n      prevSelectedName.current = selectedName;\r\n\r\n      updateText(editText.key, {\r\n        basePrice: {\r\n          price: selectedName.attributes?.basePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.basePrice?.shopifyVariantId,\r\n        },\r\n        letterPrice: {\r\n          price: selectedName.attributes?.letterPrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.letterPrice?.shopifyVariantId,\r\n        },\r\n        nameType: {\r\n          id: selectedName.id,\r\n          name: selectedName.attributes?.name,\r\n        },\r\n        /**\r\n         * Reset material when selectedName changes.\r\n         *\r\n         * Different name types would have different\r\n         * material groups.\r\n         */\r\n        material: undefined,\r\n        ...(editText.outline\r\n          ? {\r\n              outlinePrice: {\r\n                price: selectedName.attributes?.outlinePrice?.price,\r\n                quantity: 1,\r\n                shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n              },\r\n            }\r\n          : {}),\r\n\r\n        puffPrice: undefined,\r\n      });\r\n    }\r\n  }, [selectedName]);\r\n\r\n  const setMaterial = (material: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        material,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setSelectedName = (name: NameEntity) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        selectedName: name,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!selectedName && <i className={styles.promptMessage}>Select a text color type</i>}\r\n      <div className={styles.categoryDisplayName}>Choose Color:</div>\r\n      <div className={styles.finishSelections}>\r\n        {names?.map((n) => (\r\n          <div\r\n            key={n.id}\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: selectedName && n.id === selectedName.id,\r\n            })}\r\n            onClick={() => setSelectedName(n)}\r\n          >\r\n            {n.attributes?.name}\r\n            <div className={styles.pricing}>\r\n              <Price price={n.attributes?.basePrice?.price} />\r\n              {' + '}\r\n              <Price price={n.attributes?.letterPrice?.price} /> per letter\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedName && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName?.attributes?.materialGroup?.data}\r\n          materialType={editText?.material?.attributes?.type?.data}\r\n          colourGroup={editText?.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setMaterial}\r\n          className={styles.materialGroup}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNameTypes;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useState } from 'react';\r\n\r\nimport PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextOutlineProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingOutline?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextOutline: FC<NavTextOutlineProps> = ({ editText = {}, setIsPickingOutline }) => {\r\n  const [showOutline, setShowOutline] = useState<boolean>(editText?.outline ? true : false);\r\n  const selectedMaterialId = editText?.outline?.id;\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  const { selectedName } = editText;\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setOutline = (outline: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        outline,\r\n        outlinePrice: {\r\n          price: selectedName.attributes?.outlinePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateOutline = (show: boolean) => {\r\n    setShowOutline(show);\r\n    if (!show && editText?.key) {\r\n      updateText(editText.key, {\r\n        outline: undefined,\r\n        outlinePrice: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={cn(styles.showOutline, styles.finishSelections)}>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: !showOutline })}\r\n          onClick={() => {\r\n            updateOutline(false);\r\n            setIsPickingOutline && setIsPickingOutline(false);\r\n          }}\r\n        >\r\n          No Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: showOutline })}\r\n          onClick={() => {\r\n            updateOutline(true);\r\n            setIsPickingOutline && setIsPickingOutline(true);\r\n          }}\r\n        >\r\n          Add Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.outlinePrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showOutline && (\r\n        <>\r\n          <MaterialGroup\r\n            hideColorGroups\r\n            materialGroup={selectedName?.attributes?.outlineGroup?.data}\r\n            materialType={editText?.outline?.attributes?.type?.data}\r\n            colourGroup={editText?.outline?.attributes?.colourGroups?.data[0]}\r\n            onMaterialSelected={setOutline}\r\n            className={styles.materialGroup}\r\n            selectedMaterialId={selectedMaterialId}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextOutline;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport interface NavTextSelectProps {\r\n  className?: string;\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst fonts = [\r\n  {\r\n    name: 'Arial',\r\n    className: styles.arial,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/arial-bold-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Oswald',\r\n    className: styles.oswald,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/oswald-semibold.woff',\r\n  },\r\n  {\r\n    name: 'College',\r\n    className: styles.college,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/college_block-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Ballantines',\r\n    className: styles.ballantines,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/ballantines-bold-webfont.woff',\r\n  },\r\n];\r\n\r\nconst NavTextSelect = ({ className, editText }: NavTextSelectProps) => {\r\n  const portalRef = usePortalRef('popupContainer');\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const [font, setFont] = useState<(typeof fonts)[number]>(\r\n    fonts.find((f) => editText?.font === f.url) ?? fonts[0],\r\n  );\r\n  const { addText, updateText } = useCustomiserStore((state) => state);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text, font: font.url });\r\n      }\r\n    }\r\n  }, [text, font]);\r\n\r\n  const setTextOnChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onFontChange = (font: (typeof fonts)[number]) => {\r\n    setFont(font);\r\n  };\r\n\r\n  if (!portalRef) return null;\r\n\r\n  return (\r\n    <div className={className}>\r\n      {/* {ReactDOM.createPortal(\r\n        <div className={styles.textInputContainer}>\r\n          <FormInput\r\n            className={styles.textInput}\r\n            placeholder='Type text here...'\r\n            value={text}\r\n            onChange={setTextOnChange}\r\n          >\r\n            <span className={styles.textDone}>Done</span>\r\n          </FormInput>\r\n        </div>,\r\n        portalRef,\r\n      )} */}\r\n      <div className={styles.categoryDisplayName}>Choose Font:</div>\r\n      <div className={styles.fontSelection}>\r\n        {fonts.map((_font) => (\r\n          <div\r\n            key={_font.name}\r\n            onClick={() => onFontChange(_font)}\r\n            className={cn(styles.font, _font.className, {\r\n              [styles.selected]: font.name === _font.name,\r\n            })}\r\n          >\r\n            {_font.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* <FormSelect\r\n        className={fonts.find((f) => f.url === font)?.className}\r\n        value={font}\r\n        onChange={onFontChange}\r\n      >\r\n        {fonts.map((f) => (\r\n          <option className={f.className} key={f.url} value={f.url}>\r\n            {f.name}\r\n          </option>\r\n        ))}\r\n      </FormSelect> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextSelect;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { Dispatch, MouseEventHandler, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\n\r\nimport styles from './NavText.module.scss';\r\n\r\nexport interface NavTextTextProps {\r\n  text: TextCustomiser;\r\n  className?: string;\r\n  setShowSelector?: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextText = ({ className, text, setShowSelector }: NavTextTextProps) => {\r\n  const { updateText, deleteText } = useCustomiserStore((state) => state);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const editItem = () => {\r\n    if (text.key) {\r\n      updateText(text.key, { edit: true });\r\n      setShowSelector && setShowSelector(true);\r\n    }\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    if (!text.key) return;\r\n    updateText(text.key, {\r\n      isVisible: typeof text.isVisible !== 'undefined' ? !text.isVisible : false,\r\n    });\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (text.key) {\r\n      deleteText(text.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.textItem} onClick={editItem}>\r\n      <div className={styles.textItemText}>{text.text}</div>\r\n      <NavOptionEdit\r\n        toggleVisibility={toggleVisibility}\r\n        onEdit={editItem}\r\n        onDelete={deleteItem}\r\n        isVisible={text.isVisible}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextText;\r\n","import { FC } from 'react';\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextText from './NavTextText';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\ntype NavTextsSelectionProps = {\r\n  onAddTextClicked?: () => void;\r\n  onTextSelected?: () => void;\r\n};\r\n\r\nconst NavTextsSelection: FC<NavTextsSelectionProps> = ({ onAddTextClicked, onTextSelected }) => {\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n\r\n  return (\r\n    <div className={styles.navTextsSelection}>\r\n      <div className={styles.title}>\r\n        <h3 className={styles.titleText}>Your Texts</h3>\r\n\r\n        <ContainedButton onClick={onAddTextClicked}>Add Text</ContainedButton>\r\n      </div>\r\n\r\n      {texts.map((t) => (\r\n        <NavTextText key={t.key} text={t} setShowSelector={onTextSelected} />\r\n      ))}\r\n\r\n      <NavButtons\r\n        confirmStorage='saveTextsNotification'\r\n        confirmText='You can still add more text. Save anyway?'\r\n      ></NavButtons>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextsSelection;\r\n","import type { MaterialFragment } from '@graphql/generated/graphql';\r\nimport type { Falsey } from 'lodash';\r\n// eslint-disable-next-line\r\n// @ts-ignore\r\nimport { NormalMapGenerator } from 'normalmap-online';\r\n\r\nexport function getMaterialUrl(material: MaterialFragment | undefined): string {\r\n  return material?.attributes?.images?.find((imgMap) => imgMap?.mapType === 'map')?.image.data\r\n    ?.attributes?.formats.large.url;\r\n}\r\n\r\n// TODO - Relocate this\r\ninterface ImgToNormalMapParams {\r\n  img: HTMLImageElement | HTMLCanvasElement;\r\n  hasPuff?: boolean;\r\n  blur?: number;\r\n}\r\nconst normalMapGenerator = NormalMapGenerator.instance();\r\nasync function imgToNormalMap({ img, hasPuff, blur }: ImgToNormalMapParams) {\r\n  const blurAmount = hasPuff ? blur || 7 : 1;\r\n  return normalMapGenerator.generateFromImage(img, {\r\n    strength: 0.5,\r\n    blur: blurAmount,\r\n    level: 1,\r\n  });\r\n}\r\n\r\ninterface PreviewText {\r\n  material: HTMLImageElement | undefined;\r\n  outline: HTMLImageElement | undefined;\r\n  previewImg?: HTMLImageElement;\r\n  normalMapPatternImg?: HTMLImageElement | false;\r\n  crystalBgPatternImg?: HTMLImageElement | Falsey;\r\n  crystalBgImg?: HTMLImageElement | Falsey;\r\n}\r\n\r\nexport type PatternType = 'crystals' | 'embroidery' | Falsey;\r\n\r\ninterface CanvasTextConstructor {\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n}\r\n\r\nexport class CanvasText {\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  outlineCanvas: HTMLCanvasElement;\r\n  outlineCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapTextureCanvas: HTMLCanvasElement;\r\n  normalMapTextureCtx: CanvasRenderingContext2D;\r\n  normalMapCanvas: HTMLCanvasElement;\r\n  normalMapCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapOutlineTextureCanvas: HTMLCanvasElement;\r\n  normalMapOutlineTextureCtx: CanvasRenderingContext2D;\r\n  normalMapOutlineCanvas: HTMLCanvasElement;\r\n  normalMapOutlineCtx2: CanvasRenderingContext2D;\r\n\r\n  crystalBgPatternCanvas: HTMLCanvasElement;\r\n  crystalBgPatternCtx: CanvasRenderingContext2D;\r\n\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n  fontSize: number;\r\n  outlineWidth: number;\r\n\r\n  constructor({ hasPuff, toNormalMap, text, patternType }: CanvasTextConstructor) {\r\n    this.hasPuff = hasPuff;\r\n    this.toNormalMap = toNormalMap;\r\n    this.patternType = patternType;\r\n    this.text = text;\r\n\r\n    this.fontSize = 360;\r\n    this.canvasHeight = 400;\r\n    this.canvasWidth = 3200;\r\n    this.outlineWidth = 20;\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.height = this.canvasHeight;\r\n    this.canvas.width = this.canvasWidth;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.outlineCanvas = document.createElement('canvas');\r\n    this.outlineCanvas.height = this.canvasHeight;\r\n    this.outlineCanvas.width = this.canvasWidth;\r\n    this.outlineCtx = this.outlineCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    // Normal map section\r\n\r\n    this.normalMapTextureCanvas = document.createElement('canvas');\r\n    this.normalMapTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapTextureCtx = this.normalMapTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapCanvas = document.createElement('canvas');\r\n    this.normalMapCanvas.height = this.canvasHeight;\r\n    this.normalMapCanvas.width = this.canvasWidth;\r\n    this.normalMapCtx = this.normalMapCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineTextureCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineTextureCtx = this.normalMapOutlineTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineCtx2 = this.normalMapOutlineCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    // TODO - make a function for setting canvas height and ctx instead\r\n    this.crystalBgPatternCanvas = document.createElement('canvas');\r\n    this.crystalBgPatternCanvas.height = this.canvasHeight;\r\n    this.crystalBgPatternCanvas.width = this.canvasWidth;\r\n    this.crystalBgPatternCtx = this.crystalBgPatternCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n  }\r\n\r\n  public clear() {\r\n    this.ctx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.outlineCtx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n  public async drawImg(ctx: CanvasRenderingContext2D, src: HTMLImageElement) {\r\n    ctx.drawImage(src, 0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  public showTestCanvas(canvas: HTMLCanvasElement) {\r\n    const testPreviewDom = document.getElementById('testPreview'); // TEST ONLY, TO BE REMOVED\r\n    (testPreviewDom as unknown as HTMLElement).innerHTML = ''; // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(canvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineTextureCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.crystalBgPatternCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.outlineCanvas); // TEST ONLY, TO BE REMOVED\r\n  }\r\n\r\n  public async maskImage(ctx: CanvasRenderingContext2D, img: HTMLImageElement) {\r\n    ctx.globalCompositeOperation = 'source-in';\r\n    await this.drawImg(ctx, img);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  public drawPreviewText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n  }\r\n\r\n  public drawPreviewOutlineText() {\r\n    if (!this.text) return;\r\n\r\n    this.outlineCtx.font = `${this.fontSize}px testFont`;\r\n    this.outlineCtx.textAlign = 'center';\r\n    this.outlineCtx.lineWidth = this.outlineWidth;\r\n    this.outlineCtx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n  }\r\n\r\n  public drawPreviewOutlineOnlyText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.lineWidth = 30;\r\n    ctx.fillStyle = 'green';\r\n    ctx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n    ctx.globalCompositeOperation = 'destination-out';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  private async drawNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewText(this.normalMapTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      this.normalMapTextureCtx.fillStyle = pattern;\r\n      this.normalMapTextureCtx.fill();\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    console.log('toNormalMap', this.toNormalMap);\r\n    const normalMap = this.toNormalMap\r\n      ? await imgToNormalMap({\r\n          img: this.normalMapTextureCanvas,\r\n          hasPuff: this.hasPuff,\r\n        })\r\n      : this.normalMapTextureCanvas;\r\n\r\n    this.normalMapCtx.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawOutlineNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewOutlineOnlyText(this.normalMapOutlineTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapOutlineTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapOutlineTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      if (this.patternType !== 'crystals') {\r\n        this.normalMapOutlineTextureCtx.fillStyle = pattern;\r\n      }\r\n      this.normalMapOutlineTextureCtx.fill();\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    const normalMap =\r\n      this.toNormalMap || this.patternType === 'crystals'\r\n        ? await imgToNormalMap({\r\n            img: this.normalMapOutlineTextureCanvas,\r\n            hasPuff: this.patternType === 'crystals' ? true : this.hasPuff,\r\n            blur: 4,\r\n          })\r\n        : this.normalMapOutlineTextureCanvas;\r\n    this.normalMapOutlineCtx2.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawCrystalBg(\r\n    crystalBgImg: HTMLImageElement,\r\n    crystalBgPatternImg: HTMLImageElement,\r\n  ) {\r\n    const pattern = this.crystalBgPatternCtx.createPattern(crystalBgPatternImg, 'repeat');\r\n\r\n    if (!pattern) return;\r\n\r\n    this.crystalBgPatternCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.fillStyle = pattern;\r\n    this.crystalBgPatternCtx.fill();\r\n\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-in';\r\n    this.crystalBgPatternCtx.globalAlpha = 0.9;\r\n    this.crystalBgPatternCtx.drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.drawImage(crystalBgImg, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-over';\r\n\r\n    this.outlineCtx.drawImage(this.crystalBgPatternCanvas, 0, 0);\r\n  }\r\n\r\n  private printTextMapToStrokeMap() {\r\n    this.normalMapCtx.globalCompositeOperation = 'destination-in';\r\n    this.normalMapCtx.drawImage(this.normalMapTextureCanvas, 0, 0);\r\n    this.normalMapCtx.globalCompositeOperation = 'source-over'; // reset to default\r\n    this.normalMapOutlineCtx2.drawImage(this.normalMapCanvas, 0, 0);\r\n  }\r\n\r\n  public async previewText({\r\n    material,\r\n    outline,\r\n    previewImg,\r\n    normalMapPatternImg,\r\n    crystalBgPatternImg,\r\n    crystalBgImg,\r\n  }: PreviewText) {\r\n    if (!this.text) return;\r\n\r\n    this.clear();\r\n    this.showTestCanvas(this.normalMapTextureCanvas);\r\n\r\n    await this.drawNormalMap(normalMapPatternImg);\r\n    await this.drawOutlineNormalMap(normalMapPatternImg);\r\n\r\n    this.printTextMapToStrokeMap();\r\n\r\n    if (outline) {\r\n      this.drawPreviewOutlineText();\r\n      await this.maskImage(this.outlineCtx, outline);\r\n    }\r\n\r\n    this.drawPreviewText(this.ctx);\r\n\r\n    if (material) {\r\n      await this.maskImage(this.ctx, material);\r\n    }\r\n\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n    if (previewImg) previewImg.src = this.outlineCanvas.toDataURL();\r\n\r\n    if (crystalBgImg && crystalBgPatternImg) {\r\n      this.drawCrystalBg(crystalBgImg, crystalBgPatternImg);\r\n    }\r\n  }\r\n\r\n  public mergeCanvas() {\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n  }\r\n\r\n  getOutlineCanvas() {\r\n    return this.outlineCanvas;\r\n  }\r\n  getNormalMapTextureCanvas() {\r\n    return this.normalMapTextureCanvas;\r\n  }\r\n  getNormalMapOutlineCanvas() {\r\n    return this.normalMapOutlineCanvas;\r\n  }\r\n}\r\n","export async function loadImage(src: string): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    if (!src) resolve(img);\r\n    img.crossOrigin = 'anonymous';\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n    img.src = src;\r\n  });\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"canvasClickableCover\":\"NavTextScene_canvasClickableCover__ZoAVe\",\"canvasClickableCover__imgContainer\":\"NavTextScene_canvasClickableCover__imgContainer__qCzZl\",\"navTextSceneFullscreen\":\"NavTextScene_navTextSceneFullscreen__-hgDQ\",\"navTextSceneFullscreen__imgContainer\":\"NavTextScene_navTextSceneFullscreen__imgContainer__kyglX\",\"navTextSceneFullscreen__closeBtn\":\"NavTextScene_navTextSceneFullscreen__closeBtn__jtMmR\",\"navTextSceneFullscreen__zoomContainer\":\"NavTextScene_navTextSceneFullscreen__zoomContainer__struE\"};","import { Decal } from '@react-three/drei';\r\nimport { TextCustomiser } from '@store/customiser';\r\nimport { Texture, Vector2, Vector3 } from 'three';\r\nimport Lights from '../Lights';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport styles from './NavTextScene.module.scss';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { usePortalRef } from '@hooks';\r\n\r\ninterface NavTextPreviewSceneInterface {\r\n  text: TextCustomiser;\r\n}\r\n\r\nconst NavTextPreviewScene = ({ text }: NavTextPreviewSceneInterface) => {\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n  const [shouldShow, setShouldShow] = useState<boolean>(false);\r\n  const [zoom, setZoom] = useState<number>(1);\r\n  const [dataUrl, setDataUrl] = useState<string>('');\r\n\r\n  const portalRef = usePortalRef('popupContainer');\r\n\r\n  const scale = 10;\r\n  const scaleModifier = new Vector3(3.2 * scale, 0.4 * scale, 4);\r\n\r\n  const isLuxury: boolean = text.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = text.puffPrice ? true : false;\r\n  const hasCrystals: boolean = text.crystalPrice ? true : false;\r\n\r\n  const shouldNormalMap =\r\n    text.normalMap instanceof Texture && text.selectedName?.attributes?.name === 'Luxury';\r\n  const normalMap = shouldNormalMap ? text.normalMap : null;\r\n\r\n  let normalScale = 1;\r\n  if (hasCrystals) {\r\n    normalScale = 4;\r\n  } else if (isLuxury && !hasPuff) {\r\n    normalScale = 0.5;\r\n  } else if (isLuxury && hasPuff) {\r\n    normalScale = 3;\r\n  }\r\n\r\n  if (!portalRef) return null;\r\n\r\n  function addZoom() {\r\n    setZoom((cur) => {\r\n      if (cur >= 10) return cur;\r\n      return (cur += 0.1);\r\n    });\r\n  }\r\n  function subtractZoom() {\r\n    setZoom((cur) => {\r\n      if (cur <= 0.1) return cur;\r\n      return (cur -= 0.1);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        ref={(el) => {\r\n          canvasRef.current = el;\r\n        }}\r\n        gl={{\r\n          preserveDrawingBuffer: true,\r\n        }}\r\n      >\r\n        <Lights />\r\n        <mesh>\r\n          <planeBufferGeometry args={[20, 5]} />\r\n          <meshNormalMaterial visible={false} />\r\n          <Decal position={[0, 0, 0]} rotation={[0, 0, 0]} scale={scaleModifier}>\r\n            <meshStandardMaterial\r\n              map={text.preview instanceof Texture ? text.preview : null}\r\n              transparent\r\n              roughness={isLuxury && !hasCrystals ? 0.75 : 0}\r\n              depthTest\r\n              depthWrite={false}\r\n              normalMap={normalMap}\r\n              normalScale={new Vector2(normalScale, normalScale)}\r\n            />\r\n          </Decal>\r\n        </mesh>\r\n      </Canvas>\r\n      <div\r\n        className={styles.canvasClickableCover}\r\n        onClick={() => {\r\n          setShouldShow(true);\r\n          setDataUrl(canvasRef.current?.toDataURL() || '');\r\n        }}\r\n      >\r\n        <span className={styles.canvasClickableCover__imgContainer}>\r\n          <img height={32} width={32} src='/icons/click-icon.png' />\r\n        </span>\r\n      </div>\r\n      {shouldShow &&\r\n        canvasRef &&\r\n        dataUrl &&\r\n        createPortal(\r\n          <>\r\n            <div className={styles.navTextSceneFullscreen}>\r\n              <span\r\n                onClick={() => setShouldShow(false)}\r\n                className={styles.navTextSceneFullscreen__closeBtn}\r\n              >\r\n                x\r\n              </span>\r\n              <span className={styles.navTextSceneFullscreen__imgContainer}>\r\n                <img style={{ zoom }} src={dataUrl} alt='Text Preview' />\r\n              </span>\r\n              <span className={styles.navTextSceneFullscreen__zoomContainer}>\r\n                <img\r\n                  onClick={addZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-in-icon.png'\r\n                  alt='zoom in'\r\n                />\r\n                <img\r\n                  onClick={subtractZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-out-icon.png'\r\n                  alt='zoom out'\r\n                />\r\n              </span>\r\n            </div>\r\n          </>,\r\n          portalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextPreviewScene;\r\n","import { CanvasText, PatternType, getMaterialUrl } from '@lib/canvas';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { CanvasTexture } from 'three';\r\nimport type { NavTextSelectProps } from './NavTextSelect';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { loadImage } from '@lib/img.util';\r\nimport NavTextPreviewScene from '@components/three/CustomiserCanvas/NavTextScene';\r\nimport FormInput from '@components/ui/FormInput';\r\n\r\n// TODO - Pre load the fonts somewhere\r\nasync function loadFonts(fontUrl: string) {\r\n  const font = new FontFace('testFont', `url(${fontUrl})`);\r\n  await font.load();\r\n  document.fonts.add(font);\r\n}\r\n\r\nfunction getPatternType({\r\n  hasCrystals,\r\n  isLuxury,\r\n}: {\r\n  hasCrystals: boolean;\r\n  isLuxury: boolean;\r\n}): PatternType {\r\n  if (!hasCrystals && isLuxury) return 'embroidery';\r\n  else if (hasCrystals) return 'crystals';\r\n\r\n  return '';\r\n}\r\n\r\ninterface NavTextPreviewProps extends NavTextSelectProps {\r\n  mainTextInputRef: React.MutableRefObject<HTMLInputElement | null>;\r\n}\r\n\r\nconst NavTextPreview = ({ editText, mainTextInputRef }: NavTextPreviewProps) => {\r\n  const previewImgRef = useRef<HTMLImageElement | null>(null);\r\n  const [fontFamily, setFontFamily] = useState<string | undefined>(editText?.font);\r\n  const [isVisiblePreview, setIsVisiblePreview] = useState(false);\r\n\r\n  const hasCrystals: boolean = editText?.crystalPrice ? true : false;\r\n  const isLuxury: boolean = editText?.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = editText?.puffPrice && !hasCrystals ? true : false; // 3D puff\r\n  const toNormalMap = hasCrystals ? false : true;\r\n  const patternType = getPatternType({ hasCrystals, isLuxury });\r\n\r\n  const { updateText, addText, isMinimizedCustomiserNav } = useCustomiserStore();\r\n\r\n  const portalRef = usePortalRef('NavHeaderAfter');\r\n\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (editText?.key) {\r\n      updateText(editText?.key, {\r\n        text: e.target.value,\r\n      });\r\n    } else {\r\n      if (e.target.value) {\r\n        addText({ text: e.target.value });\r\n      }\r\n    }\r\n    mainTextInputRef?.current?.focus();\r\n  };\r\n\r\n  /**\r\n   * Save image here\r\n   */\r\n  const materialImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.material));\r\n  }, [editText?.material]);\r\n  const outlineImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.outline));\r\n  }, [editText?.outline]);\r\n  const fabricPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/Fabric_Knitted_006_height_small.png');\r\n  }, []);\r\n  const crystalNormalMapImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-12.png');\r\n  }, []);\r\n  const crystalBgImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.crystalBackground));\r\n  }, [editText?.crystalBackground]);\r\n  const crystalBgPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-bg-pattern.png');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const previewImgDom = previewImgRef.current as HTMLImageElement;\r\n\r\n    (async () => {\r\n      const canvasText = new CanvasText({\r\n        hasPuff,\r\n        toNormalMap,\r\n        patternType,\r\n        text: editText?.text,\r\n      });\r\n\r\n      if (!editText || !editText.key || !isVisiblePreview) {\r\n        canvasText.clear();\r\n        return;\r\n      }\r\n\r\n      if (!editText.text) {\r\n        canvasText.clear();\r\n        updateText(editText.key, {\r\n          preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Adjust this once preloading fonts has been implemented\r\n      if (fontFamily !== editText?.font) {\r\n        setFontFamily(editText?.font);\r\n        await loadFonts(editText?.font as string);\r\n      }\r\n\r\n      const img = editText?.material && (await materialImgMemo);\r\n      const outlineImg = editText?.outline && (await outlineImgMemo);\r\n      const embroideryPattern = await fabricPatternImgMemo;\r\n      const crystalNormalMap = await crystalNormalMapImgMemo;\r\n      const crystalBgPatternImg = await crystalBgPatternImgMemo;\r\n      const crystalBgImg = editText?.crystalBackground && (await crystalBgImgMemo);\r\n\r\n      const shouldUsePattern = isLuxury && !hasPuff;\r\n      const patternImg = shouldUsePattern && (hasCrystals ? crystalNormalMap : embroideryPattern);\r\n\r\n      await canvasText.previewText({\r\n        material: img,\r\n        outline: outlineImg,\r\n        previewImg: previewImgDom,\r\n        normalMapPatternImg: patternImg,\r\n        crystalBgPatternImg,\r\n        crystalBgImg,\r\n      });\r\n\r\n      updateText(editText.key, {\r\n        preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        normalMap: new CanvasTexture(canvasText.getNormalMapOutlineCanvas()),\r\n      });\r\n    })();\r\n  }, [\r\n    editText?.text,\r\n    editText?.material,\r\n    editText?.outline,\r\n    editText?.font,\r\n    editText?.crystalBackground,\r\n    isVisiblePreview,\r\n    editText?.puffPrice,\r\n    editText?.crystalPrice,\r\n  ]);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <>\r\n      <div id='testPreview' style={{ position: 'absolute', zIndex: '100' }} />\r\n      {!isMinimizedCustomiserNav && editText?.text && (\r\n        <div className={styles.textPreview}>\r\n          <div>\r\n            {\r\n              <>\r\n                {/* Image is no longer needed, remove this */}\r\n                <div className={styles.textPreview__imgContainer} style={{ display: 'none' }}>\r\n                  <img\r\n                    height={80}\r\n                    width={640}\r\n                    ref={(el) => {\r\n                      previewImgRef.current = el;\r\n                      setIsVisiblePreview(!!el);\r\n                    }}\r\n                  />\r\n                </div>\r\n                {previewImgRef.current?.src ? (\r\n                  <>\r\n                    <NavTextPreviewScene text={editText} />\r\n                  </>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavTextPreview;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"NavTextCategories_main__aV8kW\",\"selected\":\"NavTextCategories_selected__NTJgj\"};","import styles from './NavTextCategories.module.scss';\r\n\r\ninterface NavTextCategoriesProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst NavTextCategories = ({ children }: NavTextCategoriesProps) => {\r\n  return <div className={styles.main}>{children}</div>;\r\n};\r\n\r\nexport default NavTextCategories;\r\n","import { FaArrowRightLong } from 'react-icons/fa6';\r\nimport styles from './Button.module.scss';\r\n\r\ninterface NextStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst NextStepButton = ({ onClick, isClickable, isVisible }: NextStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__next}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Next Step &nbsp;\r\n      <FaArrowRightLong />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default NextStepButton;\r\n","import { FaArrowLeftLong } from 'react-icons/fa6';\r\nimport styles from './Button.module.scss';\r\n\r\ninterface PrevStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst PrevStepButton = ({ onClick, isClickable, isVisible }: PrevStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__prev}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      <FaArrowLeftLong /> &nbsp; Previous\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PrevStepButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavTextNavSteps_root__Ys0fR\"};","import styles from './Button.module.scss';\r\n\r\ninterface CancelStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst CancelStepButton = ({ onClick, isClickable, isVisible }: CancelStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__cancel}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Cancel\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CancelStepButton;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface ApplyButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst ApplyButton = ({ onClick, isClickable, isVisible }: ApplyButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__next}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Apply Text\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ApplyButton;\r\n","import NextStepButton from '@components/ui/Button/NextStepButton';\r\nimport PrevStepButton from '@components/ui/Button/PrevStepButton';\r\nimport { usePortalRef } from '@hooks';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './NavTextNavSteps.module.scss';\r\nimport CancelStepButton from '@components/ui/Button/CancelStepButton';\r\nimport ApplyButton from '@components/ui/Button/ApplyButton';\r\nimport InfoDisplay from '@components/ui/InfoButton/InfoDisplay';\r\n\r\ninterface NavTextNavStepsProps {\r\n  isClickableNext?: boolean;\r\n  isClickablePrev?: boolean;\r\n  isVisibleNext?: boolean;\r\n  isVisiblePrev?: boolean;\r\n\r\n  onClickNext?: () => void;\r\n  onClickPrev?: () => void;\r\n  onClickCancel?: () => void;\r\n  onClickSave?: () => void;\r\n}\r\n\r\nconst NavTextNavSteps = ({\r\n  isClickableNext,\r\n  isClickablePrev,\r\n  isVisibleNext,\r\n  isVisiblePrev,\r\n  onClickNext,\r\n  onClickPrev,\r\n  onClickCancel,\r\n  onClickSave,\r\n}: NavTextNavStepsProps) => {\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n\r\n  if (!portalRef || !popupContainerRef) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      {/* {ReactDOM.createPortal(\r\n        <InfoDisplay>\r\n          <h5>Click where you want the text to go</h5>\r\n        </InfoDisplay>,\r\n        popupContainerRef,\r\n      )} */}\r\n      {ReactDOM.createPortal(\r\n        <div className={styles.root}>\r\n          {isVisiblePrev !== true && (\r\n            <CancelStepButton\r\n              onClick={\r\n                onClickCancel ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {(typeof isVisiblePrev === 'undefined' || isVisiblePrev) && (\r\n            <PrevStepButton\r\n              isClickable={isClickablePrev}\r\n              isVisible={isVisiblePrev}\r\n              onClick={\r\n                onClickPrev ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {(typeof isVisibleNext === 'undefined' || isVisibleNext) && (\r\n            <NextStepButton\r\n              isClickable={isClickableNext}\r\n              isVisible={isVisibleNext}\r\n              onClick={\r\n                onClickNext ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {isVisibleNext !== true && (\r\n            <ApplyButton\r\n              onClick={\r\n                onClickSave ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        </div>,\r\n        portalRef,\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNavSteps;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport styles from './NavText.module.scss';\r\nimport { useCustomiserStore, type TextCustomiser } from '@store/customiser';\r\nimport { LegacyRef, forwardRef, useEffect, useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport inputStyles from './../../ui/FormInput/FormInput.module.scss';\r\n\r\ninterface NavTextInputProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextInput = forwardRef(({ editText }: NavTextInputProps, ref) => {\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const { updateText, addText } = useCustomiserStore((state) => state);\r\n\r\n  const setTextOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const rootClassName = cn(inputStyles.root, styles.textInput);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        // font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text });\r\n      }\r\n    }\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    console.log('ref', ref);\r\n  }, [ref]);\r\n\r\n  return (\r\n    <div className={styles.textInputContainer}>\r\n      {/* <FormInput\r\n        ref={inputRef}\r\n        className={styles.textInput}\r\n        placeholder='Type text here...'\r\n        value={editText?.text}\r\n        onChange={setTextOnChange}\r\n      /> */}\r\n      <div className={rootClassName}>\r\n        <input\r\n          className={inputStyles.input}\r\n          onChange={setTextOnChange}\r\n          ref={ref as LegacyRef<HTMLInputElement> | undefined}\r\n          placeholder='Type text here...'\r\n          value={editText?.text}\r\n        />\r\n        {/* <label className={inputStyles.label}>Type text here</label> */}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nNavTextInput.displayName = 'NavTextInput';\r\n\r\nexport default NavTextInput;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport { LegacyRef, startTransition, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\n\r\nimport Accordion from '@components/ui/Accordion/Accordion';\r\nimport NavStepButtons from '../NavStepButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextFinish from './NavTextFinish';\r\nimport NavTextNameTypes from './NavTextNameTypes';\r\nimport NavTextOutline from './NavTextOutline';\r\nimport NavTextSelect from './NavTextSelect';\r\nimport NavTextsSelection from './NavTextsSelection';\r\nimport NavTextPreview from './NavTextPreview';\r\nimport { usePortalRef } from '@hooks';\r\nimport Button from '@components/ui/Button';\r\nimport { createPortal } from 'react-dom';\r\nimport NavTextCategories from './NavTextCategories';\r\nimport NavTextNavSteps from './NavTextNavSteps';\r\nimport { has } from 'lodash';\r\nimport FormInput from '@components/ui/FormInput';\r\nimport NavTextInput from './NavTextInput';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\nimport DontShowAgain from '@components/ui/DontShowAgain';\r\n\r\ninterface NavTextProps {\r\n  showEditText: boolean;\r\n  setShowEditText: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavText = ({ showEditText, setShowEditText }: NavTextProps) => {\r\n  const [step, setStep] = useState<number | undefined>(0);\r\n\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const deleteText = useCustomiserStore((state) => state.deleteText);\r\n  const updateIsMinimizedCustomiserNav = useCustomiserStore(\r\n    (state) => state.updateIsMinimizedCustomiserNav,\r\n  );\r\n  const isMinimizedCustomiserNav = useCustomiserStore((state) => state.isMinimizedCustomiserNav);\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const [isPickingOutline, setIsPickingOutline] = useState(false);\r\n  const [isPickingCrystal, setIsPickingCrystal] = useState(false);\r\n  const navHeaderRef = usePortalRef('NavHeader');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n\r\n  const mainTextInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const noOutlineSelected = step === 2 && isPickingOutline && !editText?.outline;\r\n  const noCrystalSelected = step === 3 && isPickingCrystal && !editText?.crystalBackground;\r\n  const hasFinishedAllSteps = step === 3 && (editText?.crystalBackground || !isPickingCrystal);\r\n\r\n  const hasFinishedStep1 = !!editText?.text;\r\n  const hasFinishedStep2 = !!editText?.material;\r\n  const hasFinishedStep3 = !!editText?.outline;\r\n  const hasFinishedStep4 = !!editText?.crystalBackground;\r\n\r\n  const finishedSteps = [\r\n    hasFinishedStep1,\r\n    hasFinishedStep2,\r\n    !noOutlineSelected,\r\n    !noCrystalSelected,\r\n  ];\r\n\r\n  const isVisiblePrev = step !== 0;\r\n  const isClickableNext = finishedSteps[step || 0];\r\n  const isVisibleNext = typeof step === 'number' ? step < 3 : false;\r\n  console.log('isVisibleNext', isVisibleNext);\r\n  console.log('step', step);\r\n\r\n  const saveAndApplyChecker = () => {\r\n    if (!hasFinishedStep1) {\r\n      alert('Please enter a text to continue');\r\n      setStep(0);\r\n      return false;\r\n    } else if (!hasFinishedStep2) {\r\n      alert('Select a text color to continue');\r\n      setStep(1);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      setShowEditText(true);\r\n    } else {\r\n      setShowEditText(false);\r\n    }\r\n  }, [editText]);\r\n\r\n  useEffect(() => {\r\n    setShowEditText(editText?.key !== undefined);\r\n    return () => {\r\n      setShowEditText(false);\r\n    };\r\n  }, []);\r\n\r\n  const addText = () => {\r\n    setShowEditText(true);\r\n  };\r\n\r\n  const setScale = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalScale: Number(event) });\r\n    });\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const placeText = () => {\r\n    if (isPickingCrystal && noCrystalSelected) {\r\n      alert('Select a crystal type');\r\n      return;\r\n    }\r\n    if (editText?.key && !editText?.decalPosition) {\r\n      updateText(editText.key, {\r\n        decalFreeze: true,\r\n        decalPosition: [-0.01989325641440387, 2.436930108198209, 1.6226380277735046],\r\n        decalOrientation: [\r\n          -0.14799034762565572,\r\n          -0.17866277612764514,\r\n          -0.026487426629834374,\r\n          'XYZ',\r\n        ],\r\n      });\r\n    }\r\n    updateIsMinimizedCustomiserNav(true);\r\n  };\r\n\r\n  const applyText = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n        hasApplied: true,\r\n      });\r\n    }\r\n\r\n    setStep(0);\r\n\r\n    setShowEditText(false);\r\n  };\r\n\r\n  const localStorageConfirmCancelText = localStorage.getItem('confirmCancelText');\r\n  const shouldShowConfirmCancelText = !localStorageConfirmCancelText;\r\n\r\n  const [showConfirmCancelPopup, setShowConfirmCancelPopup] = useState(false);\r\n\r\n  const cancelText = () => {\r\n    if (editText?.key) {\r\n      applyText();\r\n      if (editText?.text && !editText?.hasApplied) {\r\n        deleteText(editText.key);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cancelTextHandler = () => {\r\n    if (editText?.text) {\r\n      setShowConfirmCancelPopup(true);\r\n    } else {\r\n      cancelText();\r\n    }\r\n  };\r\n\r\n  const handleTitleClick = (_step: number | string) => {\r\n    if (_step === step) {\r\n      setStep(undefined);\r\n    } else {\r\n      setStep(_step as number);\r\n    }\r\n  };\r\n\r\n  const maxStep = 4;\r\n\r\n  const handleNext = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step < maxStep - 1) {\r\n      switch (step) {\r\n        case 0:\r\n          if (!editText?.text) {\r\n            alert('Please enter a text to continue');\r\n            return;\r\n          }\r\n          break;\r\n        case 1:\r\n          if (!editText?.selectedName) {\r\n            alert('Select a text color type');\r\n            return;\r\n          } else if (!editText?.material) {\r\n            alert('Select a color for text');\r\n            return;\r\n          }\r\n          break;\r\n        case 2:\r\n          if (isPickingOutline && !editText?.outline) {\r\n            alert('Select an outline');\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      console.log('editText', editText);\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step > 0) {\r\n      setStep(step - 1);\r\n    }\r\n  };\r\n\r\n  const navCategoryNames = ['Font', 'Color', 'Outline', 'Finish'];\r\n  const NavTextCategoriesItems = () => {\r\n    const handleOnClick = (index: number) => {\r\n      if (navCategoryNames[index] === 'Outline' || navCategoryNames[index] === 'Finish') {\r\n        if (!saveAndApplyChecker()) return;\r\n      }\r\n      if (!editText?.text) {\r\n        alert('Please enter a text to continue');\r\n        return;\r\n      }\r\n      handleTitleClick(index);\r\n    };\r\n\r\n    const finishedCategories = [\r\n      hasFinishedStep1,\r\n      hasFinishedStep2,\r\n      hasFinishedStep3,\r\n      hasFinishedStep4,\r\n    ];\r\n\r\n    return navCategoryNames.map((name, index) => {\r\n      const isSelectedCategory = step === index;\r\n      const categoryClassNames = `\r\n        ${isSelectedCategory ? styles.selectedCategoryItem : ''}\r\n        ${finishedCategories[index] ? styles.finishedCategoryItem : ''}\r\n      `;\r\n      return (\r\n        <div key={index} className={categoryClassNames} onClick={() => handleOnClick(index)}>\r\n          {name}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const CategoryDisplay = () => {\r\n    switch (step) {\r\n      case 0:\r\n        return <NavTextSelect editText={editText} />;\r\n      case 1:\r\n        return <NavTextNameTypes editText={editText} />;\r\n      case 2:\r\n        return <NavTextOutline editText={editText} setIsPickingOutline={setIsPickingOutline} />;\r\n      case 3:\r\n        return (\r\n          <NavTextFinish\r\n            setIsPickingCrystal={setIsPickingCrystal}\r\n            editText={editText}\r\n          ></NavTextFinish>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showEditText ? (\r\n        <>\r\n          <div className={styles.navTextEdit}>\r\n            <NavTextPreview mainTextInputRef={mainTextInputRef} editText={editText} />\r\n            <NavTextCategories>{NavTextCategoriesItems()}</NavTextCategories>\r\n            {CategoryDisplay()}\r\n            <NavTextNavSteps\r\n              onClickNext={handleNext}\r\n              onClickPrev={handlePrevious}\r\n              onClickCancel={cancelTextHandler}\r\n              onClickSave={placeText}\r\n              isVisiblePrev={isVisiblePrev}\r\n              isVisibleNext={isVisibleNext}\r\n              isClickableNext={isClickableNext}\r\n            />\r\n            {editText?.key && editText.decalPosition && (\r\n              <NavDecalAdjust\r\n                scale={editText?.decalScale}\r\n                rotation={editText?.decalRotation}\r\n                onScale={setScale}\r\n                onRotate={setRotation}\r\n              />\r\n            )}\r\n            {editText &&\r\n              isMinimizedCustomiserNav &&\r\n              navHeaderRef &&\r\n              hasFinishedAllSteps &&\r\n              createPortal(\r\n                <ContainedButton\r\n                  onClick={() => {\r\n                    if (!saveAndApplyChecker()) {\r\n                      return updateIsMinimizedCustomiserNav(false);\r\n                    }\r\n\r\n                    applyText();\r\n                    updateIsMinimizedCustomiserNav(false);\r\n                  }}\r\n                  classNames={styles.navHeaderSaveText}\r\n                >\r\n                  SAVE\r\n                </ContainedButton>,\r\n                navHeaderRef,\r\n              )}\r\n            {popupContainerRef &&\r\n              createPortal(\r\n                <NavTextInput ref={mainTextInputRef} editText={editText} />,\r\n                popupContainerRef,\r\n              )}\r\n          </div>\r\n          {popupContainerRef &&\r\n            shouldShowConfirmCancelText &&\r\n            showConfirmCancelPopup &&\r\n            createPortal(\r\n              <DontShowAgain\r\n                cb={cancelText}\r\n                setShowNotification={setShowConfirmCancelPopup}\r\n                notifName={'editTextCancelText'}\r\n              >\r\n                <span>Cancel text customization?</span>\r\n              </DontShowAgain>,\r\n              popupContainerRef,\r\n            )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <NavTextsSelection onAddTextClicked={addText}></NavTextsSelection>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavText;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CustomiserNav_root__rgnWr\",\"open\":\"CustomiserNav_open__6TgJc\",\"isFullscreen\":\"CustomiserNav_isFullscreen__xo92v\",\"minimized\":\"CustomiserNav_minimized__-4C1L\",\"actions\":\"CustomiserNav_actions__B0fm0\",\"content\":\"CustomiserNav_content__whsIx\",\"headerAfter\":\"CustomiserNav_headerAfter__bXrUD\",\"navHeaderScroll\":\"CustomiserNav_navHeaderScroll__0nzPV\",\"selected\":\"CustomiserNav_selected__x6zsL\",\"hasActions\":\"CustomiserNav_hasActions__xe43g\",\"isEdittingText\":\"CustomiserNav_isEdittingText__bI3ZI\",\"closed\":\"CustomiserNav_closed__fkIqu\"};","import DontShowAgain from '@components/ui/DontShowAgain';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { Falsey } from 'lodash';\r\nimport { useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface NavHeaderScrollProps {\r\n  styles?: {\r\n    readonly [key: string]: string;\r\n  };\r\n}\r\n\r\nconst NavHeaderScroll = ({ styles }: NavHeaderScrollProps) => {\r\n  const { navItems, selectedNav, setSelectedNav, deleteText } = useCustomiserStore();\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const { texts, updateText } = useCustomiserStore((state) => state);\r\n  const editText = texts?.find((g) => g.edit);\r\n\r\n  const [navIndex, setNavIndex] = useState<number>(0);\r\n\r\n  const localStorageItem = localStorage.getItem('navConfirmText');\r\n  const shouldShowConfirmCancelText = !localStorageItem;\r\n\r\n  const cancelTextEdit = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n        hasApplied: true,\r\n      });\r\n\r\n      if (!editText?.hasApplied) {\r\n        deleteText(editText?.key);\r\n      }\r\n    }\r\n    setSelectedNav(navIndex);\r\n  };\r\n\r\n  const navClickHandler = (index: number, name: string | Falsey) => {\r\n    if (index === navIndex) return;\r\n    setNavIndex(index);\r\n    if (editText?.text && name && name?.toLowerCase() !== 'text') {\r\n      setShowPopup(true);\r\n    } else {\r\n      setSelectedNav(index);\r\n    }\r\n  };\r\n\r\n  if (!popupPortalRef) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles?.navHeaderScroll}>\r\n        {navItems.map((item, index) => {\r\n          const classes = selectedNav?.name === item.name ? styles?.selected : '';\r\n          return (\r\n            <div className={classes} key={index} onClick={() => navClickHandler(index, item.name)}>\r\n              {item.name}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {showPopup &&\r\n        shouldShowConfirmCancelText &&\r\n        createPortal(\r\n          <DontShowAgain\r\n            cb={cancelTextEdit}\r\n            setShowNotification={setShowPopup}\r\n            notifName={'navConfirmText'}\r\n          >\r\n            <span>Cancel text customization?</span>\r\n          </DontShowAgain>,\r\n          popupPortalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavHeaderScroll;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavFitting from '../NavFitting';\r\nimport NavFlags from '../NavFlags';\r\nimport NavHeader from '../NavHeader';\r\nimport NavImages from '../NavImages';\r\nimport NavPart from '../NavPart';\r\nimport NavMinimize from '../NavMinimize';\r\nimport NavSize from '../NavSize';\r\nimport NavText from '../NavText';\r\n\r\nimport styles from './CustomiserNav.module.scss';\r\nimport { FocusCameraOnPart } from '@components/layout/Customiser/Customiser';\r\nimport NavHeaderScroll from '../NavHeader/NavHeaderScroll';\r\n\r\nexport interface CustomiserNavProps {\r\n  className?: string;\r\n  focusCameraOnPart?: FocusCameraOnPart;\r\n}\r\n\r\nconst CustomiserNav = ({ className, focusCameraOnPart }: CustomiserNavProps) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [scrollCoordinates, setScrollCoordinates] = useState({ left: 0, top: 0 });\r\n  const [showEditText, setShowEditText] = useState(false);\r\n\r\n  const {\r\n    selectedPart,\r\n    selectedNav,\r\n    texts,\r\n    isMinimizedCustomiserNav,\r\n    updateIsMinimizedCustomiserNav,\r\n  } = useCustomiserStore();\r\n\r\n  const scrollableRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const isFullscreen = useMemo(\r\n    () => selectedNav?.name === 'Text' && editText,\r\n    [selectedNav, editText],\r\n  );\r\n\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      // [styles.open]: isOpen,\r\n      [styles.minimized]: isMinimizedCustomiserNav,\r\n      [styles.hasActions]: selectedNav?.hasActions,\r\n      [styles.isEdittingText]: editText?.text && showEditText,\r\n      [styles.isFullscreen]: false,\r\n    },\r\n    className,\r\n  );\r\n\r\n  const saveScrollCoordinates = () => {\r\n    if (isOpen && scrollableRef.current) {\r\n      setScrollCoordinates({\r\n        left: scrollableRef.current.scrollLeft,\r\n        top: scrollableRef.current.scrollTop,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && scrollableRef.current) {\r\n      scrollableRef.current.scrollTo({\r\n        ...scrollCoordinates,\r\n        // Typescript issue: https://github.com/Microsoft/TypeScript/issues/28755\r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const toggleOpen = () => {\r\n    saveScrollCoordinates();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedNav === null && selectedPart === null) {\r\n      setIsOpen(true);\r\n    } else {\r\n      setIsOpen(false);\r\n      updateIsMinimizedCustomiserNav(false);\r\n    }\r\n  }, [selectedPart, selectedNav]);\r\n\r\n  return (\r\n    <motion.nav\r\n      layout='preserve-aspect'\r\n      transition={{\r\n        type: 'spring',\r\n        stiffness: 700,\r\n        damping: 40,\r\n      }}\r\n      className={rootClassName}\r\n    >\r\n      {/* {!isOpen && (\r\n        <NavMinimize\r\n          isMinimizedCustomiserNav={isMinimizedCustomiserNav}\r\n          onMinimize={() => updateIsMinimizedCustomiserNav(true)}\r\n          onMaximize={() => updateIsMinimizedCustomiserNav(false)}\r\n        />\r\n      )} */}\r\n      <NavHeader\r\n        className={styles.header}\r\n        toggle={() => toggleOpen()}\r\n        isOpen={isOpen}\r\n        onClick={() => {\r\n          updateIsMinimizedCustomiserNav(!isMinimizedCustomiserNav);\r\n        }}\r\n        isMinimized={isMinimizedCustomiserNav}\r\n      />\r\n      {<NavHeaderScroll styles={styles} />}\r\n      <div id='NavHeaderAfter' className={styles.headerAfter}></div>\r\n      <Suspense fallback={<div style={{ background: 'white' }}>Loading...</div>}>\r\n        <AnimatePresence initial={false}>\r\n          <motion.div\r\n            id='scrollable'\r\n            className={`${styles.content} ${isOpen && styles.closed}`}\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n              open: { opacity: 1 },\r\n              collapsed: { opacity: 0 },\r\n            }}\r\n            ref={(el) => {\r\n              scrollableRef.current = el;\r\n            }}\r\n          >\r\n            {isOpen ? null : selectedNav?.type === 'fitting' ? (\r\n              <NavFitting focusCameraOnPart={focusCameraOnPart} />\r\n            ) : selectedNav?.type === 'names' ? (\r\n              <NavText showEditText={showEditText} setShowEditText={setShowEditText} />\r\n            ) : selectedNav?.type === 'flags' ? (\r\n              <NavFlags />\r\n            ) : selectedNav?.type === 'images' ? (\r\n              <NavImages />\r\n            ) : selectedNav?.type === 'size' ? (\r\n              <NavSize />\r\n            ) : selectedPart ? (\r\n              <NavPart part={selectedPart} />\r\n            ) : null}\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </Suspense>\r\n      {!isOpen && selectedNav?.hasActions && (\r\n        <div className={styles.actions}>\r\n          {selectedPart && <div id='CustomiserNavMaterial' style={{ background: 'white' }}></div>}\r\n          <div id='CustomiserNavActions'></div>\r\n        </div>\r\n      )}\r\n    </motion.nav>\r\n  );\r\n};\r\n\r\nexport default CustomiserNav;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Header_root__cz6kt\",\"total\":\"Header_total__nSueF\",\"price\":\"Header_price__GikHZ\",\"resetBtn\":\"Header_resetBtn__yzIQA\",\"addToBasket\":\"Header_addToBasket__T8GpW\"};","import Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport { useDesignStore } from '@store/design';\r\nimport styles from './Header.module.scss';\r\nimport Price from '@components/ui/Price';\r\n\r\nexport interface HeaderProps {\r\n  className?: string;\r\n}\r\n\r\nconst Header = ({ className }: HeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const total = useCustomiserStore((state) => state.total());\r\n  const designComplete = useCustomiserStore((state) => state.designComplete());\r\n  const setResetCamera = useDesignStore((state) => state.setResetCamera);\r\n  const addingToCart = useDesignStore((state) => state.addingToCart);\r\n\r\n  const resetCustomerSelections = useCustomiserStore((state) => state.resetCustomerSelections);\r\n\r\n  const saveDesign = () => {\r\n    setResetCamera();\r\n  };\r\n\r\n  const resetPopup = () => {\r\n    if (confirm('Reset everything?')) {\r\n      resetCustomerSelections();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div id='reset-btn-container' className={styles.resetBtn}>\r\n        <Button onClick={resetPopup}>CLEAR</Button>\r\n      </div>\r\n      <div className={styles.total}>\r\n        Current <Price className={styles.price} priceString={total} />\r\n      </div>\r\n      <Button\r\n        className={styles.addToBasket}\r\n        onClick={saveDesign}\r\n        disabled={!designComplete || addingToCart}\r\n      >\r\n        {addingToCart ? 'Saving' : 'Add to basket'}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Customiser_root__+9xV1\",\"nav\":\"Customiser_nav__xnqzP\",\"modelContainer\":\"Customiser_modelContainer__FVL2o\",\"model\":\"Customiser_model__jxaOf\",\"controls\":\"Customiser_controls__Ar93L\",\"background\":\"Customiser_background__qq7nU\",\"loading\":\"Customiser_loading__vNYyO\",\"header\":\"Customiser_header__1SFjA\",\"close\":\"Customiser_close__sH1pv\"};","import CustomiserNav from '@components/nav/CustomiserNav';\r\nimport Button from '@components/ui/Button';\r\nimport { useDesignStore } from '@store/design';\r\nimport cn from 'classnames';\r\nimport { lazy, Suspense, useRef } from 'react';\r\nimport Header from '../Header';\r\n\r\nconst CustomiserCanvas = lazy(() => import('@components/three/CustomiserCanvas'));\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport styles from './Customiser.module.scss';\r\nimport { Camera } from 'three';\r\nimport { Falsey } from 'lodash';\r\nimport { cameraDefault } from '@components/three/CustomiserCanvas/CustomiserCanvas';\r\n\r\nexport interface CustomiserProps {\r\n  className?: string;\r\n}\r\n\r\nconst cameraLegCutPosition: [x: number, y: number, z: number] = [\r\n  -0.95422573319504, -0.8257934547233227, 0.48109793465966844,\r\n];\r\n\r\nexport type FocusCameraOnPart = (part?: string | Falsey) => void;\r\n\r\nconst Customiser = ({ className }: CustomiserProps) => {\r\n  const setShow = useDesignStore((state) => state.setShow);\r\n  const { selectedNav, remountTrigger } = useCustomiserStore();\r\n\r\n  const cameraRef = useRef<Camera | null>(null);\r\n  const handleCameraRef = (ref: Camera | null) => {\r\n    cameraRef.current = ref;\r\n  };\r\n\r\n  const focusCameraOnPart = (part?: string | Falsey) => {\r\n    const focusCamera = (coordinates: number[]) => {\r\n      const camera = cameraRef.current;\r\n      if (camera) {\r\n        camera.position.set(coordinates[0], coordinates[1], coordinates[2]);\r\n      }\r\n    };\r\n\r\n    switch (part && part.toLowerCase()) {\r\n      case 'leg cut':\r\n        focusCamera(cameraLegCutPosition);\r\n        break;\r\n      default:\r\n        focusCamera(cameraDefault);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const rootClassName = cn(styles.root, className, {\r\n    // [styles.navOpen]: selectedNav !== null,\r\n  });\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div\r\n        id='popupContainer'\r\n        style={{\r\n          // re-figure out again how to put styled ID in scss\r\n          position: 'absolute',\r\n          zIndex: '201',\r\n        }}\r\n      />\r\n      <CustomiserNav className={styles.nav} focusCameraOnPart={focusCameraOnPart} />\r\n      <Header className={styles.header} />\r\n      <svg\r\n        className={styles.background}\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 114.383 97.088'\r\n      >\r\n        <defs>\r\n          <clipPath id='a'>\r\n            <path d='M0 0h114.383v97.088H0z' />\r\n          </clipPath>\r\n        </defs>\r\n        <g clipPath='url(#a)' fillRule='evenodd'>\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='M8.567 88.645v-.044c1.487-.24 2.986-.466 4.472-.716a1.278 1.278 0 0 0 .743-1.862 1.019 1.019 0 0 0-.949-.409c-2.928.338-5.845.747-8.785 1.147-.492.069-.709.447-.687 1.262.012 1.216.126 1.481.721 1.375 1.5-.243 3.008-.506 4.484-.753M23.905 77.54c-1.224.072-1.842.39-1.9 2.044a69.405 69.405 0 0 0 .011 5.312c.057 1.481.606 2.112 1.716 1.99q4.444-.488 8.888-1.012a1.851 1.851 0 0 0 1.659-1.975c.057-.853.1-1.709.1-2.562.023-.856.023-1.247 0-2.093-.068-1.6-.755-1.769-2.024-1.7Zm9.982-6.006c2.119 0 3.229 1.3 3.744 3.247a8.461 8.461 0 0 1 .32 2.222 225.099 225.099 0 0 1 0 7.896 8.3 8.3 0 0 1-.869 3.622 3.721 3.721 0 0 1-2.8 2.269c-4.072.553-8.121 1.15-12.182 1.784-1.773.306-3.145-1.253-3.523-3.993a25.755 25.755 0 0 1-.229-3.54c-.011-1.275-.006-2.556 0-3.834s.046-2.562.115-3.834c.091-1.944.606-4.015 1.887-5.128a2.565 2.565 0 0 1 1.533-.709Zm61.427 6.006v-6.006h13.325c1.682-.069 2.768 1.381 3.409 3.771a16.91 16.91 0 0 1 .538 4.281 18.216 18.216 0 0 1-.515 4.3 5.807 5.807 0 0 1-1.945 3.4c-.217.181-.469.34-.652.472.8 1.45 1.611 2.926 2.4 4.443a883.295 883.295 0 0 1 2.505 4.856c-.743-.163-1.453-.331-2.139-.472-1.041-.219-2.1-.381-3.157-.644a1.328 1.328 0 0 1-.732-.643c-.641-1.2-1.285-2.373-1.933-3.55-.633-1.148-1.292-2.3-1.91-3.431-.309-.522-.606-.819-1.041-.862a90.174 90.174 0 0 1-3.74-.481c-.366-.056-.481.116-.481.656.011 1.04.011 2.081.011 3.128v3.172c-1.235-.228-2.7-.472-3.946-.691v-12.17c3.752.156 7.526.293 11.278.4.492.013 1-.006 1.487 0 .56.016.789-.769.881-1.541.091-1.2-.149-2.053-.686-2.234a3.757 3.757 0 0 0-1.19-.16Zm-11.255 0v2.709l9.585.616v4.047l-9.631-.944v2.3l9.631 1.065v5.58c-4.838-.834-8.59-1.4-13.429-2.08v-19.3h13.431v6.006ZM37.072 90.367a232.526 232.526 0 0 1 3.775-5.125 219.554 219.554 0 0 1 3.786-4.809c-1.281-1.453-2.562-2.919-3.832-4.415s-2.439-2.915-3.709-4.484h5.5a1.331 1.331 0 0 1 .881.488c.7.84 1.322 1.559 2.02 2.375s1.407 1.625 2.116 2.431c.709-.84 1.417-1.682 2.127-2.512s1.413-1.643 2.128-2.466a.948.948 0 0 1 .652-.316h5.322c-1.224 1.384-2.475 2.827-3.7 4.237s-2.448 2.853-3.672 4.287c1.3 1.472 2.628 2.933 3.935 4.387s2.619 2.919 3.924 4.409c-1.865-.006-3.741.028-5.6.091a1.194 1.194 0 0 1-.789-.422q-1.116-1.213-2.23-2.434c-.732-.8-1.476-1.625-2.208-2.45-.755.928-1.511 1.855-2.265 2.8s-1.5 1.913-2.253 2.9c-.106.138-.274.327-.423.344-1.818.208-3.66.434-5.479.685m21.618-1.509c1.258-1.422 2.528-2.816 3.786-4.215s2.516-2.809 3.775-4.218q-1.922-2.231-3.832-4.428c-1.273-1.46-2.615-2.993-3.884-4.462h5.412a1.339 1.339 0 0 1 .881.459c.7.8 1.59 1.79 2.282 2.594s1.407 1.637 2.116 2.456c.709-.822 1.422-1.647 2.128-2.481s1.557-1.842 2.268-2.7a.959.959 0 0 1 .64-.34c1.773-.006 3.534 0 5.319.012-1.235 1.516-2.584 3.175-3.812 4.64s-2.459 2.884-3.683 4.293a234.511 234.511 0 0 1 3.935 4.959 262.195 262.195 0 0 1 3.935 5.293 296.137 296.137 0 0 0-5.6-.772 1.472 1.472 0 0 1-.8-.569c-.739-.948-1.48-1.9-2.219-2.822s-1.487-1.831-2.219-2.725q-1.132 1.247-2.253 2.49c-.749.829-1.511 1.652-2.265 2.478-.1.115-.274.26-.412.253a205.452 205.452 0 0 0-5.49-.2m-43.271-6.7a3.858 3.858 0 0 1 1.979 2.993 11.586 11.586 0 0 1-.24 5.3c-.549 1.89-1.6 3-2.962 3.29C9.494 94.797 4.8 95.888.1 97.088a.159.159 0 0 1-.1-.05V81.205c.274-.019.572-.041.881-.066 3.763-.328 7.5-.656 11.255-.981.377-.031.789 0 1.018-.622.32-.9-.034-2.037-.755-2H0V71.53h12.857a3.24 3.24 0 0 1 3.2 1.944 9.3 9.3 0 0 1 .721 4.4 8.384 8.384 0 0 1-1.361 4.277'\r\n          />\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='m75.165 48.1-6.079-9.03v.049c-.057 1.036-.095 2.076-.183 3.112a2.019 2.019 0 0 1-.3.929l-8.448 12.034c-.249.368-.854 1.239-1.255 1.374a.382.382 0 0 1-.448-.158 2.924 2.924 0 0 1-.17-1.252v-.015l.451-9.913a.888.888 0 0 1 .121-.521l6.771-9.393a1.068 1.068 0 0 0 0-1.4l-6.516-9.933a3.453 3.453 0 0 1-.372-1.536l-.564-9.434c-.136-2.082.98-1.647 2.035 0l9.86 15.392 5.074-7.607c.439-.71.756-1.16 1.67-1.2a28.863 28.863 0 0 0 6.026-.866 2.49 2.49 0 0 1 .955-.113.381.381 0 0 1 .292.365 7.753 7.753 0 0 1-1.169 2.293L74.64 33.912a.971.971 0 0 0-.011 1.253l8.1 12.066a7.386 7.386 0 0 1 1.192 2.336.379.379 0 0 1-.247.33 2.314 2.314 0 0 1-1.008-.05 43.691 43.691 0 0 0-6.495-.95c-.5-.024-.775-.421-1.012-.8m-17.2-18.084 2.675 4.223a.378.378 0 0 1-.005.42L57.97 38.64a.386.386 0 0 1-.639 0l-2.729-4a.379.379 0 0 1-.005-.426l2.719-4.206a.386.386 0 0 1 .65 0m-13.64-.628 10.716-16.367c.911-1.366 2.032-2.329 1.921 0l-.453 9.457a3.209 3.209 0 0 1-.565 1.514l-6.217 9.551c-.31.474-.372.717-.048 1.2l6.446 9.577a1.569 1.569 0 0 1 .389.861l.454 9.969v.025a3.345 3.345 0 0 1-.187 1.236.385.385 0 0 1-.494.158 4.869 4.869 0 0 1-1.172-1.361l-9.863-14.918c-.149.21-.3.418-.441.636-1.474 2.327-2.954 4.649-4.408 6.989a1.51 1.51 0 0 1-1.168.806h-.025a40.188 40.188 0 0 0-6.467 1.047 3.664 3.664 0 0 1-1.08.156.385.385 0 0 1-.325-.453 11.67 11.67 0 0 1 1.3-2.279L40.716 34.9a.978.978 0 0 0 0-1.256L32.349 21.23a8.345 8.345 0 0 1-1.185-2.257.382.382 0 0 1 .294-.383 2.706 2.706 0 0 1 .969.1c1.112.258 2.222.524 3.342.747a22.428 22.428 0 0 0 3.334.462c.711.032 1.093.653 1.429 1.19 1 1.6 2.087 3.16 3.146 4.727a3.685 3.685 0 0 1 .542 2.108ZM57.652 0 45.465 18.084a.386.386 0 0 1-.628.017c-1.5-2-2.426-3.151-5.06-3.4a68.259 68.259 0 0 1-11.375-2.346c-3.454-.947-6.874-2.013-10.321-2.979l16.621 24.707a.379.379 0 0 1 0 .426L19.854 57.187c3.235-.656 6.473-1.24 9.736-1.751 3.484-.546 6.978-1.03 10.465-1.553a6.441 6.441 0 0 0 4.394-2.608l.623-.841a.385.385 0 0 1 .633.019L57.652 68.8l11.947-18.351a.386.386 0 0 1 .633-.019l.623.841a6.442 6.442 0 0 0 4.394 2.608c3.488.523 6.982 1.007 10.465 1.553 3.263.511 6.5 1.095 9.736 1.751L80.601 34.51a.378.378 0 0 1 0-.426L97.225 9.376c-3.447.965-6.868 2.031-10.321 2.979A68.266 68.266 0 0 1 75.528 14.7c-2.635.249-3.557 1.4-5.06 3.4a.386.386 0 0 1-.628-.017Z'\r\n          />\r\n        </g>\r\n      </svg>\r\n      <div className={styles.modelContainer}>\r\n        <div id='CustomiserCanvasControls' className={styles.controls}></div>\r\n        <Suspense fallback={<div className={styles.loading}>Loading ...</div>}>\r\n          <CustomiserCanvas\r\n            key={remountTrigger}\r\n            className={styles.model}\r\n            onCameraRef={handleCameraRef}\r\n          />\r\n        </Suspense>\r\n      </div>\r\n      {selectedNav === null && (\r\n        <Button className={styles.close} onClick={() => setShow(false)}>\r\n          Close\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customiser;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const addToCart = async (data: any) => {\r\n  return fetch(window.Shopify.routes.root + 'cart/add.js', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n};\r\n","/* eslint-disable react/display-name */\r\nimport { FC, Suspense, forwardRef } from 'react';\r\n\r\nexport interface LoadableProps {\r\n  className?: string;\r\n}\r\n\r\n// eslint-disable-next-line react/display-name, @typescript-eslint/no-explicit-any\r\nconst Loadable = (Component: FC<any>) =>\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  forwardRef((props: any, ref) => (\r\n    <Suspense fallback={<></>}>\r\n      <Component {...props} ref={ref} />\r\n    </Suspense>\r\n  ));\r\n\r\nexport default Loadable;\r\n","import { ThreeElements, Vector3 } from '@react-three/fiber';\r\nimport { forwardRef } from 'react';\r\nimport { Mesh } from 'three';\r\n\r\nexport interface MouseHelperProps {\r\n  position?: Vector3;\r\n}\r\n\r\nconst MouseHelper = forwardRef<Mesh, MouseHelperProps>((props, ref) => {\r\n  const BoxProps: ThreeElements['boxGeometry'] = {\r\n    args: [1, 1, 200],\r\n  };\r\n\r\n  return (\r\n    <mesh ref={ref} visible={false} scale={0.1}>\r\n      <boxGeometry {...BoxProps} />\r\n      <meshNormalMaterial />\r\n    </mesh>\r\n  );\r\n});\r\n\r\nMouseHelper.displayName = 'MouseHelper';\r\n\r\nexport default MouseHelper;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CustomiserCanvas_root__1vMOn\",\"save\":\"CustomiserCanvas_save__V9j3S\"};","import { OrbitControls } from '@react-three/drei';\r\nimport { Canvas, ThreeEvent } from '@react-three/fiber';\r\nimport cn from 'classnames';\r\nimport { CSSProperties, lazy, useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nimport {\r\n  CustomDesignEntity,\r\n  CustomDesignInput,\r\n  Maybe,\r\n  useCreateCustomDesignMutation,\r\n  useUploadMultipleFilesMutation,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { addToCart } from '@lib/shopify';\r\nimport { CustomiserState, useCustomiserStore } from '@store/customiser';\r\nimport { useDesignStore } from '@store/design';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { Camera, Euler, Group, Mesh, Vector3 } from 'three';\r\n\r\nimport Lights from '../Lights';\r\nimport Loadable from '../Loadable';\r\nimport MouseHelper from '../MouseHelper';\r\nimport { SceneProps } from '../Scene/Scene';\r\nimport styles from './CustomiserCanvas.module.scss';\r\n\r\nimport ThreeScene from '@components/three/Scene';\r\n\r\nconst Scene = Loadable(lazy(() => import('@components/three/Scene'))) as typeof ThreeScene;\r\n\r\nexport interface CustomiserCanvasProps {\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  onCameraRef: (ref: Camera | null) => void;\r\n}\r\n\r\nconst getCustomDesignData = (state: CustomiserState, files: string[]): CustomDesignInput => ({\r\n  customProduct: state.customProduct?.id,\r\n  parts: state.savedParts.map((p) => ({\r\n    name: p.part.name,\r\n    areaSize: p.part.areaSize?.data?.id,\r\n    material: p.material.id,\r\n  })),\r\n  texts: state.texts.map((t) => ({\r\n    text: t.text,\r\n    decalPosition: t.decalPosition,\r\n    decalOrientation: t.decalOrientation,\r\n    decalRotation: t.decalRotation,\r\n    decalScale: t.decalScale,\r\n    basePriceVariantId: t.basePrice?.shopifyVariantId,\r\n    letterPriceVariantId: t.letterPrice?.shopifyVariantId,\r\n    outlinePriceVariantId: t.outlinePrice?.shopifyVariantId,\r\n    puffPriceVariantId: t.puffPrice?.shopifyVariantId,\r\n    crystalPriceVariantId: t.crystalPrice?.shopifyVariantId,\r\n  })),\r\n  flags: state.flags.map((f) => ({\r\n    flag: f.flag?.id,\r\n    decalPosition: f.decalPosition,\r\n    decalOrientation: f.decalOrientation,\r\n    decalRotation: f.decalRotation,\r\n    decalScale: f.decalScale,\r\n    size: f.size,\r\n    shopifyVariantId: f.basePrice?.shopifyVariantId,\r\n  })),\r\n  graphics: state.graphics.map((g) => ({\r\n    graphic: g.graphic?.id,\r\n    decalPosition: g.decalPosition,\r\n    decalOrientation: g.decalOrientation,\r\n    decalRotation: g.decalRotation,\r\n    decalScale: g.decalScale,\r\n    size: g.size,\r\n    shopifyVariantId: g.basePrice?.shopifyVariantId,\r\n  })),\r\n  images: files,\r\n  sizing: {\r\n    shopifyVariantId: state.sizing?.variation?.id,\r\n    size: state.sizing?.size,\r\n    height: state.sizing?.height?.value?.toString(),\r\n    heightUnit: state.sizing?.height?.unit,\r\n    weight: state.sizing?.weight?.value,\r\n    weightUnit: state.sizing?.weight?.unit,\r\n  },\r\n});\r\n\r\nconst getCartVariations = (customDesignEntity?: CustomDesignEntity) => {\r\n  const customDesignId = customDesignEntity?.id;\r\n  const customDesign = customDesignEntity?.attributes;\r\n\r\n  if (!customDesign || !customDesignId) {\r\n    return [];\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const items: Array<{ id?: string; quantity: number; properties: any }> = [];\r\n  const id = (id?: Maybe<string>) => id?.replace('gid://shopify/ProductVariant/', '');\r\n  const getItem = (id?: string) => items.find((i) => i.id === id);\r\n  const addOrUpdate = (variantId: string, addQty = 1) => {\r\n    const checkItem = getItem(variantId);\r\n    if (checkItem) {\r\n      const newQuantity = checkItem.quantity + addQty;\r\n      checkItem.quantity = newQuantity;\r\n      checkItem.properties._customDesignQuantity = newQuantity;\r\n    } else {\r\n      items.push({\r\n        id: variantId,\r\n        quantity: addQty,\r\n        properties: {\r\n          _customDesignAddon: customDesignId,\r\n          _customDesignQuantity: addQty,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (customDesign.parts?.length) {\r\n    customDesign.parts.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.flags?.length) {\r\n    customDesign.flags.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.graphics?.length) {\r\n    customDesign.graphics.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.texts?.length) {\r\n    customDesign.texts.forEach((t) => {\r\n      const basePrice = id(t?.basePriceVariantId);\r\n      if (basePrice) addOrUpdate(basePrice);\r\n      const letterPrice = id(t?.letterPriceVariantId);\r\n      if (letterPrice) addOrUpdate(letterPrice, t?.text?.length);\r\n      const outlinePrice = id(t?.outlinePriceVariantId);\r\n      if (outlinePrice) addOrUpdate(outlinePrice);\r\n      const puffPrice = id(t?.puffPriceVariantId);\r\n      if (puffPrice) addOrUpdate(puffPrice);\r\n      const crystalPrice = id(t?.crystalPriceVariantId);\r\n      if (crystalPrice) addOrUpdate(crystalPrice);\r\n    });\r\n  }\r\n\r\n  if (customDesign.sizing?.shopifyVariantId) {\r\n    items.push({\r\n      id: id(customDesign.sizing.shopifyVariantId),\r\n      quantity: 1,\r\n      properties: {\r\n        _customDesign: customDesignId,\r\n      },\r\n    });\r\n  }\r\n\r\n  return items;\r\n};\r\n\r\nexport const cameraDefault: [x: number, y: number, z: number] = [\r\n  0, 2.1970893240496195e-15, 15.31024512625285,\r\n];\r\n\r\nconst CustomiserCanvas = ({\r\n  className,\r\n  style,\r\n  onCameraRef,\r\n}: CustomiserCanvasProps): JSX.Element => {\r\n  const cameraRef = useRef<Camera | null>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const images = useRef<File[]>([]);\r\n  const positionRef = useRef<Vector3>(new Vector3());\r\n  const orientationRef = useRef<Euler>(new Euler());\r\n  const groupRef = useRef<Group>(null);\r\n  const editFlag = useCustomiserStore((state) => state.flags.find((f) => f.edit));\r\n  const editText = useCustomiserStore((state) => state.texts.find((f) => f.edit));\r\n  const editGraphic = useCustomiserStore((state) => state.graphics.find((f) => f.edit));\r\n  const updateGraphic = useCustomiserStore((state) => state.updateGraphic);\r\n  const updateFlag = useCustomiserStore((state) => state.updateFlag);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const setCanvasSize = useCustomiserStore((state) => state.setCanvasSize);\r\n  const resetCamera = useDesignStore((state) => state.resetCamera);\r\n  const addingToCart = useDesignStore((state) => state.addingToCart);\r\n  const modelRotation = useDesignStore((state) => state.modelRotation);\r\n  const setAddingToCart = useDesignStore((state) => state.setAddingToCart);\r\n  const setModelRotation = useDesignStore((state) => state.setModelRotation);\r\n  const reset = useCustomiserStore((state) => state.reset);\r\n  const rootClassName = cn(styles.root, className);\r\n  const mouseHelperRef = useRef<Mesh>(null);\r\n  const state = useCustomiserStore((state) => state);\r\n\r\n  const [isPointerDown, setIsPointerDown] = useState(false);\r\n  const [isPointerMoved, setIsPointerMoved] = useState(false);\r\n\r\n  const setPosition = useCallback(\r\n    (event: ThreeEvent<MouseEvent>) => {\r\n      const p = event.point;\r\n      const n = event?.face?.normal.clone();\r\n      if (mouseHelperRef.current && n && groupRef.current) {\r\n        n.transformDirection(groupRef.current.matrixWorld);\r\n        n.multiplyScalar(10);\r\n        n.add(p);\r\n        mouseHelperRef.current.position.copy(p);\r\n        mouseHelperRef.current.lookAt(n);\r\n      }\r\n    },\r\n    [mouseHelperRef],\r\n  );\r\n\r\n  const onClick = useCallback<Required<SceneProps>['onClick']>(\r\n    (event) => {\r\n      setIsPointerDown(false);\r\n      setIsPointerMoved(false);\r\n\r\n      if (!isPointerDown || isPointerMoved) {\r\n        return;\r\n      }\r\n\r\n      if (editFlag?.key) {\r\n        event.stopPropagation();\r\n\r\n        updateFlag(editFlag.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateFlag(editFlag.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (editGraphic?.key) {\r\n        event.stopPropagation();\r\n\r\n        updateGraphic(editGraphic.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateGraphic(editGraphic.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (editText?.key) {\r\n        event.stopPropagation();\r\n        updateText(editText.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateText(editText.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n    },\r\n    [editFlag, editGraphic, editText, isPointerDown, isPointerMoved],\r\n  );\r\n\r\n  const onPointerDown = useCallback<Required<SceneProps>['onPointerDown']>(() => {\r\n    setIsPointerDown(true);\r\n  }, []);\r\n\r\n  const onPointerMove = useCallback<Required<SceneProps>['onPointerMove']>(\r\n    (e) => {\r\n      setIsPointerDown((cur) => {\r\n        if (cur) {\r\n          setIsPointerMoved(true);\r\n        }\r\n        return cur;\r\n      });\r\n    },\r\n    [isPointerDown],\r\n  );\r\n\r\n  const shopifyAddToCart = useMutation({\r\n    mutationFn: addToCart,\r\n    onSuccess: () => {\r\n      window.location.href = window.Shopify.routes.root + 'cart';\r\n      reset();\r\n    },\r\n  });\r\n\r\n  const { mutate } = useCreateCustomDesignMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      if (data.createCustomDesign?.data) {\r\n        const items = getCartVariations(data.createCustomDesign.data);\r\n        shopifyAddToCart.mutate({ items: items });\r\n      }\r\n    },\r\n  });\r\n\r\n  const { mutateAsync } = useUploadMultipleFilesMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const fileIDs = data.multipleUpload.map((f) => f?.data?.id) as string[];\r\n      mutate({ data: getCustomDesignData(state, fileIDs) });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (addingToCart && modelRotation < 360) {\r\n      setTimeout(() => {\r\n        canvasRef?.current?.toBlob((blob) => {\r\n          if (blob) {\r\n            const file = new File([blob], 'fileName.png', { type: 'image/png' });\r\n            images.current.push(file);\r\n            setModelRotation(modelRotation + 90);\r\n          }\r\n        }, 'image/png');\r\n      }, 50);\r\n    } else if (addingToCart) {\r\n      const upload = async () => {\r\n        await mutateAsync({ files: images.current });\r\n      };\r\n      upload();\r\n    }\r\n  }, [modelRotation, addingToCart, images]);\r\n\r\n  useEffect(() => {\r\n    const camera = cameraRef.current;\r\n    if (!camera) {\r\n      return;\r\n    }\r\n    if (resetCamera) {\r\n      camera.position.set(cameraDefault[0], cameraDefault[1], cameraDefault[2]);\r\n      setAddingToCart();\r\n    }\r\n  }, [resetCamera]);\r\n\r\n  useEffect(() => {\r\n    if (onCameraRef && cameraRef.current) {\r\n      onCameraRef(cameraRef.current);\r\n    }\r\n  }, [onCameraRef]);\r\n\r\n  const isEditing = editFlag || editGraphic || editText;\r\n\r\n  return (\r\n    <div className={rootClassName} style={style}>\r\n      <Canvas\r\n        linear\r\n        flat\r\n        camera={{\r\n          position: cameraDefault,\r\n          fov: 45,\r\n        }}\r\n        dpr={window.devicePixelRatio}\r\n        gl={{ preserveDrawingBuffer: true }}\r\n        ref={canvasRef}\r\n        onCreated={(state) => {\r\n          setCanvasSize(state.size.width, state.size.height);\r\n          cameraRef.current = state.camera;\r\n        }}\r\n        frameloop='demand'\r\n      >\r\n        <Scene\r\n          onClick={onClick}\r\n          onPointerDown={onPointerDown}\r\n          onPointerMove={onPointerMove}\r\n          ref={groupRef}\r\n        />\r\n        <Lights />\r\n        {isEditing && <MouseHelper ref={mouseHelperRef} />}\r\n        <OrbitControls\r\n          enableZoom={true}\r\n          maxDistance={50}\r\n          minDistance={5}\r\n          minPolarAngle={Math.PI / 3}\r\n          maxPolarAngle={Math.PI / 1.9}\r\n          enableDamping={false}\r\n        />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomiserCanvas;\r\n","import { SpotLight, useHelper } from '@react-three/drei';\r\nimport { useRef } from 'react';\r\nimport { SpotLightHelper, Vector3, SpotLight as SpotLightRef } from 'three';\r\nconst config = {\r\n  ambientLight: {\r\n    // color: 16777215,\r\n    // groundColor: 4473924,\r\n    intensity: 0.1,\r\n  },\r\n  directionalLights: [\r\n    {\r\n      color: 16777215,\r\n      intensity: 0.3,\r\n      position: new Vector3(0, 6, -200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 16759931,\r\n      intensity: 0.2,\r\n      position: new Vector3(-150, 0, 200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 10213119,\r\n      intensity: 0.2,\r\n      position: new Vector3(100, 0, 200),\r\n    },\r\n  ],\r\n};\r\n\r\nconst Lights = () => {\r\n  const light = useRef<SpotLightRef>(null);\r\n  // useHelper(light.current, SpotLightHelper, 'cyan');\r\n  return (\r\n    <group>\r\n      <hemisphereLight {...config.ambientLight}></hemisphereLight>\r\n      <pointLight position={[-800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[-800, 0, 1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[800, 0, 1000]} intensity={0.5} decay={120} power={7} castShadow />\r\n      <pointLight position={[800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Lights;\r\n"],"names":["usePortalRef","id","loaded","setLoaded","useState","portalRef","useRef","useEffect","current","document","getElementById","_ref","children","notifName","setShowNotification","cb","isChecked","setIsChecked","handleDismiss","localStorage","setItem","_jsx","_Fragment","className","styles","_jsxs","type","onChange","e","target","checked","onClick","isClickable","classNames","buttonClassNames","concat","containedButton","clickable","confirmText","confirmStorage","rootClassName","cn","cancelPartChange","useCustomiserStore","state","resetNav","popupPortalRef","showPopup","setShowPopup","notifTitle","shouldShowNotification","getItem","ReactDOM","ContainedButton","DontShowAgain","isSelected","isFinished","capsuleNavButton","selected","finished","containedNavButton","FittingOption","_selectedModels$find","_option$models","option","focusCameraOnPart","selectedModels","setSelectedModel","getSelected","find","m","optionId","model","motion","div","fittingOption","initial","opacity","animate","exit","fittingButtons","models","map","_m$model","_m$model$data","_m$model3","_m$model3$data","_m$model3$data$attrib","ContainedNavButton","data","fittingButton","_m$model2","name","attributes","_ref2","_fittingOptions$navSt","fittingOptions","_state$customProduct","_state$customProduct$","customProduct","options","fittingOptionsTitles","o","navStep","setNavStep","root","navButtonContainer","title","i","CapsuleButton","NavButtons","getSrcSets","formats","fff","Object","entries","f","width","url","filter","format","length","sort","a","b","reduce","acc","index","array","getSrcSet","_image$attributes4","image","sizes","relativeHeight","useMemo","_image$attributes","_image$attributes2","height","style","srcSet","_image$attributes3","src","NavFlagsSelect","editFlag","flags","addFlag","updateFlag","_f$attributes","flag","flagSelected","key","edit","Image","_prices$length","scale","rotation","prices","onScale","onRotate","scaleAdjust","rotateAdjust","currentScale","setCurrentScale","currentRotate","setCurrentRotate","rootRotateClassName","marks","range","start","stop","step","Array","from","value","p","markKey","Number","toFixed","createPortal","subtractScale","cur","FaCircleMinus","addScale","FaCirclePlus","rotateCounterClockwise","GiAnticlockwiseRotation","rotateClockwise","GiClockwiseRotation","disabled","onApply","Button","colour","onEdit","onDelete","isVisible","toggleVisibility","isVisibleEye","undefined","event","stopPropagation","FaEye","FaEyeSlash","xmlns","viewBox","d","NavFlagsFlag","_flag$flag","_flag$flag$attributes","setShowSelector","setSelectModel","deleteFlag","flagItem","flagItemImage","NavOptionEdit","editItem","deleteItem","NavFlags","g","showSelector","flagQuery","useGetFlagsQuery","graphQLClient","pagination","limit","select","_data$flags","_data$graphicPrices","graphicPrices","NavDecalAdjust","decalScale","decalRotation","setScale","price","_price$attributes","_price$attributes2","priceValues","size","basePrice","quantity","startTransition","NavEditButtons","applyFlag","decalFreeze","customiserFlags","toggle","isOpen","isMinimized","selectedNav","minimizeIconClassname","NavImagesImage","_graphic$graphic","_graphic$graphic$attr","_graphic$graphic$attr2","graphic","updateGraphic","deleteGraphic","graphicItem","graphicItemImage","NavImagesUpload","setGraphic","saving","setSaving","mutate","createGraphicMutation","useCreateGraphicMutation","onSuccess","_data$createGraphic","createGraphic","fileUploadMutate","useUploadMultipleFilesMutation","fileIDs","multipleUpload","_f$data","customer","onDrop","useCallback","acceptedFiles","files","getRootProps","getInputProps","isDragActive","useDropzone","accept","maxFiles","multiple","dropZone","NavImagesSelect","_currentGraphic$attri","_currentGraphic$attri2","editGraphic","currentGraphic","setCurrentGraphic","addGraphic","graphics","graphicSelected","NavImages","imageQuery","useGetImagesQuery","applyImage","addImage","uniqueMaterialTypes","uniqBy","initialState","colourGroups","materialTypes","materials","createMaterialGroup","set","get","filteredMaterials","colourGroup","selectedColourGroup","_m$attributes","_m$attributes$colourG","resetMaterialGroup","setMaterials","materialType","produce","flatMap","_d$attributes","_d$attributes$colourG","_m$attributes2","_m$attributes2$colour","_state$selectedColour","_m$attributes3","_m$attributes3$type","selectedMaterialType","uniqueMaterials","setColourGroup","_m$attributes4","_m$attributes4$colour","_state$selectedColour2","_m$attributes5","_m$attributes5$type","setMaterialType","Provider","useStore","useMaterialGroupStore","createContext","createStore","create","devtools","Material","_material$attributes","_material$attributes$","_material$attributes2","_mapImage$image","_mapImage$image$data","_mapImage$image$data$","material","onMaterialSelected","selectedMaterialId","mapImage","images","mapType","MaterialType","hideColorGroups","getFilteredMaterials","mt","_mt$attributes","materialType__title","_m$attributes$type","_m$attributes$type$da","SelectedMaterialInfo","_selectedMaterial$att","_selectedMaterial$att2","_selectedMaterial$att3","_selectedMaterial$att4","_selectedMaterial$att5","selectedPart","parts","selectedMaterial","_parts$find","part","MaterialGroupLoader","_materialGroup$attrib","materialGroup","typeIds","t","useGetMaterialsQuery","filters","in","pageSize","_data$materials","group","_group$attributes$col","_group$attributes","background","_group$attributes2","outline","fill","props","isOn","console","log","togglePillButton","on","_part$materialGroup","_currentPart$material","_currentPart$material2","_currentPart$material3","_currentPart$material4","setPart","removePart","currentPart","showOptional","setShowOptional","optional","buttonContainer","TogglePillButton","optionalOnClick","show","FaMinus","IoMdAdd","Suspense","fallback","MaterialGroup","placeholder","getSizeVariation","unit","weight","variations","v","_v$sku","sku","endsWith","setSizing","_state$sizing","sizing","_state$sizing2","variation","_state$sizing3","setHeightUnit","setWeightUnit","FormInput","required","unitToggle","toggleButton","toggleButtonSelected","UNIT","HEIGHT","CM","INCH","WEIGHT","KG","LB","FormSelect","selectedVariation","priceString","formattedPrice","_editText$crystalBack","_selectedName$attribu9","_selectedName$attribu10","_selectedName$attribu11","_selectedName$attribu12","_selectedName$attribu13","_selectedName$attribu14","_editText$material","_editText$material$at","_editText$material$at2","_editText$material2","_editText$material2$a","_editText$material2$a2","editText","setIsPickingCrystal","selectedName","crystalBackground","crystals","setCrystals","crystalPrice","puff","setPuff","puffPrice","hasPuffOption","NAME_TYPE_LUXURY_ID","updateText","addCrystals","add","_selectedName$attribu","_selectedName$attribu2","_selectedName$attribu3","_selectedName$attribu4","shopifyVariantId","addPuff","_selectedName$attribu5","_selectedName$attribu6","_selectedName$attribu7","_selectedName$attribu8","finishSelections","finishSelection","pricing","Price","_selectedName$attribu15","_editText$material3","_editText$material3$a","_editText$material3$a2","prevSelectedName","names","useGetNamesQuery","_data$names","letterPrice","nameType","outlinePrice","promptMessage","categoryDisplayName","n","_n$attributes","_n$attributes2","_n$attributes2$basePr","_n$attributes3","_n$attributes3$letter","setSelectedName","_editText$outline","_editText$outline2","_editText$outline2$at","_editText$outline2$at2","_editText$outline3","_editText$outline3$at","_editText$outline3$at2","setIsPickingOutline","showOutline","setShowOutline","updateOutline","outlineGroup","fonts","arial","oswald","college","ballantines","_fonts$find","text","setText","font","setFont","addText","fontSelection","_font","onFontChange","deleteText","textItem","textItemText","onAddTextClicked","onTextSelected","texts","navTextsSelection","titleText","NavTextText","getMaterialUrl","_material$attributes$2","_material$attributes$3","_material$attributes$4","imgMap","large","normalMapGenerator","NormalMapGenerator","instance","async","imgToNormalMap","img","hasPuff","blur","blurAmount","generateFromImage","strength","level","CanvasText","constructor","toNormalMap","patternType","canvas","ctx","outlineCanvas","outlineCtx","normalMapTextureCanvas","normalMapTextureCtx","normalMapCanvas","normalMapCtx","normalMapOutlineTextureCanvas","normalMapOutlineTextureCtx","normalMapOutlineCanvas","normalMapOutlineCtx2","crystalBgPatternCanvas","crystalBgPatternCtx","canvasHeight","canvasWidth","fontSize","outlineWidth","this","createElement","getContext","clear","_this$ctx","_this$outlineCtx","clearRect","drawImg","drawImage","showTestCanvas","innerHTML","maskImage","globalCompositeOperation","drawPreviewText","textAlign","fillText","drawPreviewOutlineText","lineWidth","strokeText","drawPreviewOutlineOnlyText","fillStyle","drawNormalMap","normalMapPatternImg","pattern","createPattern","rect","normalMap","drawOutlineNormalMap","drawCrystalBg","crystalBgImg","crystalBgPatternImg","globalAlpha","printTextMapToStrokeMap","previewText","_ref3","previewImg","toDataURL","mergeCanvas","getOutlineCanvas","getNormalMapTextureCanvas","getNormalMapOutlineCanvas","loadImage","Promise","resolve","reject","crossOrigin","onload","onerror","_text$selectedName","_text$selectedName2","_text$selectedName2$a","canvasRef","shouldShow","setShouldShow","zoom","setZoom","dataUrl","setDataUrl","scaleModifier","Vector3","isLuxury","hasCrystals","Texture","normalScale","Canvas","ref","el","gl","preserveDrawingBuffer","Lights","args","visible","Decal","position","preview","transparent","roughness","depthTest","depthWrite","Vector2","_canvasRef$current","alt","_editText$selectedNam","_previewImgRef$curren","mainTextInputRef","previewImgRef","fontFamily","setFontFamily","isVisiblePreview","setIsVisiblePreview","getPatternType","isMinimizedCustomiserNav","materialImgMemo","outlineImgMemo","fabricPatternImgMemo","crystalNormalMapImgMemo","crystalBgImgMemo","crystalBgPatternImgMemo","previewImgDom","canvasText","CanvasTexture","fontUrl","FontFace","load","loadFonts","outlineImg","embroideryPattern","crystalNormalMap","patternImg","zIndex","textPreview","textPreview__imgContainer","display","NavTextPreviewScene","stepsNavButtons","stepsNavButtons__next","FaArrowRightLong","stepsNavButtons__prev","FaArrowLeftLong","stepsNavButtons__cancel","isClickableNext","isClickablePrev","isVisibleNext","isVisiblePrev","onClickNext","onClickPrev","onClickCancel","onClickSave","popupContainerRef","CancelStepButton","PrevStepButton","NextStepButton","ApplyButton","NavTextInput","forwardRef","inputStyles","textInput","textInputContainer","displayName","showEditText","setShowEditText","setStep","updateIsMinimizedCustomiserNav","isPickingOutline","isPickingCrystal","navHeaderRef","noOutlineSelected","noCrystalSelected","hasFinishedAllSteps","hasFinishedStep1","hasFinishedStep2","hasFinishedStep3","hasFinishedStep4","saveAndApplyChecker","alert","applyText","hasApplied","shouldShowConfirmCancelText","showConfirmCancelPopup","setShowConfirmCancelPopup","cancelText","navCategoryNames","navTextEdit","NavTextPreview","NavTextCategories","NavTextCategoriesItems","handleOnClick","_step","finishedCategories","categoryClassNames","selectedCategoryItem","finishedCategoryItem","CategoryDisplay","NavTextSelect","NavTextNameTypes","NavTextOutline","NavTextFinish","NavTextNavSteps","handleNext","maxStep","handlePrevious","cancelTextHandler","placeText","decalPosition","decalOrientation","navHeaderSaveText","NavTextsSelection","navItems","setSelectedNav","navIndex","setNavIndex","navHeaderScroll","item","classes","navClickHandler","toLowerCase","cancelTextEdit","setIsOpen","scrollCoordinates","setScrollCoordinates","left","top","scrollableRef","minimized","hasActions","isEdittingText","isFullscreen","scrollTo","behavior","toggleOpen","scrollLeft","scrollTop","nav","layout","transition","stiffness","damping","NavHeader","header","NavHeaderScroll","headerAfter","AnimatePresence","content","closed","variants","open","collapsed","NavFitting","NavText","NavSize","NavPart","actions","total","designComplete","setResetCamera","useDesignStore","addingToCart","resetCustomerSelections","resetPopup","confirm","saveDesign","CustomiserCanvas","lazy","cameraLegCutPosition","setShow","remountTrigger","cameraRef","CustomiserNav","focusCamera","coordinates","camera","cameraDefault","Header","clipPath","fillRule","onCameraRef","addToCart","fetch","window","Shopify","routes","method","headers","body","JSON","stringify","Component","MouseHelper","Scene","Loadable","getCustomDesignData","_state$sizing$variati","_state$sizing3$height","_state$sizing3$height2","_state$sizing4","_state$sizing4$height","_state$sizing5","_state$sizing5$weight","_state$sizing6","_state$sizing6$weight","savedParts","_p$part$areaSize","_p$part$areaSize$data","areaSize","_t$basePrice","_t$letterPrice","_t$outlinePrice","_t$puffPrice","_t$crystalPrice","basePriceVariantId","letterPriceVariantId","outlinePriceVariantId","puffPriceVariantId","crystalPriceVariantId","_f$flag","_f$basePrice","_g$graphic","_g$basePrice","toString","heightUnit","weightUnit","getCartVariations","customDesignEntity","_customDesign$parts","_customDesign$flags","_customDesign$graphic","_customDesign$texts","_customDesign$sizing","customDesignId","customDesign","items","replace","addOrUpdate","variantId","addQty","arguments","checkItem","newQuantity","properties","_customDesignQuantity","push","_customDesignAddon","forEach","_t$text","_customDesign","positionRef","orientationRef","Euler","groupRef","setCanvasSize","resetCamera","modelRotation","setAddingToCart","setModelRotation","reset","mouseHelperRef","isPointerDown","setIsPointerDown","isPointerMoved","setIsPointerMoved","setPosition","_event$face","point","face","normal","clone","transformDirection","matrixWorld","multiplyScalar","copy","lookAt","toArray","onPointerDown","onPointerMove","shopifyAddToCart","useMutation","mutationFn","location","href","useCreateCustomDesignMutation","_data$createCustomDes","createCustomDesign","mutateAsync","setTimeout","toBlob","blob","file","File","upload","isEditing","linear","flat","fov","dpr","devicePixelRatio","onCreated","frameloop","OrbitControls","enableZoom","maxDistance","minDistance","minPolarAngle","Math","PI","maxPolarAngle","enableDamping","config","intensity","decay","power","castShadow"],"sourceRoot":""}