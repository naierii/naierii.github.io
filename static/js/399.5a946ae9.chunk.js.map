{"version":3,"file":"static/js/399.5a946ae9.chunk.js","mappings":"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","sources":["../node_modules/src/controls/OrbitControls.ts","../node_modules/@react-three/drei/core/OrbitControls.js","lib/shopify.ts","components/three/Loadable/Loadable.tsx","components/three/MouseHelper/MouseHelper.tsx","webpack://boxxerworld-customiser/./src/components/three/CustomiserCanvas/CustomiserCanvas.module.scss?7972","components/three/CustomiserCanvas/CustomiserCanvas.tsx"],"sourcesContent":["import {\n  EventDispatcher,\n  Matrix4,\n  MOUSE,\n  OrthographicCamera,\n  PerspectiveCamera,\n  Quaternion,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3,\n  Ray,\n  Plane,\n} from 'three'\n\nconst _ray = new Ray()\nconst _plane = new Plane()\nconst TILT_LIMIT = Math.cos(70 * (Math.PI / 180))\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst moduloWrapAround = (offset: number, capacity: number) => ((offset % capacity) + capacity) % capacity\n\nclass OrbitControls extends EventDispatcher {\n  object: PerspectiveCamera | OrthographicCamera\n  domElement: HTMLElement | undefined\n  // Set to false to disable this control\n  enabled = true\n  // \"target\" sets the location of focus, where the object orbits around\n  target = new Vector3()\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  minDistance = 0\n  maxDistance = Infinity\n  // How far you can zoom in and out ( OrthographicCamera only )\n  minZoom = 0\n  maxZoom = Infinity\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  minPolarAngle = 0 // radians\n  maxPolarAngle = Math.PI // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  minAzimuthAngle = -Infinity // radians\n  maxAzimuthAngle = Infinity // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  enableDamping = false\n  dampingFactor = 0.05\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  enableZoom = true\n  zoomSpeed = 1.0\n  // Set to false to disable rotating\n  enableRotate = true\n  rotateSpeed = 1.0\n  // Set to false to disable panning\n  enablePan = true\n  panSpeed = 1.0\n  screenSpacePanning = true // if false, pan orthogonal to world-space direction camera.up\n  keyPanSpeed = 7.0 // pixels moved per arrow key push\n  zoomToCursor = false\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  autoRotate = false\n  autoRotateSpeed = 2.0 // 30 seconds per orbit when fps is 60\n  reverseOrbit = false // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n  reverseHorizontalOrbit = false // true if you want to reverse the horizontal orbit direction\n  reverseVerticalOrbit = false // true if you want to reverse the vertical orbit direction\n  // The four arrow keys\n  keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' }\n  // Mouse buttons\n  mouseButtons: Partial<{\n    LEFT: MOUSE\n    MIDDLE: MOUSE\n    RIGHT: MOUSE\n  }> = {\n    LEFT: MOUSE.ROTATE,\n    MIDDLE: MOUSE.DOLLY,\n    RIGHT: MOUSE.PAN,\n  }\n  // Touch fingers\n  touches: Partial<{\n    ONE: TOUCH\n    TWO: TOUCH\n  }> = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN }\n  target0: Vector3\n  position0: Vector3\n  zoom0: number\n  // the target DOM element for key events\n  _domElementKeyEvents: any = null\n\n  getPolarAngle: () => number\n  getAzimuthalAngle: () => number\n  setPolarAngle: (x: number) => void\n  setAzimuthalAngle: (x: number) => void\n  getDistance: () => number\n\n  listenToKeyEvents: (domElement: HTMLElement) => void\n  stopListenToKeyEvents: () => void\n  saveState: () => void\n  reset: () => void\n  update: () => void\n  connect: (domElement: HTMLElement) => void\n  dispose: () => void\n\n  constructor(object: PerspectiveCamera | OrthographicCamera, domElement?: HTMLElement) {\n    super()\n\n    this.object = object\n    this.domElement = domElement\n\n    // for reset\n    this.target0 = this.target.clone()\n    this.position0 = this.object.position.clone()\n    this.zoom0 = this.object.zoom\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = (): number => spherical.phi\n\n    this.getAzimuthalAngle = (): number => spherical.theta\n\n    this.setPolarAngle = (value: number): void => {\n      // use modulo wrapping to safeguard value\n      let phi = moduloWrapAround(value, 2 * Math.PI)\n      let currentPhi = spherical.phi\n\n      // convert to the equivalent shortest angle\n      if (currentPhi < 0) currentPhi += 2 * Math.PI\n      if (phi < 0) phi += 2 * Math.PI\n      let phiDist = Math.abs(phi - currentPhi)\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI\n        } else {\n          currentPhi += 2 * Math.PI\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi\n      scope.update()\n    }\n\n    this.setAzimuthalAngle = (value: number): void => {\n      // use modulo wrapping to safeguard value\n      let theta = moduloWrapAround(value, 2 * Math.PI)\n      let currentTheta = spherical.theta\n\n      // convert to the equivalent shortest angle\n      if (currentTheta < 0) currentTheta += 2 * Math.PI\n      if (theta < 0) theta += 2 * Math.PI\n      let thetaDist = Math.abs(theta - currentTheta)\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI\n        } else {\n          currentTheta += 2 * Math.PI\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta\n      scope.update()\n    }\n\n    this.getDistance = (): number => scope.object.position.distanceTo(scope.target)\n\n    this.listenToKeyEvents = (domElement: HTMLElement): void => {\n      domElement.addEventListener('keydown', onKeyDown)\n      this._domElementKeyEvents = domElement\n    }\n\n    this.stopListenToKeyEvents = (): void => {\n      this._domElementKeyEvents.removeEventListener('keydown', onKeyDown)\n      this._domElementKeyEvents = null\n    }\n\n    this.saveState = (): void => {\n      scope.target0.copy(scope.target)\n      scope.position0.copy(scope.object.position)\n      scope.zoom0 = scope.object.zoom\n    }\n\n    this.reset = (): void => {\n      scope.target.copy(scope.target0)\n      scope.object.position.copy(scope.position0)\n      scope.object.zoom = scope.zoom0\n      scope.object.updateProjectionMatrix()\n\n      scope.dispatchEvent(changeEvent)\n\n      scope.update()\n\n      state = STATE.NONE\n    }\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = ((): (() => void) => {\n      const offset = new Vector3()\n      const up = new Vector3(0, 1, 0)\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(object.up, up)\n      const quatInverse = quat.clone().invert()\n\n      const lastPosition = new Vector3()\n      const lastQuaternion = new Quaternion()\n\n      const twoPI = 2 * Math.PI\n\n      return function update(): boolean {\n        const position = scope.object.position\n\n        // update new up direction\n        quat.setFromUnitVectors(object.up, up)\n        quatInverse.copy(quat).invert()\n\n        offset.copy(position).sub(scope.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat)\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset)\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle())\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor\n        } else {\n          spherical.theta += sphericalDelta.theta\n          spherical.phi += sphericalDelta.phi\n        }\n\n        // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle\n        let max = scope.maxAzimuthAngle\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI\n          else if (min > Math.PI) min -= twoPI\n\n          if (max < -Math.PI) max += twoPI\n          else if (max > Math.PI) max -= twoPI\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta))\n          } else {\n            spherical.theta =\n              spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta)\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi))\n        spherical.makeSafe()\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor)\n        } else {\n          scope.target.add(panOffset)\n        }\n\n        // adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n        // we adjust zoom later in these cases\n        if (\n          (scope.zoomToCursor && performCursorZoom) ||\n          (scope.object as THREE.OrthographicCamera).isOrthographicCamera\n        ) {\n          spherical.radius = clampDistance(spherical.radius)\n        } else {\n          spherical.radius = clampDistance(spherical.radius * scale)\n        }\n\n        offset.setFromSpherical(spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse)\n\n        position.copy(scope.target).add(offset)\n\n        if (!scope.object.matrixAutoUpdate) scope.object.updateMatrix()\n        scope.object.lookAt(scope.target)\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor\n          sphericalDelta.phi *= 1 - scope.dampingFactor\n\n          panOffset.multiplyScalar(1 - scope.dampingFactor)\n        } else {\n          sphericalDelta.set(0, 0, 0)\n\n          panOffset.set(0, 0, 0)\n        }\n\n        // adjust camera position\n        let zoomChanged = false\n        if (scope.zoomToCursor && performCursorZoom) {\n          let newRadius = null\n          if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n            // move the camera down the pointer ray\n            // this method avoids floating point error\n            const prevRadius = offset.length()\n            newRadius = clampDistance(prevRadius * scale)\n\n            const radiusDelta = prevRadius - newRadius\n            scope.object.position.addScaledVector(dollyDirection, radiusDelta)\n            scope.object.updateMatrixWorld()\n          } else if ((scope.object as THREE.OrthographicCamera).isOrthographicCamera) {\n            // adjust the ortho camera position based on zoom changes\n            const mouseBefore = new Vector3(mouse.x, mouse.y, 0)\n            mouseBefore.unproject(scope.object)\n\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale))\n            scope.object.updateProjectionMatrix()\n            zoomChanged = true\n\n            const mouseAfter = new Vector3(mouse.x, mouse.y, 0)\n            mouseAfter.unproject(scope.object)\n\n            scope.object.position.sub(mouseAfter).add(mouseBefore)\n            scope.object.updateMatrixWorld()\n\n            newRadius = offset.length()\n          } else {\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.')\n            scope.zoomToCursor = false\n          }\n\n          // handle the placement of the target\n          if (newRadius !== null) {\n            if (scope.screenSpacePanning) {\n              // position the orbit target in front of the new camera position\n              scope.target\n                .set(0, 0, -1)\n                .transformDirection(scope.object.matrix)\n                .multiplyScalar(newRadius)\n                .add(scope.object.position)\n            } else {\n              // get the ray and translation plane to compute target\n              _ray.origin.copy(scope.object.position)\n              _ray.direction.set(0, 0, -1).transformDirection(scope.object.matrix)\n\n              // if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n              // extremely large values\n              if (Math.abs(scope.object.up.dot(_ray.direction)) < TILT_LIMIT) {\n                object.lookAt(scope.target)\n              } else {\n                _plane.setFromNormalAndCoplanarPoint(scope.object.up, scope.target)\n                _ray.intersectPlane(_plane, scope.target)\n              }\n            }\n          }\n        } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          zoomChanged = scale !== 1\n\n          if (zoomChanged) {\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale))\n            scope.object.updateProjectionMatrix()\n          }\n        }\n\n        scale = 1\n        performCursorZoom = false\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          scope.dispatchEvent(changeEvent)\n\n          lastPosition.copy(scope.object.position)\n          lastQuaternion.copy(scope.object.quaternion)\n          zoomChanged = false\n\n          return true\n        }\n\n        return false\n      }\n    })()\n\n    // https://github.com/mrdoob/three.js/issues/20575\n    this.connect = (domElement: HTMLElement): void => {\n      if ((domElement as any) === document) {\n        console.error(\n          'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.',\n        )\n      }\n      scope.domElement = domElement\n      // disables touch scroll\n      // touch-action needs to be defined for pointer events to work on mobile\n      // https://stackoverflow.com/a/48254578\n      scope.domElement.style.touchAction = 'none'\n      scope.domElement.addEventListener('contextmenu', onContextMenu)\n      scope.domElement.addEventListener('pointerdown', onPointerDown)\n      scope.domElement.addEventListener('pointercancel', onPointerCancel)\n      scope.domElement.addEventListener('wheel', onMouseWheel)\n    }\n\n    this.dispose = (): void => {\n      scope.domElement?.removeEventListener('contextmenu', onContextMenu)\n      scope.domElement?.removeEventListener('pointerdown', onPointerDown)\n      scope.domElement?.removeEventListener('pointercancel', onPointerCancel)\n      scope.domElement?.removeEventListener('wheel', onMouseWheel)\n      scope.domElement?.ownerDocument.removeEventListener('pointermove', onPointerMove)\n      scope.domElement?.ownerDocument.removeEventListener('pointerup', onPointerUp)\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown)\n      }\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    }\n\n    //\n    // internals\n    //\n\n    const scope = this\n\n    const changeEvent = { type: 'change' }\n    const startEvent = { type: 'start' }\n    const endEvent = { type: 'end' }\n\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6,\n    }\n\n    let state = STATE.NONE\n\n    const EPS = 0.000001\n\n    // current position in spherical coordinates\n    const spherical = new Spherical()\n    const sphericalDelta = new Spherical()\n\n    let scale = 1\n    const panOffset = new Vector3()\n\n    const rotateStart = new Vector2()\n    const rotateEnd = new Vector2()\n    const rotateDelta = new Vector2()\n\n    const panStart = new Vector2()\n    const panEnd = new Vector2()\n    const panDelta = new Vector2()\n\n    const dollyStart = new Vector2()\n    const dollyEnd = new Vector2()\n    const dollyDelta = new Vector2()\n\n    const dollyDirection = new Vector3()\n    const mouse = new Vector2()\n    let performCursorZoom = false\n\n    const pointers: PointerEvent[] = []\n    const pointerPositions: { [key: string]: Vector2 } = {}\n\n    function getAutoRotationAngle(): number {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed\n    }\n\n    function getZoomScale(): number {\n      return Math.pow(0.95, scope.zoomSpeed)\n    }\n\n    function rotateLeft(angle: number): void {\n      if (scope.reverseOrbit || scope.reverseHorizontalOrbit) {\n        sphericalDelta.theta += angle\n      } else {\n        sphericalDelta.theta -= angle\n      }\n    }\n\n    function rotateUp(angle: number): void {\n      if (scope.reverseOrbit || scope.reverseVerticalOrbit) {\n        sphericalDelta.phi += angle\n      } else {\n        sphericalDelta.phi -= angle\n      }\n    }\n\n    const panLeft = (() => {\n      const v = new Vector3()\n\n      return function panLeft(distance: number, objectMatrix: Matrix4) {\n        v.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        v.multiplyScalar(-distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    const panUp = (() => {\n      const v = new Vector3()\n\n      return function panUp(distance: number, objectMatrix: Matrix4) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1)\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0)\n          v.crossVectors(scope.object.up, v)\n        }\n\n        v.multiplyScalar(distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    const pan = (() => {\n      const offset = new Vector3()\n\n      return function pan(deltaX: number, deltaY: number) {\n        const element = scope.domElement\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position\n          offset.copy(position).sub(scope.target)\n          let targetDistance = offset.length()\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0)\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft((2 * deltaX * targetDistance) / element.clientHeight, scope.object.matrix)\n          panUp((2 * deltaY * targetDistance) / element.clientHeight, scope.object.matrix)\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) / scope.object.zoom / element.clientWidth,\n            scope.object.matrix,\n          )\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) / scope.object.zoom / element.clientHeight,\n            scope.object.matrix,\n          )\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.')\n          scope.enablePan = false\n        }\n      }\n    })()\n\n    function dollyOut(dollyScale: number) {\n      if (\n        (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) ||\n        (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera)\n      ) {\n        scale /= dollyScale\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.')\n        scope.enableZoom = false\n      }\n    }\n\n    function dollyIn(dollyScale: number) {\n      if (\n        (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) ||\n        (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera)\n      ) {\n        scale *= dollyScale\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.')\n        scope.enableZoom = false\n      }\n    }\n\n    function updateMouseParameters(event: MouseEvent): void {\n      if (!scope.zoomToCursor || !scope.domElement) {\n        return\n      }\n\n      performCursorZoom = true\n\n      const rect = scope.domElement.getBoundingClientRect()\n      const x = event.clientX - rect.left\n      const y = event.clientY - rect.top\n      const w = rect.width\n      const h = rect.height\n\n      mouse.x = (x / w) * 2 - 1\n      mouse.y = -(y / h) * 2 + 1\n\n      dollyDirection.set(mouse.x, mouse.y, 1).unproject(scope.object).sub(scope.object.position).normalize()\n    }\n\n    function clampDistance(dist: number): number {\n      return Math.max(scope.minDistance, Math.min(scope.maxDistance, dist))\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event: MouseEvent) {\n      rotateStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownDolly(event: MouseEvent) {\n      updateMouseParameters(event)\n      dollyStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownPan(event: MouseEvent) {\n      panStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseMoveRotate(event: MouseEvent) {\n      rotateEnd.set(event.clientX, event.clientY)\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      if (element) {\n        rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n        rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n      }\n      rotateStart.copy(rotateEnd)\n      scope.update()\n    }\n\n    function handleMouseMoveDolly(event: MouseEvent) {\n      dollyEnd.set(event.clientX, event.clientY)\n      dollyDelta.subVectors(dollyEnd, dollyStart)\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale())\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale())\n      }\n\n      dollyStart.copy(dollyEnd)\n      scope.update()\n    }\n\n    function handleMouseMovePan(event: MouseEvent) {\n      panEnd.set(event.clientX, event.clientY)\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n      pan(panDelta.x, panDelta.y)\n      panStart.copy(panEnd)\n      scope.update()\n    }\n\n    function handleMouseWheel(event: WheelEvent) {\n      updateMouseParameters(event)\n\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale())\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale())\n      }\n\n      scope.update()\n    }\n\n    function handleKeyDown(event: KeyboardEvent) {\n      let needsUpdate = false\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed)\n          needsUpdate = true\n          break\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed)\n          needsUpdate = true\n          break\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0)\n          needsUpdate = true\n          break\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0)\n          needsUpdate = true\n          break\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault()\n        scope.update()\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        rotateStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        panStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX\n      const dy = pointers[0].pageY - pointers[1].pageY\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyStart.set(0, distance)\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly()\n      if (scope.enablePan) handleTouchStartPan()\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly()\n      if (scope.enableRotate) handleTouchStartRotate()\n    }\n\n    function handleTouchMoveRotate(event: PointerEvent) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n        rotateEnd.set(x, y)\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      if (element) {\n        rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n        rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n      }\n      rotateStart.copy(rotateEnd)\n    }\n\n    function handleTouchMovePan(event: PointerEvent) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n        panEnd.set(x, y)\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n      pan(panDelta.x, panDelta.y)\n      panStart.copy(panEnd)\n    }\n\n    function handleTouchMoveDolly(event: PointerEvent) {\n      const position = getSecondPointerPosition(event)\n      const dx = event.pageX - position.x\n      const dy = event.pageY - position.y\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyEnd.set(0, distance)\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed))\n      dollyOut(dollyDelta.y)\n      dollyStart.copy(dollyEnd)\n    }\n\n    function handleTouchMoveDollyPan(event: PointerEvent) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n      if (scope.enablePan) handleTouchMovePan(event)\n    }\n\n    function handleTouchMoveDollyRotate(event: PointerEvent) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n      if (scope.enableRotate) handleTouchMoveRotate(event)\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event: PointerEvent) {\n      if (scope.enabled === false) return\n\n      if (pointers.length === 0) {\n        scope.domElement?.ownerDocument.addEventListener('pointermove', onPointerMove)\n        scope.domElement?.ownerDocument.addEventListener('pointerup', onPointerUp)\n      }\n\n      addPointer(event)\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event)\n      } else {\n        onMouseDown(event)\n      }\n    }\n\n    function onPointerMove(event: PointerEvent) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event)\n      } else {\n        onMouseMove(event)\n      }\n    }\n\n    function onPointerUp(event: PointerEvent) {\n      removePointer(event)\n\n      if (pointers.length === 0) {\n        scope.domElement?.releasePointerCapture(event.pointerId)\n\n        scope.domElement?.ownerDocument.removeEventListener('pointermove', onPointerMove)\n        scope.domElement?.ownerDocument.removeEventListener('pointerup', onPointerUp)\n      }\n\n      scope.dispatchEvent(endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onPointerCancel(event: PointerEvent) {\n      removePointer(event)\n    }\n\n    function onMouseDown(event: MouseEvent) {\n      let mouseAction\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT\n          break\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE\n          break\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT\n          break\n\n        default:\n          mouseAction = -1\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return\n          handleMouseDownDolly(event)\n          state = STATE.DOLLY\n          break\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return\n            handleMouseDownPan(event)\n            state = STATE.PAN\n          } else {\n            if (scope.enableRotate === false) return\n            handleMouseDownRotate(event)\n            state = STATE.ROTATE\n          }\n          break\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return\n            handleMouseDownRotate(event)\n            state = STATE.ROTATE\n          } else {\n            if (scope.enablePan === false) return\n            handleMouseDownPan(event)\n            state = STATE.PAN\n          }\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent)\n      }\n    }\n\n    function onMouseMove(event: MouseEvent) {\n      if (scope.enabled === false) return\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return\n          handleMouseMoveRotate(event)\n          break\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return\n          handleMouseMoveDolly(event)\n          break\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return\n          handleMouseMovePan(event)\n          break\n      }\n    }\n\n    function onMouseWheel(event: WheelEvent) {\n      if (scope.enabled === false || scope.enableZoom === false || (state !== STATE.NONE && state !== STATE.ROTATE)) {\n        return\n      }\n\n      event.preventDefault()\n\n      scope.dispatchEvent(startEvent)\n\n      handleMouseWheel(event)\n\n      scope.dispatchEvent(endEvent)\n    }\n\n    function onKeyDown(event: KeyboardEvent) {\n      if (scope.enabled === false || scope.enablePan === false) return\n      handleKeyDown(event)\n    }\n\n    function onTouchStart(event: PointerEvent) {\n      trackPointer(event)\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return\n              handleTouchStartRotate()\n              state = STATE.TOUCH_ROTATE\n              break\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return\n              handleTouchStartPan()\n              state = STATE.TOUCH_PAN\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return\n              handleTouchStartDollyPan()\n              state = STATE.TOUCH_DOLLY_PAN\n              break\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return\n              handleTouchStartDollyRotate()\n              state = STATE.TOUCH_DOLLY_ROTATE\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent)\n      }\n    }\n\n    function onTouchMove(event: PointerEvent) {\n      trackPointer(event)\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return\n          handleTouchMoveRotate(event)\n          scope.update()\n          break\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return\n          handleTouchMovePan(event)\n          scope.update()\n          break\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return\n          handleTouchMoveDollyPan(event)\n          scope.update()\n          break\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return\n          handleTouchMoveDollyRotate(event)\n          scope.update()\n          break\n\n        default:\n          state = STATE.NONE\n      }\n    }\n\n    function onContextMenu(event: Event) {\n      if (scope.enabled === false) return\n      event.preventDefault()\n    }\n\n    function addPointer(event: PointerEvent) {\n      pointers.push(event)\n    }\n\n    function removePointer(event: PointerEvent) {\n      delete pointerPositions[event.pointerId]\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1)\n          return\n        }\n      }\n    }\n\n    function trackPointer(event: PointerEvent) {\n      let position = pointerPositions[event.pointerId]\n\n      if (position === undefined) {\n        position = new Vector2()\n        pointerPositions[event.pointerId] = position\n      }\n\n      position.set(event.pageX, event.pageY)\n    }\n\n    function getSecondPointerPosition(event: PointerEvent) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0]\n      return pointerPositions[pointer.pointerId]\n    }\n\n    // connect events\n    if (domElement !== undefined) this.connect(domElement)\n    // force an update at start\n    this.update()\n  }\n}\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n  constructor(object: PerspectiveCamera | OrthographicCamera, domElement?: HTMLElement) {\n    super(object, domElement)\n\n    this.screenSpacePanning = false // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN\n    this.mouseButtons.RIGHT = MOUSE.ROTATE\n\n    this.touches.ONE = TOUCH.PAN\n    this.touches.TWO = TOUCH.DOLLY_ROTATE\n  }\n}\n\nexport { OrbitControls, MapControls }\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const addToCart = async (data: any) => {\r\n  return fetch(window.Shopify.routes.root + 'cart/add.js', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n};\r\n","/* eslint-disable react/display-name */\r\nimport { FC, Suspense, forwardRef } from 'react';\r\n\r\nexport interface LoadableProps {\r\n  className?: string;\r\n}\r\n\r\n// eslint-disable-next-line react/display-name, @typescript-eslint/no-explicit-any\r\nconst Loadable = (Component: FC<any>) =>\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  forwardRef((props: any, ref) => (\r\n    <Suspense fallback={<></>}>\r\n      <Component {...props} ref={ref} />\r\n    </Suspense>\r\n  ));\r\n\r\nexport default Loadable;\r\n","import { ThreeElements, Vector3 } from '@react-three/fiber';\r\nimport { forwardRef } from 'react';\r\nimport { Mesh } from 'three';\r\n\r\nexport interface MouseHelperProps {\r\n  position?: Vector3;\r\n}\r\n\r\nconst MouseHelper = forwardRef<Mesh, MouseHelperProps>((props, ref) => {\r\n  const BoxProps: ThreeElements['boxGeometry'] = {\r\n    args: [1, 1, 200],\r\n  };\r\n\r\n  return (\r\n    <mesh ref={ref} visible={false} scale={0.1}>\r\n      <boxGeometry {...BoxProps} />\r\n      <meshNormalMaterial />\r\n    </mesh>\r\n  );\r\n});\r\n\r\nMouseHelper.displayName = 'MouseHelper';\r\n\r\nexport default MouseHelper;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CustomiserCanvas_root__1vMOn\",\"save\":\"CustomiserCanvas_save__V9j3S\"};","import { OrbitControls } from '@react-three/drei';\r\nimport { Canvas, ThreeEvent } from '@react-three/fiber';\r\nimport cn from 'classnames';\r\nimport { CSSProperties, lazy, useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nimport {\r\n  CustomDesignEntity,\r\n  CustomDesignInput,\r\n  Maybe,\r\n  useCreateCustomDesignMutation,\r\n  useUploadMultipleFilesMutation,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { addToCart } from '@lib/shopify';\r\nimport { CustomiserState, useCustomiserStore } from '@store/customiser';\r\nimport { useDesignStore } from '@store/design';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { Camera, Euler, Group, Mesh, Vector3 } from 'three';\r\n\r\nimport Lights from '../Lights';\r\nimport Loadable from '../Loadable';\r\nimport MouseHelper from '../MouseHelper';\r\nimport { SceneProps } from '../Scene/Scene';\r\nimport styles from './CustomiserCanvas.module.scss';\r\n\r\nimport ThreeScene from '@components/three/Scene';\r\n\r\nconst Scene = Loadable(lazy(() => import('@components/three/Scene'))) as typeof ThreeScene;\r\n\r\nexport interface CustomiserCanvasProps {\r\n  className?: string;\r\n  style?: CSSProperties;\r\n}\r\n\r\nconst getCustomDesignData = (state: CustomiserState, files: string[]): CustomDesignInput => ({\r\n  customProduct: state.customProduct?.id,\r\n  parts: state.savedParts.map((p) => ({\r\n    name: p.part.name,\r\n    areaSize: p.part.areaSize?.data?.id,\r\n    material: p.material.id,\r\n  })),\r\n  texts: state.texts.map((t) => ({\r\n    text: t.text,\r\n    decalPosition: t.decalPosition,\r\n    decalOrientation: t.decalOrientation,\r\n    decalRotation: t.decalRotation,\r\n    decalScale: t.decalScale,\r\n    basePriceVariantId: t.basePrice?.shopifyVariantId,\r\n    letterPriceVariantId: t.letterPrice?.shopifyVariantId,\r\n    outlinePriceVariantId: t.outlinePrice?.shopifyVariantId,\r\n    puffPriceVariantId: t.puffPrice?.shopifyVariantId,\r\n    crystalPriceVariantId: t.crystalPrice?.shopifyVariantId,\r\n  })),\r\n  flags: state.flags.map((f) => ({\r\n    flag: f.flag?.id,\r\n    decalPosition: f.decalPosition,\r\n    decalOrientation: f.decalOrientation,\r\n    decalRotation: f.decalRotation,\r\n    decalScale: f.decalScale,\r\n    size: f.size,\r\n    shopifyVariantId: f.basePrice?.shopifyVariantId,\r\n  })),\r\n  graphics: state.graphics.map((g) => ({\r\n    graphic: g.graphic?.id,\r\n    decalPosition: g.decalPosition,\r\n    decalOrientation: g.decalOrientation,\r\n    decalRotation: g.decalRotation,\r\n    decalScale: g.decalScale,\r\n    size: g.size,\r\n    shopifyVariantId: g.basePrice?.shopifyVariantId,\r\n  })),\r\n  images: files,\r\n  sizing: {\r\n    shopifyVariantId: state.sizing?.variation?.id,\r\n    size: state.sizing?.size,\r\n    height: state.sizing?.height?.value?.toString(),\r\n    heightUnit: state.sizing?.height?.unit,\r\n    weight: state.sizing?.weight?.value,\r\n    weightUnit: state.sizing?.weight?.unit,\r\n  },\r\n});\r\n\r\nconst getCartVariations = (customDesignEntity?: CustomDesignEntity) => {\r\n  const customDesignId = customDesignEntity?.id;\r\n  const customDesign = customDesignEntity?.attributes;\r\n\r\n  if (!customDesign || !customDesignId) {\r\n    return [];\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const items: Array<{ id?: string; quantity: number; properties: any }> = [];\r\n  const id = (id?: Maybe<string>) => id?.replace('gid://shopify/ProductVariant/', '');\r\n  const getItem = (id?: string) => items.find((i) => i.id === id);\r\n  const addOrUpdate = (variantId: string, addQty = 1) => {\r\n    const checkItem = getItem(variantId);\r\n    if (checkItem) {\r\n      const newQuantity = checkItem.quantity + addQty;\r\n      checkItem.quantity = newQuantity;\r\n      checkItem.properties._customDesignQuantity = newQuantity;\r\n    } else {\r\n      items.push({\r\n        id: variantId,\r\n        quantity: addQty,\r\n        properties: {\r\n          _customDesignAddon: customDesignId,\r\n          _customDesignQuantity: addQty,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (customDesign.parts?.length) {\r\n    customDesign.parts.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.flags?.length) {\r\n    customDesign.flags.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.graphics?.length) {\r\n    customDesign.graphics.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.texts?.length) {\r\n    customDesign.texts.forEach((t) => {\r\n      const basePrice = id(t?.basePriceVariantId);\r\n      if (basePrice) addOrUpdate(basePrice);\r\n      const letterPrice = id(t?.letterPriceVariantId);\r\n      if (letterPrice) addOrUpdate(letterPrice, t?.text?.length);\r\n      const outlinePrice = id(t?.outlinePriceVariantId);\r\n      if (outlinePrice) addOrUpdate(outlinePrice);\r\n      const puffPrice = id(t?.puffPriceVariantId);\r\n      if (puffPrice) addOrUpdate(puffPrice);\r\n      const crystalPrice = id(t?.crystalPriceVariantId);\r\n      if (crystalPrice) addOrUpdate(crystalPrice);\r\n    });\r\n  }\r\n\r\n  if (customDesign.sizing?.shopifyVariantId) {\r\n    items.push({\r\n      id: id(customDesign.sizing.shopifyVariantId),\r\n      quantity: 1,\r\n      properties: {\r\n        _customDesign: customDesignId,\r\n      },\r\n    });\r\n  }\r\n\r\n  return items;\r\n};\r\n\r\nconst cameraDefault: [x: number, y: number, z: number] = [\r\n  0, 2.1970893240496195e-15, 15.31024512625285,\r\n];\r\n\r\nconst CustomiserCanvas = ({ className, style }: CustomiserCanvasProps): JSX.Element => {\r\n  const cameraRef = useRef<Camera | null>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const images = useRef<File[]>([]);\r\n  const positionRef = useRef<Vector3>(new Vector3());\r\n  const orientationRef = useRef<Euler>(new Euler());\r\n  const groupRef = useRef<Group>(null);\r\n  const editFlag = useCustomiserStore((state) => state.flags.find((f) => f.edit));\r\n  const editText = useCustomiserStore((state) => state.texts.find((f) => f.edit));\r\n  const editGraphic = useCustomiserStore((state) => state.graphics.find((f) => f.edit));\r\n  const updateGraphic = useCustomiserStore((state) => state.updateGraphic);\r\n  const updateFlag = useCustomiserStore((state) => state.updateFlag);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const setCanvasSize = useCustomiserStore((state) => state.setCanvasSize);\r\n  const resetCamera = useDesignStore((state) => state.resetCamera);\r\n  const addingToCart = useDesignStore((state) => state.addingToCart);\r\n  const modelRotation = useDesignStore((state) => state.modelRotation);\r\n  const setAddingToCart = useDesignStore((state) => state.setAddingToCart);\r\n  const setModelRotation = useDesignStore((state) => state.setModelRotation);\r\n  const reset = useCustomiserStore((state) => state.reset);\r\n  const rootClassName = cn(styles.root, className);\r\n  const mouseHelperRef = useRef<Mesh>(null);\r\n  const state = useCustomiserStore((state) => state);\r\n\r\n  const [isPointerDown, setIsPointerDown] = useState(false);\r\n  const [isPointerMoved, setIsPointerMoved] = useState(false);\r\n\r\n  const setPosition = useCallback(\r\n    (event: ThreeEvent<MouseEvent>) => {\r\n      const p = event.point;\r\n      const n = event?.face?.normal.clone();\r\n      if (mouseHelperRef.current && n && groupRef.current) {\r\n        n.transformDirection(groupRef.current.matrixWorld);\r\n        n.multiplyScalar(10);\r\n        n.add(p);\r\n        mouseHelperRef.current.position.copy(p);\r\n        mouseHelperRef.current.lookAt(n);\r\n      }\r\n    },\r\n    [mouseHelperRef],\r\n  );\r\n\r\n  const onClick = useCallback<Required<SceneProps>['onClick']>(\r\n    (event) => {\r\n      setIsPointerDown(false);\r\n      setIsPointerMoved(false);\r\n\r\n      if (!isPointerDown || isPointerMoved) {\r\n        return;\r\n      }\r\n\r\n      if (editFlag?.key) {\r\n        event.stopPropagation();\r\n\r\n        updateFlag(editFlag.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateFlag(editFlag.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (editGraphic?.key) {\r\n        event.stopPropagation();\r\n\r\n        updateGraphic(editGraphic.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateGraphic(editGraphic.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (editText?.key) {\r\n        event.stopPropagation();\r\n\r\n        updateText(editText.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateText(editText.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n    },\r\n    [editFlag, editGraphic, editText, isPointerDown, isPointerMoved],\r\n  );\r\n\r\n  const onPointerDown = useCallback<Required<SceneProps>['onPointerDown']>(() => {\r\n    setIsPointerDown(true);\r\n  }, []);\r\n\r\n  const onPointerMove = useCallback<Required<SceneProps>['onPointerMove']>(\r\n    (e) => {\r\n      if (isPointerDown) {\r\n        setIsPointerMoved(true);\r\n      }\r\n    },\r\n    [isPointerDown],\r\n  );\r\n\r\n  const shopifyAddToCart = useMutation({\r\n    mutationFn: addToCart,\r\n    onSuccess: () => {\r\n      window.location.href = window.Shopify.routes.root + 'cart';\r\n      reset();\r\n    },\r\n  });\r\n\r\n  const { mutate } = useCreateCustomDesignMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      if (data.createCustomDesign?.data) {\r\n        const items = getCartVariations(data.createCustomDesign.data);\r\n        shopifyAddToCart.mutate({ items: items });\r\n      }\r\n    },\r\n  });\r\n\r\n  const { mutateAsync } = useUploadMultipleFilesMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const fileIDs = data.multipleUpload.map((f) => f?.data?.id) as string[];\r\n      mutate({ data: getCustomDesignData(state, fileIDs) });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (addingToCart && modelRotation < 360) {\r\n      setTimeout(() => {\r\n        canvasRef?.current?.toBlob((blob) => {\r\n          if (blob) {\r\n            const file = new File([blob], 'fileName.png', { type: 'image/png' });\r\n            images.current.push(file);\r\n            setModelRotation(modelRotation + 90);\r\n          }\r\n        }, 'image/png');\r\n      }, 50);\r\n    } else if (addingToCart) {\r\n      const upload = async () => {\r\n        await mutateAsync({ files: images.current });\r\n      };\r\n      upload();\r\n    }\r\n  }, [modelRotation, addingToCart, images]);\r\n\r\n  useEffect(() => {\r\n    const camera = cameraRef.current;\r\n    if (!camera) {\r\n      return;\r\n    }\r\n    if (resetCamera) {\r\n      camera.position.set(cameraDefault[0], cameraDefault[1], cameraDefault[2]);\r\n      setAddingToCart();\r\n    }\r\n  }, [resetCamera]);\r\n\r\n  const isEditing = editFlag || editGraphic || editText;\r\n\r\n  return (\r\n    <div className={rootClassName} style={style}>\r\n      <Canvas\r\n        linear\r\n        flat\r\n        camera={{\r\n          position: cameraDefault,\r\n          fov: 45,\r\n        }}\r\n        dpr={window.devicePixelRatio}\r\n        gl={{ preserveDrawingBuffer: true }}\r\n        ref={canvasRef}\r\n        onCreated={(state) => {\r\n          setCanvasSize(state.size.width, state.size.height);\r\n          cameraRef.current = state.camera;\r\n        }}\r\n        frameloop='demand'\r\n      >\r\n        <Scene\r\n          onClick={onClick}\r\n          onPointerDown={onPointerDown}\r\n          onPointerMove={onPointerMove}\r\n          ref={groupRef}\r\n        />\r\n        <Lights />\r\n        {isEditing && <MouseHelper ref={mouseHelperRef} />}\r\n        <OrbitControls\r\n          enableZoom={true}\r\n          minPolarAngle={Math.PI / 3}\r\n          maxPolarAngle={Math.PI / 1.9}\r\n        />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomiserCanvas;\r\n"],"names":["_ray","Ray","_plane","Plane","TILT_LIMIT","Math","cos","PI","moduloWrapAround","offset","capacity","OrbitControls","EventDispatcher","constructor","object","domElement","__publicField","Vector3","Infinity","LEFT","UP","RIGHT","BOTTOM","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","ONE","TOUCH","TWO","DOLLY_PAN","this","target0","target","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","setPolarAngle","value","currentPhi","phiDist","abs","sphericalDelta","scope","update","setAzimuthalAngle","currentTheta","thetaDist","getDistance","distanceTo","listenToKeyEvents","domElement2","addEventListener","onKeyDown","_domElementKeyEvents","stopListenToKeyEvents","removeEventListener","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","state","STATE","NONE","up","quat","Quaternion","setFromUnitVectors","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","autoRotateSpeed","enableDamping","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","addScaledVector","panOffset","add","zoomToCursor","performCursorZoom","isOrthographicCamera","radius","clampDistance","scale","setFromSpherical","matrixAutoUpdate","updateMatrix","lookAt","multiplyScalar","set","zoomChanged","newRadius","PerspectiveCamera","isPerspectiveCamera","prevRadius","length","radiusDelta","dollyDirection","updateMatrixWorld","mouseBefore","mouse","x","y","unproject","minZoom","maxZoom","mouseAfter","console","warn","screenSpacePanning","transformDirection","matrix","origin","direction","dot","setFromNormalAndCoplanarPoint","intersectPlane","OrthographicCamera","distanceToSquared","EPS","quaternion","connect","document","error","style","touchAction","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","dispose","_a","_b","_c","_d","_e","ownerDocument","onPointerMove","_f","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","zoomSpeed","angle","reverseOrbit","reverseHorizontalOrbit","rotateUp","reverseVerticalOrbit","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","targetDistance","tan","fov","clientHeight","right","left","clientWidth","top","bottom","enablePan","dollyOut","dollyScale","enableZoom","dollyIn","updateMouseParameters","event","rect","getBoundingClientRect","clientX","clientY","w","width","h","height","normalize","dist","minDistance","maxDistance","handleMouseDownRotate","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","rotateSpeed","handleTouchMovePan","panSpeed","handleTouchMoveDolly","enabled","push","addPointer","pointerType","trackPointer","touches","enableRotate","DOLLY_ROTATE","onTouchStart","mouseAction","button","mouseButtons","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","pointerId","preventDefault","handleMouseWheel","needsUpdate","code","keys","keyPanSpeed","handleKeyDown","i","splice","pointer","React","_ref","ref","makeDefault","camera","regress","onChange","onStart","onEnd","restProps","invalidate","useThree","defaultCamera","gl","events","get","performance","explCamera","explDomElement","connected","controls","OrbitControls$1","useFrame","callback","e","old","_extends","addToCart","async","fetch","window","Shopify","routes","root","method","headers","body","JSON","stringify","data","Component","forwardRef","props","_jsx","Suspense","fallback","_Fragment","children","MouseHelper","_jsxs","visible","args","displayName","Scene","Loadable","lazy","getCustomDesignData","files","_state$customProduct","_state$sizing","_state$sizing$variati","_state$sizing2","_state$sizing3","_state$sizing3$height","_state$sizing3$height2","_state$sizing4","_state$sizing4$height","_state$sizing5","_state$sizing5$weight","_state$sizing6","_state$sizing6$weight","customProduct","id","parts","savedParts","map","p","_p$part$areaSize","_p$part$areaSize$data","name","part","areaSize","material","texts","t","_t$basePrice","_t$letterPrice","_t$outlinePrice","_t$puffPrice","_t$crystalPrice","text","decalPosition","decalOrientation","decalRotation","decalScale","basePriceVariantId","basePrice","shopifyVariantId","letterPriceVariantId","letterPrice","outlinePriceVariantId","outlinePrice","puffPriceVariantId","puffPrice","crystalPriceVariantId","crystalPrice","flags","f","_f$flag","_f$basePrice","flag","size","graphics","g","_g$graphic","_g$basePrice","graphic","images","sizing","variation","toString","heightUnit","unit","weight","weightUnit","getCartVariations","customDesignEntity","_customDesign$parts","_customDesign$flags","_customDesign$graphic","_customDesign$texts","_customDesign$sizing","customDesignId","customDesign","attributes","items","replace","addOrUpdate","variantId","addQty","arguments","undefined","checkItem","find","getItem","newQuantity","quantity","properties","_customDesignQuantity","_customDesignAddon","forEach","_t$text","_customDesign","cameraDefault","className","cameraRef","useRef","canvasRef","positionRef","orientationRef","Euler","groupRef","editFlag","useCustomiserStore","edit","editText","editGraphic","updateGraphic","updateFlag","updateText","setCanvasSize","resetCamera","useDesignStore","addingToCart","modelRotation","setAddingToCart","setModelRotation","rootClassName","cn","styles","mouseHelperRef","isPointerDown","setIsPointerDown","useState","isPointerMoved","setIsPointerMoved","setPosition","useCallback","_event$face","point","n","face","normal","current","matrixWorld","onClick","key","stopPropagation","decalFreeze","rotation","toArray","shopifyAddToCart","useMutation","mutationFn","onSuccess","location","href","mutate","useCreateCustomDesignMutation","graphQLClient","_data$createCustomDes","createCustomDesign","mutateAsync","useUploadMultipleFilesMutation","fileIDs","multipleUpload","_f$data","useEffect","setTimeout","_canvasRef$current","toBlob","blob","file","File","upload","isEditing","Canvas","linear","flat","dpr","devicePixelRatio","preserveDrawingBuffer","onCreated","frameloop","Lights"],"sourceRoot":""}