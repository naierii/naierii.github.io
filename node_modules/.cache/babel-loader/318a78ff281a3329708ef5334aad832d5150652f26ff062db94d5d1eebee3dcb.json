{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reian\\\\Desktop\\\\Work\\\\Freelance\\\\Boxxer World\\\\boxxerworld-shopify-frontend\\\\customiser\\\\src\\\\components\\\\ui\\\\Accordion\\\\Accordion.tsx\";\nimport cn from 'classnames';\nimport Button from '../Button';\nimport styles from './Accordion.module.scss';\nimport InfoButton from '../InfoButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Accordion = ({\n  className,\n  children,\n  title,\n  currentStep,\n  step,\n  hasFinishedStep,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onTitleClick = () => {}\n}) => {\n  // TODO - Improve this\n  const titlesWithInfo = ['TEXT COLOR'];\n  const shouldShowInfoButton = title && typeof title === 'string' && titlesWithInfo.includes(title.toUpperCase());\n  const handleTitleClick = () => {\n    // console.log('key click', keyRef.current);\n\n    onTitleClick(step);\n  };\n  const titleClassName = cn(styles.titleContainer, {\n    [styles.active]: step === currentStep\n  }, {\n    [styles.finished]: typeof hasFinishedStep === 'boolean' ? hasFinishedStep : step < currentStep\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(className),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: titleClassName,\n      onClick: handleTitleClick,\n      children: [typeof step === 'number' && /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.titleStep,\n        colour: \"red\",\n        children: [\"Step \", step + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.titleButton,\n        children: [title, shouldShowInfoButton && /*#__PURE__*/_jsxDEV(InfoButton, {\n          title: \"TEXT COLOR\",\n          propStyles: styles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), step === currentStep && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = Accordion;\nexport default Accordion;\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["cn","Button","styles","InfoButton","jsxDEV","_jsxDEV","Accordion","className","children","title","currentStep","step","hasFinishedStep","onTitleClick","titlesWithInfo","shouldShowInfoButton","includes","toUpperCase","handleTitleClick","titleClassName","titleContainer","active","finished","onClick","titleStep","colour","fileName","_jsxFileName","lineNumber","columnNumber","titleButton","propStyles","content","_c","$RefreshReg$"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/ui/Accordion/Accordion.tsx"],"sourcesContent":["import cn from 'classnames';\r\nimport { FC, ReactNode, useRef } from 'react';\r\nimport Button from '../Button';\r\nimport { current } from 'immer';\r\n\r\nimport styles from './Accordion.module.scss';\r\nimport InfoButton from '../InfoButton';\r\n\r\nexport type AccordionProps = {\r\n  className?: string;\r\n\r\n  step: string | number;\r\n  hasFinishedStep?: boolean;\r\n  currentStep: string | number;\r\n  onTitleClick?: (step: string | number) => void;\r\n\r\n  title: ReactNode;\r\n  children?: ReactNode;\r\n};\r\n\r\nconst Accordion: FC<AccordionProps> = ({\r\n  className,\r\n  children,\r\n  title,\r\n  currentStep,\r\n  step,\r\n  hasFinishedStep,\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  onTitleClick = () => {},\r\n}) => {\r\n  // TODO - Improve this\r\n  const titlesWithInfo = ['TEXT COLOR'];\r\n  const shouldShowInfoButton =\r\n    title && typeof title === 'string' && titlesWithInfo.includes(title.toUpperCase());\r\n\r\n  const handleTitleClick = () => {\r\n    // console.log('key click', keyRef.current);\r\n\r\n    onTitleClick(step);\r\n  };\r\n\r\n  const titleClassName = cn(\r\n    styles.titleContainer,\r\n    { [styles.active]: step === currentStep },\r\n    {\r\n      [styles.finished]:\r\n        typeof hasFinishedStep === 'boolean' ? hasFinishedStep : step < currentStep,\r\n    },\r\n  );\r\n\r\n  return (\r\n    <div className={cn(className)}>\r\n      <div className={titleClassName} onClick={handleTitleClick}>\r\n        {typeof step === 'number' && (\r\n          <Button className={styles.titleStep} colour='red'>\r\n            Step {step + 1}\r\n          </Button>\r\n        )}\r\n        <Button className={styles.titleButton}>\r\n          {title}\r\n          {shouldShowInfoButton && <InfoButton title='TEXT COLOR' propStyles={styles} />}\r\n        </Button>\r\n      </div>\r\n      {step === currentStep && <div className={styles.content}>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n"],"mappings":";AAAA,OAAOA,EAAE,MAAM,YAAY;AAE3B,OAAOC,MAAM,MAAM,WAAW;AAG9B,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAcvC,MAAMC,SAA6B,GAAGA,CAAC;EACrCC,SAAS;EACTC,QAAQ;EACRC,KAAK;EACLC,WAAW;EACXC,IAAI;EACJC,eAAe;EACf;EACAC,YAAY,GAAGA,CAAA,KAAM,CAAC;AACxB,CAAC,KAAK;EACJ;EACA,MAAMC,cAAc,GAAG,CAAC,YAAY,CAAC;EACrC,MAAMC,oBAAoB,GACxBN,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIK,cAAc,CAACE,QAAQ,CAACP,KAAK,CAACQ,WAAW,CAAC,CAAC,CAAC;EAEpF,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;;IAEAL,YAAY,CAACF,IAAI,CAAC;EACpB,CAAC;EAED,MAAMQ,cAAc,GAAGnB,EAAE,CACvBE,MAAM,CAACkB,cAAc,EACrB;IAAE,CAAClB,MAAM,CAACmB,MAAM,GAAGV,IAAI,KAAKD;EAAY,CAAC,EACzC;IACE,CAACR,MAAM,CAACoB,QAAQ,GACd,OAAOV,eAAe,KAAK,SAAS,GAAGA,eAAe,GAAGD,IAAI,GAAGD;EACpE,CACF,CAAC;EAED,oBACEL,OAAA;IAAKE,SAAS,EAAEP,EAAE,CAACO,SAAS,CAAE;IAAAC,QAAA,gBAC5BH,OAAA;MAAKE,SAAS,EAAEY,cAAe;MAACI,OAAO,EAAEL,gBAAiB;MAAAV,QAAA,GACvD,OAAOG,IAAI,KAAK,QAAQ,iBACvBN,OAAA,CAACJ,MAAM;QAACM,SAAS,EAAEL,MAAM,CAACsB,SAAU;QAACC,MAAM,EAAC,KAAK;QAAAjB,QAAA,GAAC,OAC3C,EAACG,IAAI,GAAG,CAAC;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACT,eACDxB,OAAA,CAACJ,MAAM;QAACM,SAAS,EAAEL,MAAM,CAAC4B,WAAY;QAAAtB,QAAA,GACnCC,KAAK,EACLM,oBAAoB,iBAAIV,OAAA,CAACF,UAAU;UAACM,KAAK,EAAC,YAAY;UAACsB,UAAU,EAAE7B;QAAO;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACLlB,IAAI,KAAKD,WAAW,iBAAIL,OAAA;MAAKE,SAAS,EAAEL,MAAM,CAAC8B,OAAQ;MAAAxB,QAAA,EAAEA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV,CAAC;AAACI,EAAA,GA9CI3B,SAA6B;AAgDnC,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}