{"ast":null,"code":"import cn from'classnames';import{Material}from'./Material';import styles from'./MaterialGroup.module.scss';import{useMaterialGroupStore}from'./MaterialGroupState';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const MaterialType=_ref=>{let{className,onMaterialSelected,hideColorGroups,selectedMaterialId}=_ref;const rootClassName=cn(styles.materialType,className);const{materialTypes,filteredMaterials:getFilteredMaterials,materials}=useMaterialGroupStore();const filteredMaterials=hideColorGroups?materials:getFilteredMaterials();return/*#__PURE__*/_jsxs(\"div\",{className:rootClassName,children:[!hideColorGroups&&/*#__PURE__*/_jsx(\"h5\",{children:\"Texture\"}),materialTypes.map(mt=>{var _mt$attributes;return/*#__PURE__*/_jsxs(\"div\",{className:styles.materialType,children:[/*#__PURE__*/_jsx(\"h6\",{className:styles.materialType__title,children:(_mt$attributes=mt.attributes)===null||_mt$attributes===void 0?void 0:_mt$attributes.name}),/*#__PURE__*/_jsx(\"div\",{className:styles.materials,children:filteredMaterials.filter(m=>{var _m$attributes,_m$attributes$type,_m$attributes$type$da;return((_m$attributes=m.attributes)===null||_m$attributes===void 0?void 0:(_m$attributes$type=_m$attributes.type)===null||_m$attributes$type===void 0?void 0:(_m$attributes$type$da=_m$attributes$type.data)===null||_m$attributes$type$da===void 0?void 0:_m$attributes$type$da.id)===mt.id;}).map(m=>/*#__PURE__*/_jsx(Material,{material:m,onMaterialSelected:onMaterialSelected,selectedMaterialId:selectedMaterialId},m.id))})]},mt.id);})]});};","map":{"version":3,"names":["cn","Material","styles","useMaterialGroupStore","jsx","_jsx","jsxs","_jsxs","MaterialType","_ref","className","onMaterialSelected","hideColorGroups","selectedMaterialId","rootClassName","materialType","materialTypes","filteredMaterials","getFilteredMaterials","materials","children","map","mt","_mt$attributes","materialType__title","attributes","name","filter","m","_m$attributes","_m$attributes$type","_m$attributes$type$da","type","data","id","material"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/MaterialGroup/MaterialType.tsx"],"sourcesContent":["import PillButton from '@components/ui/PillButton';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { Material } from './Material';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { useMaterialGroupStore } from './MaterialGroupState';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialTypeProps {\r\n  className?: string;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const MaterialType = ({\r\n  className,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  selectedMaterialId,\r\n}: MaterialTypeProps) => {\r\n  const rootClassName = cn(styles.materialType, className);\r\n\r\n  const {\r\n    materialTypes,\r\n    filteredMaterials: getFilteredMaterials,\r\n    materials,\r\n  } = useMaterialGroupStore();\r\n\r\n  const filteredMaterials = hideColorGroups ? materials : getFilteredMaterials();\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && <h5>Texture</h5>}\r\n      {materialTypes.map((mt) => (\r\n        <div key={mt.id} className={styles.materialType}>\r\n          <h6 className={styles.materialType__title}>{mt.attributes?.name}</h6>\r\n          <div className={styles.materials}>\r\n            {filteredMaterials\r\n              .filter((m) => m.attributes?.type?.data?.id === mt.id)\r\n              .map((m) => (\r\n                <Material\r\n                  key={m.id}\r\n                  material={m}\r\n                  onMaterialSelected={onMaterialSelected}\r\n                  selectedMaterialId={selectedMaterialId}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"AAEA,MAAO,CAAAA,EAAE,KAAM,YAAY,CAC3B,OAASC,QAAQ,KAAQ,YAAY,CACrC,MAAO,CAAAC,MAAM,KAAM,6BAA6B,CAChD,OAASC,qBAAqB,KAAQ,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAU7D,MAAO,MAAM,CAAAC,YAAY,CAAGC,IAAA,EAKH,IALI,CAC3BC,SAAS,CACTC,kBAAkB,CAClBC,eAAe,CACfC,kBACiB,CAAC,CAAAJ,IAAA,CAClB,KAAM,CAAAK,aAAa,CAAGd,EAAE,CAACE,MAAM,CAACa,YAAY,CAAEL,SAAS,CAAC,CAExD,KAAM,CACJM,aAAa,CACbC,iBAAiB,CAAEC,oBAAoB,CACvCC,SACF,CAAC,CAAGhB,qBAAqB,CAAC,CAAC,CAE3B,KAAM,CAAAc,iBAAiB,CAAGL,eAAe,CAAGO,SAAS,CAAGD,oBAAoB,CAAC,CAAC,CAE9E,mBACEX,KAAA,QAAKG,SAAS,CAAEI,aAAc,CAAAM,QAAA,EAC3B,CAACR,eAAe,eAAIP,IAAA,OAAAe,QAAA,CAAI,SAAO,CAAI,CAAC,CACpCJ,aAAa,CAACK,GAAG,CAAEC,EAAE,OAAAC,cAAA,oBACpBhB,KAAA,QAAiBG,SAAS,CAAER,MAAM,CAACa,YAAa,CAAAK,QAAA,eAC9Cf,IAAA,OAAIK,SAAS,CAAER,MAAM,CAACsB,mBAAoB,CAAAJ,QAAA,EAAAG,cAAA,CAAED,EAAE,CAACG,UAAU,UAAAF,cAAA,iBAAbA,cAAA,CAAeG,IAAI,CAAK,CAAC,cACrErB,IAAA,QAAKK,SAAS,CAAER,MAAM,CAACiB,SAAU,CAAAC,QAAA,CAC9BH,iBAAiB,CACfU,MAAM,CAAEC,CAAC,OAAAC,aAAA,CAAAC,kBAAA,CAAAC,qBAAA,OAAK,EAAAF,aAAA,CAAAD,CAAC,CAACH,UAAU,UAAAI,aAAA,kBAAAC,kBAAA,CAAZD,aAAA,CAAcG,IAAI,UAAAF,kBAAA,kBAAAC,qBAAA,CAAlBD,kBAAA,CAAoBG,IAAI,UAAAF,qBAAA,iBAAxBA,qBAAA,CAA0BG,EAAE,IAAKZ,EAAE,CAACY,EAAE,GAAC,CACrDb,GAAG,CAAEO,CAAC,eACLvB,IAAA,CAACJ,QAAQ,EAEPkC,QAAQ,CAAEP,CAAE,CACZjB,kBAAkB,CAAEA,kBAAmB,CACvCE,kBAAkB,CAAEA,kBAAmB,EAHlCe,CAAC,CAACM,EAIR,CACF,CAAC,CACD,CAAC,GAbEZ,EAAE,CAACY,EAcR,CAAC,EACP,CAAC,EACC,CAAC,CAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}