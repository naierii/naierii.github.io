{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reian\\\\Desktop\\\\Work\\\\Freelance\\\\Boxxer World\\\\boxxerworld-shopify-frontend\\\\customiser\\\\src\\\\components\\\\nav\\\\NavHeader\\\\NavHeaderScroll.tsx\",\n  _s = $RefreshSig$();\nimport DontShowAgain from '@components/ui/DontShowAgain';\nimport { usePortalRef } from '@hooks';\nimport { useCustomiserStore } from '@store/customiser';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavHeaderScroll = ({\n  styles\n}) => {\n  _s();\n  const {\n    navItems,\n    selectedNav,\n    setSelectedNav,\n    deleteText\n  } = useCustomiserStore();\n  const popupPortalRef = usePortalRef('popupContainer');\n  const [showPopup, setShowPopup] = useState(false);\n  const {\n    texts,\n    updateText\n  } = useCustomiserStore(state => state);\n  const editText = texts === null || texts === void 0 ? void 0 : texts.find(g => g.edit);\n  const [navIndex, setNavIndex] = useState(0);\n  const localStorageItem = localStorage.getItem('navConfirmText');\n  const shouldShowNotification = !localStorageItem;\n  const cancelTextEdit = () => {\n    if (editText !== null && editText !== void 0 && editText.key) {\n      updateText(editText.key, {\n        decalFreeze: false,\n        edit: false,\n        hasApplied: true\n      });\n      if (editText !== null && editText !== void 0 && editText.text && !(editText !== null && editText !== void 0 && editText.hasApplied)) {\n        deleteText(editText === null || editText === void 0 ? void 0 : editText.key);\n      }\n    }\n    setSelectedNav(navIndex);\n  };\n  const navClickHandler = (index, name) => {\n    setNavIndex(index);\n    if (editText !== null && editText !== void 0 && editText.text && name && (name === null || name === void 0 ? void 0 : name.toLowerCase()) !== 'text') {\n      setShowPopup(true);\n    } else {\n      setSelectedNav(index);\n    }\n  };\n  if (!popupPortalRef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles === null || styles === void 0 ? void 0 : styles.navHeaderScroll,\n      children: navItems.map((item, index) => {\n        const classes = (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.name) === item.name ? styles === null || styles === void 0 ? void 0 : styles.selected : '';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes,\n          onClick: () => navClickHandler(index, item.name),\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), showPopup && shouldShowNotification && /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(DontShowAgain, {\n      cb: cancelTextEdit,\n      setShowNotification: setShowPopup,\n      notifName: 'navConfirmText',\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Cancel text customization?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this), popupPortalRef)]\n  }, void 0, true);\n};\n_s(NavHeaderScroll, \"y3ThorsWhm8vMhFm6SrDINA2EFU=\", false, function () {\n  return [useCustomiserStore, usePortalRef, useCustomiserStore];\n});\n_c = NavHeaderScroll;\nexport default NavHeaderScroll;\nvar _c;\n$RefreshReg$(_c, \"NavHeaderScroll\");","map":{"version":3,"names":["DontShowAgain","usePortalRef","useCustomiserStore","useState","createPortal","jsxDEV","_jsxDEV","Fragment","_Fragment","NavHeaderScroll","styles","_s","navItems","selectedNav","setSelectedNav","deleteText","popupPortalRef","showPopup","setShowPopup","texts","updateText","state","editText","find","g","edit","navIndex","setNavIndex","localStorageItem","localStorage","getItem","shouldShowNotification","cancelTextEdit","key","decalFreeze","hasApplied","text","navClickHandler","index","name","toLowerCase","children","className","navHeaderScroll","map","item","classes","selected","onClick","fileName","_jsxFileName","lineNumber","columnNumber","cb","setShowNotification","notifName","_c","$RefreshReg$"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavHeader/NavHeaderScroll.tsx"],"sourcesContent":["import DontShowAgain from '@components/ui/DontShowAgain';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { Falsey } from 'lodash';\r\nimport { useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface NavHeaderScrollProps {\r\n  styles?: {\r\n    readonly [key: string]: string;\r\n  };\r\n}\r\n\r\nconst NavHeaderScroll = ({ styles }: NavHeaderScrollProps) => {\r\n  const { navItems, selectedNav, setSelectedNav, deleteText } = useCustomiserStore();\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const { texts, updateText } = useCustomiserStore((state) => state);\r\n  const editText = texts?.find((g) => g.edit);\r\n\r\n  const [navIndex, setNavIndex] = useState<number>(0);\r\n\r\n  const localStorageItem = localStorage.getItem('navConfirmText');\r\n  const shouldShowNotification = !localStorageItem;\r\n\r\n  const cancelTextEdit = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n        hasApplied: true,\r\n      });\r\n\r\n      if (editText?.text && !editText?.hasApplied) {\r\n        deleteText(editText?.key);\r\n      }\r\n    }\r\n    setSelectedNav(navIndex);\r\n  };\r\n\r\n  const navClickHandler = (index: number, name: string | Falsey) => {\r\n    setNavIndex(index);\r\n    if (editText?.text && name && name?.toLowerCase() !== 'text') {\r\n      setShowPopup(true);\r\n    } else {\r\n      setSelectedNav(index);\r\n    }\r\n  };\r\n\r\n  if (!popupPortalRef) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles?.navHeaderScroll}>\r\n        {navItems.map((item, index) => {\r\n          const classes = selectedNav?.name === item.name ? styles?.selected : '';\r\n          return (\r\n            <div className={classes} key={index} onClick={() => navClickHandler(index, item.name)}>\r\n              {item.name}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {showPopup &&\r\n        shouldShowNotification &&\r\n        createPortal(\r\n          <DontShowAgain\r\n            cb={cancelTextEdit}\r\n            setShowNotification={setShowPopup}\r\n            notifName={'navConfirmText'}\r\n          >\r\n            <span>Cancel text customization?</span>\r\n          </DontShowAgain>,\r\n          popupPortalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavHeaderScroll;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}