{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reian\\\\Desktop\\\\Work\\\\Freelance\\\\Boxxer World\\\\boxxerworld-shopify-frontend\\\\customiser\\\\src\\\\components\\\\three\\\\DecalText\\\\DecalText.tsx\",\n  _s = $RefreshSig$();\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\nimport { Decal } from '@react-three/drei';\nimport { useEffect, useMemo, useRef } from 'react';\nimport { Euler, MathUtils, Texture, Vector2, Vector3 } from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DecalText = ({\n  text = {},\n  position,\n  orientation,\n  scale = 1\n}) => {\n  _s();\n  var _text$material, _text$material$attrib, _text$material$attrib2, _text$material$attrib3, _text$material$attrib4, _text$material$attrib5, _text$selectedName, _text$selectedName$at, _text$selectedName2;\n  console.log('position', position);\n  const rotationModifier = useMemo(() => {\n    var _text$decalRotation;\n    const orientationCopy = new Euler().fromArray(orientation);\n    const currentAngle = MathUtils.radToDeg(orientationCopy.z);\n    const newAngle = currentAngle + ((_text$decalRotation = text === null || text === void 0 ? void 0 : text.decalRotation) !== null && _text$decalRotation !== void 0 ? _text$decalRotation : 0);\n    orientationCopy.z = MathUtils.degToRad(newAngle);\n    return orientationCopy;\n  }, [text === null || text === void 0 ? void 0 : text.decalRotation, orientation]);\n  const texture = text !== null && text !== void 0 && (_text$material = text.material) !== null && _text$material !== void 0 && (_text$material$attrib = _text$material.attributes) !== null && _text$material$attrib !== void 0 && (_text$material$attrib2 = _text$material$attrib.images) !== null && _text$material$attrib2 !== void 0 && _text$material$attrib2.length && (_text$material$attrib3 = text.material.attributes.images[0]) !== null && _text$material$attrib3 !== void 0 && (_text$material$attrib4 = _text$material$attrib3.image.data) !== null && _text$material$attrib4 !== void 0 && (_text$material$attrib5 = _text$material$attrib4.attributes) !== null && _text$material$attrib5 !== void 0 && _text$material$attrib5.url ? [text.material.attributes.images[0].image.data.attributes.url] : [];\n  const shouldNormalMap = text.normalMap instanceof Texture && ((_text$selectedName = text.selectedName) === null || _text$selectedName === void 0 ? void 0 : (_text$selectedName$at = _text$selectedName.attributes) === null || _text$selectedName$at === void 0 ? void 0 : _text$selectedName$at.name) === 'Luxury';\n  const normalMap = shouldNormalMap ? text.normalMap : null;\n\n  // const isShiny = shouldNormalMap ? false : true;\n\n  const isLuxury = ((_text$selectedName2 = text.selectedName) === null || _text$selectedName2 === void 0 ? void 0 : _text$selectedName2.id) === '2' ? true : false;\n  const hasPuff = text.puffPrice ? true : false;\n  const hasCrystals = text.crystalPrice ? true : false;\n  let normalScale = 1;\n  if (hasCrystals) {\n    normalScale = 4;\n  } else if (isLuxury && !hasPuff) {\n    normalScale = 0.5;\n  } else if (isLuxury && hasPuff) {\n    normalScale = 3;\n  }\n  const scaleModifier = useMemo(() => {\n    return new Vector3(3.2 * scale, 0.4 * scale, 4);\n  }, [scale]);\n  const matRef = useRef(null);\n  const decalRef = useRef(null);\n  useEffect(() => {\n    if (text.preview && matRef.current && text.preview instanceof Texture) {\n      text.preview.needsUpdate = true;\n      matRef.current.needsUpdate = true;\n    }\n  }, [text.preview]);\n  return /*#__PURE__*/_jsxDEV(Decal, {\n    ref: decalRef,\n    position: [position[0], position[1], 5],\n    rotation: rotationModifier,\n    scale: scaleModifier,\n    children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      ref: matRef,\n      transparent: true,\n      roughness: isLuxury && !hasCrystals ? 1 : 0,\n      depthTest: true,\n      depthWrite: false,\n      map: text.preview instanceof Texture ? text.preview : null,\n      normalMap: normalMap,\n      normalScale: new Vector2(normalScale, normalScale),\n      displacementScale: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(DecalText, \"3J0ubSGtepjjGsO365FT9L/ERGg=\");\n_c = DecalText;\nexport default DecalText;\nvar _c;\n$RefreshReg$(_c, \"DecalText\");","map":{"version":3,"names":["Decal","useEffect","useMemo","useRef","Euler","MathUtils","Texture","Vector2","Vector3","jsxDEV","_jsxDEV","DecalText","text","position","orientation","scale","_s","_text$material","_text$material$attrib","_text$material$attrib2","_text$material$attrib3","_text$material$attrib4","_text$material$attrib5","_text$selectedName","_text$selectedName$at","_text$selectedName2","console","log","rotationModifier","_text$decalRotation","orientationCopy","fromArray","currentAngle","radToDeg","z","newAngle","decalRotation","degToRad","texture","material","attributes","images","length","image","data","url","shouldNormalMap","normalMap","selectedName","name","isLuxury","id","hasPuff","puffPrice","hasCrystals","crystalPrice","normalScale","scaleModifier","matRef","decalRef","preview","current","needsUpdate","ref","rotation","children","transparent","roughness","depthTest","depthWrite","map","displacementScale","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/three/DecalText/DecalText.tsx"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-nocheck\r\n\r\nimport { Decal } from '@react-three/drei';\r\nimport { EulerArray, TextCustomiser, Vector3Array } from '@store/customiser';\r\nimport { useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n  Euler,\r\n  EulerOrder,\r\n  MathUtils,\r\n  MeshStandardMaterial,\r\n  Texture,\r\n  Vector2,\r\n  Vector3,\r\n} from 'three';\r\n\r\nexport interface DecalTextProps {\r\n  text?: TextCustomiser;\r\n  position: Vector3Array;\r\n  orientation: EulerArray;\r\n  scale?: number;\r\n}\r\n\r\nconst DecalText = ({ text = {}, position, orientation, scale = 1 }: DecalTextProps) => {\r\n  console.log('position', position);\r\n  const rotationModifier = useMemo(() => {\r\n    const orientationCopy = new Euler().fromArray(\r\n      orientation as [number, number, number, (EulerOrder | undefined)?, ...any[]],\r\n    );\r\n    const currentAngle = MathUtils.radToDeg(orientationCopy.z);\r\n    const newAngle = currentAngle + (text?.decalRotation ?? 0);\r\n    orientationCopy.z = MathUtils.degToRad(newAngle);\r\n    return orientationCopy;\r\n  }, [text?.decalRotation, orientation]);\r\n\r\n  const texture =\r\n    text?.material?.attributes?.images?.length &&\r\n    text.material.attributes.images[0]?.image.data?.attributes?.url\r\n      ? [text.material.attributes.images[0].image.data.attributes.url]\r\n      : [];\r\n\r\n  const shouldNormalMap =\r\n    text.normalMap instanceof Texture && text.selectedName?.attributes?.name === 'Luxury';\r\n  const normalMap = shouldNormalMap ? text.normalMap : null;\r\n\r\n  // const isShiny = shouldNormalMap ? false : true;\r\n\r\n  const isLuxury: boolean = text.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = text.puffPrice ? true : false;\r\n  const hasCrystals: boolean = text.crystalPrice ? true : false;\r\n\r\n  let normalScale = 1;\r\n  if (hasCrystals) {\r\n    normalScale = 4;\r\n  } else if (isLuxury && !hasPuff) {\r\n    normalScale = 0.5;\r\n  } else if (isLuxury && hasPuff) {\r\n    normalScale = 3;\r\n  }\r\n\r\n  const scaleModifier = useMemo(() => {\r\n    return new Vector3(3.2 * scale, 0.4 * scale, 4);\r\n  }, [scale]);\r\n\r\n  const matRef = useRef<MeshStandardMaterial>(null);\r\n  const decalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (text.preview && matRef.current && text.preview instanceof Texture) {\r\n      text.preview.needsUpdate = true;\r\n      matRef.current.needsUpdate = true;\r\n    }\r\n  }, [text.preview]);\r\n\r\n  return (\r\n    <Decal\r\n      ref={decalRef}\r\n      position={[position[0], position[1], 5]}\r\n      rotation={rotationModifier}\r\n      scale={scaleModifier}\r\n    >\r\n      <meshStandardMaterial\r\n        ref={matRef}\r\n        transparent\r\n        roughness={isLuxury && !hasCrystals ? 1 : 0}\r\n        depthTest\r\n        depthWrite={false}\r\n        map={text.preview instanceof Texture ? text.preview : null}\r\n        normalMap={normalMap}\r\n        normalScale={new Vector2(normalScale, normalScale)}\r\n        displacementScale={1}\r\n      ></meshStandardMaterial>\r\n    </Decal>\r\n  );\r\n};\r\n\r\nexport default DecalText;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}