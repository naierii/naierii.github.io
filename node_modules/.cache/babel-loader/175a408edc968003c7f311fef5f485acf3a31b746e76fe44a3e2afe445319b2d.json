{"ast":null,"code":"import{usePortalRef}from'@hooks';import{useCustomiserStore}from'@store/customiser';import cn from'classnames';import ReactDOM from'react-dom';import styles from'./NavButtons.module.scss';import DontShowAgain from'../../ui/DontShowAgain';import{useState}from'react';import ContainedButton from'@components/ui/Button/ContainedButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const NavButtons=_ref=>{let{className,confirmText,confirmStorage}=_ref;const rootClassName=cn(styles.root,className);const cancelPartChange=useCustomiserStore(state=>state.cancelPartChange);const resetNav=useCustomiserStore(state=>state.resetNav);const portalRef=usePortalRef('CustomiserNavActions');const popupPortalRef=usePortalRef('popupContainer');const[showPopup,setShowPopup]=useState(false);const notifTitle=confirmStorage;const localStorageItem=localStorage.getItem(notifTitle||'');const shouldShowNotification=!localStorageItem;if(!portalRef||!popupPortalRef){return null;}return/*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:rootClassName,children:[/*#__PURE__*/_jsx(ContainedButton,{onClick:()=>cancelPartChange(),children:\"Cancel\"}),/*#__PURE__*/_jsx(ContainedButton,{onClick:()=>{if(!confirmText){resetNav();}else{if(shouldShowNotification){setShowPopup(true);}else{resetNav();}}},children:\"Save\"})]}),confirmText&&showPopup&&shouldShowNotification&&notifTitle&&/*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsx(DontShowAgain,{cb:resetNav,setShowNotification:setShowPopup,notifName:notifTitle,children:/*#__PURE__*/_jsx(\"span\",{children:confirmText})}),popupPortalRef)]}),portalRef);};export default NavButtons;","map":{"version":3,"names":["usePortalRef","useCustomiserStore","cn","ReactDOM","styles","DontShowAgain","useState","ContainedButton","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NavButtons","_ref","className","confirmText","confirmStorage","rootClassName","root","cancelPartChange","state","resetNav","portalRef","popupPortalRef","showPopup","setShowPopup","notifTitle","localStorageItem","localStorage","getItem","shouldShowNotification","createPortal","children","onClick","cb","setShowNotification","notifName"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavButtons/NavButtons.tsx"],"sourcesContent":["import { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavButtons.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\nimport DontShowAgain from '../../ui/DontShowAgain';\r\nimport { useState } from 'react';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\nexport interface NavButtonsProps {\r\n  className?: string;\r\n  confirmText?: string | Falsey;\r\n  confirmStorage?: string;\r\n}\r\n\r\nconst NavButtons = ({ className, confirmText, confirmStorage }: NavButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const cancelPartChange = useCustomiserStore((state) => state.cancelPartChange);\r\n  const resetNav = useCustomiserStore((state) => state.resetNav);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const notifTitle = confirmStorage;\r\n  const localStorageItem = localStorage.getItem(notifTitle || '');\r\n  const shouldShowNotification = !localStorageItem;\r\n\r\n  if (!portalRef || !popupPortalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className={rootClassName}>\r\n        <ContainedButton onClick={() => cancelPartChange()}>Cancel</ContainedButton>\r\n        <ContainedButton\r\n          onClick={() => {\r\n            if (!confirmText) {\r\n              resetNav();\r\n            } else {\r\n              if (shouldShowNotification) {\r\n                setShowPopup(true);\r\n              } else {\r\n                resetNav();\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          Save\r\n        </ContainedButton>\r\n      </div>\r\n      {confirmText &&\r\n        showPopup &&\r\n        shouldShowNotification &&\r\n        notifTitle &&\r\n        ReactDOM.createPortal(\r\n          <DontShowAgain cb={resetNav} setShowNotification={setShowPopup} notifName={notifTitle}>\r\n            <span>{confirmText}</span>\r\n          </DontShowAgain>,\r\n          popupPortalRef,\r\n        )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n"],"mappings":"AAAA,OAASA,YAAY,KAAQ,QAAQ,CACrC,OAASC,kBAAkB,KAAQ,mBAAmB,CACtD,MAAO,CAAAC,EAAE,KAAM,YAAY,CAC3B,MAAO,CAAAC,QAAQ,KAAM,WAAW,CAEhC,MAAO,CAAAC,MAAM,KAAM,0BAA0B,CAG7C,MAAO,CAAAC,aAAa,KAAM,wBAAwB,CAClD,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,eAAe,KAAM,uCAAuC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAQpE,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAiE,IAAhE,CAAEC,SAAS,CAAEC,WAAW,CAAEC,cAAgC,CAAC,CAAAH,IAAA,CAC7E,KAAM,CAAAI,aAAa,CAAGjB,EAAE,CAACE,MAAM,CAACgB,IAAI,CAAEJ,SAAS,CAAC,CAChD,KAAM,CAAAK,gBAAgB,CAAGpB,kBAAkB,CAAEqB,KAAK,EAAKA,KAAK,CAACD,gBAAgB,CAAC,CAC9E,KAAM,CAAAE,QAAQ,CAAGtB,kBAAkB,CAAEqB,KAAK,EAAKA,KAAK,CAACC,QAAQ,CAAC,CAC9D,KAAM,CAAAC,SAAS,CAAGxB,YAAY,CAAC,sBAAsB,CAAC,CAEtD,KAAM,CAAAyB,cAAc,CAAGzB,YAAY,CAAC,gBAAgB,CAAC,CACrD,KAAM,CAAC0B,SAAS,CAAEC,YAAY,CAAC,CAAGrB,QAAQ,CAAU,KAAK,CAAC,CAE1D,KAAM,CAAAsB,UAAU,CAAGV,cAAc,CACjC,KAAM,CAAAW,gBAAgB,CAAGC,YAAY,CAACC,OAAO,CAACH,UAAU,EAAI,EAAE,CAAC,CAC/D,KAAM,CAAAI,sBAAsB,CAAG,CAACH,gBAAgB,CAEhD,GAAI,CAACL,SAAS,EAAI,CAACC,cAAc,CAAE,CACjC,MAAO,KAAI,CACb,CAEA,mBAAOtB,QAAQ,CAAC8B,YAAY,cAC1BtB,KAAA,CAAAE,SAAA,EAAAqB,QAAA,eACEvB,KAAA,QAAKK,SAAS,CAAEG,aAAc,CAAAe,QAAA,eAC5BzB,IAAA,CAACF,eAAe,EAAC4B,OAAO,CAAEA,CAAA,GAAMd,gBAAgB,CAAC,CAAE,CAAAa,QAAA,CAAC,QAAM,CAAiB,CAAC,cAC5EzB,IAAA,CAACF,eAAe,EACd4B,OAAO,CAAEA,CAAA,GAAM,CACb,GAAI,CAAClB,WAAW,CAAE,CAChBM,QAAQ,CAAC,CAAC,CACZ,CAAC,IAAM,CACL,GAAIS,sBAAsB,CAAE,CAC1BL,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,IAAM,CACLJ,QAAQ,CAAC,CAAC,CACZ,CACF,CACF,CAAE,CAAAW,QAAA,CACH,MAED,CAAiB,CAAC,EACf,CAAC,CACLjB,WAAW,EACVS,SAAS,EACTM,sBAAsB,EACtBJ,UAAU,eACVzB,QAAQ,CAAC8B,YAAY,cACnBxB,IAAA,CAACJ,aAAa,EAAC+B,EAAE,CAAEb,QAAS,CAACc,mBAAmB,CAAEV,YAAa,CAACW,SAAS,CAAEV,UAAW,CAAAM,QAAA,cACpFzB,IAAA,SAAAyB,QAAA,CAAOjB,WAAW,CAAO,CAAC,CACb,CAAC,CAChBQ,cACF,CAAC,EACH,CAAC,CACHD,SACF,CAAC,CACH,CAAC,CAED,cAAe,CAAAV,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}