{"ast":null,"code":"import{CanvasText,getMaterialUrl}from'@lib/canvas';import{useCustomiserStore}from'@store/customiser';import{useEffect,useMemo,useRef,useState}from'react';import{CanvasTexture}from'three';import{usePortalRef}from'@hooks';import{createPortal}from'react-dom';import styles from'./NavText.module.scss';import{loadImage}from'@lib/img.util';import NavTextPreviewScene from'@components/three/CustomiserCanvas/NavTextScene';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// TODO - Pre load the fonts somewhere\nasync function loadFonts(fontUrl){const font=new FontFace('testFont',\"url(\".concat(fontUrl,\")\"));await font.load();document.fonts.add(font);}function getPatternType(_ref){let{hasCrystals,isLuxury}=_ref;if(!hasCrystals&&isLuxury)return'embroidery';else if(hasCrystals)return'crystals';return'';}const NavTextPreview=_ref2=>{var _editText$selectedNam,_previewImgRef$curren;let{editText,mainTextInputRef}=_ref2;const previewImgRef=useRef(null);const[fontFamily,setFontFamily]=useState(editText===null||editText===void 0?void 0:editText.font);const[isVisiblePreview,setIsVisiblePreview]=useState(false);const hasCrystals=editText!==null&&editText!==void 0&&editText.crystalPrice?true:false;const isLuxury=(editText===null||editText===void 0?void 0:(_editText$selectedNam=editText.selectedName)===null||_editText$selectedNam===void 0?void 0:_editText$selectedNam.id)==='2'?true:false;const hasPuff=editText!==null&&editText!==void 0&&editText.puffPrice&&!hasCrystals?true:false;// 3D puff\nconst toNormalMap=hasCrystals?false:true;const patternType=getPatternType({hasCrystals,isLuxury});const{updateText,addText,isMinimizedCustomiserNav}=useCustomiserStore();const portalRef=usePortalRef('NavHeaderAfter');const handleOnChange=e=>{var _mainTextInputRef$cur;if(editText!==null&&editText!==void 0&&editText.key){updateText(editText===null||editText===void 0?void 0:editText.key,{text:e.target.value});}else{if(e.target.value){addText({text:e.target.value});}}mainTextInputRef===null||mainTextInputRef===void 0?void 0:(_mainTextInputRef$cur=mainTextInputRef.current)===null||_mainTextInputRef$cur===void 0?void 0:_mainTextInputRef$cur.focus();};/**\r\n   * Save image here\r\n   */const materialImgMemo=useMemo(()=>{return loadImage(getMaterialUrl(editText===null||editText===void 0?void 0:editText.material));},[editText===null||editText===void 0?void 0:editText.material]);const outlineImgMemo=useMemo(()=>{return loadImage(getMaterialUrl(editText===null||editText===void 0?void 0:editText.outline));},[editText===null||editText===void 0?void 0:editText.outline]);const fabricPatternImgMemo=useMemo(()=>{return loadImage('/Fabric_Knitted_006_height_small.png');},[]);const crystalNormalMapImgMemo=useMemo(()=>{return loadImage('/crystal-12.png');},[]);const crystalBgImgMemo=useMemo(()=>{return loadImage(getMaterialUrl(editText===null||editText===void 0?void 0:editText.crystalBackground));},[editText===null||editText===void 0?void 0:editText.crystalBackground]);const crystalBgPatternImgMemo=useMemo(()=>{return loadImage('/crystal-bg-pattern.png');},[]);useEffect(()=>{const previewImgDom=previewImgRef.current;(async()=>{const canvasText=new CanvasText({hasPuff,toNormalMap,patternType,text:editText===null||editText===void 0?void 0:editText.text});if(!editText||!editText.key||!isVisiblePreview){canvasText.clear();return;}if(!editText.text){canvasText.clear();updateText(editText.key,{preview:new CanvasTexture(canvasText.getOutlineCanvas())});return;}// Adjust this once preloading fonts has been implemented\nif(fontFamily!==(editText===null||editText===void 0?void 0:editText.font)){setFontFamily(editText===null||editText===void 0?void 0:editText.font);await loadFonts(editText===null||editText===void 0?void 0:editText.font);}const img=(editText===null||editText===void 0?void 0:editText.material)&&(await materialImgMemo);const outlineImg=(editText===null||editText===void 0?void 0:editText.outline)&&(await outlineImgMemo);const embroideryPattern=await fabricPatternImgMemo;const crystalNormalMap=await crystalNormalMapImgMemo;const crystalBgPatternImg=await crystalBgPatternImgMemo;const crystalBgImg=(editText===null||editText===void 0?void 0:editText.crystalBackground)&&(await crystalBgImgMemo);const shouldUsePattern=isLuxury&&!hasPuff;const patternImg=shouldUsePattern&&(hasCrystals?crystalNormalMap:embroideryPattern);await canvasText.previewText({material:img,outline:outlineImg,previewImg:previewImgDom,normalMapPatternImg:patternImg,crystalBgPatternImg,crystalBgImg});updateText(editText.key,{preview:new CanvasTexture(canvasText.getOutlineCanvas()),normalMap:new CanvasTexture(canvasText.getNormalMapOutlineCanvas())});})();},[editText===null||editText===void 0?void 0:editText.text,editText===null||editText===void 0?void 0:editText.material,editText===null||editText===void 0?void 0:editText.outline,editText===null||editText===void 0?void 0:editText.font,editText===null||editText===void 0?void 0:editText.crystalBackground,isVisiblePreview,editText===null||editText===void 0?void 0:editText.puffPrice,editText===null||editText===void 0?void 0:editText.crystalPrice]);if(!portalRef){return null;}return/*#__PURE__*/createPortal(/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{id:\"testPreview\",style:{position:'absolute',zIndex:'100'}}),!isMinimizedCustomiserNav&&(editText===null||editText===void 0?void 0:editText.text)&&/*#__PURE__*/_jsx(\"div\",{className:styles.textPreview,children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:styles.textPreview__imgContainer,style:{display:'none'},children:/*#__PURE__*/_jsx(\"img\",{height:80,width:640,ref:el=>{previewImgRef.current=el;setIsVisiblePreview(!!el);}})}),(_previewImgRef$curren=previewImgRef.current)!==null&&_previewImgRef$curren!==void 0&&_previewImgRef$curren.src?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(NavTextPreviewScene,{text:editText})}):'']})})})]}),portalRef);};export default NavTextPreview;","map":{"version":3,"names":["CanvasText","getMaterialUrl","useCustomiserStore","useEffect","useMemo","useRef","useState","CanvasTexture","usePortalRef","createPortal","styles","loadImage","NavTextPreviewScene","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","loadFonts","fontUrl","font","FontFace","concat","load","document","fonts","add","getPatternType","_ref","hasCrystals","isLuxury","NavTextPreview","_ref2","_editText$selectedNam","_previewImgRef$curren","editText","mainTextInputRef","previewImgRef","fontFamily","setFontFamily","isVisiblePreview","setIsVisiblePreview","crystalPrice","selectedName","id","hasPuff","puffPrice","toNormalMap","patternType","updateText","addText","isMinimizedCustomiserNav","portalRef","handleOnChange","e","_mainTextInputRef$cur","key","text","target","value","current","focus","materialImgMemo","material","outlineImgMemo","outline","fabricPatternImgMemo","crystalNormalMapImgMemo","crystalBgImgMemo","crystalBackground","crystalBgPatternImgMemo","previewImgDom","canvasText","clear","preview","getOutlineCanvas","img","outlineImg","embroideryPattern","crystalNormalMap","crystalBgPatternImg","crystalBgImg","shouldUsePattern","patternImg","previewText","previewImg","normalMapPatternImg","normalMap","getNormalMapOutlineCanvas","children","style","position","zIndex","className","textPreview","textPreview__imgContainer","display","height","width","ref","el","src"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavText/NavTextPreview.tsx"],"sourcesContent":["import { CanvasText, PatternType, getMaterialUrl } from '@lib/canvas';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { CanvasTexture } from 'three';\r\nimport type { NavTextSelectProps } from './NavTextSelect';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { loadImage } from '@lib/img.util';\r\nimport NavTextPreviewScene from '@components/three/CustomiserCanvas/NavTextScene';\r\nimport FormInput from '@components/ui/FormInput';\r\n\r\n// TODO - Pre load the fonts somewhere\r\nasync function loadFonts(fontUrl: string) {\r\n  const font = new FontFace('testFont', `url(${fontUrl})`);\r\n  await font.load();\r\n  document.fonts.add(font);\r\n}\r\n\r\nfunction getPatternType({\r\n  hasCrystals,\r\n  isLuxury,\r\n}: {\r\n  hasCrystals: boolean;\r\n  isLuxury: boolean;\r\n}): PatternType {\r\n  if (!hasCrystals && isLuxury) return 'embroidery';\r\n  else if (hasCrystals) return 'crystals';\r\n\r\n  return '';\r\n}\r\n\r\ninterface NavTextPreviewProps extends NavTextSelectProps {\r\n  mainTextInputRef: React.MutableRefObject<HTMLInputElement | null>;\r\n}\r\n\r\nconst NavTextPreview = ({ editText, mainTextInputRef }: NavTextPreviewProps) => {\r\n  const previewImgRef = useRef<HTMLImageElement | null>(null);\r\n  const [fontFamily, setFontFamily] = useState<string | undefined>(editText?.font);\r\n  const [isVisiblePreview, setIsVisiblePreview] = useState(false);\r\n\r\n  const hasCrystals: boolean = editText?.crystalPrice ? true : false;\r\n  const isLuxury: boolean = editText?.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = editText?.puffPrice && !hasCrystals ? true : false; // 3D puff\r\n  const toNormalMap = hasCrystals ? false : true;\r\n  const patternType = getPatternType({ hasCrystals, isLuxury });\r\n\r\n  const { updateText, addText, isMinimizedCustomiserNav } = useCustomiserStore();\r\n\r\n  const portalRef = usePortalRef('NavHeaderAfter');\r\n\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (editText?.key) {\r\n      updateText(editText?.key, {\r\n        text: e.target.value,\r\n      });\r\n    } else {\r\n      if (e.target.value) {\r\n        addText({ text: e.target.value });\r\n      }\r\n    }\r\n    mainTextInputRef?.current?.focus();\r\n  };\r\n\r\n  /**\r\n   * Save image here\r\n   */\r\n  const materialImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.material));\r\n  }, [editText?.material]);\r\n  const outlineImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.outline));\r\n  }, [editText?.outline]);\r\n  const fabricPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/Fabric_Knitted_006_height_small.png');\r\n  }, []);\r\n  const crystalNormalMapImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-12.png');\r\n  }, []);\r\n  const crystalBgImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.crystalBackground));\r\n  }, [editText?.crystalBackground]);\r\n  const crystalBgPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-bg-pattern.png');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const previewImgDom = previewImgRef.current as HTMLImageElement;\r\n\r\n    (async () => {\r\n      const canvasText = new CanvasText({\r\n        hasPuff,\r\n        toNormalMap,\r\n        patternType,\r\n        text: editText?.text,\r\n      });\r\n\r\n      if (!editText || !editText.key || !isVisiblePreview) {\r\n        canvasText.clear();\r\n        return;\r\n      }\r\n\r\n      if (!editText.text) {\r\n        canvasText.clear();\r\n        updateText(editText.key, {\r\n          preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Adjust this once preloading fonts has been implemented\r\n      if (fontFamily !== editText?.font) {\r\n        setFontFamily(editText?.font);\r\n        await loadFonts(editText?.font as string);\r\n      }\r\n\r\n      const img = editText?.material && (await materialImgMemo);\r\n      const outlineImg = editText?.outline && (await outlineImgMemo);\r\n      const embroideryPattern = await fabricPatternImgMemo;\r\n      const crystalNormalMap = await crystalNormalMapImgMemo;\r\n      const crystalBgPatternImg = await crystalBgPatternImgMemo;\r\n      const crystalBgImg = editText?.crystalBackground && (await crystalBgImgMemo);\r\n\r\n      const shouldUsePattern = isLuxury && !hasPuff;\r\n      const patternImg = shouldUsePattern && (hasCrystals ? crystalNormalMap : embroideryPattern);\r\n\r\n      await canvasText.previewText({\r\n        material: img,\r\n        outline: outlineImg,\r\n        previewImg: previewImgDom,\r\n        normalMapPatternImg: patternImg,\r\n        crystalBgPatternImg,\r\n        crystalBgImg,\r\n      });\r\n\r\n      updateText(editText.key, {\r\n        preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        normalMap: new CanvasTexture(canvasText.getNormalMapOutlineCanvas()),\r\n      });\r\n    })();\r\n  }, [\r\n    editText?.text,\r\n    editText?.material,\r\n    editText?.outline,\r\n    editText?.font,\r\n    editText?.crystalBackground,\r\n    isVisiblePreview,\r\n    editText?.puffPrice,\r\n    editText?.crystalPrice,\r\n  ]);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <>\r\n      <div id='testPreview' style={{ position: 'absolute', zIndex: '100' }} />\r\n      {!isMinimizedCustomiserNav && editText?.text && (\r\n        <div className={styles.textPreview}>\r\n          <div>\r\n            {\r\n              <>\r\n                {/* Image is no longer needed, remove this */}\r\n                <div className={styles.textPreview__imgContainer} style={{ display: 'none' }}>\r\n                  <img\r\n                    height={80}\r\n                    width={640}\r\n                    ref={(el) => {\r\n                      previewImgRef.current = el;\r\n                      setIsVisiblePreview(!!el);\r\n                    }}\r\n                  />\r\n                </div>\r\n                {previewImgRef.current?.src ? (\r\n                  <>\r\n                    <NavTextPreviewScene text={editText} />\r\n                  </>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavTextPreview;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}