{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reian\\\\Desktop\\\\Work\\\\Freelance\\\\Boxxer World\\\\boxxerworld-shopify-frontend\\\\customiser\\\\src\\\\components\\\\nav\\\\CustomiserNav\\\\CustomiserNav.tsx\",\n  _s = $RefreshSig$();\nimport { useCustomiserStore } from '@store/customiser';\nimport cn from 'classnames';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\nimport NavFitting from '../NavFitting';\nimport NavFlags from '../NavFlags';\nimport NavHeader from '../NavHeader';\nimport NavImages from '../NavImages';\nimport NavOptions from '../NavOptions';\nimport NavPart from '../NavPart';\nimport NavSize from '../NavSize';\nimport NavText from '../NavText';\nimport styles from './CustomiserNav.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomiserNav = ({\n  className\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [scrollCoordinates, setScrollCoordinates] = useState({\n    left: 0,\n    top: 0\n  });\n  const {\n    selectedPart,\n    selectedNav,\n    texts\n  } = useCustomiserStore();\n  const scrollableRef = useRef(null);\n  const editText = useMemo(() => texts === null || texts === void 0 ? void 0 : texts.find(g => g.edit), [texts]);\n  const isFullscreen = useMemo(() => (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.name) === 'Text' && editText, [selectedNav, editText]);\n  const rootClassName = cn(styles.root, {\n    [styles.open]: isOpen,\n    [styles.minimized]: isMinimized,\n    [styles.hasActions]: selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.hasActions,\n    [styles.isFullscreen]: isFullscreen\n  }, className);\n  const saveScrollCoordinates = () => {\n    if (isOpen && scrollableRef.current) {\n      setScrollCoordinates({\n        left: scrollableRef.current.scrollLeft,\n        top: scrollableRef.current.scrollTop\n      });\n    }\n  };\n  useEffect(() => {\n    if (isOpen && scrollableRef.current) {\n      console.log('loadScrollCoordinates', scrollCoordinates);\n      scrollableRef.current.scrollTo({\n        ...scrollCoordinates,\n        behavior: 'auto'\n      });\n    }\n  }, [isOpen]);\n  const toggleOpen = () => {\n    saveScrollCoordinates();\n    setIsOpen(!isOpen);\n  };\n  useEffect(() => {\n    if (selectedNav === null && selectedPart === null) {\n      setIsOpen(true);\n    } else {\n      setIsOpen(false);\n      setIsMinimized(false);\n    }\n  }, [selectedPart, selectedNav]);\n  return /*#__PURE__*/_jsxDEV(motion.nav, {\n    layout: \"preserve-aspect\",\n    transition: {\n      type: 'spring',\n      stiffness: 700,\n      damping: 40\n    },\n    className: rootClassName,\n    children: [/*#__PURE__*/_jsxDEV(NavHeader, {\n      className: styles.header,\n      toggle: () => toggleOpen(),\n      isOpen: isOpen,\n      onClick: () => {\n        setIsMinimized(!isMinimized);\n      },\n      isMinimized: isMinimized\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"NavHeaderAfter\",\n      className: styles.headerAfter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        initial: false,\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          id: \"scrollable\",\n          className: styles.content,\n          initial: \"collapsed\",\n          animate: \"open\",\n          exit: \"collapsed\",\n          variants: {\n            open: {\n              opacity: 1\n            },\n            collapsed: {\n              opacity: 0\n            }\n          },\n          ref: el => {\n            scrollableRef.current = el;\n          },\n          children: isOpen ? /*#__PURE__*/_jsxDEV(NavOptions, {\n            toggle: () => toggleOpen()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this) : (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.type) === 'fitting' ? /*#__PURE__*/_jsxDEV(NavFitting, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this) : (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.type) === 'names' ? /*#__PURE__*/_jsxDEV(NavText, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this) : (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.type) === 'flags' ? /*#__PURE__*/_jsxDEV(NavFlags, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this) : (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.type) === 'images' ? /*#__PURE__*/_jsxDEV(NavImages, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this) : (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.type) === 'size' ? /*#__PURE__*/_jsxDEV(NavSize, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this) : selectedPart ? /*#__PURE__*/_jsxDEV(NavPart, {\n            part: selectedPart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), !isOpen && (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.hasActions) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [selectedPart && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"CustomiserNavMaterial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"CustomiserNavActions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomiserNav, \"1WVGJCjzRtAKGUuTBZJnTlZ5mQk=\", false, function () {\n  return [useCustomiserStore];\n});\n_c = CustomiserNav;\nexport default CustomiserNav;\nvar _c;\n$RefreshReg$(_c, \"CustomiserNav\");","map":{"version":3,"names":["useCustomiserStore","cn","AnimatePresence","motion","Suspense","useEffect","useMemo","useRef","useState","NavFitting","NavFlags","NavHeader","NavImages","NavOptions","NavPart","NavSize","NavText","styles","jsxDEV","_jsxDEV","CustomiserNav","className","_s","isOpen","setIsOpen","isMinimized","setIsMinimized","scrollCoordinates","setScrollCoordinates","left","top","selectedPart","selectedNav","texts","scrollableRef","editText","find","g","edit","isFullscreen","name","rootClassName","root","open","minimized","hasActions","saveScrollCoordinates","current","scrollLeft","scrollTop","console","log","scrollTo","behavior","toggleOpen","nav","layout","transition","type","stiffness","damping","children","header","toggle","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","headerAfter","fallback","initial","div","content","animate","exit","variants","opacity","collapsed","ref","el","part","actions","_c","$RefreshReg$"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/CustomiserNav/CustomiserNav.tsx"],"sourcesContent":["import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavFitting from '../NavFitting';\r\nimport NavFlags from '../NavFlags';\r\nimport NavHeader from '../NavHeader';\r\nimport NavImages from '../NavImages';\r\nimport NavOptions from '../NavOptions';\r\nimport NavPart from '../NavPart';\r\nimport NavMinimize from '../NavMinimize';\r\nimport NavSize from '../NavSize';\r\nimport NavText from '../NavText';\r\n\r\nimport styles from './CustomiserNav.module.scss';\r\n\r\nexport interface CustomiserNavProps {\r\n  className?: string;\r\n}\r\n\r\nconst CustomiserNav = ({ className }: CustomiserNavProps) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [scrollCoordinates, setScrollCoordinates] = useState({ left: 0, top: 0 });\r\n\r\n  const { selectedPart, selectedNav, texts } = useCustomiserStore();\r\n\r\n  const scrollableRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const isFullscreen = useMemo(\r\n    () => selectedNav?.name === 'Text' && editText,\r\n    [selectedNav, editText],\r\n  );\r\n\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      [styles.open]: isOpen,\r\n      [styles.minimized]: isMinimized,\r\n      [styles.hasActions]: selectedNav?.hasActions,\r\n      [styles.isFullscreen]: isFullscreen,\r\n    },\r\n    className,\r\n  );\r\n\r\n  const saveScrollCoordinates = () => {\r\n    if (isOpen && scrollableRef.current) {\r\n      setScrollCoordinates({\r\n        left: scrollableRef.current.scrollLeft,\r\n        top: scrollableRef.current.scrollTop,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && scrollableRef.current) {\r\n      console.log('loadScrollCoordinates', scrollCoordinates);\r\n      scrollableRef.current.scrollTo({\r\n        ...scrollCoordinates,\r\n        behavior: 'auto',\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const toggleOpen = () => {\r\n    saveScrollCoordinates();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedNav === null && selectedPart === null) {\r\n      setIsOpen(true);\r\n    } else {\r\n      setIsOpen(false);\r\n      setIsMinimized(false);\r\n    }\r\n  }, [selectedPart, selectedNav]);\r\n\r\n  return (\r\n    <motion.nav\r\n      layout='preserve-aspect'\r\n      transition={{\r\n        type: 'spring',\r\n        stiffness: 700,\r\n        damping: 40,\r\n      }}\r\n      className={rootClassName}\r\n    >\r\n      {/* {!isOpen && (\r\n        <NavMinimize\r\n          isMinimized={isMinimized}\r\n          onMinimize={() => setIsMinimized(true)}\r\n          onMaximize={() => setIsMinimized(false)}\r\n        />\r\n      )} */}\r\n      <NavHeader\r\n        className={styles.header}\r\n        toggle={() => toggleOpen()}\r\n        isOpen={isOpen}\r\n        onClick={() => {\r\n          setIsMinimized(!isMinimized);\r\n        }}\r\n        isMinimized={isMinimized}\r\n      />\r\n      <div id='NavHeaderAfter' className={styles.headerAfter}></div>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <AnimatePresence initial={false}>\r\n          <motion.div\r\n            id='scrollable'\r\n            className={styles.content}\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n              open: { opacity: 1 },\r\n              collapsed: { opacity: 0 },\r\n            }}\r\n            ref={(el) => {\r\n              scrollableRef.current = el;\r\n            }}\r\n          >\r\n            {isOpen ? (\r\n              <NavOptions toggle={() => toggleOpen()} />\r\n            ) : selectedNav?.type === 'fitting' ? (\r\n              <NavFitting />\r\n            ) : selectedNav?.type === 'names' ? (\r\n              <NavText />\r\n            ) : selectedNav?.type === 'flags' ? (\r\n              <NavFlags />\r\n            ) : selectedNav?.type === 'images' ? (\r\n              <NavImages />\r\n            ) : selectedNav?.type === 'size' ? (\r\n              <NavSize />\r\n            ) : selectedPart ? (\r\n              <NavPart part={selectedPart} />\r\n            ) : null}\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </Suspense>\r\n      {!isOpen && selectedNav?.hasActions && (\r\n        <div className={styles.actions}>\r\n          {selectedPart && <div id='CustomiserNavMaterial'></div>}\r\n          <div id='CustomiserNavActions'></div>\r\n        </div>\r\n      )}\r\n    </motion.nav>\r\n  );\r\n};\r\n\r\nexport default CustomiserNav;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}