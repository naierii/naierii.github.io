{"version":3,"file":"static/js/43.481d2b76.chunk.js","mappings":"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","sources":["webpack://boxxerworld-customiser/./src/components/ui/OptionButton/OptionButton.module.scss?2035","components/ui/OptionButton/OptionButton.tsx","hooks/useHydration/useHydration.ts","hooks/usePortalRef/usePortalRef.ts","webpack://boxxerworld-customiser/./src/components/nav/NavButtons/NavButtons.module.scss?b4ae","webpack://boxxerworld-customiser/./src/components/ui/DontShowAgain/DontShowAgain.module.scss?2c56","components/ui/DontShowAgain/DontShowAgain.tsx","components/nav/NavButtons/NavButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFitting/NavFitting.module.scss?96df","components/nav/NavFitting/NavFitting.tsx","components/ui/Image/getSrcSets.ts","webpack://boxxerworld-customiser/./src/components/ui/Image/Image.module.scss?e41e","components/ui/Image/Image.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFlags/NavFlags.module.scss?2098","components/nav/NavFlags/NavFlagsSelect.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavDecalAdjust/NavDecalAdjust.module.scss?c425","components/nav/NavDecalAdjust/NavDecalAdjust.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavEditButtons/NavEditButtons.module.scss?6ae0","components/nav/NavEditButtons/NavEditButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavOptionEdit/NavOptionEdit.module.scss?d15e","components/nav/NavOptionEdit/NavOptionEdit.tsx","components/nav/NavFlags/NavFlagsFlag.tsx","components/nav/NavFlags/NavFlags.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavHeader/NavHeader.module.scss?a403","webpack://boxxerworld-customiser/./src/components/ui/InfoButton/InfoButton.module.scss?0cd7","components/ui/InfoButton/InfoDisplay.tsx","components/ui/InfoButton/InfoButton.tsx","components/nav/NavHeader/NavHeader.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavImages/NavImages.module.scss?0415","components/nav/NavImages/NavImagesImage.tsx","components/nav/NavImages/NavImagesUpload.tsx","components/nav/NavImages/NavImagesSelect.tsx","components/nav/NavImages/NavImages.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavOptions/NavOptions.module.scss?6b01","components/nav/NavOptions/NavOptions.tsx","webpack://boxxerworld-customiser/./src/components/ui/PillButton/PillButton.module.scss?5c47","components/ui/PillButton/PillButton.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/MaterialGroup.module.scss?bec8","components/nav/MaterialGroup/MaterialGroupState.ts","components/nav/MaterialGroup/Material.tsx","components/nav/MaterialGroup/MaterialType.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/SelectedMaterialInfo.module.scss?ad46","components/nav/MaterialGroup/SelectedMaterialInfo.tsx","components/nav/MaterialGroup/MaterialGroup.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavPart/NavPart.module.scss?e3f3","components/nav/NavPart/NavPart.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormInput/FormInput.module.scss?a3cb","components/ui/FormInput/FormInput.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormSelect/FormSelect.module.scss?5df1","components/ui/FormSelect/FormSelect.tsx","services/size.ts","webpack://boxxerworld-customiser/./src/components/nav/NavSize/NavSize.module.scss?68ae","components/nav/NavSize/NavSize.tsx","webpack://boxxerworld-customiser/./src/components/ui/Accordion/Accordion.module.scss?bd05","components/ui/Accordion/Accordion.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavStepButtons/NavStepButtons.module.scss?5fac","components/nav/NavText/NavTextPlaceTextGuide.tsx","components/nav/NavStepButtons/NavStepButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavText.module.scss?7ead","components/ui/Price/Price.module.scss","components/ui/Price/Price.tsx","components/nav/NavText/NavTextFinish.tsx","components/nav/NavText/NavTextNameTypes.tsx","components/nav/NavText/NavTextOutline.tsx","components/nav/NavText/NavTextSelect.tsx","components/nav/NavText/NavTextText.tsx","components/nav/NavText/NavTextsSelection.tsx","lib/canvas.ts","lib/img.util.ts","webpack://boxxerworld-customiser/./src/components/three/CustomiserCanvas/NavTextScene.module.scss?f04f","components/three/CustomiserCanvas/NavTextScene.tsx","components/nav/NavText/NavTextPreview.tsx","components/nav/NavText/NavText.tsx","webpack://boxxerworld-customiser/./src/components/nav/CustomiserNav/CustomiserNav.module.scss?394a","components/nav/CustomiserNav/CustomiserNav.tsx","webpack://boxxerworld-customiser/./src/components/layout/Header/Header.module.scss?47aa","components/layout/Header/Header.tsx","webpack://boxxerworld-customiser/./src/components/layout/Customiser/Customiser.module.scss?e94f","components/layout/Customiser/Customiser.tsx","lib/shopify.ts","components/three/Loadable/Loadable.tsx","components/three/MouseHelper/MouseHelper.tsx","webpack://boxxerworld-customiser/./src/components/three/CustomiserCanvas/CustomiserCanvas.module.scss?7972","components/three/CustomiserCanvas/CustomiserCanvas.tsx","components/three/Lights/Lights.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OptionButton_root__M63xT\",\"selected\":\"OptionButton_selected__Mea42\"};","import cn from 'classnames';\r\nimport { ButtonHTMLAttributes } from 'react';\r\n\r\nimport styles from './OptionButton.module.scss';\r\n\r\nexport interface OptionButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  className?: string;\r\n  selected?: boolean;\r\n}\r\n\r\nconst OptionButton = ({ className, selected, children, ...rest }: OptionButtonProps) => {\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      [styles.selected]: selected,\r\n    },\r\n    className,\r\n  );\r\n  return (\r\n    <button className={rootClassName} {...rest}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default OptionButton;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const useHydration = () => {\r\n  const [hydrated, setHydrated] = useState(useCustomiserStore.persist.hasHydrated);\r\n\r\n  useEffect(() => {\r\n    const unsubHydrate = useCustomiserStore.persist.onHydrate(() => setHydrated(false)); // Note: this is just in case you want to take into account manual rehydrations. You can remove this if you don't need it/don't want it.\r\n    const unsubFinishHydration = useCustomiserStore.persist.onFinishHydration(() =>\r\n      setHydrated(true),\r\n    );\r\n\r\n    setHydrated(useCustomiserStore.persist.hasHydrated());\r\n\r\n    return () => {\r\n      unsubHydrate();\r\n      unsubFinishHydration();\r\n    };\r\n  }, []);\r\n\r\n  return hydrated;\r\n};\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nexport const usePortalRef = (id: string) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const portalRef = useRef<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) {\r\n      portalRef.current = document.getElementById(id);\r\n      if (portalRef.current) {\r\n        setLoaded(true);\r\n      }\r\n    }\r\n  }, [id, loaded]);\r\n\r\n  return loaded ? portalRef.current : null;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavButtons_root__ON-jJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"DontShowAgain_root__zOI6r\",\"notifContainer\":\"DontShowAgain_notifContainer__adaGf\",\"notifControlContainer\":\"DontShowAgain_notifControlContainer__gVQq0\",\"btnContainer\":\"DontShowAgain_btnContainer__We3vg\"};","import React, { useState, useEffect } from 'react';\r\nimport styles from './DontShowAgain.module.scss';\r\n\r\nconst DontShowAgain = ({\r\n  children,\r\n  notifName = 'hideShowNotification',\r\n  setShowNotification,\r\n  cb,\r\n}: {\r\n  children: React.ReactNode;\r\n  notifName: string;\r\n  setShowNotification: React.Dispatch<React.SetStateAction<boolean>>;\r\n  cb?: () => void;\r\n}) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const handleDismiss = () => {\r\n    setShowNotification(false);\r\n    if (isChecked) {\r\n      localStorage.setItem(notifName, '1');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.root}>\r\n        <span className={styles.notifContainer}>\r\n          {children}\r\n          <div className={styles.notifControlContainer}>\r\n            <label>\r\n              <input type='checkbox' onChange={(e) => setIsChecked(e.target.checked)} />\r\n              Don&apos;t show again\r\n            </label>\r\n            <span className={styles.btnContainer}>\r\n              <button onClick={handleDismiss}>Cancel</button>\r\n              <button\r\n                onClick={() => {\r\n                  handleDismiss();\r\n                  cb && cb();\r\n                }}\r\n              >\r\n                Okay\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DontShowAgain;\r\n","import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavButtons.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\nimport DontShowAgain from '../../ui/DontShowAgain';\r\nimport { useState } from 'react';\r\n\r\nexport interface NavButtonsProps {\r\n  className?: string;\r\n  confirmText?: string | Falsey;\r\n  confirmStorage?: string;\r\n}\r\n\r\nconst NavButtons = ({ className, confirmText, confirmStorage }: NavButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const cancelPartChange = useCustomiserStore((state) => state.cancelPartChange);\r\n  const resetNav = useCustomiserStore((state) => state.resetNav);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const notifTitle = confirmStorage;\r\n  const localStorageItem = localStorage.getItem(notifTitle || '');\r\n  const shouldShowNotification = !localStorageItem;\r\n\r\n  if (!portalRef || !popupPortalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className={rootClassName}>\r\n        <Button onClick={() => cancelPartChange()}>Cancel</Button>\r\n        <Button\r\n          colour='red'\r\n          onClick={() => {\r\n            if (!confirmText) {\r\n              resetNav();\r\n            } else {\r\n              if (shouldShowNotification) {\r\n                setShowPopup(true);\r\n              } else {\r\n                resetNav();\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </div>\r\n      {confirmText &&\r\n        showPopup &&\r\n        shouldShowNotification &&\r\n        notifTitle &&\r\n        ReactDOM.createPortal(\r\n          <DontShowAgain cb={resetNav} setShowNotification={setShowPopup} notifName={notifTitle}>\r\n            <span>{confirmText}</span>\r\n          </DontShowAgain>,\r\n          popupPortalRef,\r\n        )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"fittingOption\":\"NavFitting_fittingOption__XQUUG\",\"fittingButtons\":\"NavFitting_fittingButtons__Y1hdd\"};","import OptionButton from '@components/ui/OptionButton';\r\nimport { CustomProductOptionFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { motion } from 'framer-motion';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavFitting.module.scss';\r\nimport { FocusCameraOnPart } from '@components/layout/Customiser/Customiser';\r\n\r\nexport interface FittingOptionProps {\r\n  option: CustomProductOptionFragment;\r\n  focusCameraOnPart?: FocusCameraOnPart;\r\n}\r\n\r\nconst FittingOption = ({ option, focusCameraOnPart }: FittingOptionProps) => {\r\n  const selectedModels = useCustomiserStore((state) => state.selectedModels);\r\n  const setSelectedModel = useCustomiserStore((state) => state.setSelectedModel);\r\n\r\n  if (!option) {\r\n    return null;\r\n  }\r\n\r\n  const getSelected = selectedModels.find((m) => m.optionId === option.id)?.model;\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={styles.fittingOption}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <h3>{option.name}</h3>\r\n        <div className={styles.fittingButtons}>\r\n          {option.models?.map((m) => (\r\n            <OptionButton\r\n              key={m?.id}\r\n              selected={getSelected?.id === m?.model?.data?.id}\r\n              onClick={() => {\r\n                setSelectedModel(option.id, m?.model?.data);\r\n                focusCameraOnPart && focusCameraOnPart(option.name);\r\n              }}\r\n            >\r\n              {m?.model?.data?.attributes?.name}\r\n            </OptionButton>\r\n          ))}\r\n        </div>\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface NavFittingProps {\r\n  focusCameraOnPart?: FocusCameraOnPart;\r\n}\r\nconst NavFitting = ({ focusCameraOnPart }: NavFittingProps) => {\r\n  const fittingOptions = useCustomiserStore(\r\n    (state) => state.customProduct?.attributes?.options,\r\n  ) as Array<CustomProductOptionFragment>;\r\n\r\n  return (\r\n    <>\r\n      {fittingOptions?.map((o) => (\r\n        <FittingOption focusCameraOnPart={focusCameraOnPart} key={o?.id} option={o} />\r\n      ))}\r\n      <NavButtons />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavFitting;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Formats } from './types';\r\n\r\nfunction getSrcSet(formats: Formats): string | null {\r\n  if (!formats) return null;\r\n\r\n  const fff = Object.entries(formats)\r\n    .map((f) => {\r\n      return f[1]\r\n        ? {\r\n            width: f[1].width,\r\n            url: f[1].url,\r\n          }\r\n        : null;\r\n    })\r\n    .filter((format) => format);\r\n\r\n  return !fff.length\r\n    ? null\r\n    : fff\r\n        .sort((a, b) => {\r\n          if (a?.width && b?.width && a.width < b.width) return -1;\r\n          if (a?.width && b?.width && a.width > b.width) return 1;\r\n          return 0;\r\n        })\r\n        .reduce((acc: any, current: any, index: number, array: any) => {\r\n          return acc + `${current.url} ${current.width}w${index < array.length - 1 ? ', ' : ''}`;\r\n        }, '');\r\n}\r\n\r\nexport default function getSrcSets(formats: Formats): string | null {\r\n  return getSrcSet(formats);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Image_root__u7aDb\"};","import { ImageFragment, Maybe } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { CSSProperties, useMemo } from 'react';\r\nimport getSrcSets from './getSrcSets';\r\n\r\nimport styles from './Image.module.scss';\r\n\r\nexport interface ImageProps {\r\n  className?: string;\r\n  image?: Maybe<ImageFragment>;\r\n  sizes?: string;\r\n}\r\n\r\nconst Image = ({ className, image, sizes }: ImageProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  if (!image) {\r\n    return null;\r\n  }\r\n\r\n  const relativeHeight = useMemo(() => {\r\n    if (image.attributes?.height && image.attributes?.width) {\r\n      return (image.attributes.height / image.attributes.width) * 100;\r\n    }\r\n    return 100;\r\n  }, [image]);\r\n\r\n  const style = { '--image-padding-top': `${relativeHeight}%` } as CSSProperties;\r\n\r\n  const srcSet = useMemo(() => getSrcSets(image.attributes?.formats), [image]);\r\n\r\n  return (\r\n    <div className={rootClassName} style={style}>\r\n      {srcSet && (\r\n        <img src={image.attributes?.url} srcSet={srcSet} sizes={sizes ? sizes : '100vw'} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"flags\":\"NavFlags_flags__S52CT\",\"flag\":\"NavFlags_flag__gtrVs\",\"flagItem\":\"NavFlags_flagItem__rI7sv\",\"flagItemImage\":\"NavFlags_flagItemImage__6ov2x\"};","import Image from '@components/ui/Image';\r\nimport { FlagFragment } from '@graphql/generated/graphql';\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\n\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsSelectProps {\r\n  editFlag?: FlagCustomiser;\r\n  flags: FlagFragment[];\r\n}\r\n\r\nexport const NavFlagsSelect = ({ editFlag, flags }: NavFlagsSelectProps) => {\r\n  const { addFlag, updateFlag } = useCustomiserStore((state) => state);\r\n\r\n  const flagSelected = (flag: FlagFragment) => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        flag: flag,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addFlag({\r\n        flag: flag,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flags}>\r\n      {flags?.map((f) => (\r\n        <div className={styles.flag} key={f.id} onClick={() => flagSelected(f)}>\r\n          <Image image={f.attributes?.image.data} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavDecalAdjust_root__t6vBt\",\"root__rotate\":\"NavDecalAdjust_root__rotate__jXeZv\",\"rotate\":\"NavDecalAdjust_rotate__adO98\",\"scale\":\"NavDecalAdjust_scale__gq4ry\",\"iconContainer\":\"NavDecalAdjust_iconContainer__nW-8U\",\"rotateIcon\":\"NavDecalAdjust_rotateIcon__fOqK4\",\"adjustControls\":\"NavDecalAdjust_adjustControls__ioLx3\"};","/* eslint-disable react/prop-types */\r\nimport { GraphicPriceEntity, GraphicPriceFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport ReactSlider from 'react-slider';\r\nimport styles from './NavDecalAdjust.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\nimport { FaCircleMinus, FaCirclePlus } from 'react-icons/fa6';\r\nimport { useState } from 'react';\r\n\r\nimport { GiClockwiseRotation, GiAnticlockwiseRotation } from 'react-icons/gi';\r\n\r\nexport interface NavDecalAdjustProps {\r\n  className?: string;\r\n  prices?: GraphicPriceFragment[];\r\n  scale?: number;\r\n  rotation?: number;\r\n  onScale?: (event: number, price?: GraphicPriceEntity) => void;\r\n  onRotate?: (event: number) => void;\r\n}\r\n\r\nconst range = (start: number, stop: number, step: number) =>\r\n  Array.from({ length: (stop - start) / step + 1 }, (value, index) => start + index * step);\r\n\r\nconst NavDecalAdjust = ({\r\n  className,\r\n  scale = 1,\r\n  rotation = 0,\r\n  prices,\r\n  onScale,\r\n  onRotate,\r\n}: NavDecalAdjustProps) => {\r\n  const scaleAdjust = 0.15;\r\n  const rotateAdjust = 7.5;\r\n  const portalRef = usePortalRef('CustomiserCanvasControls');\r\n\r\n  const [currentScale, setCurrentScale] = useState(scale);\r\n  const [currentRotate, setCurrentRotate] = useState(rotation);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  const rootRotateClassName = cn(styles.root, className, styles.root__rotate);\r\n  const min = 1;\r\n  const max = 2;\r\n  const numberOfSteps = prices?.length ?? 10;\r\n  const step = (max - min) / (numberOfSteps - 1);\r\n  const marks = range(min, max, step);\r\n\r\n  const formattedPrices = prices?.map((p, i) => ({\r\n    ...p,\r\n    markKey: Number(marks[i].toFixed(5)),\r\n  }));\r\n\r\n  const onChange = (value: number) => {\r\n    const price = formattedPrices?.find((p) => p.markKey === value);\r\n    if (onScale) onScale(value, price);\r\n  };\r\n\r\n  const addScale = () => {\r\n    setCurrentScale((cur) => {\r\n      onScale && onScale(cur + scaleAdjust);\r\n      return cur + scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const subtractScale = () => {\r\n    setCurrentScale((cur) => {\r\n      if (cur - scaleAdjust <= 0) return cur;\r\n      onScale && onScale(cur - scaleAdjust);\r\n      return cur - scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur + rotateAdjust);\r\n      return cur + rotateAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateCounterClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur - rotateAdjust);\r\n      return cur - rotateAdjust;\r\n    });\r\n  };\r\n\r\n  return createPortal(\r\n    <>\r\n      <div className={rootRotateClassName}>\r\n        <span>\r\n          <h4>Size</h4>\r\n          <span className={styles.iconContainer}>\r\n            <span onClick={subtractScale}>\r\n              <FaCircleMinus />\r\n            </span>\r\n            <span onClick={addScale}>\r\n              <FaCirclePlus />\r\n            </span>\r\n          </span>\r\n        </span>\r\n        <span>\r\n          <h4>Rotate</h4>\r\n          <span className={styles.iconContainer}>\r\n            <span className={styles.rotateIcon} onClick={rotateCounterClockwise}>\r\n              <GiAnticlockwiseRotation />\r\n            </span>\r\n            <span className={styles.rotateIcon} onClick={rotateClockwise}>\r\n              <GiClockwiseRotation />\r\n            </span>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavDecalAdjust;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavEditButtons_root__43Hm3\"};","import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavEditButtons.module.scss';\r\n\r\nexport interface NavEditButtonsProps {\r\n  className?: string;\r\n  onApply?: () => void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst NavEditButtons = ({ className, disabled, onApply }: NavEditButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={rootClassName}>\r\n      <Button onClick={onApply}>Cancel</Button>\r\n      <Button colour='red' onClick={onApply} disabled={disabled}>\r\n        Save\r\n      </Button>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavEditButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavOptionEdit_root__q-pp0\",\"eyeIcon\":\"NavOptionEdit_eyeIcon__v85fP\"};","import cn from 'classnames';\r\n\r\nimport styles from './NavOptionEdit.module.scss';\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa6';\r\nimport { MouseEventHandler } from 'react';\r\n\r\nexport interface NavOptionEditProps {\r\n  className?: string;\r\n  onEdit?: () => void;\r\n  onDelete?: () => void;\r\n  isVisible?: boolean;\r\n  toggleVisibility?: () => void;\r\n}\r\n\r\nconst NavOptionEdit = ({\r\n  className,\r\n  onEdit,\r\n  onDelete,\r\n  isVisible = true,\r\n  toggleVisibility,\r\n}: NavOptionEditProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const isVisibleEye = typeof isVisible === undefined ? true : isVisible;\r\n\r\n  const handleIsVisible: MouseEventHandler<HTMLSpanElement> = (event) => {\r\n    event.stopPropagation();\r\n    toggleVisibility && toggleVisibility();\r\n  };\r\n  return (\r\n    <div className={rootClassName}>\r\n      <span onClick={handleIsVisible} className={styles.eyeIcon}>\r\n        {isVisibleEye ? <FaEye /> : <FaEyeSlash />}\r\n      </span>\r\n      <button onClick={onEdit}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24.785 24.788'>\r\n          <path d='M24.785 6.739 18.046 0 0 18.049v6.739h6.739Zm-6.738-3.218 3.218 3.218-1.351 1.352-3.217-3.218Zm-3.112 3.112 3.218 3.218L7.467 20.538l-3.218-3.22ZM2.489 22.298v-3.219l3.218 3.218Z' />\r\n        </svg>\r\n      </button>\r\n      <button onClick={onDelete}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.601 23.219'>\r\n          <path d='m14.601 11.609-1.489-1.489L2.992 0 .001 2.978l8.631 8.631-8.631 8.632 2.991 2.978L13.112 13.1Z' />\r\n          <path d='m9 11.609 1.489 1.489 10.12 10.12L23.6 20.24l-8.631-8.631L23.6 2.977 20.609-.001l-10.12 10.119Z' />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavOptionEdit;\r\n","import Image from '@components/ui/Image';\r\n\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsFlagProps {\r\n  flag: FlagCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavFlagsFlag = ({ flag, setShowSelector: setSelectModel }: NavFlagsFlagProps) => {\r\n  const { updateFlag, deleteFlag } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (flag.key) {\r\n      updateFlag(flag.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (flag.key) {\r\n      deleteFlag(flag.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flagItem}>\r\n      <div className={styles.flagItemImage}>\r\n        <Image image={flag.flag?.attributes?.image.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import { startTransition, useState } from 'react';\r\nimport { NavFlagsSelect } from './NavFlagsSelect';\r\n\r\nimport Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\nimport styles from './NavFlags.module.scss';\r\nimport { NavFlagsFlag } from './NavFlagsFlag';\r\nimport { GraphicPriceEntity, useGetFlagsQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nconst NavFlags = () => {\r\n  const flags = useCustomiserStore((state) => state.flags);\r\n  const updateFlag = useCustomiserStore((state) => state.updateFlag);\r\n  const editFlag = flags?.find((g) => g.edit);\r\n\r\n  const [showSelector, setShowSelector] = useState(false);\r\n\r\n  const { data: flagQuery } = useGetFlagsQuery(\r\n    graphQLClient,\r\n    {\r\n      pagination: { limit: 500 },\r\n    },\r\n    {\r\n      select: (data) => ({ flags: data.flags?.data, prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addFlag = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editFlag?.key) updateFlag(editFlag.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyFlag = () => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editFlag?.decalScale}\r\n            rotation={editFlag?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={flagQuery?.prices}\r\n          />\r\n          {flagQuery?.flags && <NavFlagsSelect editFlag={editFlag} flags={flagQuery.flags} />}\r\n          <NavEditButtons disabled={!editFlag} onApply={applyFlag} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Flags</h3>\r\n            {flags?.map((flag) => (\r\n              <NavFlagsFlag key={flag.key} flag={flag} setShowSelector={setShowSelector} />\r\n            ))}\r\n            <Button colour='red' onClick={addFlag}>\r\n              Add Flag\r\n            </Button>\r\n          </div>\r\n          <NavButtons />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavFlags;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavHeader_root__jnadG\",\"menu\":\"NavHeader_menu__Mmpjx\",\"nav\":\"NavHeader_nav__mJbli\",\"title\":\"NavHeader_title__tOyZd\",\"minimizeIcon\":\"NavHeader_minimizeIcon__GKC2n\",\"minimized\":\"NavHeader_minimized__04mp3\",\"navIcon\":\"NavHeader_navIcon__6iUBm\"};","// extracted by mini-css-extract-plugin\nexport default {\"iInfo\":\"InfoButton_iInfo__0SLm4\",\"iInfo__bgOnclick\":\"InfoButton_iInfo__bgOnclick__3oQL8\",\"iInfo__display\":\"InfoButton_iInfo__display__nKOtb\",\"iInfo__header\":\"InfoButton_iInfo__header__IkMmc\",\"iInfo__body\":\"InfoButton_iInfo__body__6LPfY\",\"iInfo__sampleImg\":\"InfoButton_iInfo__sampleImg__bKcTE\",\"iInfo__closebtn\":\"InfoButton_iInfo__closebtn__+Dwj4\",\"iInfo__styleName\":\"InfoButton_iInfo__styleName__3bDQ2\",\"iInfo__title\":\"InfoButton_iInfo__title__SHp10\",\"infoIcon\":\"InfoButton_infoIcon__Yu7F-\",\"imgIcon\":\"InfoButton_imgIcon__oWQbZ\"};","import { ReactNode } from 'react';\r\nimport styles from './InfoButton.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\ninterface Props {\r\n  title: string | Falsey;\r\n  cb?: () => void;\r\n  children?: ReactNode;\r\n}\r\nconst InfoDisplay = ({ title, cb, children }: Props) => {\r\n  return (\r\n    <>\r\n      <div className={styles.iInfo} onClick={(e) => e.stopPropagation()}>\r\n        <div className={styles.iInfo__bgOnclick} onClick={cb} />\r\n        <div className={styles.iInfo__display}>\r\n          <div className={styles.iInfo__header}>\r\n            <span className={styles.iInfo__title}>{`${title}` || 'EXAMPLES'}</span>\r\n            <span className={styles.iInfo__closebtn} onClick={cb}>\r\n              x\r\n            </span>\r\n          </div>\r\n\r\n          <div className={styles.iInfo__body}>\r\n            {children || (\r\n              <>\r\n                <div className={styles.iInfo__styleName}>PRINTED</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119118469/names-printed.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>EMBROIDERY</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119222257/names-flat-embroidery.png'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>3D EMBROIDERY</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119313289/names-3d-embroidery.jpg'\r\n                  alt=''\r\n                />\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119344264/names-3d-embroidery-perspective.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>3D CRYSTALS</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119433059/names-3d-crystals.jpg'\r\n                  alt=''\r\n                />\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526727869947/names-3d-crystal-perspective.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>GLITTER</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119258957/names-glitter.pg.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>NAME PATCH</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119480153/name-patch-on-shorts.jpg'\r\n                  alt=''\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoDisplay;\r\n","import { usePortalRef } from '@hooks';\r\nimport styles from './InfoButton.module.scss';\r\nimport { createPortal } from 'react-dom';\r\nimport { ReactNode, useState } from 'react';\r\nimport { Falsey } from 'lodash';\r\nimport InfoDisplay from './InfoDisplay';\r\n\r\ninterface Props {\r\n  title: string | Falsey;\r\n  propStyles?: {\r\n    [key: string]: string;\r\n  };\r\n  children?: ReactNode;\r\n}\r\n\r\nconst InfoButton = ({ title, propStyles, children }: Props) => {\r\n  const portalRef = usePortalRef('popupContainer');\r\n  const [shouldShow, setShouldShow] = useState<boolean>(false);\r\n\r\n  if (!portalRef) return null;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={styles.infoIcon}\r\n        onClick={(e) => {\r\n          setShouldShow(true);\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <img\r\n          src='/icons/info-icon.png'\r\n          alt='info icon'\r\n          className={`${styles.imgIcon} ${propStyles?.imgIcon}`}\r\n        />\r\n      </div>\r\n      {shouldShow &&\r\n        createPortal(\r\n          <>\r\n            <InfoDisplay\r\n              title={title}\r\n              cb={() => {\r\n                setShouldShow(false);\r\n              }}\r\n            >\r\n              {children}\r\n            </InfoDisplay>\r\n          </>,\r\n          portalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoButton;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport styles from './NavHeader.module.scss';\r\nimport InfoButton from '@components/ui/InfoButton';\r\n\r\nexport interface NavHeaderProps {\r\n  className?: string;\r\n  toggle: () => void;\r\n  isOpen: boolean;\r\n  isMinimized?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst NavHeader = ({ className, toggle, isOpen, isMinimized = false, onClick }: NavHeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedNav = useCustomiserStore((state) => state.selectedNav);\r\n\r\n  if (isOpen) {\r\n    return null;\r\n  }\r\n\r\n  const minimizeIconClassname = cn(styles.minimizeIcon, {\r\n    [styles.minimized]: isMinimized,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div id='NavHeader' className={rootClassName} onClick={onClick}>\r\n        <div className={styles.nav}>\r\n          <div className={styles.title}>{selectedNav?.name}</div>\r\n          <div className={minimizeIconClassname}>\r\n            <svg viewBox='0 0 330 330'>\r\n              <path\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                id='XMLID_224_'\r\n                d='M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394  l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393  C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z'\r\n              />\r\n            </svg>\r\n          </div>\r\n          <InfoButton title={selectedNav?.name} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavHeader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dropZone\":\"NavImages_dropZone__4YMrM\",\"image\":\"NavImages_image__svpqZ\",\"graphicItem\":\"NavImages_graphicItem__XenKS\",\"graphicItemImage\":\"NavImages_graphicItemImage__8GS2T\"};","import Image from '@components/ui/Image';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesImageProps {\r\n  graphic: GraphicCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavImagesImage = ({\r\n  graphic,\r\n  setShowSelector: setSelectModel,\r\n}: NavImagesImageProps) => {\r\n  const { updateGraphic, deleteGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (graphic.key) {\r\n      updateGraphic(graphic.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (graphic.key) {\r\n      deleteGraphic(graphic.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphicItem}>\r\n      <div className={styles.graphicItemImage}>\r\n        <Image image={graphic.graphic?.attributes?.image?.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  GraphicFragment,\r\n  useCreateGraphicMutation,\r\n  useUploadMultipleFilesMutation,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { Dispatch, SetStateAction, useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesUploadProps {\r\n  setGraphic: (graphic: GraphicFragment) => void;\r\n}\r\n\r\nexport const NavImagesUpload = ({ setGraphic }: NavImagesUploadProps) => {\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const { mutate: createGraphicMutation } = useCreateGraphicMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const graphic = data.createGraphic?.data;\r\n      setSaving(false);\r\n      if (graphic) setGraphic(graphic);\r\n    },\r\n  });\r\n\r\n  const { mutate: fileUploadMutate } = useUploadMultipleFilesMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const fileIDs = data.multipleUpload.map((f) => f?.data?.id) as string[];\r\n      createGraphicMutation({ data: { image: fileIDs[0], customer: true, name: fileIDs[0] } });\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback((acceptedFiles: File[]) => {\r\n    setSaving(true);\r\n    fileUploadMutate({ files: acceptedFiles });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'image/jpeg': [],\r\n      'image/png': [],\r\n    },\r\n    maxFiles: 1,\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h5>Upload an image</h5>\r\n      <div className={styles.dropZone} {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <div>\r\n          <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.219 29.191'>\r\n            <g>\r\n              <path d='M11.609 0 10.12 1.489 0 11.609 2.978 14.6l8.631-8.631 8.632 8.631 2.978-2.991L13.1 1.489Z' />\r\n              <path d='M14.356 29.191h-5v-26h5Z' />\r\n            </g>\r\n          </svg>\r\n          {saving ? (\r\n            <h5>Please wait...</h5>\r\n          ) : isDragActive ? (\r\n            <h5>Drop images here ...</h5>\r\n          ) : (\r\n            <h5>Click or drag images here to upload</h5>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { GraphicFragment } from '@graphql/generated/graphql';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState } from 'react';\r\nimport Image from '@components/ui/Image';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesUpload } from './NavImagesUpload';\r\nimport Button from '@components/ui/Button';\r\n\r\nexport interface NavImagesSelectProps {\r\n  editGraphic?: GraphicCustomiser;\r\n  graphic?: GraphicFragment;\r\n}\r\n\r\nexport const NavImagesSelect = ({ editGraphic, graphic }: NavImagesSelectProps) => {\r\n  const [currentGraphic, setCurrentGraphic] = useState<GraphicFragment | undefined>(graphic);\r\n  const { addGraphic, updateGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const graphicSelected = (graphic: GraphicFragment) => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        graphic,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addGraphic({\r\n        graphic,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setGraphic = (graphic: GraphicFragment) => {\r\n    setCurrentGraphic(graphic);\r\n    graphicSelected(graphic);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphics}>\r\n      {currentGraphic ? (\r\n        <>\r\n          <Image className={styles.image} image={currentGraphic.attributes?.image?.data} />\r\n          <Button onClick={() => setCurrentGraphic(undefined)}>Change Image</Button>\r\n        </>\r\n      ) : (\r\n        <NavImagesUpload setGraphic={setGraphic} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import Button from '@components/ui/Button';\r\nimport { GraphicPriceEntity, useGetImagesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { startTransition, useState } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesImage } from './NavImagesImage';\r\nimport { NavImagesSelect } from './NavImagesSelect';\r\n\r\nconst NavImages = () => {\r\n  const [showSelector, setShowSelector] = useState(false);\r\n  const graphics = useCustomiserStore((state) => state.graphics);\r\n  const updateGraphic = useCustomiserStore((state) => state.updateGraphic);\r\n  const editGraphic = graphics?.find((g) => g.edit);\r\n\r\n  const { data: imageQuery } = useGetImagesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => ({ prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addImage = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editGraphic?.key) updateGraphic(editGraphic.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyImage = () => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editGraphic?.decalScale}\r\n            rotation={editGraphic?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={imageQuery?.prices}\r\n          />\r\n          <NavImagesSelect editGraphic={editGraphic} graphic={editGraphic?.graphic} />\r\n          <NavEditButtons disabled={!editGraphic} onApply={applyImage} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Images</h3>\r\n            {graphics?.map((graphic) => (\r\n              <NavImagesImage\r\n                key={graphic.key}\r\n                graphic={graphic}\r\n                setShowSelector={setShowSelector}\r\n              />\r\n            ))}\r\n            <Button colour='red' onClick={addImage}>\r\n              Add Image\r\n            </Button>\r\n          </div>\r\n          <NavButtons />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavImages;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavOptions_root__Gotx6\",\"option\":\"NavOptions_option__GpS8E\",\"optionTitle\":\"NavOptions_optionTitle__m6iQF\",\"required\":\"NavOptions_required__Wy+GM\",\"icon\":\"NavOptions_icon__KPrLI\",\"iconSelected\":\"NavOptions_iconSelected__ZnEvu\"};","import { NavItem, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport styles from './NavOptions.module.scss';\r\n\r\nexport interface NavOptionsProps {\r\n  toggle: () => void;\r\n}\r\n\r\nconst NavOptions = ({ toggle }: NavOptionsProps) => {\r\n  const navItems = useCustomiserStore((state) => state.navItems);\r\n  const sizingVariation = useCustomiserStore((state) => state.sizing?.variation);\r\n  const parts = useCustomiserStore((state) => state.savedParts);\r\n  const flags = useCustomiserStore((state) => state.flags);\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n  const setSelectedNav = useCustomiserStore((state) => state.setSelectedNav);\r\n\r\n  const handleClick = (index: number) => {\r\n    toggle();\r\n    setSelectedNav(index);\r\n  };\r\n\r\n  const isSelected = (item: NavItem) => {\r\n    if (item.type === 'fitting') return true;\r\n    if (item.type === 'size' && sizingVariation) return true;\r\n    if (item.type === 'part' && parts.find((p) => p.part.id === item.id)) return true;\r\n    if (item.type === 'flags' && flags.length) return true;\r\n    if (item.type === 'names' && texts.length) return true;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {navItems.map((item) => (\r\n        <button\r\n          className={styles.option}\r\n          key={item.index}\r\n          onClick={() => handleClick(item.index ? item.index : 0)}\r\n        >\r\n          <div className={styles.optionTitle}>\r\n            <h3>{item.name}</h3>\r\n            {item.required && <span className={styles.required}>Required</span>}\r\n          </div>\r\n          <svg\r\n            className={cn(styles.icon, { [styles.iconSelected]: isSelected(item) })}\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            viewBox='0 0 26.223 20.854'\r\n          >\r\n            <path d='m.854 11.955 2.604-3.11L9.952 14.3 21.736.248l3.102 2.614-14.39 17.22Z' />\r\n          </svg>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavOptions;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pillButton\":\"PillButton_pillButton__SdZPI\",\"pillButtonSelected\":\"PillButton_pillButtonSelected__qUXX-\",\"darkGrey\":\"PillButton_darkGrey__Awkzq\",\"black\":\"PillButton_black__SrGWm\"};","import cn from 'classnames';\r\nimport { ButtonHTMLAttributes } from 'react';\r\n\r\nimport styles from './PillButton.module.scss';\r\n\r\nexport interface PillButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  className?: string;\r\n  selected?: boolean;\r\n  color?: 'red' | 'black' | 'darkGrey';\r\n}\r\n\r\nconst PillButton = ({\r\n  className,\r\n  children,\r\n  selected = false,\r\n  color = 'red',\r\n  ...rest\r\n}: PillButtonProps) => {\r\n  const rootClassName = cn(\r\n    styles.pillButton,\r\n    { [styles.pillButtonSelected]: selected, [styles[color]]: color },\r\n    className,\r\n  );\r\n  return (\r\n    <button className={rootClassName} {...rest}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PillButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MaterialGroup_root__M5bHl\",\"colourGroups\":\"MaterialGroup_colourGroups__G3KSo\",\"materialType\":\"MaterialGroup_materialType__X63YP\",\"materialType__title\":\"MaterialGroup_materialType__title__nQjVb\",\"materials\":\"MaterialGroup_materials__iAoDB\",\"selected\":\"MaterialGroup_selected__YMvLv\"};","import { create, StateCreator, StoreApi } from 'zustand';\r\nimport createContext from 'zustand/context';\r\nimport produce from 'immer';\r\nimport { devtools } from 'zustand/middleware';\r\nimport {\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n} from '@graphql/generated/graphql';\r\nimport { uniqBy } from 'lodash';\r\n\r\nconst uniqueColourGroups = (array: MaterialColourGroupEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterialTypes = (array: MaterialTypeEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterials = (array: MaterialEntity[]) => uniqBy(array, 'id');\r\ninterface MaterialGroupInitialState {\r\n  colourGroups: MaterialColourGroupEntity[];\r\n  materialTypes: MaterialTypeEntity[];\r\n  materials: MaterialEntity[];\r\n  selectedColourGroup?: MaterialColourGroupEntity;\r\n  selectedMaterialType?: MaterialTypeEntity;\r\n}\r\nexport interface MaterialGroupState extends MaterialGroupInitialState {\r\n  resetMaterialGroup: () => void;\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => void;\r\n  filteredMaterials: () => MaterialEntity[];\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => void;\r\n  setMaterialType: (materialType: MaterialTypeEntity) => void;\r\n}\r\n\r\nconst initialState: MaterialGroupInitialState = {\r\n  colourGroups: [],\r\n  materialTypes: [],\r\n  materials: [],\r\n};\r\n\r\nconst createMaterialGroup: StateCreator<MaterialGroupState, [['zustand/devtools', never]], []> = (\r\n  set,\r\n  get,\r\n) => ({\r\n  ...initialState,\r\n  filteredMaterials: () => {\r\n    const materials = get().materials;\r\n    const colourGroup = get().selectedColourGroup;\r\n    const filteredMaterials = materials.filter((m) =>\r\n      m.attributes?.colourGroups?.data.find((g) => g.id === colourGroup?.id),\r\n    );\r\n    return filteredMaterials;\r\n  },\r\n  resetMaterialGroup: () => set(initialState),\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        const colourGroups = materials.flatMap(\r\n          (d) => d.attributes?.colourGroups?.data,\r\n        ) as MaterialColourGroupEntity[];\r\n        state.colourGroups = uniqueColourGroups(colourGroups);\r\n        if (colourGroup) {\r\n          state.selectedColourGroup = colourGroup;\r\n        } else {\r\n          state.selectedColourGroup = state.colourGroups[0];\r\n        }\r\n\r\n        const materialTypes = materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n\r\n        if (materialType) {\r\n          state.selectedMaterialType = materialType;\r\n        } else {\r\n          state.selectedMaterialType = state.materialTypes[0];\r\n        }\r\n\r\n        state.materials = uniqueMaterials(materials);\r\n      }),\r\n    );\r\n  },\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedColourGroup = colourGroup;\r\n        const materialTypes = state.materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n      }),\r\n    );\r\n  },\r\n  setMaterialType: (materialType: MaterialTypeEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedMaterialType = materialType;\r\n      }),\r\n    );\r\n  },\r\n});\r\n\r\nexport const { Provider, useStore: useMaterialGroupStore } =\r\n  createContext<StoreApi<MaterialGroupState>>();\r\n\r\nexport const createStore = () => create<MaterialGroupState>()(devtools(createMaterialGroup));\r\n","import { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialProps {\r\n  className?: string;\r\n  material: MaterialFragment;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const Material = ({\r\n  className,\r\n  material,\r\n  onMaterialSelected,\r\n  selectedMaterialId,\r\n}: MaterialProps) => {\r\n  const rootClassName = cn(styles.material, className, {\r\n    [styles.selected]: material.id === selectedMaterialId,\r\n  });\r\n\r\n  const mapImage = material?.attributes?.images?.find((i) => i?.mapType === 'map');\r\n\r\n  const onClick = () => {\r\n    if (material) {\r\n      onMaterialSelected(material);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className={rootClassName} onClick={onClick} data-name={material.attributes?.name}>\r\n      {mapImage && <img src={mapImage?.image?.data?.attributes?.formats['thumbnail'].url} />}\r\n    </button>\r\n  );\r\n};\r\n","import PillButton from '@components/ui/PillButton';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { Material } from './Material';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { useMaterialGroupStore } from './MaterialGroupState';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialTypeProps {\r\n  className?: string;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const MaterialType = ({\r\n  className,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  selectedMaterialId,\r\n}: MaterialTypeProps) => {\r\n  const rootClassName = cn(styles.materialType, className);\r\n\r\n  const {\r\n    materialTypes,\r\n    filteredMaterials: getFilteredMaterials,\r\n    materials,\r\n  } = useMaterialGroupStore();\r\n\r\n  const filteredMaterials = hideColorGroups ? materials : getFilteredMaterials();\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && <h5>Texture</h5>}\r\n      {materialTypes.map((mt) => (\r\n        <div key={mt.id} className={styles.materialType}>\r\n          <h6 className={styles.materialType__title}>{mt.attributes?.name}</h6>\r\n          <div className={styles.materials}>\r\n            {filteredMaterials\r\n              .filter((m) => m.attributes?.type?.data?.id === mt.id)\r\n              .map((m) => (\r\n                <Material\r\n                  key={m.id}\r\n                  material={m}\r\n                  onMaterialSelected={onMaterialSelected}\r\n                  selectedMaterialId={selectedMaterialId}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SelectedMaterialInfo_root__kIp+x\",\"root__noMaterial\":\"SelectedMaterialInfo_root__noMaterial__dtWKf\",\"materialName\":\"SelectedMaterialInfo_materialName__vha4F\"};","import { FC, useMemo } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport styles from './SelectedMaterialInfo.module.scss';\r\n\r\nconst SelectedMaterialInfo: FC = () => {\r\n  const portalRef = usePortalRef('CustomiserNavMaterial');\r\n  const { selectedPart, parts } = useCustomiserStore();\r\n\r\n  const selectedMaterial = useMemo(\r\n    () => parts.find((part) => part.part.id === selectedPart?.id)?.material,\r\n    [selectedPart, parts],\r\n  );\r\n\r\n  if (!portalRef) return null;\r\n\r\n  if (!selectedMaterial) {\r\n    return ReactDOM.createPortal(\r\n      <div className={cn(styles.root, styles.root__noMaterial)}>No material selected.</div>,\r\n      portalRef,\r\n    );\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={styles.root}>\r\n      <div className={styles.materialName}>{selectedMaterial.attributes?.name}</div>\r\n      {/* TODO: Add currency */}\r\n      <div>${selectedMaterial.attributes?.price?.data?.attributes?.price}</div>\r\n      <small>\r\n        <i>TODO: Add currency</i>\r\n      </small>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default SelectedMaterialInfo;\r\n","import {\r\n  InputMaybe,\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialFragment,\r\n  MaterialGroupEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n  useGetMaterialsQuery,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nimport cn from 'classnames';\r\nimport { useEffect } from 'react';\r\n\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { createStore, Provider, useMaterialGroupStore } from './MaterialGroupState';\r\nimport { MaterialType } from './MaterialType';\r\nimport SelectedMaterialInfo from './SelectedMaterialInfo';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialGroupProps {\r\n  className?: string;\r\n  materialGroup?: Maybe<MaterialGroupEntity>;\r\n  materialType?: Maybe<MaterialTypeEntity>;\r\n  colourGroup?: Maybe<MaterialColourGroupEntity>;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nconst MaterialGroupLoader = ({\r\n  className,\r\n  materialGroup,\r\n  materialType,\r\n  colourGroup,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  selectedMaterialId,\r\n}: MaterialGroupProps) => {\r\n  const colourGroups = useMaterialGroupStore((state) => state.colourGroups);\r\n  const selectedColourGroup = useMaterialGroupStore((state) => state.selectedColourGroup);\r\n  const setMaterials = useMaterialGroupStore((state) => state.setMaterials);\r\n  const setColourGroup = useMaterialGroupStore((state) => state.setColourGroup);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const typeIds = materialGroup?.attributes?.materialTypes\r\n    ? (materialGroup.attributes.materialTypes.data.map((t) => t.id) as InputMaybe<string>[])\r\n    : [];\r\n\r\n  const { data: materials } = useGetMaterialsQuery(\r\n    graphQLClient,\r\n    { filters: { type: { id: { in: typeIds } } }, pagination: { pageSize: 200 } },\r\n    {\r\n      select: (data) => data.materials?.data as MaterialEntity[],\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (materials?.length) {\r\n      // // TODO - remove: temporary for testing rainbow\r\n      // if (!materials.find((a) => a.id === '999')) {\r\n      //   // eslint-disable-next-line\r\n      //   // @ts-ignore\r\n      //   materials.push(testMaterial);\r\n      // }\r\n      // console.log('materials', materials);\r\n      setMaterials(materials, materialType, colourGroup);\r\n    }\r\n  }, [materials]);\r\n\r\n  if (!materialGroup) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && (\r\n        <>\r\n          <h5>Colour</h5>\r\n          <div className={styles.colourGroups}>\r\n            {colourGroups.map((group) => (\r\n              <button key={group.id} onClick={() => setColourGroup(group)}>\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  viewBox='0 0 42 42'\r\n                  strokeWidth={4}\r\n                  stroke={\r\n                    selectedColourGroup?.id === group.id\r\n                      ? '#000'\r\n                      : group.attributes?.colour ?? '#000'\r\n                  }\r\n                  fill={group.attributes?.colour ?? '#000'}\r\n                >\r\n                  <rect width='100%' height='100%' />\r\n                </svg>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n      <MaterialType\r\n        hideColorGroups={hideColorGroups}\r\n        onMaterialSelected={onMaterialSelected}\r\n        selectedMaterialId={selectedMaterialId}\r\n      />\r\n      <SelectedMaterialInfo />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MaterialGroup = (props: MaterialGroupProps) => {\r\n  return (\r\n    <Provider createStore={createStore}>\r\n      <MaterialGroupLoader {...props} />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default MaterialGroup;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"showOptional\":\"NavPart_showOptional__s6PPL\"};","import PillButton from '@components/ui/PillButton';\r\nimport { CustomProductPartFragment, MaterialFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport NavButtons from '../NavButtons';\r\n\r\nimport styles from './NavPart.module.scss';\r\n\r\nexport interface NavPartProps {\r\n  className?: string;\r\n  part: CustomProductPartFragment;\r\n}\r\n\r\nconst NavPart = ({ className, part }: NavPartProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedPart = useCustomiserStore((state) => state.selectedPart);\r\n  const setPart = useCustomiserStore((state) => state.setPart);\r\n  const removePart = useCustomiserStore((state) => state.removePart);\r\n  const parts = useCustomiserStore((state) => state.parts);\r\n  const currentPart = useMemo(() => parts.find((p) => p.part.id === part?.id), [part]);\r\n  const [showOptional, setShowOptional] = useState(false);\r\n\r\n  let selectedMaterialId = parts.find((part) => part.part.name === selectedPart?.name)?.material.id;\r\n  const confirmText = !selectedMaterialId\r\n    ? 'Are you sure you want to continue with the default color?'\r\n    : null;\r\n\r\n  if (!part?.materialGroup?.data) {\r\n    return null;\r\n  }\r\n\r\n  const onMaterialSelected = (material: MaterialFragment) => {\r\n    if (selectedPart && material) {\r\n      selectedMaterialId = material.id;\r\n      setPart(selectedPart, material);\r\n    }\r\n  };\r\n\r\n  const optionalOnClick = (show: boolean) => {\r\n    setShowOptional(show);\r\n    if (!show) {\r\n      removePart(part);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (part.optional && !showOptional && currentPart) {\r\n      setShowOptional(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        key={part.id}\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        {part.optional && (\r\n          <PillButton\r\n            className={styles.showOptional}\r\n            selected={showOptional}\r\n            onClick={() => optionalOnClick(!showOptional)}\r\n          >\r\n            {showOptional ? 'Remove' : 'Add'} {part.name}\r\n          </PillButton>\r\n        )}\r\n        {(!part.optional || (part.optional && showOptional)) && (\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <MaterialGroup\r\n              materialGroup={part.materialGroup.data}\r\n              materialType={currentPart?.material.attributes?.type?.data}\r\n              colourGroup={currentPart?.material.attributes?.colourGroups?.data[0]}\r\n              onMaterialSelected={onMaterialSelected}\r\n              selectedMaterialId={selectedMaterialId}\r\n            />\r\n          </Suspense>\r\n        )}\r\n      </motion.div>\r\n      <NavButtons confirmStorage='partsMaterial' confirmText={confirmText} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavPart;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormInput_root__cf10F\",\"input\":\"FormInput_input__gRXur\",\"label\":\"FormInput_label__9L2lb\"};","import cn from 'classnames';\r\nimport { InputHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormInput.module.scss';\r\n\r\nexport interface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormInput = ({ className, placeholder, children, ...props }: FormInputProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <input className={styles.input} {...props} placeholder=' ' />\r\n      <label className={styles.label}>{placeholder}</label>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormSelect_root__li+Rt\",\"select\":\"FormSelect_select__ftYcv\",\"icon\":\"FormSelect_icon__juFw+\"};","import cn from 'classnames';\r\nimport { SelectHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormSelect.module.scss';\r\n\r\nexport interface FormSelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormSelect = ({ className, children, ...props }: FormSelectProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <select className={styles.select} {...props}>\r\n        {children}\r\n      </select>\r\n      <svg xmlns='http://www.w3.org/2000/svg' className={styles.icon} viewBox='0 0 18.108 30.546'>\r\n        <path d='m2.835 30.545-2.836-2.836 12.387-12.436L0 2.835 2.836-.001l15.272 15.274Z' />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSelect;\r\n","import { ShopifyProductVariantFragment } from '@graphql/generated/graphql-shopify';\r\n\r\nconst getSizeVariation = (\r\n  unit: string,\r\n  weight: number,\r\n  variations: Array<ShopifyProductVariantFragment>,\r\n) => {\r\n  let size = '';\r\n  if (unit === 'KGS') {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 10:\r\n        size = 'BABY';\r\n        break;\r\n      case 10 <= weight && weight < 16:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 16 <= weight && weight < 22:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 22 <= weight && weight < 30:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 30 <= weight && weight < 40:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 40 <= weight && weight < 50:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 50 <= weight && weight < 59:\r\n        size = 'XS';\r\n        break;\r\n      case 59 <= weight && weight < 69:\r\n        size = 'S';\r\n        break;\r\n      case 69 <= weight && weight < 79:\r\n        size = 'M';\r\n        break;\r\n      case 79 <= weight && weight < 90:\r\n        size = 'L';\r\n        break;\r\n      case 90 <= weight && weight < 101:\r\n        size = 'XL';\r\n        break;\r\n      case 101 <= weight && weight < 111:\r\n        size = '2XL';\r\n        break;\r\n      case 111 <= weight && weight < 120:\r\n        size = '3XL';\r\n        break;\r\n      case 120 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  } else {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 22:\r\n        size = 'BABY';\r\n        break;\r\n      case 22 <= weight && weight < 35.3:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 35.3 <= weight && weight < 48.5:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 48.5 <= weight && weight < 66.1:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 66.1 <= weight && weight < 88.2:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 88.2 <= weight && weight < 110.2:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 110.2 <= weight && weight < 130:\r\n        size = 'XS';\r\n        break;\r\n      case 130 <= weight && weight < 152.1:\r\n        size = 'S';\r\n        break;\r\n      case 152.1 <= weight && weight < 174.2:\r\n        size = 'M';\r\n        break;\r\n      case 174.2 <= weight && weight < 198.4:\r\n        size = 'L';\r\n        break;\r\n      case 198.4 <= weight && weight < 222.7:\r\n        size = 'XL';\r\n        break;\r\n      case 222.7 <= weight && weight < 244.7:\r\n        size = '2XL';\r\n        break;\r\n      case 244.7 <= weight && weight < 264.6:\r\n        size = '3XL';\r\n        break;\r\n      case 264.6 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  }\r\n\r\n  return variations.find((v) => v.sku?.endsWith(size));\r\n};\r\n\r\nexport default getSizeVariation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"variations\":\"NavSize_variations__cMdjc\",\"unitToggle\":\"NavSize_unitToggle__LqIuI\",\"toggleButton\":\"NavSize_toggleButton__5PZDI\",\"toggleButtonSelected\":\"NavSize_toggleButtonSelected__au+Rx\"};","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport getSizeVariation from '@services/size';\r\nimport { UNIT } from '@store/constants';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { ChangeEvent, useEffect } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavSize.module.scss';\r\n\r\nexport interface NavSizeProps {\r\n  className?: string;\r\n}\r\n\r\nconst NavSize = ({ className }: NavSizeProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const variations = useCustomiserStore((state) => state.variations);\r\n  const setSizing = useCustomiserStore((state) => state.setSizing);\r\n  const weight = useCustomiserStore((state) => state.sizing?.weight);\r\n  const height = useCustomiserStore((state) => state.sizing?.height);\r\n  const variation = useCustomiserStore((state) => state.sizing?.variation);\r\n\r\n  useEffect(() => {\r\n    if (weight?.value && weight.unit) {\r\n      const variation = getSizeVariation(weight.unit, weight.value, variations);\r\n      setSizing(undefined, undefined, variation);\r\n    }\r\n  }, [weight, variations]);\r\n\r\n  const onHeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing({ value: Number(e.target.value), unit: 'CM' });\r\n  };\r\n\r\n  const onWeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing(undefined, { value: Number(e.target.value), unit: 'KGS' });\r\n  };\r\n\r\n  const onVariationChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const id = e.target.value;\r\n    const selectedVariation = variations.find((v) => v.id === id);\r\n    setSizing(undefined, undefined, selectedVariation);\r\n  };\r\n\r\n  const setHeightUnit = (unit: string) => {\r\n    setSizing({ value: height?.value, unit });\r\n  };\r\n\r\n  const setWeightUnit = (unit: string) => {\r\n    setSizing(undefined, { value: weight?.value, unit });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <h3>Size Details</h3>\r\n        <p>\r\n          To help us make sure the size you’ve selected is correct, enter your height and weight\r\n          below.\r\n        </p>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Height'\r\n          step='0.1'\r\n          required\r\n          value={height?.value ? height.value : ''}\r\n          onChange={onHeightChange}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.CM,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.CM)}\r\n            >\r\n              {UNIT.HEIGHT.CM}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.INCH,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.INCH)}\r\n            >\r\n              {UNIT.HEIGHT.INCH}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Weight'\r\n          step='0.1'\r\n          required\r\n          value={weight?.value ? weight.value : ''}\r\n          onChange={onWeightChange}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.KG,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.KG)}\r\n            >\r\n              {UNIT.WEIGHT.KG}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.LB,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.LB)}\r\n            >\r\n              {UNIT.WEIGHT.LB}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <h3>Suggested Size</h3>\r\n        <FormSelect value={variation?.id} onChange={onVariationChange}>\r\n          {variations.map((v) => (\r\n            <option key={v.id} value={v.id}>\r\n              {v.title}\r\n            </option>\r\n          ))}\r\n        </FormSelect>\r\n      </motion.div>\r\n      <NavButtons />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavSize;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"titleContainer\":\"Accordion_titleContainer__4Sz8F\",\"titleStep\":\"Accordion_titleStep__zM9JM\",\"active\":\"Accordion_active__ceAJO\",\"titleButton\":\"Accordion_titleButton__vj8Pw\",\"finished\":\"Accordion_finished__Zlsmr\",\"content\":\"Accordion_content__FiW6c\",\"imgIcon\":\"Accordion_imgIcon__bRbYE\"};","import cn from 'classnames';\r\nimport { FC, ReactNode, useRef } from 'react';\r\nimport Button from '../Button';\r\nimport { current } from 'immer';\r\n\r\nimport styles from './Accordion.module.scss';\r\nimport InfoButton from '../InfoButton';\r\n\r\nexport type AccordionProps = {\r\n  className?: string;\r\n\r\n  step: string | number;\r\n  hasFinishedStep?: boolean;\r\n  currentStep: string | number;\r\n  onTitleClick?: (step: string | number) => void;\r\n\r\n  title: ReactNode;\r\n  children?: ReactNode;\r\n};\r\n\r\nconst Accordion: FC<AccordionProps> = ({\r\n  className,\r\n  children,\r\n  title,\r\n  currentStep,\r\n  step,\r\n  hasFinishedStep,\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  onTitleClick = () => {},\r\n}) => {\r\n  // TODO - Improve this\r\n  const titlesWithInfo = ['TEXT COLOR'];\r\n  const shouldShowInfoButton =\r\n    title && typeof title === 'string' && titlesWithInfo.includes(title.toUpperCase());\r\n\r\n  const handleTitleClick = () => {\r\n    // console.log('key click', keyRef.current);\r\n\r\n    onTitleClick(step);\r\n  };\r\n\r\n  console.log('step', step, 'currentStep', currentStep);\r\n\r\n  const titleClassName = cn(\r\n    styles.titleContainer,\r\n    { [styles.active]: step === currentStep },\r\n    {\r\n      [styles.finished]:\r\n        typeof hasFinishedStep === 'boolean' ? hasFinishedStep : step < currentStep,\r\n    },\r\n  );\r\n\r\n  return (\r\n    <div className={cn(className)}>\r\n      <div className={titleClassName} onClick={handleTitleClick}>\r\n        {typeof step === 'number' && (\r\n          <Button className={styles.titleStep} colour='red'>\r\n            Step {step + 1}\r\n          </Button>\r\n        )}\r\n        <Button className={styles.titleButton}>\r\n          {title}\r\n          {shouldShowInfoButton && <InfoButton title='TEXT COLOR' propStyles={styles} />}\r\n        </Button>\r\n      </div>\r\n      {step === currentStep && <div className={styles.content}>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavStepButtons_root__6pgaM\",\"desktopSaveBtn\":\"NavStepButtons_desktopSaveBtn__Eayma\",\"mobileApplyBtn\":\"NavStepButtons_mobileApplyBtn__XEByn\"};","import Button from '@components/ui/Button';\r\nimport InfoDisplay from '@components/ui/InfoButton/InfoDisplay';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface Props {\r\n  onClick?: () => void;\r\n  styles?: string;\r\n  preventShow?: boolean;\r\n}\r\n\r\nconst NavTextApplyText = ({ onClick, styles, preventShow }: Props) => {\r\n  const portalRef = usePortalRef('popupContainer');\r\n  const [shouldShow, setShouldShow] = useState(false);\r\n\r\n  const applyTextHandler = () => {\r\n    onClick && onClick();\r\n    if (preventShow) return;\r\n    setShouldShow(true);\r\n  };\r\n\r\n  if (!portalRef) return null;\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={applyTextHandler} colour='red' className={styles}>\r\n        APPLY TEXT\r\n      </Button>\r\n      {shouldShow &&\r\n        createPortal(\r\n          <InfoDisplay\r\n            cb={() => {\r\n              setShouldShow(false);\r\n            }}\r\n            title='Apply Text'\r\n          >\r\n            <h5>Click where you want the text to go</h5>\r\n            <img style={{ maxWidth: '100%' }} src='examples/NavText/sample-apply-text.png' />\r\n          </InfoDisplay>,\r\n          portalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextApplyText;\r\n","import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavStepButtons.module.scss';\r\nimport { TextCustomiser } from '@store/customiser';\r\nimport NavTextApplyText from '../NavText/NavTextPlaceTextGuide';\r\n\r\nexport interface NavStepButtonsProps {\r\n  className?: string;\r\n  step?: number;\r\n  maxStep: number;\r\n  onNext?: () => void;\r\n  onPrevious?: () => void;\r\n  onApply?: () => void;\r\n  onPlace?: () => void;\r\n  onCancel?: () => void;\r\n  editText?: TextCustomiser;\r\n  noCrystalSelected?: boolean;\r\n}\r\n\r\nconst NavStepButtons = ({\r\n  className,\r\n  step,\r\n  maxStep,\r\n  onApply,\r\n  onNext,\r\n  onPrevious,\r\n  onPlace,\r\n  onCancel,\r\n  editText,\r\n  noCrystalSelected,\r\n}: NavStepButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  const shouldShowSave = !onPlace ? true : editText?.decalPosition ? true : false;\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={rootClassName}>\r\n      {step === 0 ? (\r\n        <Button\r\n          colour='darkGrey'\r\n          onClick={() => {\r\n            if (!editText?.text || (editText?.text && confirm('Cancel text customization?'))) {\r\n              onApply && onApply();\r\n              onCancel && onCancel();\r\n            }\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      ) : (\r\n        <Button onClick={onPrevious} disabled={step === 0}>\r\n          Prev Step\r\n        </Button>\r\n      )}\r\n\r\n      {/* <Button>View Model</Button> */}\r\n\r\n      {step === maxStep ? (\r\n        <>\r\n          {shouldShowSave && (\r\n            <Button colour='red' onClick={onApply} className={styles.desktopSaveBtn}>\r\n              Save\r\n            </Button>\r\n          )}\r\n          {onPlace && (\r\n            <NavTextApplyText\r\n              onClick={onPlace}\r\n              styles={editText?.decalPosition && styles.mobileApplyBtn}\r\n              preventShow={noCrystalSelected}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Button colour='yellow' onClick={onNext}>\r\n          Next Step\r\n        </Button>\r\n      )}\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavStepButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"arial\":\"NavText_arial__de7L4\",\"oswald\":\"NavText_oswald__siLdE\",\"college\":\"NavText_college__YR6iT\",\"ballantines\":\"NavText_ballantines__1B1LU\",\"navTextEdit\":\"NavText_navTextEdit__8WUIS\",\"textItem\":\"NavText_textItem__nQrv4\",\"textItemText\":\"NavText_textItemText__op7hZ\",\"finishSelections\":\"NavText_finishSelections__fH4yd\",\"disabled\":\"NavText_disabled__M-nHo\",\"showOutline\":\"NavText_showOutline__T7KEv\",\"fontSelection\":\"NavText_fontSelection__AH-QM\",\"font\":\"NavText_font__v43yE\",\"finishSelection\":\"NavText_finishSelection__CfQ+O\",\"selected\":\"NavText_selected__SIXSo\",\"pricing\":\"NavText_pricing__qUsci\",\"materialGroup\":\"NavText_materialGroup__j+DTa\",\"navTextsSelection\":\"NavText_navTextsSelection__gJNy+\",\"title\":\"NavText_title__u+YKh\",\"titleText\":\"NavText_titleText__lFoUP\",\"textPreview\":\"NavText_textPreview__CfhSo\",\"noText\":\"NavText_noText__Parmv\",\"textPreview__imgContainer\":\"NavText_textPreview__imgContainer__6SJ9b\",\"promptMessage\":\"NavText_promptMessage__iKeIZ\",\"applyTextBtnContainer\":\"NavText_applyTextBtnContainer__I8nfd\",\"navHeaderSaveText\":\"NavText_navHeaderSaveText__h8PoA\"};","// extracted by mini-css-extract-plugin\nexport default {};","import cn from 'classnames';\r\n\r\nimport styles from './Price.module.scss';\r\n\r\nexport interface PriceProps {\r\n  className?: string;\r\n  price?: number;\r\n  priceString?: string;\r\n}\r\n\r\nconst Price = ({ className, price, priceString }: PriceProps) => {\r\n  const rootClassName = cn('price-item', styles.root, className);\r\n  // TODO - Make currency change depending on selected currency.\r\n  const currency = '£';\r\n\r\n  const formattedPrice =\r\n    price !== undefined ? `${currency}${price.toFixed(2)}` : `${currency}${priceString}`;\r\n\r\n  if (!formattedPrice) {\r\n    return null;\r\n  }\r\n\r\n  return <span className={rootClassName}>{formattedPrice}</span>;\r\n};\r\n\r\nexport default Price;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useMemo, useState } from 'react';\r\n\r\nimport Price from '@components/ui/Price';\r\nimport { NAME_TYPE_LUXURY_ID } from '@store/constants';\r\nimport cn from 'classnames';\r\nimport styles from './NavText.module.scss';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\n\r\nexport interface NavTextFinishProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingCrystal?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextFinish: FC<NavTextFinishProps> = ({ editText = {}, setIsPickingCrystal }) => {\r\n  const { selectedName } = editText;\r\n  const selectedMaterialId = editText?.crystalBackground?.id;\r\n\r\n  const [crystals, setCrystals] = useState<boolean>(editText?.crystalPrice ? true : false);\r\n  const [puff, setPuff] = useState<boolean>(editText?.puffPrice ? true : false);\r\n\r\n  const hasPuffOption = useMemo(() => selectedName?.id === NAME_TYPE_LUXURY_ID, [selectedName]);\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  useEffect(() => {\r\n    setPuff(editText.puffPrice ? true : false);\r\n  }, [editText.puffPrice]);\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setCrystalBackground = (crystalBackground: MaterialFragment | undefined) => {\r\n    if (editText?.key) {\r\n      console.log('crystalBackground', crystalBackground);\r\n      updateText(editText.key, {\r\n        crystalBackground,\r\n      });\r\n    }\r\n  };\r\n\r\n  const addCrystals = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setCrystals(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          crystalPrice: {\r\n            price: selectedName.attributes?.crystalPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.crystalPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          crystalPrice: undefined,\r\n          crystalBackground: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const addPuff = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setPuff(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          puffPrice: {\r\n            price: selectedName.attributes?.puffPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.puffPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          puffPrice: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.finishSelections}>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: !crystals,\r\n          })}\r\n          onClick={() => {\r\n            setIsPickingCrystal && setIsPickingCrystal(false);\r\n            addCrystals(false);\r\n          }}\r\n        >\r\n          No Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: crystals,\r\n          })}\r\n          onClick={() => {\r\n            addCrystals(true);\r\n            setIsPickingCrystal && setIsPickingCrystal(true);\r\n          }}\r\n        >\r\n          Add Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.crystalPrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {!crystals && (\r\n        <div className={styles.finishSelections}>\r\n          <div\r\n            className={cn(styles.finishSelection, { [styles.selected]: !puff })}\r\n            onClick={() => addPuff(false)}\r\n          >\r\n            Flat\r\n            <div className={styles.pricing}>\r\n              {' +'}\r\n              <Price price={0} />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: puff,\r\n              [styles.disabled]: !hasPuffOption,\r\n            })}\r\n            onClick={() => addPuff(true)}\r\n          >\r\n            Add 3D Puff\r\n            {hasPuffOption ? (\r\n              <div className={styles.pricing}>\r\n                {' +'}\r\n                <Price price={selectedName.attributes?.puffPrice?.price} />\r\n              </div>\r\n            ) : (\r\n              <div className={styles.pricing}>(Only available for luxury colors)</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {crystals && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName.attributes?.materialGroup?.data}\r\n          materialType={editText.material?.attributes?.type?.data}\r\n          colourGroup={editText.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setCrystalBackground}\r\n          className={styles.materialGroup}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextFinish;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment, NameEntity, useGetNamesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextNameTypesProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextNameTypes = ({ editText = {} }: NavTextNameTypesProps) => {\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const selectedMaterialId = editText?.material?.id;\r\n\r\n  const { selectedName } = editText;\r\n  const prevSelectedName = useRef(selectedName);\r\n\r\n  const { data: names } = useGetNamesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => data.names?.data,\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (editText?.key && selectedName && prevSelectedName.current !== selectedName) {\r\n      prevSelectedName.current = selectedName;\r\n\r\n      updateText(editText.key, {\r\n        basePrice: {\r\n          price: selectedName.attributes?.basePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.basePrice?.shopifyVariantId,\r\n        },\r\n        letterPrice: {\r\n          price: selectedName.attributes?.letterPrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.letterPrice?.shopifyVariantId,\r\n        },\r\n        nameType: {\r\n          id: selectedName.id,\r\n          name: selectedName.attributes?.name,\r\n        },\r\n        /**\r\n         * Reset material when selectedName changes.\r\n         *\r\n         * Different name types would have different\r\n         * material groups.\r\n         */\r\n        material: undefined,\r\n        ...(editText.outline\r\n          ? {\r\n              outlinePrice: {\r\n                price: selectedName.attributes?.outlinePrice?.price,\r\n                quantity: 1,\r\n                shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n              },\r\n            }\r\n          : {}),\r\n\r\n        puffPrice: undefined,\r\n      });\r\n    }\r\n  }, [selectedName]);\r\n\r\n  const setMaterial = (material: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        material,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setSelectedName = (name: NameEntity) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        selectedName: name,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!selectedName && <i className={styles.promptMessage}>Select a text color type</i>}\r\n      <div className={styles.finishSelections}>\r\n        {names?.map((n) => (\r\n          <div\r\n            key={n.id}\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: selectedName && n.id === selectedName.id,\r\n            })}\r\n            onClick={() => setSelectedName(n)}\r\n          >\r\n            {n.attributes?.name}\r\n            <div className={styles.pricing}>\r\n              <Price price={n.attributes?.basePrice?.price} />\r\n              {' + '}\r\n              <Price price={n.attributes?.letterPrice?.price} /> per letter\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedName && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName?.attributes?.materialGroup?.data}\r\n          materialType={editText?.material?.attributes?.type?.data}\r\n          colourGroup={editText?.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setMaterial}\r\n          className={styles.materialGroup}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNameTypes;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useState } from 'react';\r\n\r\nimport PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextOutlineProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingOutline?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextOutline: FC<NavTextOutlineProps> = ({ editText = {}, setIsPickingOutline }) => {\r\n  const [showOutline, setShowOutline] = useState<boolean>(editText?.outline ? true : false);\r\n  const selectedMaterialId = editText?.outline?.id;\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  const { selectedName } = editText;\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setOutline = (outline: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        outline,\r\n        outlinePrice: {\r\n          price: selectedName.attributes?.outlinePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateOutline = (show: boolean) => {\r\n    setShowOutline(show);\r\n    if (!show && editText?.key) {\r\n      updateText(editText.key, {\r\n        outline: undefined,\r\n        outlinePrice: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={cn(styles.showOutline, styles.finishSelections)}>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: !showOutline })}\r\n          onClick={() => {\r\n            updateOutline(false);\r\n            setIsPickingOutline && setIsPickingOutline(false);\r\n          }}\r\n        >\r\n          No Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: showOutline })}\r\n          onClick={() => {\r\n            updateOutline(true);\r\n            setIsPickingOutline && setIsPickingOutline(true);\r\n          }}\r\n        >\r\n          Add Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.outlinePrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showOutline && (\r\n        <>\r\n          <MaterialGroup\r\n            hideColorGroups\r\n            materialGroup={selectedName?.attributes?.outlineGroup?.data}\r\n            materialType={editText?.outline?.attributes?.type?.data}\r\n            colourGroup={editText?.outline?.attributes?.colourGroups?.data[0]}\r\n            onMaterialSelected={setOutline}\r\n            className={styles.materialGroup}\r\n            selectedMaterialId={selectedMaterialId}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextOutline;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\n\r\nimport styles from './NavText.module.scss';\r\n\r\nexport interface NavTextSelectProps {\r\n  className?: string;\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst fonts = [\r\n  {\r\n    name: 'Arial',\r\n    className: styles.arial,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/arial-bold-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Oswald',\r\n    className: styles.oswald,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/oswald-semibold.woff',\r\n  },\r\n  {\r\n    name: 'College',\r\n    className: styles.college,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/college_block-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Ballantines',\r\n    className: styles.ballantines,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/ballantines-bold-webfont.woff',\r\n  },\r\n];\r\n\r\nconst NavTextSelect = ({ className, editText }: NavTextSelectProps) => {\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const [font, setFont] = useState<(typeof fonts)[number]>(\r\n    fonts.find((f) => editText?.font === f.url) ?? fonts[0],\r\n  );\r\n  const { addText, updateText } = useCustomiserStore((state) => state);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text, font: font.url });\r\n      }\r\n    }\r\n  }, [text, font]);\r\n\r\n  const setTextOnChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onFontChange = (font: (typeof fonts)[number]) => {\r\n    setFont(font);\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <FormInput placeholder='Enter text' value={text} onChange={setTextOnChange} />\r\n      <div className={styles.fontSelection}>\r\n        {fonts.map((_font) => (\r\n          <div\r\n            key={_font.name}\r\n            onClick={() => onFontChange(_font)}\r\n            className={cn(styles.font, _font.className, {\r\n              [styles.selected]: font.name === _font.name,\r\n            })}\r\n          >\r\n            {_font.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* <FormSelect\r\n        className={fonts.find((f) => f.url === font)?.className}\r\n        value={font}\r\n        onChange={onFontChange}\r\n      >\r\n        {fonts.map((f) => (\r\n          <option className={f.className} key={f.url} value={f.url}>\r\n            {f.name}\r\n          </option>\r\n        ))}\r\n      </FormSelect> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextSelect;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { Dispatch, MouseEventHandler, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\n\r\nimport styles from './NavText.module.scss';\r\n\r\nexport interface NavTextTextProps {\r\n  text: TextCustomiser;\r\n  className?: string;\r\n  setShowSelector?: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextText = ({ className, text, setShowSelector }: NavTextTextProps) => {\r\n  const { updateText, deleteText } = useCustomiserStore((state) => state);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const editItem = () => {\r\n    if (text.key) {\r\n      updateText(text.key, { edit: true });\r\n      setShowSelector && setShowSelector(true);\r\n    }\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    if (!text.key) return;\r\n    updateText(text.key, {\r\n      isVisible: typeof text.isVisible !== 'undefined' ? !text.isVisible : false,\r\n    });\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (text.key) {\r\n      deleteText(text.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.textItem} onClick={editItem}>\r\n      <div className={styles.textItemText}>{text.text}</div>\r\n      <NavOptionEdit\r\n        toggleVisibility={toggleVisibility}\r\n        onEdit={editItem}\r\n        onDelete={deleteItem}\r\n        isVisible={text.isVisible}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextText;\r\n","import { FC } from 'react';\r\n\r\nimport Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextText from './NavTextText';\r\n\r\ntype NavTextsSelectionProps = {\r\n  onAddTextClicked?: () => void;\r\n  onTextSelected?: () => void;\r\n};\r\n\r\nconst NavTextsSelection: FC<NavTextsSelectionProps> = ({ onAddTextClicked, onTextSelected }) => {\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n\r\n  return (\r\n    <div className={styles.navTextsSelection}>\r\n      <div className={styles.title}>\r\n        <h3 className={styles.titleText}>Your Texts</h3>\r\n\r\n        <Button colour='red' onClick={onAddTextClicked}>\r\n          Add Text\r\n        </Button>\r\n      </div>\r\n\r\n      {texts.map((t) => (\r\n        <NavTextText key={t.key} text={t} setShowSelector={onTextSelected} />\r\n      ))}\r\n\r\n      <NavButtons\r\n        confirmStorage='saveTextsNotification'\r\n        confirmText='You can still add more text. Save anyway?'\r\n      ></NavButtons>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextsSelection;\r\n","import type { MaterialFragment } from '@graphql/generated/graphql';\r\nimport type { Falsey } from 'lodash';\r\n// eslint-disable-next-line\r\n// @ts-ignore\r\nimport { NormalMapGenerator } from 'normalmap-online';\r\n\r\nexport function getMaterialUrl(material: MaterialFragment | undefined): string {\r\n  return material?.attributes?.images?.find((imgMap) => imgMap?.mapType === 'map')?.image.data\r\n    ?.attributes?.formats.large.url;\r\n}\r\n\r\n// TODO - Relocate this\r\ninterface ImgToNormalMapParams {\r\n  img: HTMLImageElement | HTMLCanvasElement;\r\n  hasPuff?: boolean;\r\n  blur?: number;\r\n}\r\nconst normalMapGenerator = NormalMapGenerator.instance();\r\nasync function imgToNormalMap({ img, hasPuff, blur }: ImgToNormalMapParams) {\r\n  const blurAmount = hasPuff ? blur || 7 : 1;\r\n  return normalMapGenerator.generateFromImage(img, {\r\n    strength: 0.5,\r\n    blur: blurAmount,\r\n    level: 1,\r\n  });\r\n}\r\n\r\ninterface PreviewText {\r\n  material: HTMLImageElement | undefined;\r\n  outline: HTMLImageElement | undefined;\r\n  previewImg?: HTMLImageElement;\r\n  normalMapPatternImg?: HTMLImageElement | false;\r\n  crystalBgPatternImg?: HTMLImageElement | Falsey;\r\n  crystalBgImg?: HTMLImageElement | Falsey;\r\n}\r\n\r\nexport type PatternType = 'crystals' | 'embroidery' | Falsey;\r\n\r\ninterface CanvasTextConstructor {\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n}\r\n\r\nexport class CanvasText {\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  outlineCanvas: HTMLCanvasElement;\r\n  outlineCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapTextureCanvas: HTMLCanvasElement;\r\n  normalMapTextureCtx: CanvasRenderingContext2D;\r\n  normalMapCanvas: HTMLCanvasElement;\r\n  normalMapCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapOutlineTextureCanvas: HTMLCanvasElement;\r\n  normalMapOutlineTextureCtx: CanvasRenderingContext2D;\r\n  normalMapOutlineCanvas: HTMLCanvasElement;\r\n  normalMapOutlineCtx2: CanvasRenderingContext2D;\r\n\r\n  crystalBgPatternCanvas: HTMLCanvasElement;\r\n  crystalBgPatternCtx: CanvasRenderingContext2D;\r\n\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n  fontSize: number;\r\n  outlineWidth: number;\r\n\r\n  constructor({ hasPuff, toNormalMap, text, patternType }: CanvasTextConstructor) {\r\n    this.hasPuff = hasPuff;\r\n    this.toNormalMap = toNormalMap;\r\n    this.patternType = patternType;\r\n    this.text = text;\r\n\r\n    this.fontSize = 360;\r\n    this.canvasHeight = 400;\r\n    this.canvasWidth = 3200;\r\n    this.outlineWidth = 20;\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.height = this.canvasHeight;\r\n    this.canvas.width = this.canvasWidth;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.outlineCanvas = document.createElement('canvas');\r\n    this.outlineCanvas.height = this.canvasHeight;\r\n    this.outlineCanvas.width = this.canvasWidth;\r\n    this.outlineCtx = this.outlineCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    // Normal map section\r\n\r\n    this.normalMapTextureCanvas = document.createElement('canvas');\r\n    this.normalMapTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapTextureCtx = this.normalMapTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapCanvas = document.createElement('canvas');\r\n    this.normalMapCanvas.height = this.canvasHeight;\r\n    this.normalMapCanvas.width = this.canvasWidth;\r\n    this.normalMapCtx = this.normalMapCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineTextureCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineTextureCtx = this.normalMapOutlineTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineCtx2 = this.normalMapOutlineCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    // TODO - make a function for setting canvas height and ctx instead\r\n    this.crystalBgPatternCanvas = document.createElement('canvas');\r\n    this.crystalBgPatternCanvas.height = this.canvasHeight;\r\n    this.crystalBgPatternCanvas.width = this.canvasWidth;\r\n    this.crystalBgPatternCtx = this.crystalBgPatternCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n  }\r\n\r\n  public clear() {\r\n    this.ctx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.outlineCtx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n  public async drawImg(ctx: CanvasRenderingContext2D, src: HTMLImageElement) {\r\n    ctx.drawImage(src, 0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  public showTestCanvas(canvas: HTMLCanvasElement) {\r\n    const testPreviewDom = document.getElementById('testPreview'); // TEST ONLY, TO BE REMOVED\r\n    (testPreviewDom as unknown as HTMLElement).innerHTML = ''; // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(canvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineTextureCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.crystalBgPatternCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.outlineCanvas); // TEST ONLY, TO BE REMOVED\r\n  }\r\n\r\n  public async maskImage(ctx: CanvasRenderingContext2D, img: HTMLImageElement) {\r\n    ctx.globalCompositeOperation = 'source-in';\r\n    await this.drawImg(ctx, img);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  public drawPreviewText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n  }\r\n\r\n  public drawPreviewOutlineText() {\r\n    if (!this.text) return;\r\n\r\n    this.outlineCtx.font = `${this.fontSize}px testFont`;\r\n    this.outlineCtx.textAlign = 'center';\r\n    this.outlineCtx.lineWidth = this.outlineWidth;\r\n    this.outlineCtx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n  }\r\n\r\n  public drawPreviewOutlineOnlyText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.lineWidth = 30;\r\n    ctx.fillStyle = 'green';\r\n    ctx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n    ctx.globalCompositeOperation = 'destination-out';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  private async drawNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewText(this.normalMapTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      this.normalMapTextureCtx.fillStyle = pattern;\r\n      this.normalMapTextureCtx.fill();\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    console.log('toNormalMap', this.toNormalMap);\r\n    const normalMap = this.toNormalMap\r\n      ? await imgToNormalMap({\r\n          img: this.normalMapTextureCanvas,\r\n          hasPuff: this.hasPuff,\r\n        })\r\n      : this.normalMapTextureCanvas;\r\n\r\n    this.normalMapCtx.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawOutlineNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewOutlineOnlyText(this.normalMapOutlineTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapOutlineTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapOutlineTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      if (this.patternType !== 'crystals') {\r\n        this.normalMapOutlineTextureCtx.fillStyle = pattern;\r\n      }\r\n      this.normalMapOutlineTextureCtx.fill();\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    const normalMap =\r\n      this.toNormalMap || this.patternType === 'crystals'\r\n        ? await imgToNormalMap({\r\n            img: this.normalMapOutlineTextureCanvas,\r\n            hasPuff: this.patternType === 'crystals' ? true : this.hasPuff,\r\n            blur: 4,\r\n          })\r\n        : this.normalMapOutlineTextureCanvas;\r\n    this.normalMapOutlineCtx2.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawCrystalBg(\r\n    crystalBgImg: HTMLImageElement,\r\n    crystalBgPatternImg: HTMLImageElement,\r\n  ) {\r\n    const pattern = this.crystalBgPatternCtx.createPattern(crystalBgPatternImg, 'repeat');\r\n\r\n    if (!pattern) return;\r\n\r\n    this.crystalBgPatternCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.fillStyle = pattern;\r\n    this.crystalBgPatternCtx.fill();\r\n\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-in';\r\n    this.crystalBgPatternCtx.globalAlpha = 0.9;\r\n    this.crystalBgPatternCtx.drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.drawImage(crystalBgImg, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-over';\r\n\r\n    this.outlineCtx.drawImage(this.crystalBgPatternCanvas, 0, 0);\r\n  }\r\n\r\n  private printTextMapToStrokeMap() {\r\n    this.normalMapCtx.globalCompositeOperation = 'destination-in';\r\n    this.normalMapCtx.drawImage(this.normalMapTextureCanvas, 0, 0);\r\n    this.normalMapCtx.globalCompositeOperation = 'source-over'; // reset to default\r\n    this.normalMapOutlineCtx2.drawImage(this.normalMapCanvas, 0, 0);\r\n  }\r\n\r\n  public async previewText({\r\n    material,\r\n    outline,\r\n    previewImg,\r\n    normalMapPatternImg,\r\n    crystalBgPatternImg,\r\n    crystalBgImg,\r\n  }: PreviewText) {\r\n    if (!this.text) return;\r\n\r\n    this.clear();\r\n    this.showTestCanvas(this.normalMapTextureCanvas);\r\n\r\n    await this.drawNormalMap(normalMapPatternImg);\r\n    await this.drawOutlineNormalMap(normalMapPatternImg);\r\n\r\n    this.printTextMapToStrokeMap();\r\n\r\n    if (outline) {\r\n      this.drawPreviewOutlineText();\r\n      await this.maskImage(this.outlineCtx, outline);\r\n    }\r\n\r\n    this.drawPreviewText(this.ctx);\r\n\r\n    if (material) {\r\n      await this.maskImage(this.ctx, material);\r\n    }\r\n\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n    if (previewImg) previewImg.src = this.outlineCanvas.toDataURL();\r\n\r\n    if (crystalBgImg && crystalBgPatternImg) {\r\n      this.drawCrystalBg(crystalBgImg, crystalBgPatternImg);\r\n    }\r\n  }\r\n\r\n  public mergeCanvas() {\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n  }\r\n\r\n  getOutlineCanvas() {\r\n    return this.outlineCanvas;\r\n  }\r\n  getNormalMapTextureCanvas() {\r\n    return this.normalMapTextureCanvas;\r\n  }\r\n  getNormalMapOutlineCanvas() {\r\n    return this.normalMapOutlineCanvas;\r\n  }\r\n}\r\n","export async function loadImage(src: string): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    if (!src) resolve(img);\r\n    img.crossOrigin = 'anonymous';\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n    img.src = src;\r\n  });\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"canvasClickableCover\":\"NavTextScene_canvasClickableCover__ZoAVe\",\"canvasClickableCover__imgContainer\":\"NavTextScene_canvasClickableCover__imgContainer__qCzZl\",\"navTextSceneFullscreen\":\"NavTextScene_navTextSceneFullscreen__-hgDQ\",\"navTextSceneFullscreen__imgContainer\":\"NavTextScene_navTextSceneFullscreen__imgContainer__kyglX\",\"navTextSceneFullscreen__closeBtn\":\"NavTextScene_navTextSceneFullscreen__closeBtn__jtMmR\",\"navTextSceneFullscreen__zoomContainer\":\"NavTextScene_navTextSceneFullscreen__zoomContainer__struE\"};","import { Decal } from '@react-three/drei';\r\nimport { TextCustomiser } from '@store/customiser';\r\nimport { Texture, Vector2, Vector3 } from 'three';\r\nimport Lights from '../Lights';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport styles from './NavTextScene.module.scss';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { usePortalRef } from '@hooks';\r\n\r\ninterface NavTextPreviewSceneInterface {\r\n  text: TextCustomiser;\r\n}\r\n\r\nconst NavTextPreviewScene = ({ text }: NavTextPreviewSceneInterface) => {\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n  const [shouldShow, setShouldShow] = useState<boolean>(false);\r\n  const [zoom, setZoom] = useState<number>(1);\r\n  const [dataUrl, setDataUrl] = useState<string>('');\r\n\r\n  const portalRef = usePortalRef('popupContainer');\r\n\r\n  const scale = 10;\r\n  const scaleModifier = new Vector3(3.2 * scale, 0.4 * scale, 4);\r\n\r\n  const isLuxury: boolean = text.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = text.puffPrice ? true : false;\r\n  const hasCrystals: boolean = text.crystalPrice ? true : false;\r\n\r\n  const shouldNormalMap =\r\n    text.normalMap instanceof Texture && text.selectedName?.attributes?.name === 'Luxury';\r\n  const normalMap = shouldNormalMap ? text.normalMap : null;\r\n\r\n  let normalScale = 1;\r\n  if (hasCrystals) {\r\n    normalScale = 4;\r\n  } else if (isLuxury && !hasPuff) {\r\n    normalScale = 0.5;\r\n  } else if (isLuxury && hasPuff) {\r\n    normalScale = 3;\r\n  }\r\n\r\n  if (!portalRef) return null;\r\n\r\n  function addZoom() {\r\n    setZoom((cur) => {\r\n      if (cur >= 10) return cur;\r\n      return (cur += 0.1);\r\n    });\r\n  }\r\n  function subtractZoom() {\r\n    setZoom((cur) => {\r\n      if (cur <= 0.1) return cur;\r\n      return (cur -= 0.1);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        ref={(el) => {\r\n          canvasRef.current = el;\r\n        }}\r\n        gl={{\r\n          preserveDrawingBuffer: true,\r\n        }}\r\n      >\r\n        <Lights />\r\n        <mesh>\r\n          <planeBufferGeometry args={[20, 5]} />\r\n          <meshNormalMaterial visible={false} />\r\n          <Decal position={[0, 0, 0]} rotation={[0, 0, 0]} scale={scaleModifier}>\r\n            <meshStandardMaterial\r\n              map={text.preview instanceof Texture ? text.preview : null}\r\n              transparent\r\n              roughness={isLuxury && !hasCrystals ? 0.75 : 0}\r\n              depthTest\r\n              depthWrite={false}\r\n              normalMap={normalMap}\r\n              normalScale={new Vector2(normalScale, normalScale)}\r\n            />\r\n          </Decal>\r\n        </mesh>\r\n      </Canvas>\r\n      <div\r\n        className={styles.canvasClickableCover}\r\n        onClick={() => {\r\n          setShouldShow(true);\r\n          setDataUrl(canvasRef.current?.toDataURL() || '');\r\n        }}\r\n      >\r\n        <span className={styles.canvasClickableCover__imgContainer}>\r\n          <img height={32} width={32} src='/icons/click-icon.png' />\r\n        </span>\r\n      </div>\r\n      {shouldShow &&\r\n        canvasRef &&\r\n        dataUrl &&\r\n        createPortal(\r\n          <>\r\n            <div className={styles.navTextSceneFullscreen}>\r\n              <span\r\n                onClick={() => setShouldShow(false)}\r\n                className={styles.navTextSceneFullscreen__closeBtn}\r\n              >\r\n                x\r\n              </span>\r\n              <span className={styles.navTextSceneFullscreen__imgContainer}>\r\n                <img style={{ zoom }} src={dataUrl} alt='Text Preview' />\r\n              </span>\r\n              <span className={styles.navTextSceneFullscreen__zoomContainer}>\r\n                <img\r\n                  onClick={addZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-in-icon.png'\r\n                  alt='zoom in'\r\n                />\r\n                <img\r\n                  onClick={subtractZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-out-icon.png'\r\n                  alt='zoom out'\r\n                />\r\n              </span>\r\n            </div>\r\n          </>,\r\n          portalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextPreviewScene;\r\n","import { CanvasText, PatternType, getMaterialUrl } from '@lib/canvas';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { CanvasTexture } from 'three';\r\nimport type { NavTextSelectProps } from './NavTextSelect';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { loadImage } from '@lib/img.util';\r\nimport NavTextPreviewScene from '@components/three/CustomiserCanvas/NavTextScene';\r\n\r\n// TODO - Pre load the fonts somewhere\r\nasync function loadFonts(fontUrl: string) {\r\n  const font = new FontFace('testFont', `url(${fontUrl})`);\r\n  await font.load();\r\n  document.fonts.add(font);\r\n}\r\n\r\nfunction getPatternType({\r\n  hasCrystals,\r\n  isLuxury,\r\n}: {\r\n  hasCrystals: boolean;\r\n  isLuxury: boolean;\r\n}): PatternType {\r\n  if (!hasCrystals && isLuxury) return 'embroidery';\r\n  else if (hasCrystals) return 'crystals';\r\n\r\n  return '';\r\n}\r\n\r\nconst NavTextPreview = ({ editText }: NavTextSelectProps) => {\r\n  const previewImgRef = useRef<HTMLImageElement | null>(null);\r\n  const [fontFamily, setFontFamily] = useState<string | undefined>(editText?.font);\r\n  const [isVisiblePreview, setIsVisiblePreview] = useState(false);\r\n\r\n  const hasCrystals: boolean = editText?.crystalPrice ? true : false;\r\n  const isLuxury: boolean = editText?.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = editText?.puffPrice && !hasCrystals ? true : false; // 3D puff\r\n  const toNormalMap = hasCrystals ? false : true;\r\n  const patternType = getPatternType({ hasCrystals, isLuxury });\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  const portalRef = usePortalRef('NavHeaderAfter');\r\n\r\n  /**\r\n   * Save image here\r\n   */\r\n  const materialImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.material));\r\n  }, [editText?.material]);\r\n  const outlineImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.outline));\r\n  }, [editText?.outline]);\r\n  const fabricPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/Fabric_Knitted_006_height_small.png');\r\n  }, []);\r\n  const crystalNormalMapImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-12.png');\r\n  }, []);\r\n  const crystalBgImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.crystalBackground));\r\n  }, [editText?.crystalBackground]);\r\n  const crystalBgPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-bg-pattern.png');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const previewImgDom = previewImgRef.current as HTMLImageElement;\r\n\r\n    (async () => {\r\n      const canvasText = new CanvasText({\r\n        hasPuff,\r\n        toNormalMap,\r\n        patternType,\r\n        text: editText?.text,\r\n      });\r\n\r\n      if (!editText || !editText.key || !isVisiblePreview) {\r\n        canvasText.clear();\r\n        return;\r\n      }\r\n\r\n      if (!editText.text) {\r\n        canvasText.clear();\r\n        updateText(editText.key, {\r\n          preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Adjust this once preloading fonts has been implemented\r\n      if (fontFamily !== editText?.font) {\r\n        setFontFamily(editText?.font);\r\n        await loadFonts(editText?.font as string);\r\n      }\r\n\r\n      const img = editText?.material && (await materialImgMemo);\r\n      const outlineImg = editText?.outline && (await outlineImgMemo);\r\n      const embroideryPattern = await fabricPatternImgMemo;\r\n      const crystalNormalMap = await crystalNormalMapImgMemo;\r\n      const crystalBgPatternImg = await crystalBgPatternImgMemo;\r\n      const crystalBgImg = editText?.crystalBackground && (await crystalBgImgMemo);\r\n\r\n      const shouldUsePattern = isLuxury && !hasPuff;\r\n      const patternImg = shouldUsePattern && (hasCrystals ? crystalNormalMap : embroideryPattern);\r\n\r\n      await canvasText.previewText({\r\n        material: img,\r\n        outline: outlineImg,\r\n        previewImg: previewImgDom,\r\n        normalMapPatternImg: patternImg,\r\n        crystalBgPatternImg,\r\n        crystalBgImg,\r\n      });\r\n\r\n      updateText(editText.key, {\r\n        preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        normalMap: new CanvasTexture(canvasText.getNormalMapOutlineCanvas()),\r\n      });\r\n    })();\r\n  }, [\r\n    editText?.text,\r\n    editText?.material,\r\n    editText?.outline,\r\n    editText?.font,\r\n    editText?.crystalBackground,\r\n    isVisiblePreview,\r\n    editText?.puffPrice,\r\n    editText?.crystalPrice,\r\n  ]);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <>\r\n      <div id='testPreview' style={{ position: 'absolute', zIndex: '100' }} />\r\n      <div className={styles.textPreview}>\r\n        {!editText?.text ? (\r\n          <div className={styles.noText}>Enter text to show preview</div>\r\n        ) : (\r\n          <>\r\n            {/* Image is no longer needed, remove this */}\r\n            <div className={styles.textPreview__imgContainer} style={{ display: 'none' }}>\r\n              <img\r\n                height={80}\r\n                width={640}\r\n                ref={(el) => {\r\n                  previewImgRef.current = el;\r\n                  setIsVisiblePreview(!!el);\r\n                }}\r\n              />\r\n            </div>\r\n            {previewImgRef.current?.src ? (\r\n              <>\r\n                <NavTextPreviewScene text={editText} />\r\n              </>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavTextPreview;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport { startTransition, useEffect, useMemo, useState } from 'react';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\n\r\nimport Accordion from '@components/ui/Accordion/Accordion';\r\nimport NavStepButtons from '../NavStepButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextFinish from './NavTextFinish';\r\nimport NavTextNameTypes from './NavTextNameTypes';\r\nimport NavTextOutline from './NavTextOutline';\r\nimport NavTextSelect from './NavTextSelect';\r\nimport NavTextsSelection from './NavTextsSelection';\r\nimport NavTextPreview from './NavTextPreview';\r\nimport { usePortalRef } from '@hooks';\r\nimport Button from '@components/ui/Button';\r\nimport { createPortal } from 'react-dom';\r\n\r\n// export interface NavTextProps {\r\n\r\n// }\r\n\r\nconst NavText = () => {\r\n  const [step, setStep] = useState<number | undefined>(0);\r\n\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const deleteText = useCustomiserStore((state) => state.deleteText);\r\n  const updateIsMinimizedCustomiserNav = useCustomiserStore(\r\n    (state) => state.updateIsMinimizedCustomiserNav,\r\n  );\r\n  const isMinimizedCustomiserNav = useCustomiserStore((state) => state.isMinimizedCustomiserNav);\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const [showSelector, setShowSelector] = useState(editText?.key !== undefined);\r\n  const [isPickingOutline, setIsPickingOutline] = useState(false);\r\n  const [isPickingCrystal, setIsPickingCrystal] = useState(false);\r\n  const navHeaderRef = usePortalRef('NavHeader');\r\n\r\n  const noCrystalSelected = step === 3 && isPickingCrystal && !editText?.crystalBackground;\r\n  const hasFinishedAllSteps = step === 3 && (editText?.crystalBackground || !isPickingCrystal);\r\n\r\n  const hasFinishedStep1 = !!editText?.text;\r\n  const hasFinishedStep2 = !!editText?.material;\r\n  const hasFinishedStep3 = !!editText?.outline;\r\n  const hasFinishedStep4 = !!editText?.crystalBackground;\r\n\r\n  const saveAndApplyChecker = () => {\r\n    if (!hasFinishedStep1) {\r\n      alert('Please enter a text to continue');\r\n      setStep(0);\r\n      return false;\r\n    } else if (!hasFinishedStep2) {\r\n      alert('Select a text color to continue');\r\n      setStep(1);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      setShowSelector(true);\r\n    } else {\r\n      setShowSelector(false);\r\n    }\r\n  }, [editText]);\r\n\r\n  const addText = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalScale: Number(event) });\r\n    });\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const placeText = () => {\r\n    if (isPickingCrystal && noCrystalSelected) {\r\n      alert('Select a crystal type');\r\n      return;\r\n    }\r\n    if (editText?.key && !editText?.decalPosition) {\r\n      updateText(editText.key, {\r\n        decalFreeze: true,\r\n        decalPosition: [-0.01989325641440387, 2.436930108198209, 1.6226380277735046],\r\n        decalOrientation: [\r\n          -0.14799034762565572,\r\n          -0.17866277612764514,\r\n          -0.026487426629834374,\r\n          'XYZ',\r\n        ],\r\n      });\r\n    }\r\n    updateIsMinimizedCustomiserNav(true);\r\n  };\r\n\r\n  const applyText = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n        hasApplied: true,\r\n      });\r\n    }\r\n\r\n    setStep(0);\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  const cancelText = () => {\r\n    if (editText?.key && !editText?.hasApplied) {\r\n      deleteText(editText.key);\r\n    }\r\n\r\n    setStep(0);\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  const handleTitleClick = (_step: number | string) => {\r\n    if (_step === step) {\r\n      setStep(undefined);\r\n    } else {\r\n      setStep(_step as number);\r\n    }\r\n  };\r\n\r\n  const maxStep = 4;\r\n\r\n  const handleNext = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step < maxStep - 1) {\r\n      switch (step) {\r\n        case 0:\r\n          if (!editText?.text) {\r\n            alert('Please enter a text to continue');\r\n            return;\r\n          }\r\n          break;\r\n        case 1:\r\n          if (!editText?.selectedName) {\r\n            alert('Select a text color type');\r\n            return;\r\n          } else if (!editText?.material) {\r\n            alert('Select a color for text');\r\n            return;\r\n          }\r\n          break;\r\n        case 2:\r\n          if (isPickingOutline && !editText?.outline) {\r\n            alert('Select an outline');\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      console.log('editText', editText);\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step > 0) {\r\n      setStep(step - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <div className={styles.navTextEdit}>\r\n          <NavTextPreview editText={editText} />\r\n          <Accordion\r\n            step={0}\r\n            title='Text and Font'\r\n            hasFinishedStep={hasFinishedStep1}\r\n            currentStep={step ?? -1}\r\n            onTitleClick={handleTitleClick}\r\n          >\r\n            <NavTextSelect editText={editText} />\r\n          </Accordion>\r\n          <Accordion\r\n            step={1}\r\n            title='Text Color'\r\n            hasFinishedStep={hasFinishedStep2}\r\n            currentStep={step ?? -1}\r\n            onTitleClick={handleTitleClick}\r\n          >\r\n            <NavTextNameTypes editText={editText} />\r\n          </Accordion>\r\n          <Accordion\r\n            step={2}\r\n            title='Outline'\r\n            hasFinishedStep={hasFinishedStep3}\r\n            currentStep={step ?? -1}\r\n            onTitleClick={() => {\r\n              if (!saveAndApplyChecker()) return;\r\n              handleTitleClick(2);\r\n            }}\r\n          >\r\n            <NavTextOutline editText={editText} setIsPickingOutline={setIsPickingOutline} />\r\n          </Accordion>\r\n          <Accordion\r\n            step={3}\r\n            title='Finish'\r\n            currentStep={step ?? -1}\r\n            hasFinishedStep={hasFinishedStep4}\r\n            onTitleClick={() => {\r\n              if (!saveAndApplyChecker()) return;\r\n              handleTitleClick(3);\r\n            }}\r\n          >\r\n            <NavTextFinish\r\n              setIsPickingCrystal={setIsPickingCrystal}\r\n              editText={editText}\r\n            ></NavTextFinish>\r\n          </Accordion>\r\n          <NavStepButtons\r\n            step={step}\r\n            maxStep={maxStep - 1}\r\n            onNext={handleNext}\r\n            onPrevious={handlePrevious}\r\n            onApply={applyText}\r\n            onCancel={cancelText}\r\n            onPlace={() => {\r\n              if (!saveAndApplyChecker()) return;\r\n              placeText();\r\n            }}\r\n            editText={editText}\r\n            noCrystalSelected={noCrystalSelected}\r\n          />\r\n          {editText?.key && editText.decalPosition && (\r\n            <NavDecalAdjust\r\n              scale={editText?.decalScale}\r\n              rotation={editText?.decalRotation}\r\n              onScale={setScale}\r\n              onRotate={setRotation}\r\n            />\r\n          )}\r\n          {editText &&\r\n            isMinimizedCustomiserNav &&\r\n            navHeaderRef &&\r\n            hasFinishedAllSteps &&\r\n            createPortal(\r\n              <Button\r\n                onClick={() => {\r\n                  if (!saveAndApplyChecker()) {\r\n                    return updateIsMinimizedCustomiserNav(false);\r\n                  }\r\n\r\n                  applyText();\r\n                  updateIsMinimizedCustomiserNav(false);\r\n                }}\r\n                colour='red'\r\n                className={styles.navHeaderSaveText}\r\n              >\r\n                SAVE\r\n              </Button>,\r\n              navHeaderRef,\r\n            )}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <NavTextsSelection onAddTextClicked={addText}></NavTextsSelection>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavText;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CustomiserNav_root__rgnWr\",\"open\":\"CustomiserNav_open__6TgJc\",\"isFullscreen\":\"CustomiserNav_isFullscreen__xo92v\",\"minimized\":\"CustomiserNav_minimized__-4C1L\",\"actions\":\"CustomiserNav_actions__B0fm0\",\"content\":\"CustomiserNav_content__whsIx\",\"headerAfter\":\"CustomiserNav_headerAfter__bXrUD\",\"hasActions\":\"CustomiserNav_hasActions__xe43g\"};","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavFitting from '../NavFitting';\r\nimport NavFlags from '../NavFlags';\r\nimport NavHeader from '../NavHeader';\r\nimport NavImages from '../NavImages';\r\nimport NavOptions from '../NavOptions';\r\nimport NavPart from '../NavPart';\r\nimport NavMinimize from '../NavMinimize';\r\nimport NavSize from '../NavSize';\r\nimport NavText from '../NavText';\r\n\r\nimport styles from './CustomiserNav.module.scss';\r\nimport { FocusCameraOnPart } from '@components/layout/Customiser/Customiser';\r\n\r\nexport interface CustomiserNavProps {\r\n  className?: string;\r\n  focusCameraOnPart?: FocusCameraOnPart;\r\n}\r\n\r\nconst CustomiserNav = ({ className, focusCameraOnPart }: CustomiserNavProps) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [scrollCoordinates, setScrollCoordinates] = useState({ left: 0, top: 0 });\r\n\r\n  const {\r\n    selectedPart,\r\n    selectedNav,\r\n    texts,\r\n    isMinimizedCustomiserNav,\r\n    updateIsMinimizedCustomiserNav,\r\n  } = useCustomiserStore();\r\n\r\n  const scrollableRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const isFullscreen = useMemo(\r\n    () => selectedNav?.name === 'Text' && editText,\r\n    [selectedNav, editText],\r\n  );\r\n\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      [styles.open]: isOpen,\r\n      [styles.minimized]: isMinimizedCustomiserNav,\r\n      [styles.hasActions]: selectedNav?.hasActions,\r\n      [styles.isFullscreen]: isFullscreen,\r\n    },\r\n    className,\r\n  );\r\n\r\n  const saveScrollCoordinates = () => {\r\n    if (isOpen && scrollableRef.current) {\r\n      setScrollCoordinates({\r\n        left: scrollableRef.current.scrollLeft,\r\n        top: scrollableRef.current.scrollTop,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && scrollableRef.current) {\r\n      scrollableRef.current.scrollTo({\r\n        ...scrollCoordinates,\r\n        // Typescript issue: https://github.com/Microsoft/TypeScript/issues/28755\r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const toggleOpen = () => {\r\n    saveScrollCoordinates();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedNav === null && selectedPart === null) {\r\n      setIsOpen(true);\r\n    } else {\r\n      setIsOpen(false);\r\n      updateIsMinimizedCustomiserNav(false);\r\n    }\r\n  }, [selectedPart, selectedNav]);\r\n\r\n  return (\r\n    <motion.nav\r\n      layout='preserve-aspect'\r\n      transition={{\r\n        type: 'spring',\r\n        stiffness: 700,\r\n        damping: 40,\r\n      }}\r\n      className={rootClassName}\r\n    >\r\n      {/* {!isOpen && (\r\n        <NavMinimize\r\n          isMinimizedCustomiserNav={isMinimizedCustomiserNav}\r\n          onMinimize={() => updateIsMinimizedCustomiserNav(true)}\r\n          onMaximize={() => updateIsMinimizedCustomiserNav(false)}\r\n        />\r\n      )} */}\r\n      <NavHeader\r\n        className={styles.header}\r\n        toggle={() => toggleOpen()}\r\n        isOpen={isOpen}\r\n        onClick={() => {\r\n          updateIsMinimizedCustomiserNav(!isMinimizedCustomiserNav);\r\n        }}\r\n        isMinimized={isMinimizedCustomiserNav}\r\n      />\r\n      <div id='NavHeaderAfter' className={styles.headerAfter}></div>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <AnimatePresence initial={false}>\r\n          <motion.div\r\n            id='scrollable'\r\n            className={styles.content}\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n              open: { opacity: 1 },\r\n              collapsed: { opacity: 0 },\r\n            }}\r\n            ref={(el) => {\r\n              scrollableRef.current = el;\r\n            }}\r\n          >\r\n            {isOpen ? (\r\n              <NavOptions toggle={() => toggleOpen()} />\r\n            ) : selectedNav?.type === 'fitting' ? (\r\n              <NavFitting focusCameraOnPart={focusCameraOnPart} />\r\n            ) : selectedNav?.type === 'names' ? (\r\n              <NavText />\r\n            ) : selectedNav?.type === 'flags' ? (\r\n              <NavFlags />\r\n            ) : selectedNav?.type === 'images' ? (\r\n              <NavImages />\r\n            ) : selectedNav?.type === 'size' ? (\r\n              <NavSize />\r\n            ) : selectedPart ? (\r\n              <NavPart part={selectedPart} />\r\n            ) : null}\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </Suspense>\r\n      {!isOpen && selectedNav?.hasActions && (\r\n        <div className={styles.actions}>\r\n          {selectedPart && <div id='CustomiserNavMaterial'></div>}\r\n          <div id='CustomiserNavActions'></div>\r\n        </div>\r\n      )}\r\n    </motion.nav>\r\n  );\r\n};\r\n\r\nexport default CustomiserNav;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Header_root__cz6kt\",\"total\":\"Header_total__nSueF\",\"price\":\"Header_price__GikHZ\",\"resetBtn\":\"Header_resetBtn__yzIQA\",\"addToBasket\":\"Header_addToBasket__T8GpW\"};","import Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport { useDesignStore } from '@store/design';\r\nimport styles from './Header.module.scss';\r\nimport Price from '@components/ui/Price';\r\n\r\nexport interface HeaderProps {\r\n  className?: string;\r\n}\r\n\r\nconst Header = ({ className }: HeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const total = useCustomiserStore((state) => state.total());\r\n  const designComplete = useCustomiserStore((state) => state.designComplete());\r\n  const setResetCamera = useDesignStore((state) => state.setResetCamera);\r\n  const addingToCart = useDesignStore((state) => state.addingToCart);\r\n\r\n  const resetCustomerSelections = useCustomiserStore((state) => state.resetCustomerSelections);\r\n\r\n  const saveDesign = () => {\r\n    setResetCamera();\r\n  };\r\n\r\n  const resetPopup = () => {\r\n    if (confirm('Reset everything?')) {\r\n      resetCustomerSelections();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div id='reset-btn-container' className={styles.resetBtn}>\r\n        <Button onClick={resetPopup}>CLEAR</Button>\r\n      </div>\r\n      <div className={styles.total}>\r\n        Current <Price className={styles.price} priceString={total} />\r\n      </div>\r\n      <Button\r\n        className={styles.addToBasket}\r\n        onClick={saveDesign}\r\n        disabled={!designComplete || addingToCart}\r\n      >\r\n        {addingToCart ? 'Saving' : 'Add to basket'}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Customiser_root__+9xV1\",\"nav\":\"Customiser_nav__xnqzP\",\"model\":\"Customiser_model__jxaOf\",\"controls\":\"Customiser_controls__Ar93L\",\"background\":\"Customiser_background__qq7nU\",\"loading\":\"Customiser_loading__vNYyO\",\"header\":\"Customiser_header__1SFjA\",\"close\":\"Customiser_close__sH1pv\"};","import CustomiserNav from '@components/nav/CustomiserNav';\r\nimport Button from '@components/ui/Button';\r\nimport { useDesignStore } from '@store/design';\r\nimport cn from 'classnames';\r\nimport { lazy, Suspense, useRef } from 'react';\r\nimport Header from '../Header';\r\n\r\nconst CustomiserCanvas = lazy(() => import('@components/three/CustomiserCanvas'));\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport styles from './Customiser.module.scss';\r\nimport { Camera } from 'three';\r\nimport { Falsey } from 'lodash';\r\nimport { cameraDefault } from '@components/three/CustomiserCanvas/CustomiserCanvas';\r\n\r\nexport interface CustomiserProps {\r\n  className?: string;\r\n}\r\n\r\nconst cameraLegCutPosition: [x: number, y: number, z: number] = [\r\n  -0.95422573319504, -0.8257934547233227, 0.48109793465966844,\r\n];\r\n\r\nexport type FocusCameraOnPart = (part?: string | Falsey) => void;\r\n\r\nconst Customiser = ({ className }: CustomiserProps) => {\r\n  const setShow = useDesignStore((state) => state.setShow);\r\n  const { selectedNav } = useCustomiserStore();\r\n\r\n  const cameraRef = useRef<Camera | null>(null);\r\n  const handleCameraRef = (ref: Camera | null) => {\r\n    cameraRef.current = ref;\r\n  };\r\n\r\n  const focusCameraOnPart = (part?: string | Falsey) => {\r\n    const focusCamera = (coordinates: number[]) => {\r\n      const camera = cameraRef.current;\r\n      if (camera) {\r\n        camera.position.set(coordinates[0], coordinates[1], coordinates[2]);\r\n      }\r\n    };\r\n\r\n    switch (part && part.toLowerCase()) {\r\n      case 'leg cut':\r\n        focusCamera(cameraLegCutPosition);\r\n        break;\r\n      default:\r\n        focusCamera(cameraDefault);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const rootClassName = cn(styles.root, className, {\r\n    // [styles.navOpen]: selectedNav !== null,\r\n  });\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div\r\n        id='popupContainer'\r\n        style={{\r\n          // re-figure out again how to put styled ID in scss\r\n          position: 'absolute',\r\n          zIndex: '201',\r\n        }}\r\n      />\r\n      <CustomiserNav className={styles.nav} focusCameraOnPart={focusCameraOnPart} />\r\n      <Header className={styles.header} />\r\n      <svg\r\n        className={styles.background}\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 114.383 97.088'\r\n      >\r\n        <defs>\r\n          <clipPath id='a'>\r\n            <path d='M0 0h114.383v97.088H0z' />\r\n          </clipPath>\r\n        </defs>\r\n        <g clipPath='url(#a)' fillRule='evenodd'>\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='M8.567 88.645v-.044c1.487-.24 2.986-.466 4.472-.716a1.278 1.278 0 0 0 .743-1.862 1.019 1.019 0 0 0-.949-.409c-2.928.338-5.845.747-8.785 1.147-.492.069-.709.447-.687 1.262.012 1.216.126 1.481.721 1.375 1.5-.243 3.008-.506 4.484-.753M23.905 77.54c-1.224.072-1.842.39-1.9 2.044a69.405 69.405 0 0 0 .011 5.312c.057 1.481.606 2.112 1.716 1.99q4.444-.488 8.888-1.012a1.851 1.851 0 0 0 1.659-1.975c.057-.853.1-1.709.1-2.562.023-.856.023-1.247 0-2.093-.068-1.6-.755-1.769-2.024-1.7Zm9.982-6.006c2.119 0 3.229 1.3 3.744 3.247a8.461 8.461 0 0 1 .32 2.222 225.099 225.099 0 0 1 0 7.896 8.3 8.3 0 0 1-.869 3.622 3.721 3.721 0 0 1-2.8 2.269c-4.072.553-8.121 1.15-12.182 1.784-1.773.306-3.145-1.253-3.523-3.993a25.755 25.755 0 0 1-.229-3.54c-.011-1.275-.006-2.556 0-3.834s.046-2.562.115-3.834c.091-1.944.606-4.015 1.887-5.128a2.565 2.565 0 0 1 1.533-.709Zm61.427 6.006v-6.006h13.325c1.682-.069 2.768 1.381 3.409 3.771a16.91 16.91 0 0 1 .538 4.281 18.216 18.216 0 0 1-.515 4.3 5.807 5.807 0 0 1-1.945 3.4c-.217.181-.469.34-.652.472.8 1.45 1.611 2.926 2.4 4.443a883.295 883.295 0 0 1 2.505 4.856c-.743-.163-1.453-.331-2.139-.472-1.041-.219-2.1-.381-3.157-.644a1.328 1.328 0 0 1-.732-.643c-.641-1.2-1.285-2.373-1.933-3.55-.633-1.148-1.292-2.3-1.91-3.431-.309-.522-.606-.819-1.041-.862a90.174 90.174 0 0 1-3.74-.481c-.366-.056-.481.116-.481.656.011 1.04.011 2.081.011 3.128v3.172c-1.235-.228-2.7-.472-3.946-.691v-12.17c3.752.156 7.526.293 11.278.4.492.013 1-.006 1.487 0 .56.016.789-.769.881-1.541.091-1.2-.149-2.053-.686-2.234a3.757 3.757 0 0 0-1.19-.16Zm-11.255 0v2.709l9.585.616v4.047l-9.631-.944v2.3l9.631 1.065v5.58c-4.838-.834-8.59-1.4-13.429-2.08v-19.3h13.431v6.006ZM37.072 90.367a232.526 232.526 0 0 1 3.775-5.125 219.554 219.554 0 0 1 3.786-4.809c-1.281-1.453-2.562-2.919-3.832-4.415s-2.439-2.915-3.709-4.484h5.5a1.331 1.331 0 0 1 .881.488c.7.84 1.322 1.559 2.02 2.375s1.407 1.625 2.116 2.431c.709-.84 1.417-1.682 2.127-2.512s1.413-1.643 2.128-2.466a.948.948 0 0 1 .652-.316h5.322c-1.224 1.384-2.475 2.827-3.7 4.237s-2.448 2.853-3.672 4.287c1.3 1.472 2.628 2.933 3.935 4.387s2.619 2.919 3.924 4.409c-1.865-.006-3.741.028-5.6.091a1.194 1.194 0 0 1-.789-.422q-1.116-1.213-2.23-2.434c-.732-.8-1.476-1.625-2.208-2.45-.755.928-1.511 1.855-2.265 2.8s-1.5 1.913-2.253 2.9c-.106.138-.274.327-.423.344-1.818.208-3.66.434-5.479.685m21.618-1.509c1.258-1.422 2.528-2.816 3.786-4.215s2.516-2.809 3.775-4.218q-1.922-2.231-3.832-4.428c-1.273-1.46-2.615-2.993-3.884-4.462h5.412a1.339 1.339 0 0 1 .881.459c.7.8 1.59 1.79 2.282 2.594s1.407 1.637 2.116 2.456c.709-.822 1.422-1.647 2.128-2.481s1.557-1.842 2.268-2.7a.959.959 0 0 1 .64-.34c1.773-.006 3.534 0 5.319.012-1.235 1.516-2.584 3.175-3.812 4.64s-2.459 2.884-3.683 4.293a234.511 234.511 0 0 1 3.935 4.959 262.195 262.195 0 0 1 3.935 5.293 296.137 296.137 0 0 0-5.6-.772 1.472 1.472 0 0 1-.8-.569c-.739-.948-1.48-1.9-2.219-2.822s-1.487-1.831-2.219-2.725q-1.132 1.247-2.253 2.49c-.749.829-1.511 1.652-2.265 2.478-.1.115-.274.26-.412.253a205.452 205.452 0 0 0-5.49-.2m-43.271-6.7a3.858 3.858 0 0 1 1.979 2.993 11.586 11.586 0 0 1-.24 5.3c-.549 1.89-1.6 3-2.962 3.29C9.494 94.797 4.8 95.888.1 97.088a.159.159 0 0 1-.1-.05V81.205c.274-.019.572-.041.881-.066 3.763-.328 7.5-.656 11.255-.981.377-.031.789 0 1.018-.622.32-.9-.034-2.037-.755-2H0V71.53h12.857a3.24 3.24 0 0 1 3.2 1.944 9.3 9.3 0 0 1 .721 4.4 8.384 8.384 0 0 1-1.361 4.277'\r\n          />\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='m75.165 48.1-6.079-9.03v.049c-.057 1.036-.095 2.076-.183 3.112a2.019 2.019 0 0 1-.3.929l-8.448 12.034c-.249.368-.854 1.239-1.255 1.374a.382.382 0 0 1-.448-.158 2.924 2.924 0 0 1-.17-1.252v-.015l.451-9.913a.888.888 0 0 1 .121-.521l6.771-9.393a1.068 1.068 0 0 0 0-1.4l-6.516-9.933a3.453 3.453 0 0 1-.372-1.536l-.564-9.434c-.136-2.082.98-1.647 2.035 0l9.86 15.392 5.074-7.607c.439-.71.756-1.16 1.67-1.2a28.863 28.863 0 0 0 6.026-.866 2.49 2.49 0 0 1 .955-.113.381.381 0 0 1 .292.365 7.753 7.753 0 0 1-1.169 2.293L74.64 33.912a.971.971 0 0 0-.011 1.253l8.1 12.066a7.386 7.386 0 0 1 1.192 2.336.379.379 0 0 1-.247.33 2.314 2.314 0 0 1-1.008-.05 43.691 43.691 0 0 0-6.495-.95c-.5-.024-.775-.421-1.012-.8m-17.2-18.084 2.675 4.223a.378.378 0 0 1-.005.42L57.97 38.64a.386.386 0 0 1-.639 0l-2.729-4a.379.379 0 0 1-.005-.426l2.719-4.206a.386.386 0 0 1 .65 0m-13.64-.628 10.716-16.367c.911-1.366 2.032-2.329 1.921 0l-.453 9.457a3.209 3.209 0 0 1-.565 1.514l-6.217 9.551c-.31.474-.372.717-.048 1.2l6.446 9.577a1.569 1.569 0 0 1 .389.861l.454 9.969v.025a3.345 3.345 0 0 1-.187 1.236.385.385 0 0 1-.494.158 4.869 4.869 0 0 1-1.172-1.361l-9.863-14.918c-.149.21-.3.418-.441.636-1.474 2.327-2.954 4.649-4.408 6.989a1.51 1.51 0 0 1-1.168.806h-.025a40.188 40.188 0 0 0-6.467 1.047 3.664 3.664 0 0 1-1.08.156.385.385 0 0 1-.325-.453 11.67 11.67 0 0 1 1.3-2.279L40.716 34.9a.978.978 0 0 0 0-1.256L32.349 21.23a8.345 8.345 0 0 1-1.185-2.257.382.382 0 0 1 .294-.383 2.706 2.706 0 0 1 .969.1c1.112.258 2.222.524 3.342.747a22.428 22.428 0 0 0 3.334.462c.711.032 1.093.653 1.429 1.19 1 1.6 2.087 3.16 3.146 4.727a3.685 3.685 0 0 1 .542 2.108ZM57.652 0 45.465 18.084a.386.386 0 0 1-.628.017c-1.5-2-2.426-3.151-5.06-3.4a68.259 68.259 0 0 1-11.375-2.346c-3.454-.947-6.874-2.013-10.321-2.979l16.621 24.707a.379.379 0 0 1 0 .426L19.854 57.187c3.235-.656 6.473-1.24 9.736-1.751 3.484-.546 6.978-1.03 10.465-1.553a6.441 6.441 0 0 0 4.394-2.608l.623-.841a.385.385 0 0 1 .633.019L57.652 68.8l11.947-18.351a.386.386 0 0 1 .633-.019l.623.841a6.442 6.442 0 0 0 4.394 2.608c3.488.523 6.982 1.007 10.465 1.553 3.263.511 6.5 1.095 9.736 1.751L80.601 34.51a.378.378 0 0 1 0-.426L97.225 9.376c-3.447.965-6.868 2.031-10.321 2.979A68.266 68.266 0 0 1 75.528 14.7c-2.635.249-3.557 1.4-5.06 3.4a.386.386 0 0 1-.628-.017Z'\r\n          />\r\n        </g>\r\n      </svg>\r\n      <div id='CustomiserCanvasControls' className={styles.controls}></div>\r\n      <Suspense fallback={<div className={styles.loading}>Loading ...</div>}>\r\n        <CustomiserCanvas className={styles.model} onCameraRef={handleCameraRef} />\r\n      </Suspense>\r\n      {selectedNav === null && (\r\n        <Button className={styles.close} onClick={() => setShow(false)}>\r\n          Close\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customiser;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const addToCart = async (data: any) => {\r\n  return fetch(window.Shopify.routes.root + 'cart/add.js', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n};\r\n","/* eslint-disable react/display-name */\r\nimport { FC, Suspense, forwardRef } from 'react';\r\n\r\nexport interface LoadableProps {\r\n  className?: string;\r\n}\r\n\r\n// eslint-disable-next-line react/display-name, @typescript-eslint/no-explicit-any\r\nconst Loadable = (Component: FC<any>) =>\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  forwardRef((props: any, ref) => (\r\n    <Suspense fallback={<></>}>\r\n      <Component {...props} ref={ref} />\r\n    </Suspense>\r\n  ));\r\n\r\nexport default Loadable;\r\n","import { ThreeElements, Vector3 } from '@react-three/fiber';\r\nimport { forwardRef } from 'react';\r\nimport { Mesh } from 'three';\r\n\r\nexport interface MouseHelperProps {\r\n  position?: Vector3;\r\n}\r\n\r\nconst MouseHelper = forwardRef<Mesh, MouseHelperProps>((props, ref) => {\r\n  const BoxProps: ThreeElements['boxGeometry'] = {\r\n    args: [1, 1, 200],\r\n  };\r\n\r\n  return (\r\n    <mesh ref={ref} visible={false} scale={0.1}>\r\n      <boxGeometry {...BoxProps} />\r\n      <meshNormalMaterial />\r\n    </mesh>\r\n  );\r\n});\r\n\r\nMouseHelper.displayName = 'MouseHelper';\r\n\r\nexport default MouseHelper;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CustomiserCanvas_root__1vMOn\",\"save\":\"CustomiserCanvas_save__V9j3S\"};","import { OrbitControls } from '@react-three/drei';\r\nimport { Canvas, ThreeEvent } from '@react-three/fiber';\r\nimport cn from 'classnames';\r\nimport { CSSProperties, lazy, useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nimport {\r\n  CustomDesignEntity,\r\n  CustomDesignInput,\r\n  Maybe,\r\n  useCreateCustomDesignMutation,\r\n  useUploadMultipleFilesMutation,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { addToCart } from '@lib/shopify';\r\nimport { CustomiserState, useCustomiserStore } from '@store/customiser';\r\nimport { useDesignStore } from '@store/design';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { Camera, Euler, Group, Mesh, Vector3 } from 'three';\r\n\r\nimport Lights from '../Lights';\r\nimport Loadable from '../Loadable';\r\nimport MouseHelper from '../MouseHelper';\r\nimport { SceneProps } from '../Scene/Scene';\r\nimport styles from './CustomiserCanvas.module.scss';\r\n\r\nimport ThreeScene from '@components/three/Scene';\r\n\r\nconst Scene = Loadable(lazy(() => import('@components/three/Scene'))) as typeof ThreeScene;\r\n\r\nexport interface CustomiserCanvasProps {\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  onCameraRef: (ref: Camera | null) => void;\r\n}\r\n\r\nconst getCustomDesignData = (state: CustomiserState, files: string[]): CustomDesignInput => ({\r\n  customProduct: state.customProduct?.id,\r\n  parts: state.savedParts.map((p) => ({\r\n    name: p.part.name,\r\n    areaSize: p.part.areaSize?.data?.id,\r\n    material: p.material.id,\r\n  })),\r\n  texts: state.texts.map((t) => ({\r\n    text: t.text,\r\n    decalPosition: t.decalPosition,\r\n    decalOrientation: t.decalOrientation,\r\n    decalRotation: t.decalRotation,\r\n    decalScale: t.decalScale,\r\n    basePriceVariantId: t.basePrice?.shopifyVariantId,\r\n    letterPriceVariantId: t.letterPrice?.shopifyVariantId,\r\n    outlinePriceVariantId: t.outlinePrice?.shopifyVariantId,\r\n    puffPriceVariantId: t.puffPrice?.shopifyVariantId,\r\n    crystalPriceVariantId: t.crystalPrice?.shopifyVariantId,\r\n  })),\r\n  flags: state.flags.map((f) => ({\r\n    flag: f.flag?.id,\r\n    decalPosition: f.decalPosition,\r\n    decalOrientation: f.decalOrientation,\r\n    decalRotation: f.decalRotation,\r\n    decalScale: f.decalScale,\r\n    size: f.size,\r\n    shopifyVariantId: f.basePrice?.shopifyVariantId,\r\n  })),\r\n  graphics: state.graphics.map((g) => ({\r\n    graphic: g.graphic?.id,\r\n    decalPosition: g.decalPosition,\r\n    decalOrientation: g.decalOrientation,\r\n    decalRotation: g.decalRotation,\r\n    decalScale: g.decalScale,\r\n    size: g.size,\r\n    shopifyVariantId: g.basePrice?.shopifyVariantId,\r\n  })),\r\n  images: files,\r\n  sizing: {\r\n    shopifyVariantId: state.sizing?.variation?.id,\r\n    size: state.sizing?.size,\r\n    height: state.sizing?.height?.value?.toString(),\r\n    heightUnit: state.sizing?.height?.unit,\r\n    weight: state.sizing?.weight?.value,\r\n    weightUnit: state.sizing?.weight?.unit,\r\n  },\r\n});\r\n\r\nconst getCartVariations = (customDesignEntity?: CustomDesignEntity) => {\r\n  const customDesignId = customDesignEntity?.id;\r\n  const customDesign = customDesignEntity?.attributes;\r\n\r\n  if (!customDesign || !customDesignId) {\r\n    return [];\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const items: Array<{ id?: string; quantity: number; properties: any }> = [];\r\n  const id = (id?: Maybe<string>) => id?.replace('gid://shopify/ProductVariant/', '');\r\n  const getItem = (id?: string) => items.find((i) => i.id === id);\r\n  const addOrUpdate = (variantId: string, addQty = 1) => {\r\n    const checkItem = getItem(variantId);\r\n    if (checkItem) {\r\n      const newQuantity = checkItem.quantity + addQty;\r\n      checkItem.quantity = newQuantity;\r\n      checkItem.properties._customDesignQuantity = newQuantity;\r\n    } else {\r\n      items.push({\r\n        id: variantId,\r\n        quantity: addQty,\r\n        properties: {\r\n          _customDesignAddon: customDesignId,\r\n          _customDesignQuantity: addQty,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (customDesign.parts?.length) {\r\n    customDesign.parts.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.flags?.length) {\r\n    customDesign.flags.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.graphics?.length) {\r\n    customDesign.graphics.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.texts?.length) {\r\n    customDesign.texts.forEach((t) => {\r\n      const basePrice = id(t?.basePriceVariantId);\r\n      if (basePrice) addOrUpdate(basePrice);\r\n      const letterPrice = id(t?.letterPriceVariantId);\r\n      if (letterPrice) addOrUpdate(letterPrice, t?.text?.length);\r\n      const outlinePrice = id(t?.outlinePriceVariantId);\r\n      if (outlinePrice) addOrUpdate(outlinePrice);\r\n      const puffPrice = id(t?.puffPriceVariantId);\r\n      if (puffPrice) addOrUpdate(puffPrice);\r\n      const crystalPrice = id(t?.crystalPriceVariantId);\r\n      if (crystalPrice) addOrUpdate(crystalPrice);\r\n    });\r\n  }\r\n\r\n  if (customDesign.sizing?.shopifyVariantId) {\r\n    items.push({\r\n      id: id(customDesign.sizing.shopifyVariantId),\r\n      quantity: 1,\r\n      properties: {\r\n        _customDesign: customDesignId,\r\n      },\r\n    });\r\n  }\r\n\r\n  return items;\r\n};\r\n\r\nexport const cameraDefault: [x: number, y: number, z: number] = [\r\n  0, 2.1970893240496195e-15, 15.31024512625285,\r\n];\r\n\r\nconst CustomiserCanvas = ({\r\n  className,\r\n  style,\r\n  onCameraRef,\r\n}: CustomiserCanvasProps): JSX.Element => {\r\n  const cameraRef = useRef<Camera | null>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const images = useRef<File[]>([]);\r\n  const positionRef = useRef<Vector3>(new Vector3());\r\n  const orientationRef = useRef<Euler>(new Euler());\r\n  const groupRef = useRef<Group>(null);\r\n  const editFlag = useCustomiserStore((state) => state.flags.find((f) => f.edit));\r\n  const editText = useCustomiserStore((state) => state.texts.find((f) => f.edit));\r\n  const editGraphic = useCustomiserStore((state) => state.graphics.find((f) => f.edit));\r\n  const updateGraphic = useCustomiserStore((state) => state.updateGraphic);\r\n  const updateFlag = useCustomiserStore((state) => state.updateFlag);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const setCanvasSize = useCustomiserStore((state) => state.setCanvasSize);\r\n  const resetCamera = useDesignStore((state) => state.resetCamera);\r\n  const addingToCart = useDesignStore((state) => state.addingToCart);\r\n  const modelRotation = useDesignStore((state) => state.modelRotation);\r\n  const setAddingToCart = useDesignStore((state) => state.setAddingToCart);\r\n  const setModelRotation = useDesignStore((state) => state.setModelRotation);\r\n  const reset = useCustomiserStore((state) => state.reset);\r\n  const rootClassName = cn(styles.root, className);\r\n  const mouseHelperRef = useRef<Mesh>(null);\r\n  const state = useCustomiserStore((state) => state);\r\n\r\n  const [isPointerDown, setIsPointerDown] = useState(false);\r\n  const [isPointerMoved, setIsPointerMoved] = useState(false);\r\n\r\n  const setPosition = useCallback(\r\n    (event: ThreeEvent<MouseEvent>) => {\r\n      const p = event.point;\r\n      const n = event?.face?.normal.clone();\r\n      if (mouseHelperRef.current && n && groupRef.current) {\r\n        n.transformDirection(groupRef.current.matrixWorld);\r\n        n.multiplyScalar(10);\r\n        n.add(p);\r\n        mouseHelperRef.current.position.copy(p);\r\n        mouseHelperRef.current.lookAt(n);\r\n      }\r\n    },\r\n    [mouseHelperRef],\r\n  );\r\n\r\n  const onClick = useCallback<Required<SceneProps>['onClick']>(\r\n    (event) => {\r\n      setIsPointerDown(false);\r\n      setIsPointerMoved(false);\r\n\r\n      if (!isPointerDown || isPointerMoved) {\r\n        return;\r\n      }\r\n\r\n      if (editFlag?.key) {\r\n        event.stopPropagation();\r\n\r\n        updateFlag(editFlag.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateFlag(editFlag.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (editGraphic?.key) {\r\n        event.stopPropagation();\r\n\r\n        updateGraphic(editGraphic.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateGraphic(editGraphic.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (editText?.key) {\r\n        event.stopPropagation();\r\n        updateText(editText.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateText(editText.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n    },\r\n    [editFlag, editGraphic, editText, isPointerDown, isPointerMoved],\r\n  );\r\n\r\n  const onPointerDown = useCallback<Required<SceneProps>['onPointerDown']>(() => {\r\n    setIsPointerDown(true);\r\n  }, []);\r\n\r\n  const onPointerMove = useCallback<Required<SceneProps>['onPointerMove']>(\r\n    (e) => {\r\n      if (isPointerDown) {\r\n        setIsPointerMoved(true);\r\n      }\r\n    },\r\n    [isPointerDown],\r\n  );\r\n\r\n  const shopifyAddToCart = useMutation({\r\n    mutationFn: addToCart,\r\n    onSuccess: () => {\r\n      window.location.href = window.Shopify.routes.root + 'cart';\r\n      reset();\r\n    },\r\n  });\r\n\r\n  const { mutate } = useCreateCustomDesignMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      if (data.createCustomDesign?.data) {\r\n        const items = getCartVariations(data.createCustomDesign.data);\r\n        shopifyAddToCart.mutate({ items: items });\r\n      }\r\n    },\r\n  });\r\n\r\n  const { mutateAsync } = useUploadMultipleFilesMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const fileIDs = data.multipleUpload.map((f) => f?.data?.id) as string[];\r\n      mutate({ data: getCustomDesignData(state, fileIDs) });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (addingToCart && modelRotation < 360) {\r\n      setTimeout(() => {\r\n        canvasRef?.current?.toBlob((blob) => {\r\n          if (blob) {\r\n            const file = new File([blob], 'fileName.png', { type: 'image/png' });\r\n            images.current.push(file);\r\n            setModelRotation(modelRotation + 90);\r\n          }\r\n        }, 'image/png');\r\n      }, 50);\r\n    } else if (addingToCart) {\r\n      const upload = async () => {\r\n        await mutateAsync({ files: images.current });\r\n      };\r\n      upload();\r\n    }\r\n  }, [modelRotation, addingToCart, images]);\r\n\r\n  useEffect(() => {\r\n    const camera = cameraRef.current;\r\n    if (!camera) {\r\n      return;\r\n    }\r\n    if (resetCamera) {\r\n      camera.position.set(cameraDefault[0], cameraDefault[1], cameraDefault[2]);\r\n      setAddingToCart();\r\n    }\r\n  }, [resetCamera]);\r\n\r\n  useEffect(() => {\r\n    if (onCameraRef && cameraRef.current) {\r\n      onCameraRef(cameraRef.current);\r\n    }\r\n  }, [onCameraRef]);\r\n\r\n  const isEditing = editFlag || editGraphic || editText;\r\n\r\n  return (\r\n    <div className={rootClassName} style={style}>\r\n      <Canvas\r\n        linear\r\n        flat\r\n        camera={{\r\n          position: cameraDefault,\r\n          fov: 45,\r\n        }}\r\n        dpr={window.devicePixelRatio}\r\n        gl={{ preserveDrawingBuffer: true }}\r\n        ref={canvasRef}\r\n        onCreated={(state) => {\r\n          setCanvasSize(state.size.width, state.size.height);\r\n          cameraRef.current = state.camera;\r\n        }}\r\n        frameloop='demand'\r\n      >\r\n        <Scene\r\n          onClick={onClick}\r\n          onPointerDown={onPointerDown}\r\n          onPointerMove={onPointerMove}\r\n          ref={groupRef}\r\n        />\r\n        <Lights />\r\n        {isEditing && <MouseHelper ref={mouseHelperRef} />}\r\n        <OrbitControls\r\n          enableZoom={true}\r\n          maxDistance={50}\r\n          minDistance={5}\r\n          minPolarAngle={Math.PI / 3}\r\n          maxPolarAngle={Math.PI / 1.9}\r\n        />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomiserCanvas;\r\n","import { SpotLight, useHelper } from '@react-three/drei';\r\nimport { useRef } from 'react';\r\nimport { SpotLightHelper, Vector3, SpotLight as SpotLightRef } from 'three';\r\nconst config = {\r\n  ambientLight: {\r\n    // color: 16777215,\r\n    // groundColor: 4473924,\r\n    intensity: 0.1,\r\n  },\r\n  directionalLights: [\r\n    {\r\n      color: 16777215,\r\n      intensity: 0.3,\r\n      position: new Vector3(0, 6, -200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 16759931,\r\n      intensity: 0.2,\r\n      position: new Vector3(-150, 0, 200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 10213119,\r\n      intensity: 0.2,\r\n      position: new Vector3(100, 0, 200),\r\n    },\r\n  ],\r\n};\r\n\r\nconst Lights = () => {\r\n  const light = useRef<SpotLightRef>(null);\r\n  // useHelper(light.current, SpotLightHelper, 'cyan');\r\n  return (\r\n    <group>\r\n      <hemisphereLight {...config.ambientLight}></hemisphereLight>\r\n      <pointLight position={[-800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[-800, 0, 1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[800, 0, 1000]} intensity={0.5} decay={120} power={7} castShadow />\r\n      <pointLight position={[800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Lights;\r\n"],"names":["_ref","className","selected","children","rest","rootClassName","cn","styles","_jsx","usePortalRef","id","loaded","setLoaded","useState","portalRef","useRef","useEffect","current","document","getElementById","notifName","setShowNotification","cb","isChecked","setIsChecked","handleDismiss","localStorage","setItem","_Fragment","_jsxs","type","onChange","e","target","checked","onClick","confirmText","confirmStorage","cancelPartChange","useCustomiserStore","state","resetNav","popupPortalRef","showPopup","setShowPopup","notifTitle","shouldShowNotification","getItem","ReactDOM","Button","colour","DontShowAgain","FittingOption","_selectedModels$find","_option$models","option","focusCameraOnPart","selectedModels","setSelectedModel","getSelected","find","m","optionId","model","motion","div","initial","opacity","animate","exit","name","models","map","_m$model","_m$model$data","_m$model3","_m$model3$data","_m$model3$data$attrib","OptionButton","data","_m$model2","attributes","_ref2","fittingOptions","_state$customProduct","_state$customProduct$","customProduct","options","o","NavButtons","getSrcSets","formats","fff","Object","entries","f","width","url","filter","format","length","sort","a","b","reduce","acc","index","array","concat","getSrcSet","_image$attributes4","image","sizes","relativeHeight","useMemo","_image$attributes","_image$attributes2","height","style","srcSet","_image$attributes3","src","NavFlagsSelect","editFlag","flags","addFlag","updateFlag","_f$attributes","flag","flagSelected","key","edit","Image","_prices$length","scale","rotation","prices","onScale","onRotate","scaleAdjust","rotateAdjust","currentScale","setCurrentScale","currentRotate","setCurrentRotate","rootRotateClassName","marks","range","start","stop","step","Array","from","value","p","i","markKey","Number","toFixed","createPortal","subtractScale","cur","FaCircleMinus","addScale","FaCirclePlus","rotateCounterClockwise","GiAnticlockwiseRotation","rotateClockwise","GiClockwiseRotation","disabled","onApply","onEdit","onDelete","isVisible","toggleVisibility","isVisibleEye","undefined","event","stopPropagation","FaEye","FaEyeSlash","xmlns","viewBox","d","NavFlagsFlag","_flag$flag","_flag$flag$attributes","setShowSelector","setSelectModel","deleteFlag","flagItem","flagItemImage","NavOptionEdit","editItem","deleteItem","NavFlags","g","showSelector","flagQuery","useGetFlagsQuery","graphQLClient","pagination","limit","select","_data$flags","_data$graphicPrices","graphicPrices","NavDecalAdjust","decalScale","decalRotation","setScale","price","_price$attributes","_price$attributes2","priceValues","size","basePrice","quantity","startTransition","NavEditButtons","applyFlag","decalFreeze","customiserFlags","title","alt","propStyles","shouldShow","setShouldShow","imgIcon","InfoDisplay","toggle","isOpen","isMinimized","selectedNav","minimizeIconClassname","InfoButton","NavImagesImage","_graphic$graphic","_graphic$graphic$attr","_graphic$graphic$attr2","graphic","updateGraphic","deleteGraphic","graphicItem","graphicItemImage","NavImagesUpload","setGraphic","saving","setSaving","mutate","createGraphicMutation","useCreateGraphicMutation","onSuccess","_data$createGraphic","createGraphic","fileUploadMutate","useUploadMultipleFilesMutation","fileIDs","multipleUpload","_f$data","customer","onDrop","useCallback","acceptedFiles","files","getRootProps","getInputProps","isDragActive","useDropzone","accept","maxFiles","multiple","dropZone","NavImagesSelect","_currentGraphic$attri","_currentGraphic$attri2","editGraphic","currentGraphic","setCurrentGraphic","addGraphic","graphics","graphicSelected","NavImages","imageQuery","useGetImagesQuery","applyImage","addImage","navItems","sizingVariation","_state$sizing","sizing","variation","parts","savedParts","texts","setSelectedNav","isSelected","item","part","handleClick","required","color","pillButton","pillButtonSelected","uniqueMaterialTypes","uniqBy","initialState","colourGroups","materialTypes","materials","createMaterialGroup","set","get","filteredMaterials","colourGroup","selectedColourGroup","_m$attributes","_m$attributes$colourG","resetMaterialGroup","setMaterials","materialType","produce","flatMap","_d$attributes","_d$attributes$colourG","_m$attributes2","_m$attributes2$colour","_state$selectedColour","_m$attributes3","_m$attributes3$type","selectedMaterialType","uniqueMaterials","setColourGroup","_m$attributes4","_m$attributes4$colour","_state$selectedColour2","_m$attributes5","_m$attributes5$type","setMaterialType","Provider","useStore","useMaterialGroupStore","createContext","createStore","create","devtools","Material","_material$attributes","_material$attributes$","_material$attributes2","_mapImage$image","_mapImage$image$data","_mapImage$image$data$","material","onMaterialSelected","selectedMaterialId","mapImage","images","mapType","MaterialType","hideColorGroups","getFilteredMaterials","mt","_mt$attributes","materialType__title","_m$attributes$type","_m$attributes$type$da","SelectedMaterialInfo","_selectedMaterial$att","_selectedMaterial$att2","_selectedMaterial$att3","_selectedMaterial$att4","_selectedMaterial$att5","selectedPart","selectedMaterial","_parts$find","MaterialGroupLoader","_materialGroup$attrib","materialGroup","root","typeIds","t","useGetMaterialsQuery","filters","in","pageSize","_data$materials","group","_group$attributes$col","_group$attributes","_group$attributes$col2","_group$attributes2","strokeWidth","stroke","fill","props","_part$materialGroup","_currentPart$material","_currentPart$material2","_currentPart$material3","_currentPart$material4","setPart","removePart","currentPart","showOptional","setShowOptional","optional","PillButton","optionalOnClick","show","Suspense","fallback","MaterialGroup","placeholder","getSizeVariation","unit","weight","variations","v","_v$sku","sku","endsWith","setSizing","_state$sizing2","_state$sizing3","setHeightUnit","setWeightUnit","FormInput","unitToggle","toggleButton","toggleButtonSelected","UNIT","HEIGHT","CM","INCH","WEIGHT","KG","LB","FormSelect","selectedVariation","currentStep","hasFinishedStep","onTitleClick","shouldShowInfoButton","includes","toUpperCase","console","log","titleClassName","titleContainer","active","finished","handleTitleClick","titleStep","titleButton","content","preventShow","applyTextHandler","maxWidth","maxStep","onNext","onPrevious","onPlace","onCancel","editText","noCrystalSelected","shouldShowSave","decalPosition","text","confirm","NavTextApplyText","priceString","formattedPrice","_editText$crystalBack","_selectedName$attribu9","_selectedName$attribu10","_selectedName$attribu11","_selectedName$attribu12","_selectedName$attribu13","_selectedName$attribu14","_editText$material","_editText$material$at","_editText$material$at2","_editText$material2","_editText$material2$a","_editText$material2$a2","setIsPickingCrystal","selectedName","crystalBackground","crystals","setCrystals","crystalPrice","puff","setPuff","puffPrice","hasPuffOption","NAME_TYPE_LUXURY_ID","updateText","addCrystals","add","_selectedName$attribu","_selectedName$attribu2","_selectedName$attribu3","_selectedName$attribu4","shopifyVariantId","addPuff","_selectedName$attribu5","_selectedName$attribu6","_selectedName$attribu7","_selectedName$attribu8","finishSelections","finishSelection","pricing","Price","_selectedName$attribu15","_editText$material3","_editText$material3$a","_editText$material3$a2","prevSelectedName","names","useGetNamesQuery","_data$names","letterPrice","nameType","outline","outlinePrice","promptMessage","n","_n$attributes","_n$attributes2","_n$attributes2$basePr","_n$attributes3","_n$attributes3$letter","setSelectedName","_editText$outline","_editText$outline2","_editText$outline2$at","_editText$outline2$at2","_editText$outline3","_editText$outline3$at","_editText$outline3$at2","setIsPickingOutline","showOutline","setShowOutline","updateOutline","outlineGroup","fonts","arial","oswald","college","ballantines","_fonts$find","setText","font","setFont","addText","fontSelection","_font","onFontChange","deleteText","textItem","textItemText","onAddTextClicked","onTextSelected","navTextsSelection","titleText","NavTextText","getMaterialUrl","_material$attributes$2","_material$attributes$3","_material$attributes$4","imgMap","large","normalMapGenerator","NormalMapGenerator","instance","async","imgToNormalMap","img","hasPuff","blur","blurAmount","generateFromImage","strength","level","CanvasText","constructor","toNormalMap","patternType","canvas","ctx","outlineCanvas","outlineCtx","normalMapTextureCanvas","normalMapTextureCtx","normalMapCanvas","normalMapCtx","normalMapOutlineTextureCanvas","normalMapOutlineTextureCtx","normalMapOutlineCanvas","normalMapOutlineCtx2","crystalBgPatternCanvas","crystalBgPatternCtx","canvasHeight","canvasWidth","fontSize","outlineWidth","this","createElement","getContext","clear","_this$ctx","_this$outlineCtx","clearRect","drawImg","drawImage","showTestCanvas","innerHTML","maskImage","globalCompositeOperation","drawPreviewText","textAlign","fillText","drawPreviewOutlineText","lineWidth","strokeText","drawPreviewOutlineOnlyText","fillStyle","drawNormalMap","normalMapPatternImg","pattern","createPattern","rect","normalMap","drawOutlineNormalMap","drawCrystalBg","crystalBgImg","crystalBgPatternImg","globalAlpha","printTextMapToStrokeMap","previewText","_ref3","previewImg","toDataURL","mergeCanvas","getOutlineCanvas","getNormalMapTextureCanvas","getNormalMapOutlineCanvas","loadImage","Promise","resolve","reject","crossOrigin","onload","onerror","_text$selectedName","_text$selectedName2","_text$selectedName2$a","canvasRef","zoom","setZoom","dataUrl","setDataUrl","scaleModifier","Vector3","isLuxury","hasCrystals","Texture","normalScale","Canvas","ref","el","gl","preserveDrawingBuffer","Lights","args","visible","Decal","position","preview","transparent","roughness","depthTest","depthWrite","Vector2","_canvasRef$current","_editText$selectedNam","_previewImgRef$curren","previewImgRef","fontFamily","setFontFamily","isVisiblePreview","setIsVisiblePreview","getPatternType","materialImgMemo","outlineImgMemo","fabricPatternImgMemo","crystalNormalMapImgMemo","crystalBgImgMemo","crystalBgPatternImgMemo","previewImgDom","canvasText","CanvasTexture","fontUrl","FontFace","load","loadFonts","outlineImg","embroideryPattern","crystalNormalMap","patternImg","zIndex","textPreview","textPreview__imgContainer","display","NavTextPreviewScene","noText","NavText","setStep","updateIsMinimizedCustomiserNav","isMinimizedCustomiserNav","isPickingOutline","isPickingCrystal","navHeaderRef","hasFinishedAllSteps","hasFinishedStep1","hasFinishedStep2","hasFinishedStep3","hasFinishedStep4","saveAndApplyChecker","alert","applyText","hasApplied","_step","navTextEdit","NavTextPreview","Accordion","NavTextSelect","NavTextNameTypes","NavTextOutline","NavTextFinish","NavStepButtons","handleNext","handlePrevious","cancelText","decalOrientation","navHeaderSaveText","NavTextsSelection","setIsOpen","scrollCoordinates","setScrollCoordinates","left","top","scrollableRef","isFullscreen","open","minimized","hasActions","scrollTo","behavior","toggleOpen","scrollLeft","scrollTop","nav","layout","transition","stiffness","damping","NavHeader","header","headerAfter","AnimatePresence","variants","collapsed","NavOptions","NavFitting","NavSize","NavPart","actions","total","designComplete","setResetCamera","useDesignStore","addingToCart","resetCustomerSelections","resetPopup","saveDesign","CustomiserCanvas","lazy","cameraLegCutPosition","setShow","cameraRef","CustomiserNav","focusCamera","coordinates","camera","toLowerCase","cameraDefault","Header","clipPath","fillRule","onCameraRef","addToCart","fetch","window","Shopify","routes","method","headers","body","JSON","stringify","Component","forwardRef","MouseHelper","displayName","Scene","Loadable","getCustomDesignData","_state$sizing$variati","_state$sizing3$height","_state$sizing3$height2","_state$sizing4","_state$sizing4$height","_state$sizing5","_state$sizing5$weight","_state$sizing6","_state$sizing6$weight","_p$part$areaSize","_p$part$areaSize$data","areaSize","_t$basePrice","_t$letterPrice","_t$outlinePrice","_t$puffPrice","_t$crystalPrice","basePriceVariantId","letterPriceVariantId","outlinePriceVariantId","puffPriceVariantId","crystalPriceVariantId","_f$flag","_f$basePrice","_g$graphic","_g$basePrice","toString","heightUnit","weightUnit","getCartVariations","customDesignEntity","_customDesign$parts","_customDesign$flags","_customDesign$graphic","_customDesign$texts","_customDesign$sizing","customDesignId","customDesign","items","replace","addOrUpdate","variantId","addQty","arguments","checkItem","newQuantity","properties","_customDesignQuantity","push","_customDesignAddon","forEach","_t$text","_customDesign","positionRef","orientationRef","Euler","groupRef","setCanvasSize","resetCamera","modelRotation","setAddingToCart","setModelRotation","reset","mouseHelperRef","isPointerDown","setIsPointerDown","isPointerMoved","setIsPointerMoved","setPosition","_event$face","point","face","normal","clone","transformDirection","matrixWorld","multiplyScalar","copy","lookAt","toArray","onPointerDown","onPointerMove","shopifyAddToCart","useMutation","mutationFn","location","href","useCreateCustomDesignMutation","_data$createCustomDes","createCustomDesign","mutateAsync","setTimeout","toBlob","blob","file","File","upload","isEditing","linear","flat","fov","dpr","devicePixelRatio","onCreated","frameloop","OrbitControls","enableZoom","maxDistance","minDistance","minPolarAngle","Math","PI","maxPolarAngle","config","intensity","decay","power","castShadow"],"sourceRoot":""}