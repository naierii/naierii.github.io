{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reian\\\\Desktop\\\\Work\\\\Freelance\\\\Boxxer World\\\\boxxerworld-shopify-frontend\\\\customiser\\\\src\\\\components\\\\nav\\\\NavStepButtons\\\\NavStepButtons.tsx\",\n  _s = $RefreshSig$();\n// eslint-disable-next-line\n// @ts-nocheck\nimport Button from '@components/ui/Button';\nimport { usePortalRef } from '@hooks';\nimport cn from 'classnames';\nimport ReactDOM from 'react-dom';\nimport styles from './NavStepButtons.module.scss';\nimport NavTextApplyText from '../NavText/NavTextPlaceTextGuide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavStepButtons = ({\n  className,\n  step,\n  maxStep,\n  onApply,\n  onNext,\n  onPrevious,\n  onPlace,\n  editText\n}) => {\n  _s();\n  const rootClassName = cn(styles.root, className);\n  const portalRef = usePortalRef('CustomiserNavActions');\n  const shouldShowSave = !onPlace ? true : editText !== null && editText !== void 0 && editText.decalPosition ? true : false;\n  if (!portalRef) {\n    return null;\n  }\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: rootClassName,\n    children: [step === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n      colour: \"darkGrey\",\n      onClick: onApply,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onPrevious,\n      disabled: step === 0,\n      children: \"Prev Step\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), step === maxStep ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [shouldShowSave && /*#__PURE__*/_jsxDEV(Button, {\n        colour: \"red\",\n        onClick: onApply,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), onPlace && /*#__PURE__*/_jsxDEV(NavTextApplyText, {\n        onClick: onPlace,\n        styles: (editText === null || editText === void 0 ? void 0 : editText.decalPosition) && {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n      colour: \"yellow\",\n      onClick: onNext,\n      children: \"Next Step\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this), portalRef);\n};\n_s(NavStepButtons, \"9efVRoS+fg07fAx2F/fk43oQTqE=\", false, function () {\n  return [usePortalRef];\n});\n_c = NavStepButtons;\nexport default NavStepButtons;\nvar _c;\n$RefreshReg$(_c, \"NavStepButtons\");","map":{"version":3,"names":["Button","usePortalRef","cn","ReactDOM","styles","NavTextApplyText","jsxDEV","_jsxDEV","Fragment","_Fragment","NavStepButtons","className","step","maxStep","onApply","onNext","onPrevious","onPlace","editText","_s","rootClassName","root","portalRef","shouldShowSave","decalPosition","createPortal","children","colour","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","display","_c","$RefreshReg$"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavStepButtons/NavStepButtons.tsx"],"sourcesContent":["// eslint-disable-next-line\r\n// @ts-nocheck\r\nimport Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavStepButtons.module.scss';\r\nimport { TextCustomiser } from '@store/customiser';\r\nimport NavTextApplyText from '../NavText/NavTextPlaceTextGuide';\r\n\r\nexport interface NavStepButtonsProps {\r\n  className?: string;\r\n  step?: number;\r\n  maxStep: number;\r\n  onNext?: () => void;\r\n  onPrevious?: () => void;\r\n  onApply?: () => void;\r\n  onPlace?: () => void;\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavStepButtons = ({\r\n  className,\r\n  step,\r\n  maxStep,\r\n  onApply,\r\n  onNext,\r\n  onPrevious,\r\n  onPlace,\r\n  editText,\r\n}: NavStepButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  const shouldShowSave = !onPlace ? true : editText?.decalPosition ? true : false;\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={rootClassName}>\r\n      {step === 0 ? (\r\n        <Button colour='darkGrey' onClick={onApply}>\r\n          Cancel\r\n        </Button>\r\n      ) : (\r\n        <Button onClick={onPrevious} disabled={step === 0}>\r\n          Prev Step\r\n        </Button>\r\n      )}\r\n\r\n      {/* <Button>View Model</Button> */}\r\n\r\n      {step === maxStep ? (\r\n        <>\r\n          {shouldShowSave && (\r\n            <Button colour='red' onClick={onApply}>\r\n              Save\r\n            </Button>\r\n          )}\r\n          {onPlace && (\r\n            <NavTextApplyText\r\n              onClick={onPlace}\r\n              styles={editText?.decalPosition && { display: 'none' }}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Button colour='yellow' onClick={onNext}>\r\n          Next Step\r\n        </Button>\r\n      )}\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavStepButtons;\r\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,MAAM,MAAM,uBAAuB;AAC1C,SAASC,YAAY,QAAQ,QAAQ;AACrC,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,QAAQ,MAAM,WAAW;AAEhC,OAAOC,MAAM,MAAM,8BAA8B;AAEjD,OAAOC,gBAAgB,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAahE,MAAMC,cAAc,GAAGA,CAAC;EACtBC,SAAS;EACTC,IAAI;EACJC,OAAO;EACPC,OAAO;EACPC,MAAM;EACNC,UAAU;EACVC,OAAO;EACPC;AACmB,CAAC,KAAK;EAAAC,EAAA;EACzB,MAAMC,aAAa,GAAGlB,EAAE,CAACE,MAAM,CAACiB,IAAI,EAAEV,SAAS,CAAC;EAChD,MAAMW,SAAS,GAAGrB,YAAY,CAAC,sBAAsB,CAAC;EAEtD,MAAMsB,cAAc,GAAG,CAACN,OAAO,GAAG,IAAI,GAAGC,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEM,aAAa,GAAG,IAAI,GAAG,KAAK;EAE/E,IAAI,CAACF,SAAS,EAAE;IACd,OAAO,IAAI;EACb;EAEA,oBAAOnB,QAAQ,CAACsB,YAAY,eAC1BlB,OAAA;IAAKI,SAAS,EAAES,aAAc;IAAAM,QAAA,GAC3Bd,IAAI,KAAK,CAAC,gBACTL,OAAA,CAACP,MAAM;MAAC2B,MAAM,EAAC,UAAU;MAACC,OAAO,EAAEd,OAAQ;MAAAY,QAAA,EAAC;IAE5C;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAETzB,OAAA,CAACP,MAAM;MAAC4B,OAAO,EAAEZ,UAAW;MAACiB,QAAQ,EAAErB,IAAI,KAAK,CAAE;MAAAc,QAAA,EAAC;IAEnD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,EAIApB,IAAI,KAAKC,OAAO,gBACfN,OAAA,CAAAE,SAAA;MAAAiB,QAAA,GACGH,cAAc,iBACbhB,OAAA,CAACP,MAAM;QAAC2B,MAAM,EAAC,KAAK;QAACC,OAAO,EAAEd,OAAQ;QAAAY,QAAA,EAAC;MAEvC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT,EACAf,OAAO,iBACNV,OAAA,CAACF,gBAAgB;QACfuB,OAAO,EAAEX,OAAQ;QACjBb,MAAM,EAAE,CAAAc,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEM,aAAa,KAAI;UAAEU,OAAO,EAAE;QAAO;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CACF;IAAA,eACD,CAAC,gBAEHzB,OAAA,CAACP,MAAM;MAAC2B,MAAM,EAAC,QAAQ;MAACC,OAAO,EAAEb,MAAO;MAAAW,QAAA,EAAC;IAEzC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC,EACNV,SACF,CAAC;AACH,CAAC;AAACH,EAAA,CAvDIT,cAAc;EAAA,QAWAT,YAAY;AAAA;AAAAkC,EAAA,GAX1BzB,cAAc;AAyDpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}