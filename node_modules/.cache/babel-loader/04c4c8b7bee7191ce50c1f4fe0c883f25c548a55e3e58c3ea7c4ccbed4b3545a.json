{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reian\\\\Desktop\\\\Work\\\\Freelance\\\\Boxxer World\\\\boxxerworld-shopify-frontend\\\\customiser\\\\src\\\\components\\\\nav\\\\NavButtons\\\\NavButtons.tsx\",\n  _s = $RefreshSig$();\nimport Button from '@components/ui/Button';\nimport { usePortalRef } from '@hooks';\nimport { useCustomiserStore } from '@store/customiser';\nimport cn from 'classnames';\nimport ReactDOM from 'react-dom';\nimport styles from './NavButtons.module.scss';\nimport DontShowAgain from '../../ui/DontShowAgain';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavButtons = ({\n  className,\n  confirmText\n}) => {\n  _s();\n  const rootClassName = cn(styles.root, className);\n  const cancelPartChange = useCustomiserStore(state => state.cancelPartChange);\n  const resetNav = useCustomiserStore(state => state.resetNav);\n  const portalRef = usePortalRef('CustomiserNavActions');\n  const popupPortalRef = usePortalRef('popupContainer');\n  const [showPopup, setShowPopup] = useState(false);\n  console.log('showPopup', showPopup);\n  if (!portalRef || !popupPortalRef) {\n    return null;\n  }\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: rootClassName,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => cancelPartChange(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colour: \"red\",\n        onClick: () => {\n          if (!confirmText) {\n            resetNav();\n          } else {\n            setShowPopup(true);\n            // if (confirm(confirmText)) {\n            //   resetNav();\n            // }\n          }\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), confirmText && showPopup && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(DontShowAgain, {\n      setShowNotification: setShowPopup,\n      notifName: 'confirmText005',\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"America ya!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), popupPortalRef)]\n  }, void 0, true), portalRef);\n};\n_s(NavButtons, \"TxvpgRxpGlG7xRpjtaQuS6qSqPA=\", false, function () {\n  return [useCustomiserStore, useCustomiserStore, usePortalRef, usePortalRef];\n});\n_c = NavButtons;\nexport default NavButtons;\nvar _c;\n$RefreshReg$(_c, \"NavButtons\");","map":{"version":3,"names":["Button","usePortalRef","useCustomiserStore","cn","ReactDOM","styles","DontShowAgain","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","NavButtons","className","confirmText","_s","rootClassName","root","cancelPartChange","state","resetNav","portalRef","popupPortalRef","showPopup","setShowPopup","console","log","createPortal","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","colour","setShowNotification","notifName","_c","$RefreshReg$"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavButtons/NavButtons.tsx"],"sourcesContent":["import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavButtons.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\nimport DontShowAgain from '../../ui/DontShowAgain';\r\nimport { useState } from 'react';\r\n\r\nexport interface NavButtonsProps {\r\n  className?: string;\r\n  confirmText?: string | Falsey;\r\n}\r\n\r\nconst NavButtons = ({ className, confirmText }: NavButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const cancelPartChange = useCustomiserStore((state) => state.cancelPartChange);\r\n  const resetNav = useCustomiserStore((state) => state.resetNav);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n  console.log('showPopup', showPopup);\r\n\r\n  if (!portalRef || !popupPortalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className={rootClassName}>\r\n        <Button onClick={() => cancelPartChange()}>Cancel</Button>\r\n        <Button\r\n          colour='red'\r\n          onClick={() => {\r\n            if (!confirmText) {\r\n              resetNav();\r\n            } else {\r\n              setShowPopup(true);\r\n              // if (confirm(confirmText)) {\r\n              //   resetNav();\r\n              // }\r\n            }\r\n          }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </div>\r\n      {confirmText &&\r\n        showPopup &&\r\n        ReactDOM.createPortal(\r\n          <DontShowAgain setShowNotification={setShowPopup} notifName={'confirmText005'}>\r\n            <span>America ya!</span>\r\n          </DontShowAgain>,\r\n          popupPortalRef,\r\n        )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,uBAAuB;AAC1C,SAASC,YAAY,QAAQ,QAAQ;AACrC,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,QAAQ,MAAM,WAAW;AAEhC,OAAOC,MAAM,MAAM,0BAA0B;AAG7C,OAAOC,aAAa,MAAM,wBAAwB;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAOjC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAA6B,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAMC,aAAa,GAAGb,EAAE,CAACE,MAAM,CAACY,IAAI,EAAEJ,SAAS,CAAC;EAChD,MAAMK,gBAAgB,GAAGhB,kBAAkB,CAAEiB,KAAK,IAAKA,KAAK,CAACD,gBAAgB,CAAC;EAC9E,MAAME,QAAQ,GAAGlB,kBAAkB,CAAEiB,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EAC9D,MAAMC,SAAS,GAAGpB,YAAY,CAAC,sBAAsB,CAAC;EAEtD,MAAMqB,cAAc,GAAGrB,YAAY,CAAC,gBAAgB,CAAC;EACrD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAU,KAAK,CAAC;EAC1DkB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,SAAS,CAAC;EAEnC,IAAI,CAACF,SAAS,IAAI,CAACC,cAAc,EAAE;IACjC,OAAO,IAAI;EACb;EAEA,oBAAOlB,QAAQ,CAACuB,YAAY,eAC1BlB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAKI,SAAS,EAAEG,aAAc;MAAAY,QAAA,gBAC5BnB,OAAA,CAACT,MAAM;QAAC6B,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAAC,CAAE;QAAAU,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DxB,OAAA,CAACT,MAAM;QACLkC,MAAM,EAAC,KAAK;QACZL,OAAO,EAAEA,CAAA,KAAM;UACb,IAAI,CAACf,WAAW,EAAE;YAChBM,QAAQ,CAAC,CAAC;UACZ,CAAC,MAAM;YACLI,YAAY,CAAC,IAAI,CAAC;YAClB;YACA;YACA;UACF;QACF,CAAE;QAAAI,QAAA,EACH;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACLnB,WAAW,IACVS,SAAS,iBACTnB,QAAQ,CAACuB,YAAY,eACnBlB,OAAA,CAACH,aAAa;MAAC6B,mBAAmB,EAAEX,YAAa;MAACY,SAAS,EAAE,gBAAiB;MAAAR,QAAA,eAC5EnB,OAAA;QAAAmB,QAAA,EAAM;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,EAChBX,cACF,CAAC;EAAA,eACH,CAAC,EACHD,SACF,CAAC;AACH,CAAC;AAACN,EAAA,CA7CIH,UAAU;EAAA,QAEWV,kBAAkB,EAC1BA,kBAAkB,EACjBD,YAAY,EAEPA,YAAY;AAAA;AAAAoC,EAAA,GAN/BzB,UAAU;AA+ChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}