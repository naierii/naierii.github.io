{"version":3,"file":"static/js/594.6fbfe5c3.chunk.js","mappings":"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","sources":["webpack://boxxerworld-customiser/./src/components/nav/NavFitting/NavFitting.module.scss?96df","components/ui/Button/ContainedNavButton.tsx","lib/string.ts","components/nav/NavFitting/NavFitting.tsx","components/ui/Image/getSrcSets.ts","webpack://boxxerworld-customiser/./src/components/ui/Image/Image.module.scss?e41e","components/ui/Image/Image.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFlags/NavFlags.module.scss?2098","components/nav/NavFlags/NavFlagsSelect.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavDecalAdjust/NavDecalAdjust.module.scss?c425","hooks/usePortalRef/usePortalRef.ts","components/nav/NavDecalAdjust/NavDecalAdjust.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavEditButtons/NavEditButtons.module.scss?6ae0","components/nav/NavEditButtons/NavEditButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavOptionEdit/NavOptionEdit.module.scss?d15e","components/nav/NavOptionEdit/NavOptionEdit.tsx","components/nav/NavFlags/NavFlagsFlag.tsx","components/nav/NavFlags/NavFlags.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavHeader/NavHeader.module.scss?a403","components/nav/NavHeader/NavHeader.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavImages/NavImages.module.scss?0415","components/nav/NavImages/NavImagesImage.tsx","components/nav/NavImages/NavImagesUpload.tsx","components/nav/NavImages/NavImagesSelect.tsx","components/nav/NavImages/NavImages.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/MaterialGroup.module.scss?bec8","components/nav/MaterialGroup/MaterialGroupState.ts","components/nav/MaterialGroup/Material.tsx","components/nav/MaterialGroup/test-crystal-material.ts","lib/img.util.ts","components/nav/MaterialGroup/MaterialCrystal.tsx","components/nav/MaterialGroup/MaterialType.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/SelectedMaterialInfo.module.scss?ad46","components/nav/MaterialGroup/SelectedMaterialInfo.tsx","components/nav/MaterialGroup/MaterialGroup.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavPart/NavPart.module.scss?e3f3","components/ui/Button/TogglePillButton.tsx","components/nav/NavPart/NavPart.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormInput/FormInput.module.scss?a3cb","components/ui/FormInput/FormInput.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormSelect/FormSelect.module.scss?5df1","components/ui/FormSelect/FormSelect.tsx","services/size.ts","webpack://boxxerworld-customiser/./src/components/nav/NavSize/NavSize.module.scss?68ae","components/nav/NavSize/NavSize.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavText.module.scss?7ead","components/ui/Price/Price.module.scss","components/ui/Price/Price.tsx","components/nav/NavText/NavTextFinish.tsx","components/nav/NavText/NavTextNameTypes.tsx","components/nav/NavText/NavTextOutline.tsx","components/nav/NavText/NavTextSelect.tsx","components/nav/NavText/NavTextText.tsx","components/ui/Button/ContainedButton.tsx","components/nav/NavText/NavTextsSelection.tsx","lib/canvas.ts","webpack://boxxerworld-customiser/./src/components/three/CustomiserCanvas/NavTextScene.module.scss?f04f","components/three/CustomiserCanvas/NavTextScene.tsx","components/nav/NavText/NavTextPreview.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavTextCategories.module.scss?c8c9","components/nav/NavText/NavTextCategories.tsx","components/ui/Button/NextStepButton.tsx","components/ui/Button/PrevStepButton.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavTextNavSteps.module.scss?13e7","components/ui/Button/CancelStepButton.tsx","components/ui/Button/ApplyButton.tsx","components/nav/NavText/NavTextNavSteps.tsx","components/nav/NavText/NavTextInput.tsx","webpack://boxxerworld-customiser/./src/components/ui/DontShowAgain/DontShowAgain.module.scss?2c56","components/ui/DontShowAgain/DontShowAgain.tsx","webpack://boxxerworld-customiser/./src/components/ui/InfoButton/InfoButton.module.scss?0cd7","components/ui/InfoButton/InfoDisplay.tsx","components/nav/NavText/NavText.tsx","webpack://boxxerworld-customiser/./src/components/nav/CustomiserNav/CustomiserNav.module.scss?394a","webpack://boxxerworld-customiser/./src/components/ui/QuickInfo/QuickInfo.module.scss?c138","components/ui/QuickInfo/QuickInfo.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavProduction/NavProduction.module.scss?4789","components/nav/NavProduction/NavProduction.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavBoxxerLogo/NavBoxxerLogo.module.scss?8495","components/nav/NavBoxxerLogo/NavBoxxerLogo.tsx","components/nav/CustomiserNav/CustomiserNav.tsx","webpack://boxxerworld-customiser/./src/components/layout/Header/Header.module.scss?47aa","components/layout/Header/Header.tsx","webpack://boxxerworld-customiser/./src/components/layout/Customiser/Customiser.module.scss?e94f","components/layout/Customiser/Customiser.tsx","components/three/Lights/Lights.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"fittingButtons\":\"NavFitting_fittingButtons__Y1hdd\",\"fittingButton\":\"NavFitting_fittingButton__djmDJ\",\"navButtonContainer\":\"NavFitting_navButtonContainer__K9a4D\",\"defaultMessage\":\"NavFitting_defaultMessage__YBU6l\"};","import styles from './Button.module.scss';\r\n\r\ninterface CapsuleButtonProps {\r\n  onClick?: () => void;\r\n  isSelected?: boolean;\r\n  isFinished?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ContainedNavButton = ({\r\n  onClick,\r\n  isSelected,\r\n  isFinished,\r\n  classNames,\r\n  children,\r\n}: CapsuleButtonProps) => {\r\n  const buttonClassNames = `\r\n    ${styles.containedNavButton}\r\n    ${classNames}\r\n    ${isSelected ? styles.selected : ''}\r\n    ${isFinished ? styles.finished : ''}\r\n    `;\r\n  return (\r\n    <span className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ContainedNavButton;\r\n","import { NavItem } from '@store/customiser';\r\n\r\ninterface NavItemNameDisplayParameters {\r\n  selectedNav?: NavItem | null;\r\n}\r\nexport const navItemNameDisplay = ({ selectedNav }: NavItemNameDisplayParameters) => {\r\n  let navItemName = selectedNav?.name || '';\r\n\r\n  if (navItemName.toLowerCase() === 'waist') {\r\n    navItemName = 'Waistband';\r\n  }\r\n\r\n  return navItemName;\r\n};\r\n\r\ninterface OptionModelNameDisplayParameters {\r\n  name?: string | null;\r\n  optionName?: string | null;\r\n}\r\nexport const optionModelNameDisplay = ({ name, optionName }: OptionModelNameDisplayParameters) => {\r\n  let modelName = name || '';\r\n\r\n  if (optionName?.toLowerCase() === 'waist') {\r\n    switch (modelName.toLowerCase()) {\r\n      case 'waist 4\" new':\r\n        modelName = '4\"';\r\n        break;\r\n      case 'waist 5\" new':\r\n        modelName = '5\"';\r\n        break;\r\n      default:\r\n    }\r\n  } else if (optionName?.toLowerCase() === 'leg cut') {\r\n    switch (modelName.toLowerCase()) {\r\n      case 'straight leg':\r\n        modelName = 'Side Slit';\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  return modelName;\r\n};\r\n\r\ninterface OptionModelTitleDisplayParameters {\r\n  selectedNav?: NavItem | null;\r\n}\r\nexport const optionModelTitleDisplay = ({ selectedNav }: OptionModelTitleDisplayParameters) => {\r\n  let titleDisplay = selectedNav?.name || '';\r\n\r\n  if (titleDisplay.toLowerCase() === 'waist' && selectedNav?.type === 'fitting') {\r\n    titleDisplay = 'Waistband Height';\r\n  } else {\r\n    titleDisplay = `Select ${titleDisplay}`;\r\n  }\r\n\r\n  return titleDisplay;\r\n};\r\n\r\ninterface TextTypesDisplayParameters {\r\n  textType?: string | null;\r\n}\r\nexport const textTypesDisplay = ({ textType }: TextTypesDisplayParameters) => {\r\n  let display = textType || '';\r\n\r\n  if (display.toLowerCase() === 'basic') {\r\n    display = 'Print';\r\n  } else if (display.toLowerCase() === 'luxury') {\r\n    display = 'Embroidery';\r\n  }\r\n\r\n  return display;\r\n};\r\n","import { CustomProductOptionFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { motion } from 'framer-motion';\r\nimport styles from './NavFitting.module.scss';\r\nimport { useEffect } from 'react';\r\nimport ContainedNavButton from '@components/ui/Button/ContainedNavButton';\r\nimport { getFittingOptionByName } from '@lib/object';\r\nimport { optionModelNameDisplay, optionModelTitleDisplay } from '@lib/string';\r\n\r\nexport interface FittingOptionProps {\r\n  option: CustomProductOptionFragment;\r\n}\r\n\r\nconst FittingOption = ({ option }: FittingOptionProps) => {\r\n  const { selectedModels, setSelectedModel } = useCustomiserStore();\r\n\r\n  if (!option) {\r\n    return null;\r\n  }\r\n\r\n  const getSelected = selectedModels.find((m) => m.optionId === option.id)?.model;\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={styles.fittingOption}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <div className={styles.fittingButtons}>\r\n          {option.models?.map((m) => (\r\n            <ContainedNavButton\r\n              key={m?.id}\r\n              isSelected={getSelected?.id === m?.model?.data?.id}\r\n              classNames={styles.fittingButton}\r\n              onClick={() => {\r\n                setSelectedModel(option.id, m?.model?.data);\r\n              }}\r\n            >\r\n              {optionModelNameDisplay({\r\n                optionName: option.name,\r\n                name: m?.model?.data?.attributes?.name,\r\n              })}\r\n            </ContainedNavButton>\r\n          ))}\r\n        </div>\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface NavFittingProps {\r\n  additionalFinishedNavs?: {\r\n    name: string;\r\n    isFinished: boolean;\r\n  }[];\r\n  setAdditionalFinishedNavs?: React.Dispatch<\r\n    React.SetStateAction<{ name: string; isFinished: boolean }[]>\r\n  >;\r\n  finishedNavs: ({ name: string; isFinished: boolean } | undefined)[];\r\n  setFinishedNavs: React.Dispatch<\r\n    React.SetStateAction<({ name: string; isFinished: boolean } | undefined)[]>\r\n  >;\r\n}\r\nconst NavFitting = ({ finishedNavs }: NavFittingProps) => {\r\n  const fittingOptions = useCustomiserStore(\r\n    (state) => state.customProduct?.attributes?.options,\r\n  ) as Array<CustomProductOptionFragment>;\r\n  const { setCameraFocus, selectedNav } = useCustomiserStore();\r\n\r\n  const fittingTitle = selectedNav?.name || '';\r\n  const fittingOption = getFittingOptionByName({\r\n    fittingOptions,\r\n    fittingOptionName: fittingTitle,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (fittingTitle) {\r\n      setCameraFocus(fittingTitle);\r\n    }\r\n  }, [fittingTitle]);\r\n\r\n  if (!fittingOption) {\r\n    return null;\r\n  }\r\n\r\n  const initialStep = finishedNavs?.find(\r\n    (navItem) => navItem?.name === 'Fitting' && navItem.isFinished === true,\r\n  )\r\n    ? fittingOptions.length - 1\r\n    : 0;\r\n  // const [navStep, setNavStep] = useState(initialStep);\r\n  // const hasNextStep = navStep < fittingOptions.length - 1;\r\n\r\n  // useEffect(() => {\r\n  //   if (!hasNextStep) {\r\n  //     setFinishedNavs &&\r\n  //       setFinishedNavs((prev) => {\r\n  //         const iFitting = prev.findIndex((navItem) => navItem?.name === 'Fitting');\r\n  //         if (iFitting !== -1) {\r\n  //           prev[iFitting] = {\r\n  //             name: 'Fitting',\r\n  //             isFinished: true,\r\n  //           };\r\n  //           return prev;\r\n  //         }\r\n  //         const newFinishedNavs = [\r\n  //           ...prev,\r\n  //           {\r\n  //             name: 'Fitting',\r\n  //             isFinished: true,\r\n  //           },\r\n  //         ];\r\n  //         return newFinishedNavs;\r\n  //       });\r\n  //   }\r\n  // }, [navStep]);\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {/* <div className={styles.navButtonContainer}>\r\n        {fittingOptionsTitles.map((title, i) => {\r\n          return (\r\n            <CapsuleButton\r\n              isFinished={navStep > i}\r\n              isSelected={navStep === i}\r\n              onClick={() => {\r\n                setNavStep(i);\r\n                setCameraFocus(title || '');\r\n              }}\r\n              key={i}\r\n            >\r\n              {title}\r\n            </CapsuleButton>\r\n          );\r\n        })}\r\n      </div> */}\r\n      <div>\r\n        <b>{optionModelTitleDisplay({ selectedNav })}:</b>\r\n      </div>\r\n      <br />\r\n      {<FittingOption key={fittingOption.id} option={fittingOption} />}\r\n      <p className={styles.defaultMessage}>\r\n        The default display automatically represents the model with a waist of 4&quot;, please make\r\n        changes to see the difference.\r\n      </p>\r\n      {/* <NavButtons\r\n        onNext={\r\n          hasNextStep &&\r\n          (() => {\r\n            setNavStep((cur) => {\r\n              const newCur = cur + 1;\r\n              setCameraFocus(fittingTitle || '');\r\n              return newCur;\r\n            });\r\n          })\r\n        }\r\n        finishedNavs={finishedNavs}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavFitting;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Formats } from './types';\r\n\r\nfunction getSrcSet(formats: Formats): string | null {\r\n  if (!formats) return null;\r\n\r\n  const fff = Object.entries(formats)\r\n    .map((f) => {\r\n      return f[1]\r\n        ? {\r\n            width: f[1].width,\r\n            url: f[1].url,\r\n          }\r\n        : null;\r\n    })\r\n    .filter((format) => format);\r\n\r\n  return !fff.length\r\n    ? null\r\n    : fff\r\n        .sort((a, b) => {\r\n          if (a?.width && b?.width && a.width < b.width) return -1;\r\n          if (a?.width && b?.width && a.width > b.width) return 1;\r\n          return 0;\r\n        })\r\n        .reduce((acc: any, current: any, index: number, array: any) => {\r\n          return acc + `${current.url} ${current.width}w${index < array.length - 1 ? ', ' : ''}`;\r\n        }, '');\r\n}\r\n\r\nexport default function getSrcSets(formats: Formats): string | null {\r\n  return getSrcSet(formats);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Image_root__u7aDb\"};","import { ImageFragment, Maybe } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { CSSProperties, useMemo } from 'react';\r\nimport getSrcSets from './getSrcSets';\r\n\r\nimport styles from './Image.module.scss';\r\n\r\nexport interface ImageProps {\r\n  className?: string;\r\n  image?: Maybe<ImageFragment>;\r\n  sizes?: string;\r\n}\r\n\r\nconst Image = ({ className, image, sizes }: ImageProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  if (!image) {\r\n    return null;\r\n  }\r\n\r\n  const relativeHeight = useMemo(() => {\r\n    if (image.attributes?.height && image.attributes?.width) {\r\n      return (image.attributes.height / image.attributes.width) * 100;\r\n    }\r\n    return 100;\r\n  }, [image]);\r\n\r\n  const style = { '--image-padding-top': `${relativeHeight}%` } as CSSProperties;\r\n\r\n  const srcSet = useMemo(() => getSrcSets(image.attributes?.formats), [image]);\r\n\r\n  return (\r\n    <div className={rootClassName} style={style}>\r\n      {srcSet && (\r\n        <img src={image.attributes?.url} srcSet={srcSet} sizes={sizes ? sizes : '100vw'} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"flags\":\"NavFlags_flags__S52CT\",\"flag\":\"NavFlags_flag__gtrVs\",\"flagItem\":\"NavFlags_flagItem__rI7sv\",\"flagItemImage\":\"NavFlags_flagItemImage__6ov2x\"};","import Image from '@components/ui/Image';\r\nimport { FlagFragment } from '@graphql/generated/graphql';\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\n\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsSelectProps {\r\n  editFlag?: FlagCustomiser;\r\n  flags: FlagFragment[];\r\n}\r\n\r\nexport const NavFlagsSelect = ({ editFlag, flags }: NavFlagsSelectProps) => {\r\n  const { addFlag, updateFlag } = useCustomiserStore((state) => state);\r\n\r\n  const flagSelected = (flag: FlagFragment) => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        flag: flag,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addFlag({\r\n        flag: flag,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flags}>\r\n      {flags?.map((f) => (\r\n        <div className={styles.flag} key={f.id} onClick={() => flagSelected(f)}>\r\n          <Image image={f.attributes?.image.data} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavDecalAdjust_root__t6vBt\",\"root__rotate\":\"NavDecalAdjust_root__rotate__jXeZv\",\"rotate\":\"NavDecalAdjust_rotate__adO98\",\"scale\":\"NavDecalAdjust_scale__gq4ry\",\"iconContainer\":\"NavDecalAdjust_iconContainer__nW-8U\",\"rotateIcon\":\"NavDecalAdjust_rotateIcon__fOqK4\",\"adjustControls\":\"NavDecalAdjust_adjustControls__ioLx3\"};","import { useEffect, useRef, useState } from 'react';\r\n\r\nexport const usePortalRef = (id: string) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const portalRef = useRef<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) {\r\n      portalRef.current = document.getElementById(id);\r\n      if (portalRef.current) {\r\n        setLoaded(true);\r\n      }\r\n    }\r\n  }, [id, loaded]);\r\n\r\n  return loaded ? portalRef.current : null;\r\n};\r\n","/* eslint-disable react/prop-types */\r\nimport { GraphicPriceEntity, GraphicPriceFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport ReactSlider from 'react-slider';\r\nimport styles from './NavDecalAdjust.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\nimport { FaCircleMinus, FaCirclePlus } from 'react-icons/fa6';\r\nimport { useState } from 'react';\r\n\r\nimport { GiClockwiseRotation, GiAnticlockwiseRotation } from 'react-icons/gi';\r\n\r\nexport interface NavDecalAdjustProps {\r\n  className?: string;\r\n  prices?: GraphicPriceFragment[];\r\n  scale?: number;\r\n  rotation?: number;\r\n  onScale?: (event: number, price?: GraphicPriceEntity) => void;\r\n  onRotate?: (event: number) => void;\r\n}\r\n\r\nconst range = (start: number, stop: number, step: number) =>\r\n  Array.from({ length: (stop - start) / step + 1 }, (value, index) => start + index * step);\r\n\r\nconst NavDecalAdjust = ({\r\n  className,\r\n  scale = 1,\r\n  rotation = 0,\r\n  prices,\r\n  onScale,\r\n  onRotate,\r\n}: NavDecalAdjustProps) => {\r\n  const scaleAdjust = 0.15;\r\n  const rotateAdjust = 7.5;\r\n  const portalRef = usePortalRef('CustomiserCanvasControls');\r\n\r\n  const [currentScale, setCurrentScale] = useState(scale);\r\n  const [currentRotate, setCurrentRotate] = useState(rotation);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  const rootRotateClassName = cn(styles.root, className, styles.root__rotate);\r\n  const min = 1;\r\n  const max = 2;\r\n  const numberOfSteps = prices?.length ?? 10;\r\n  const step = (max - min) / (numberOfSteps - 1);\r\n  const marks = range(min, max, step);\r\n\r\n  const formattedPrices = prices?.map((p, i) => ({\r\n    ...p,\r\n    markKey: Number(marks[i].toFixed(5)),\r\n  }));\r\n\r\n  const onChange = (value: number) => {\r\n    const price = formattedPrices?.find((p) => p.markKey === value);\r\n    if (onScale) onScale(value, price);\r\n  };\r\n\r\n  const addScale = () => {\r\n    setCurrentScale((cur) => {\r\n      onScale && onScale(cur + scaleAdjust);\r\n      return cur + scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const subtractScale = () => {\r\n    setCurrentScale((cur) => {\r\n      if (cur - scaleAdjust <= 0) return cur;\r\n      onScale && onScale(cur - scaleAdjust);\r\n      return cur - scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur - rotateAdjust);\r\n      return cur - rotateAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateCounterClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur + rotateAdjust);\r\n      return cur + rotateAdjust;\r\n    });\r\n  };\r\n\r\n  return createPortal(\r\n    <>\r\n      <div id='navDecalAdjust' className={rootRotateClassName}>\r\n        <span>\r\n          <h4>Size</h4>\r\n          <span className={styles.iconContainer}>\r\n            <span onClick={subtractScale}>\r\n              <FaCircleMinus />\r\n            </span>\r\n            <span onClick={addScale}>\r\n              <FaCirclePlus />\r\n            </span>\r\n          </span>\r\n        </span>\r\n        <span>\r\n          <h4>Rotate</h4>\r\n          <span className={styles.iconContainer}>\r\n            <span className={styles.rotateIcon} onClick={rotateCounterClockwise}>\r\n              <GiAnticlockwiseRotation />\r\n            </span>\r\n            <span className={styles.rotateIcon} onClick={rotateClockwise}>\r\n              <GiClockwiseRotation />\r\n            </span>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavDecalAdjust;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavEditButtons_root__43Hm3\"};","import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavEditButtons.module.scss';\r\n\r\nexport interface NavEditButtonsProps {\r\n  className?: string;\r\n  onApply?: () => void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst NavEditButtons = ({ className, disabled, onApply }: NavEditButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={rootClassName}>\r\n      <Button onClick={onApply}>Canacel</Button>\r\n      <Button colour='red' onClick={onApply} disabled={disabled}>\r\n        Save\r\n      </Button>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavEditButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavOptionEdit_root__q-pp0\",\"eyeIcon\":\"NavOptionEdit_eyeIcon__v85fP\"};","import cn from 'classnames';\r\n\r\nimport styles from './NavOptionEdit.module.scss';\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa6';\r\nimport { MouseEventHandler } from 'react';\r\n\r\nexport interface NavOptionEditProps {\r\n  className?: string;\r\n  onEdit?: () => void;\r\n  onDelete?: () => void;\r\n  isVisible?: boolean;\r\n  toggleVisibility?: () => void;\r\n}\r\n\r\nconst NavOptionEdit = ({\r\n  className,\r\n  onEdit,\r\n  onDelete,\r\n  isVisible = true,\r\n  toggleVisibility,\r\n}: NavOptionEditProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const isVisibleEye = typeof isVisible === undefined ? true : isVisible;\r\n\r\n  const handleIsVisible: MouseEventHandler<HTMLSpanElement> = (event) => {\r\n    event.stopPropagation();\r\n    toggleVisibility && toggleVisibility();\r\n  };\r\n  return (\r\n    <div className={rootClassName}>\r\n      <span onClick={handleIsVisible} className={styles.eyeIcon}>\r\n        {isVisibleEye ? <FaEye /> : <FaEyeSlash />}\r\n      </span>\r\n      <button onClick={onEdit}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24.785 24.788'>\r\n          <path d='M24.785 6.739 18.046 0 0 18.049v6.739h6.739Zm-6.738-3.218 3.218 3.218-1.351 1.352-3.217-3.218Zm-3.112 3.112 3.218 3.218L7.467 20.538l-3.218-3.22ZM2.489 22.298v-3.219l3.218 3.218Z' />\r\n        </svg>\r\n      </button>\r\n      <button onClick={onDelete}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.601 23.219'>\r\n          <path d='m14.601 11.609-1.489-1.489L2.992 0 .001 2.978l8.631 8.631-8.631 8.632 2.991 2.978L13.112 13.1Z' />\r\n          <path d='m9 11.609 1.489 1.489 10.12 10.12L23.6 20.24l-8.631-8.631L23.6 2.977 20.609-.001l-10.12 10.119Z' />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavOptionEdit;\r\n","import Image from '@components/ui/Image';\r\n\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsFlagProps {\r\n  flag: FlagCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavFlagsFlag = ({ flag, setShowSelector: setSelectModel }: NavFlagsFlagProps) => {\r\n  const { updateFlag, deleteFlag } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (flag.key) {\r\n      updateFlag(flag.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (flag.key) {\r\n      deleteFlag(flag.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flagItem}>\r\n      <div className={styles.flagItemImage}>\r\n        <Image image={flag.flag?.attributes?.image.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import { startTransition, useState } from 'react';\r\nimport { NavFlagsSelect } from './NavFlagsSelect';\r\n\r\nimport Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\nimport styles from './NavFlags.module.scss';\r\nimport { NavFlagsFlag } from './NavFlagsFlag';\r\nimport { GraphicPriceEntity, useGetFlagsQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nconst NavFlags = () => {\r\n  const flags = useCustomiserStore((state) => state.flags);\r\n  const updateFlag = useCustomiserStore((state) => state.updateFlag);\r\n  const editFlag = flags?.find((g) => g.edit);\r\n\r\n  const [showSelector, setShowSelector] = useState(false);\r\n\r\n  const { data: flagQuery } = useGetFlagsQuery(\r\n    graphQLClient,\r\n    {\r\n      pagination: { limit: 500 },\r\n    },\r\n    {\r\n      select: (data) => ({ flags: data.flags?.data, prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addFlag = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editFlag?.key) updateFlag(editFlag.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyFlag = () => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editFlag?.decalScale}\r\n            rotation={editFlag?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={flagQuery?.prices}\r\n          />\r\n          {flagQuery?.flags && <NavFlagsSelect editFlag={editFlag} flags={flagQuery.flags} />}\r\n          <NavEditButtons disabled={!editFlag} onApply={applyFlag} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Flags</h3>\r\n            {flags?.map((flag) => (\r\n              <NavFlagsFlag key={flag.key} flag={flag} setShowSelector={setShowSelector} />\r\n            ))}\r\n            <Button colour='red' onClick={addFlag}>\r\n              Add Flag\r\n            </Button>\r\n          </div>\r\n          {/* <NavButtons /> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavFlags;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavHeader_root__jnadG\",\"menu\":\"NavHeader_menu__Mmpjx\",\"topIcons\":\"NavHeader_topIcons__2qYFd\",\"topIcons__icon\":\"NavHeader_topIcons__icon__tY8Cl\",\"nav\":\"NavHeader_nav__mJbli\",\"title\":\"NavHeader_title__tOyZd\",\"title__page\":\"NavHeader_title__page__rgTMK\",\"title__requiredIcon\":\"NavHeader_title__requiredIcon__7WU0A\",\"navButton\":\"NavHeader_navButton__znGEK\",\"unfinished\":\"NavHeader_unfinished__iG2iT\",\"hidden\":\"NavHeader_hidden__eJpU9\",\"minimizeIcon\":\"NavHeader_minimizeIcon__GKC2n\",\"minimized\":\"NavHeader_minimized__04mp3\",\"navIcon\":\"NavHeader_navIcon__6iUBm\"};","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport styles from './NavHeader.module.scss';\r\nimport {\r\n  getNavItemArrayIndex,\r\n  getNavTabItemCount,\r\n  hasNextNavItem as hasNextNavItemChecker,\r\n  isFinishedNavItem,\r\n  isLastNavItem as isLastNavItemChecker,\r\n} from '@lib/object';\r\n\r\nimport { FaAngleLeft, FaAngleRight } from 'react-icons/fa6';\r\nimport { IoMdClose, IoMdReturnLeft } from 'react-icons/io';\r\nimport { navItemNameDisplay } from '@lib/string';\r\n\r\nexport interface NavHeaderProps {\r\n  className?: string;\r\n  toggle: () => void;\r\n  isOpen: boolean;\r\n  isMinimized?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst NavHeader = ({ className, toggle, isOpen, isMinimized = false, onClick }: NavHeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const { selectedNav, setSelectedNav, navTabs, texts } = useCustomiserStore();\r\n  const editText = texts?.find((g) => g.edit);\r\n\r\n  const navTabItemCount =\r\n    typeof selectedNav?.index === 'number'\r\n      ? getNavTabItemCount({\r\n          navTabs,\r\n          navItemIndex: selectedNav.index,\r\n        })\r\n      : 0;\r\n  const navItemArrayIndex =\r\n    typeof selectedNav?.index === 'number'\r\n      ? getNavItemArrayIndex({\r\n          navTabs,\r\n          navItemIndex: selectedNav.index,\r\n        })\r\n      : 0;\r\n\r\n  const isFirstNavItem = typeof selectedNav?.index === 'number' ? selectedNav?.index === 0 : false;\r\n  const isLastNavItem =\r\n    typeof selectedNav?.index === 'number'\r\n      ? isLastNavItemChecker({\r\n          navTabs,\r\n          navItemIndex: selectedNav?.index,\r\n        })\r\n      : false;\r\n\r\n  const prevHandler = () => {\r\n    if (editText) return;\r\n    if (typeof selectedNav?.index !== 'number' || selectedNav?.index <= 0) {\r\n      return;\r\n    }\r\n    setSelectedNav(selectedNav.index - 1);\r\n  };\r\n  const nextHandler = () => {\r\n    if (editText) return;\r\n    if (typeof selectedNav?.index !== 'number') {\r\n      return;\r\n    }\r\n    setSelectedNav(selectedNav.index + 1);\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    if (onClick) {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  if (isOpen) {\r\n    return null;\r\n  }\r\n\r\n  const minimizeIconClassname = cn(styles.minimizeIcon, {\r\n    [styles.minimized]: isMinimized,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div id='NavHeader' className={rootClassName}>\r\n        <div className={styles.topIcons}>\r\n          <span className={styles.topIcons__icon} onClick={closeHandler}>\r\n            {!editText && <IoMdReturnLeft />}\r\n          </span>\r\n        </div>\r\n        <div className={styles.nav}>\r\n          <span\r\n            className={`${styles.navButton} ${isFirstNavItem || editText ? styles.hidden : ''}`}\r\n            onClick={prevHandler}\r\n          >\r\n            <FaAngleLeft />\r\n          </span>\r\n          <div className={styles.title}>\r\n            <span>\r\n              {selectedNav?.required && <span className={styles.title__requiredIcon}>*</span>}\r\n              {navItemNameDisplay({ selectedNav })}\r\n            </span>\r\n            <span className={styles.title__page}>\r\n              {navItemArrayIndex + 1}/{navTabItemCount}\r\n            </span>\r\n          </div>\r\n          <span\r\n            className={`${styles.navButton} ${isLastNavItem || editText ? styles.hidden : ''}`}\r\n            onClick={nextHandler}\r\n          >\r\n            <FaAngleRight />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavHeader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dropZone\":\"NavImages_dropZone__4YMrM\",\"image\":\"NavImages_image__svpqZ\",\"graphicItem\":\"NavImages_graphicItem__XenKS\",\"graphicItemImage\":\"NavImages_graphicItemImage__8GS2T\"};","import Image from '@components/ui/Image';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesImageProps {\r\n  graphic: GraphicCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavImagesImage = ({\r\n  graphic,\r\n  setShowSelector: setSelectModel,\r\n}: NavImagesImageProps) => {\r\n  const { updateGraphic, deleteGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (graphic.key) {\r\n      updateGraphic(graphic.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (graphic.key) {\r\n      deleteGraphic(graphic.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphicItem}>\r\n      <div className={styles.graphicItemImage}>\r\n        <Image image={graphic.graphic?.attributes?.image?.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  GraphicFragment,\r\n  useCreateGraphicMutation,\r\n  useUploadMultipleFilesMutation,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { Dispatch, SetStateAction, useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesUploadProps {\r\n  setGraphic: (graphic: GraphicFragment) => void;\r\n}\r\n\r\nexport const NavImagesUpload = ({ setGraphic }: NavImagesUploadProps) => {\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const { mutate: createGraphicMutation } = useCreateGraphicMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const graphic = data.createGraphic?.data;\r\n      setSaving(false);\r\n      if (graphic) setGraphic(graphic);\r\n    },\r\n  });\r\n\r\n  const { mutate: fileUploadMutate } = useUploadMultipleFilesMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const fileIDs = data.multipleUpload.map((f) => f?.data?.id) as string[];\r\n      createGraphicMutation({ data: { image: fileIDs[0], customer: true, name: fileIDs[0] } });\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback((acceptedFiles: File[]) => {\r\n    setSaving(true);\r\n    fileUploadMutate({ files: acceptedFiles });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'image/jpeg': [],\r\n      'image/png': [],\r\n    },\r\n    maxFiles: 1,\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h5>Upload an image</h5>\r\n      <div className={styles.dropZone} {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <div>\r\n          <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.219 29.191'>\r\n            <g>\r\n              <path d='M11.609 0 10.12 1.489 0 11.609 2.978 14.6l8.631-8.631 8.632 8.631 2.978-2.991L13.1 1.489Z' />\r\n              <path d='M14.356 29.191h-5v-26h5Z' />\r\n            </g>\r\n          </svg>\r\n          {saving ? (\r\n            <h5>Please wait...</h5>\r\n          ) : isDragActive ? (\r\n            <h5>Drop images here ...</h5>\r\n          ) : (\r\n            <h5>Click or drag images here to upload</h5>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { GraphicFragment } from '@graphql/generated/graphql';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState } from 'react';\r\nimport Image from '@components/ui/Image';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesUpload } from './NavImagesUpload';\r\nimport Button from '@components/ui/Button';\r\n\r\nexport interface NavImagesSelectProps {\r\n  editGraphic?: GraphicCustomiser;\r\n  graphic?: GraphicFragment;\r\n}\r\n\r\nexport const NavImagesSelect = ({ editGraphic, graphic }: NavImagesSelectProps) => {\r\n  const [currentGraphic, setCurrentGraphic] = useState<GraphicFragment | undefined>(graphic);\r\n  const { addGraphic, updateGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const graphicSelected = (graphic: GraphicFragment) => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        graphic,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addGraphic({\r\n        graphic,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setGraphic = (graphic: GraphicFragment) => {\r\n    setCurrentGraphic(graphic);\r\n    graphicSelected(graphic);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphics}>\r\n      {currentGraphic ? (\r\n        <>\r\n          <Image className={styles.image} image={currentGraphic.attributes?.image?.data} />\r\n          <Button onClick={() => setCurrentGraphic(undefined)}>Change Image</Button>\r\n        </>\r\n      ) : (\r\n        <NavImagesUpload setGraphic={setGraphic} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import Button from '@components/ui/Button';\r\nimport { GraphicPriceEntity, useGetImagesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { startTransition, useState } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesImage } from './NavImagesImage';\r\nimport { NavImagesSelect } from './NavImagesSelect';\r\n\r\nconst NavImages = () => {\r\n  const [showSelector, setShowSelector] = useState(false);\r\n  const graphics = useCustomiserStore((state) => state.graphics);\r\n  const updateGraphic = useCustomiserStore((state) => state.updateGraphic);\r\n  const editGraphic = graphics?.find((g) => g.edit);\r\n\r\n  const { data: imageQuery } = useGetImagesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => ({ prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addImage = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editGraphic?.key) updateGraphic(editGraphic.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyImage = () => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editGraphic?.decalScale}\r\n            rotation={editGraphic?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={imageQuery?.prices}\r\n          />\r\n          <NavImagesSelect editGraphic={editGraphic} graphic={editGraphic?.graphic} />\r\n          <NavEditButtons disabled={!editGraphic} onApply={applyImage} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Images</h3>\r\n            {graphics?.map((graphic) => (\r\n              <NavImagesImage\r\n                key={graphic.key}\r\n                graphic={graphic}\r\n                setShowSelector={setShowSelector}\r\n              />\r\n            ))}\r\n            <Button colour='red' onClick={addImage}>\r\n              Add Image\r\n            </Button>\r\n          </div>\r\n          {/* <NavButtons /> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavImages;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MaterialGroup_root__M5bHl\",\"quickInfo\":\"MaterialGroup_quickInfo__a7QRT\",\"colourGroups\":\"MaterialGroup_colourGroups__G3KSo\",\"materialType\":\"MaterialGroup_materialType__X63YP\",\"materialType__title\":\"MaterialGroup_materialType__title__nQjVb\",\"materials\":\"MaterialGroup_materials__iAoDB\",\"selected\":\"MaterialGroup_selected__YMvLv\",\"popup\":\"MaterialGroup_popup__4J8xn\",\"title\":\"MaterialGroup_title__oOvyv\",\"materialTypeScroll\":\"MaterialGroup_materialTypeScroll__gRvp6\",\"withCrystals\":\"MaterialGroup_withCrystals__FWknL\"};","import { create, StateCreator, StoreApi } from 'zustand';\r\nimport createContext from 'zustand/context';\r\nimport produce from 'immer';\r\nimport { devtools } from 'zustand/middleware';\r\nimport {\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n} from '@graphql/generated/graphql';\r\nimport { uniqBy } from 'lodash';\r\n\r\nconst uniqueColourGroups = (array: MaterialColourGroupEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterialTypes = (array: MaterialTypeEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterials = (array: MaterialEntity[]) => uniqBy(array, 'id');\r\ninterface MaterialGroupInitialState {\r\n  colourGroups: MaterialColourGroupEntity[];\r\n  materialTypes: MaterialTypeEntity[];\r\n  materials: MaterialEntity[];\r\n  selectedColourGroup?: MaterialColourGroupEntity;\r\n  selectedMaterialType?: MaterialTypeEntity;\r\n}\r\nexport interface MaterialGroupState extends MaterialGroupInitialState {\r\n  resetMaterialGroup: () => void;\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => void;\r\n  filteredMaterials: () => MaterialEntity[];\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => void;\r\n  setMaterialType: (materialType: MaterialTypeEntity) => void;\r\n}\r\n\r\nconst initialState: MaterialGroupInitialState = {\r\n  colourGroups: [],\r\n  materialTypes: [],\r\n  materials: [],\r\n};\r\n\r\nconst createMaterialGroup: StateCreator<MaterialGroupState, [['zustand/devtools', never]], []> = (\r\n  set,\r\n  get,\r\n) => ({\r\n  ...initialState,\r\n  filteredMaterials: () => {\r\n    const materials = get().materials;\r\n    const colourGroup = get().selectedColourGroup;\r\n    const filteredMaterials = materials.filter((m) =>\r\n      m.attributes?.colourGroups?.data.find((g) => g.id === colourGroup?.id),\r\n    );\r\n    return filteredMaterials;\r\n  },\r\n  resetMaterialGroup: () => set(initialState),\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        const colourGroups = materials.flatMap(\r\n          (d) => d.attributes?.colourGroups?.data,\r\n        ) as MaterialColourGroupEntity[];\r\n        state.colourGroups = uniqueColourGroups(colourGroups);\r\n        if (colourGroup) {\r\n          state.selectedColourGroup = colourGroup;\r\n        } else {\r\n          state.selectedColourGroup = state.colourGroups[0];\r\n        }\r\n\r\n        const materialTypes = materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n\r\n        if (materialType) {\r\n          state.selectedMaterialType = materialType;\r\n        } else {\r\n          state.selectedMaterialType = state.materialTypes[0];\r\n        }\r\n\r\n        state.materials = uniqueMaterials(materials);\r\n      }),\r\n    );\r\n  },\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedColourGroup = colourGroup;\r\n        const materialTypes = state.materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n      }),\r\n    );\r\n  },\r\n  setMaterialType: (materialType: MaterialTypeEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedMaterialType = materialType;\r\n      }),\r\n    );\r\n  },\r\n});\r\n\r\nexport const { Provider, useStore: useMaterialGroupStore } =\r\n  createContext<StoreApi<MaterialGroupState>>();\r\n\r\nexport const createStore = () => create<MaterialGroupState>()(devtools(createMaterialGroup));\r\n","import { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { Falsey } from 'lodash';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useLongPress } from 'use-long-press';\r\n\r\nexport interface MaterialProps {\r\n  className?: string;\r\n  material: MaterialFragment;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const Material = ({\r\n  className,\r\n  material,\r\n  onMaterialSelected,\r\n  selectedMaterialId,\r\n}: MaterialProps) => {\r\n  const rootClassName = cn(styles.material, className, {\r\n    [styles.selected]: material.id === selectedMaterialId,\r\n  });\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const mapImage = material?.attributes?.images?.find((i) => i?.mapType === 'map');\r\n\r\n  const onClick = () => {\r\n    if (material) {\r\n      onMaterialSelected(material);\r\n    }\r\n  };\r\n\r\n  const onLongPressBinder = useLongPress((event) => {\r\n    setShowPopup(true);\r\n  });\r\n\r\n  const handleContextMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={rootClassName}\r\n        onContextMenu={handleContextMenu}\r\n        onClick={onClick}\r\n        {...onLongPressBinder()}\r\n        data-name={material.attributes?.name}\r\n      >\r\n        {mapImage && <img src={mapImage?.image?.data?.attributes?.formats['thumbnail'].url} />}\r\n      </button>\r\n      {showPopup &&\r\n        popupPortalRef &&\r\n        createPortal(\r\n          <div\r\n            className={styles.popup}\r\n            onClick={() => {\r\n              setShowPopup(false);\r\n            }}\r\n          >\r\n            <img\r\n              height='300'\r\n              width='300'\r\n              src={mapImage?.image?.data?.attributes?.formats['large'].url}\r\n              alt=''\r\n              onContextMenu={handleContextMenu}\r\n            />\r\n          </div>,\r\n          popupPortalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n","export default [\r\n  {\r\n    color: 'red',\r\n    materialId: '165',\r\n  },\r\n  {\r\n    color: 'blue',\r\n    materialId: '183',\r\n  },\r\n  {\r\n    color: 'black',\r\n    materialId: '106',\r\n  },\r\n];\r\n","export async function loadImage(src: string): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    if (!src) resolve(img);\r\n    img.crossOrigin = 'anonymous';\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n    img.src = src;\r\n  });\r\n}\r\n","import { MaterialProps } from './Material';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { Falsey } from 'lodash';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useLongPress } from 'use-long-press';\r\nimport { loadImage } from '@lib/img.util';\r\nimport testCrystalMaterial from './test-crystal-material';\r\n\r\nexport const MaterialCrystal = ({\r\n  className,\r\n  material,\r\n  onMaterialSelected,\r\n  selectedMaterialId,\r\n}: MaterialProps) => {\r\n  const crystal = testCrystalMaterial.find((m) => m.materialId === material.id) || {\r\n    materialId: material.id,\r\n    color: 'pink',\r\n  };\r\n  const crystalPromise = useMemo(() => {\r\n    return loadImage(`/materials/crystals/${crystal.color}.png`);\r\n  }, []);\r\n\r\n  const [crystalImage, setCrystalImage] = useState<HTMLImageElement | null>(null);\r\n  useEffect(() => {\r\n    crystalPromise.then((img) => {\r\n      setCrystalImage(img);\r\n    });\r\n  }, [crystalPromise]);\r\n\r\n  const rootClassName = cn(styles.material, className, {\r\n    [styles.selected]: material.id === selectedMaterialId,\r\n  });\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const mapImage = material?.attributes?.images?.find((i) => i?.mapType === 'map');\r\n\r\n  const onClick = () => {\r\n    if (material) {\r\n      onMaterialSelected(material);\r\n    }\r\n  };\r\n\r\n  const onLongPressBinder = useLongPress((event) => {\r\n    setShowPopup(true);\r\n  });\r\n\r\n  const handleContextMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  if (!crystalImage) return null;\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={rootClassName}\r\n        onContextMenu={handleContextMenu}\r\n        onClick={onClick}\r\n        {...onLongPressBinder()}\r\n        data-name={material.attributes?.name}\r\n      >\r\n        {mapImage && <img src={crystalImage.src} />}\r\n      </button>\r\n      {showPopup &&\r\n        popupPortalRef &&\r\n        createPortal(\r\n          <div\r\n            className={styles.popup}\r\n            onClick={() => {\r\n              setShowPopup(false);\r\n            }}\r\n          >\r\n            <img\r\n              height='300'\r\n              width='300'\r\n              src={crystalImage.src}\r\n              alt=''\r\n              onContextMenu={handleContextMenu}\r\n            />\r\n          </div>,\r\n          popupPortalRef,\r\n        )}\r\n    </>\r\n  );\r\n\r\n  return <></>;\r\n};\r\nexport default MaterialCrystal;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { Material } from './Material';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { useMaterialGroupStore } from './MaterialGroupState';\r\nimport { Falsey } from 'lodash';\r\nimport testCrystalMaterial from './test-crystal-material';\r\nimport MaterialCrystal from './MaterialCrystal';\r\n\r\nexport interface MaterialTypeProps {\r\n  className?: string;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  hideMaterialTitle?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const MaterialType = ({\r\n  className,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  hideMaterialTitle,\r\n  selectedMaterialId,\r\n}: MaterialTypeProps) => {\r\n  const rootClassName = cn(styles.materialType, className);\r\n\r\n  const {\r\n    materialTypes,\r\n    filteredMaterials: getFilteredMaterials,\r\n    materials,\r\n  } = useMaterialGroupStore();\r\n\r\n  let filteredMaterials = hideColorGroups ? materials : getFilteredMaterials();\r\n  let filteredMaterialTypes = materialTypes;\r\n  if (hideMaterialTitle) {\r\n    filteredMaterials = filteredMaterials.filter((m) => {\r\n      return testCrystalMaterial.some((acm) => acm.materialId === m.id);\r\n    });\r\n    filteredMaterialTypes = materialTypes.filter((mt) =>\r\n      filteredMaterials.some((m) => m.attributes?.type?.data?.id === mt.id),\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && <h5 className={styles.title}>Texture</h5>}\r\n      <div\r\n        className={`${styles.materialTypeScroll} ${hideMaterialTitle ? styles.withCrystals : ''}`}\r\n      >\r\n        {filteredMaterialTypes.map((mt) => (\r\n          <div key={mt.id} className={styles.materialType}>\r\n            {!hideMaterialTitle && (\r\n              <h6 className={styles.materialType__title}>{mt.attributes?.name}</h6>\r\n            )}\r\n            <div className={styles.materials}>\r\n              {filteredMaterials\r\n                .filter((m) => m.attributes?.type?.data?.id === mt.id)\r\n                .map((m) => {\r\n                  if (!hideMaterialTitle) {\r\n                    return (\r\n                      <Material\r\n                        key={m.id}\r\n                        material={m}\r\n                        onMaterialSelected={onMaterialSelected}\r\n                        selectedMaterialId={selectedMaterialId}\r\n                      />\r\n                    );\r\n                  }\r\n                  return (\r\n                    <MaterialCrystal\r\n                      key={m.id}\r\n                      material={m}\r\n                      onMaterialSelected={onMaterialSelected}\r\n                      selectedMaterialId={selectedMaterialId}\r\n                    />\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SelectedMaterialInfo_root__kIp+x\",\"root__noMaterial\":\"SelectedMaterialInfo_root__noMaterial__dtWKf\",\"currencyContainer\":\"SelectedMaterialInfo_currencyContainer__s15RH\",\"materialName\":\"SelectedMaterialInfo_materialName__vha4F\"};","import { FC, useMemo } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport styles from './SelectedMaterialInfo.module.scss';\r\n\r\nconst SelectedMaterialInfo: FC = () => {\r\n  const portalRef = usePortalRef('CustomiserNavMaterial');\r\n  const { selectedPart, parts } = useCustomiserStore();\r\n\r\n  const selectedMaterial = useMemo(\r\n    () => parts.find((part) => part.part.id === selectedPart?.id)?.material,\r\n    [selectedPart, parts],\r\n  );\r\n\r\n  if (!portalRef) return null;\r\n\r\n  if (!selectedMaterial) {\r\n    return ReactDOM.createPortal(\r\n      <div className={cn(styles.root, styles.root__noMaterial)}>No material selected.</div>,\r\n      portalRef,\r\n    );\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={styles.root}>\r\n      <span>\r\n        <div className={styles.materialName}>{selectedMaterial.attributes?.name}</div>\r\n        <small>\r\n          <i>TODO: Add currency</i>\r\n        </small>\r\n      </span>\r\n      {/* TODO: Add currency */}\r\n      <div className={styles.currencyContainer}>\r\n        ${selectedMaterial.attributes?.price?.data?.attributes?.price}\r\n      </div>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default SelectedMaterialInfo;\r\n","import {\r\n  InputMaybe,\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialFragment,\r\n  MaterialGroupEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n  useGetMaterialsQuery,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nimport cn from 'classnames';\r\nimport { useEffect } from 'react';\r\n\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { createStore, Provider, useMaterialGroupStore } from './MaterialGroupState';\r\nimport { MaterialType } from './MaterialType';\r\nimport SelectedMaterialInfo from './SelectedMaterialInfo';\r\nimport { Falsey } from 'lodash';\r\n// import testMaterial from './test-material';\r\n\r\nexport interface MaterialGroupProps {\r\n  className?: string;\r\n  materialGroup?: Maybe<MaterialGroupEntity>;\r\n  materialType?: Maybe<MaterialTypeEntity>;\r\n  colourGroup?: Maybe<MaterialColourGroupEntity>;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  hideMaterialTitle?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nconst MaterialGroupLoader = ({\r\n  className,\r\n  materialGroup,\r\n  materialType,\r\n  colourGroup,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  hideMaterialTitle,\r\n  selectedMaterialId,\r\n}: MaterialGroupProps) => {\r\n  const colourGroups = useMaterialGroupStore((state) => state.colourGroups);\r\n  const selectedColourGroup = useMaterialGroupStore((state) => state.selectedColourGroup);\r\n  const setMaterials = useMaterialGroupStore((state) => state.setMaterials);\r\n  const setColourGroup = useMaterialGroupStore((state) => state.setColourGroup);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const typeIds = materialGroup?.attributes?.materialTypes\r\n    ? (materialGroup.attributes.materialTypes.data.map((t) => t.id) as InputMaybe<string>[])\r\n    : [];\r\n\r\n  const { data: materials } = useGetMaterialsQuery(\r\n    graphQLClient,\r\n    { filters: { type: { id: { in: typeIds } } }, pagination: { pageSize: 200 } },\r\n    {\r\n      select: (data) => {\r\n        // if (!data.materials?.data.find((a) => a.id === '999')) {\r\n        //   data.materials?.data.push(testMaterial);\r\n        //   console.log('Test material added!!!', testMaterial);\r\n        // }\r\n        return data.materials?.data as MaterialEntity[];\r\n      },\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (materials?.length) {\r\n      // // TODO - remove: temporary for testing new materials\r\n      // if (!materials.find((a) => a.id === '999')) {\r\n      // // eslint-disable-next-line\r\n      // // @ts-ignore\r\n      // materials.push(testMaterial);\r\n      // }\r\n      // console.log('materials', materials);\r\n      setMaterials(materials, materialType, colourGroup);\r\n    }\r\n  }, [materials]);\r\n\r\n  if (!materialGroup) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && (\r\n        <>\r\n          <div className={styles.quickInfo}>\r\n            <i>Tap model or follow arrows to colour</i>\r\n          </div>\r\n          <h5 className={styles.title}>Colour Filter</h5>\r\n          <div className={styles.colourGroups}>\r\n            {colourGroups.map((group) => {\r\n              const styles: React.CSSProperties | undefined = {\r\n                background: group.attributes?.colour ?? '#000',\r\n                borderRadius: '50%',\r\n              };\r\n              if (selectedColourGroup?.id === group.id) {\r\n                styles.outline = `4px solid ${group.attributes?.colour}`;\r\n              }\r\n\r\n              return (\r\n                <button key={group.id} onClick={() => setColourGroup(group)}>\r\n                  <svg\r\n                    style={styles}\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    viewBox='0 0 42 42'\r\n                    // strokeWidth={4}\r\n                    // stroke={\r\n                    //   selectedColourGroup?.id === group.id\r\n                    //     ? '#000'\r\n                    //     : group.attributes?.colour ?? '#000'\r\n                    // }\r\n                    fill={'transparent'}\r\n                  >\r\n                    <rect width='100%' height='100%' />\r\n                  </svg>\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n      <MaterialType\r\n        hideColorGroups={hideColorGroups}\r\n        hideMaterialTitle={hideMaterialTitle}\r\n        onMaterialSelected={onMaterialSelected}\r\n        selectedMaterialId={selectedMaterialId}\r\n      />\r\n      {!hideMaterialTitle && <SelectedMaterialInfo />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MaterialGroup = (props: MaterialGroupProps) => {\r\n  return (\r\n    <Provider createStore={createStore}>\r\n      <MaterialGroupLoader {...props} />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default MaterialGroup;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"NavPart_buttonContainer__3whqC\",\"showOptional\":\"NavPart_showOptional__s6PPL\"};","import styles from './Button.module.scss';\r\n\r\ninterface TogglePillButtonProps {\r\n  onClick?: () => void;\r\n  children: React.ReactNode;\r\n  isOn?: boolean;\r\n\r\n  className?: string;\r\n}\r\n\r\nconst TogglePillButton = ({ onClick, children, isOn, className }: TogglePillButtonProps) => {\r\n  const buttonClassNames = `\r\n    ${styles.togglePillButton}\r\n    ${className}\r\n    ${isOn ? styles.on : ''}\r\n  `;\r\n  return (\r\n    <button className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TogglePillButton;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport { CustomProductPartFragment, MaterialFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport NavButtons from '../NavButtons';\r\n\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { FaMinus } from 'react-icons/fa';\r\n\r\nimport styles from './NavPart.module.scss';\r\nimport TogglePillButton from '@components/ui/Button/TogglePillButton';\r\nimport MaterialGroupCrystals from '../MaterialGroupCrystals/MaterialGroupCrystals';\r\n\r\nexport interface NavPartProps {\r\n  className?: string;\r\n  part: CustomProductPartFragment;\r\n}\r\n\r\nconst NavPart = ({ className, part }: NavPartProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedPart = useCustomiserStore((state) => state.selectedPart);\r\n  const setPart = useCustomiserStore((state) => state.setPart);\r\n  const removePart = useCustomiserStore((state) => state.removePart);\r\n  const parts = useCustomiserStore((state) => state.parts);\r\n  const currentPart = useMemo(() => parts.find((p) => p.part.id === part?.id), [part]);\r\n  const [showOptional, setShowOptional] = useState(false);\r\n\r\n  let selectedMaterialId = parts.find((part) => part.part.name === selectedPart?.name)?.material.id;\r\n  const confirmText = !selectedMaterialId\r\n    ? 'Are you sure you want to continue with the default color?'\r\n    : null;\r\n\r\n  if (!part?.materialGroup?.data) {\r\n    return null;\r\n  }\r\n\r\n  const onMaterialSelected = (material: MaterialFragment) => {\r\n    if (selectedPart && material) {\r\n      selectedMaterialId = material.id;\r\n      setPart(selectedPart, material);\r\n    }\r\n  };\r\n\r\n  const optionalOnClick = (show: boolean) => {\r\n    setShowOptional(show);\r\n    if (!show) {\r\n      removePart(part);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (part.optional && !showOptional && currentPart) {\r\n      setShowOptional(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        key={part.id}\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <div className={styles.buttonContainer}>\r\n          {part.optional && (\r\n            <TogglePillButton\r\n              className={styles.showOptional}\r\n              isOn={showOptional}\r\n              onClick={() => optionalOnClick(!showOptional)}\r\n            >\r\n              {showOptional ? (\r\n                <>\r\n                  <FaMinus />\r\n                  &ensp;Remove\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <IoMdAdd />\r\n                  &ensp;Add\r\n                </>\r\n              )}{' '}\r\n              {part.name}\r\n            </TogglePillButton>\r\n          )}\r\n        </div>\r\n        {(!part.optional || (part.optional && showOptional)) && (\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <MaterialGroup\r\n              materialGroup={part.materialGroup.data}\r\n              materialType={currentPart?.material.attributes?.type?.data}\r\n              colourGroup={currentPart?.material.attributes?.colourGroups?.data[0]}\r\n              onMaterialSelected={onMaterialSelected}\r\n              selectedMaterialId={selectedMaterialId}\r\n              hideColorGroups={part.name === 'Crystals'}\r\n              hideMaterialTitle={part.name === 'Crystals'}\r\n            />\r\n          </Suspense>\r\n        )}\r\n      </motion.div>\r\n      {/* <NavButtons confirmStorage='partsMaterial' confirmText={confirmText} /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavPart;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormInput_root__cf10F\",\"input\":\"FormInput_input__gRXur\",\"label\":\"FormInput_label__9L2lb\"};","import cn from 'classnames';\r\nimport { InputHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormInput.module.scss';\r\n\r\nexport interface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormInput = ({ className, placeholder, children, ...props }: FormInputProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <input className={styles.input} {...props} placeholder=' ' />\r\n      <label className={styles.label}>{placeholder}</label>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormSelect_root__li+Rt\",\"select\":\"FormSelect_select__ftYcv\",\"icon\":\"FormSelect_icon__juFw+\"};","import cn from 'classnames';\r\nimport { SelectHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormSelect.module.scss';\r\n\r\nexport interface FormSelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormSelect = ({ className, children, ...props }: FormSelectProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <select className={styles.select} {...props}>\r\n        {children}\r\n      </select>\r\n      <svg xmlns='http://www.w3.org/2000/svg' className={styles.icon} viewBox='0 0 18.108 30.546'>\r\n        <path d='m2.835 30.545-2.836-2.836 12.387-12.436L0 2.835 2.836-.001l15.272 15.274Z' />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSelect;\r\n","import { ShopifyProductVariantFragment } from '@graphql/generated/graphql-shopify';\r\n\r\nconst getSizeVariation = (\r\n  unit: string,\r\n  weight: number,\r\n  variations: Array<ShopifyProductVariantFragment>,\r\n) => {\r\n  let size = '';\r\n  if (unit === 'KGS') {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 10:\r\n        size = 'BABY';\r\n        break;\r\n      case 10 <= weight && weight < 16:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 16 <= weight && weight < 22:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 22 <= weight && weight < 30:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 30 <= weight && weight < 40:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 40 <= weight && weight < 50:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 50 <= weight && weight < 59:\r\n        size = 'XS';\r\n        break;\r\n      case 59 <= weight && weight < 69:\r\n        size = 'S';\r\n        break;\r\n      case 69 <= weight && weight < 79:\r\n        size = 'M';\r\n        break;\r\n      case 79 <= weight && weight < 90:\r\n        size = 'L';\r\n        break;\r\n      case 90 <= weight && weight < 101:\r\n        size = 'XL';\r\n        break;\r\n      case 101 <= weight && weight < 111:\r\n        size = '2XL';\r\n        break;\r\n      case 111 <= weight && weight < 120:\r\n        size = '3XL';\r\n        break;\r\n      case 120 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  } else {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 22:\r\n        size = 'BABY';\r\n        break;\r\n      case 22 <= weight && weight < 35.3:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 35.3 <= weight && weight < 48.5:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 48.5 <= weight && weight < 66.1:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 66.1 <= weight && weight < 88.2:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 88.2 <= weight && weight < 110.2:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 110.2 <= weight && weight < 130:\r\n        size = 'XS';\r\n        break;\r\n      case 130 <= weight && weight < 152.1:\r\n        size = 'S';\r\n        break;\r\n      case 152.1 <= weight && weight < 174.2:\r\n        size = 'M';\r\n        break;\r\n      case 174.2 <= weight && weight < 198.4:\r\n        size = 'L';\r\n        break;\r\n      case 198.4 <= weight && weight < 222.7:\r\n        size = 'XL';\r\n        break;\r\n      case 222.7 <= weight && weight < 244.7:\r\n        size = '2XL';\r\n        break;\r\n      case 244.7 <= weight && weight < 264.6:\r\n        size = '3XL';\r\n        break;\r\n      case 264.6 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  }\r\n\r\n  return variations.find((v) => v.sku?.endsWith(size));\r\n};\r\n\r\nexport default getSizeVariation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"grey\":\"NavSize_grey__S6CU8\",\"quickInfo\":\"NavSize_quickInfo__Tiyyr\",\"variations\":\"NavSize_variations__cMdjc\",\"sectionTitle\":\"NavSize_sectionTitle__Dn5R+\",\"input\":\"NavSize_input__HkDjj\",\"select\":\"NavSize_select__jpNez\",\"unitToggle\":\"NavSize_unitToggle__LqIuI\",\"toggleButton\":\"NavSize_toggleButton__5PZDI\",\"toggleButtonSelected\":\"NavSize_toggleButtonSelected__au+Rx\"};","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport getSizeVariation from '@services/size';\r\nimport { UNIT } from '@store/constants';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { ChangeEvent, useEffect } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavSize.module.scss';\r\n\r\nexport interface NavSizeProps {\r\n  className?: string;\r\n}\r\n\r\nconst NavSize = ({ className }: NavSizeProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const variations = useCustomiserStore((state) => state.variations);\r\n  const setSizing = useCustomiserStore((state) => state.setSizing);\r\n  const weight = useCustomiserStore((state) => state.sizing?.weight);\r\n  const height = useCustomiserStore((state) => state.sizing?.height);\r\n  const variation = useCustomiserStore((state) => state.sizing?.variation);\r\n\r\n  useEffect(() => {\r\n    if (weight?.value && weight.unit) {\r\n      const variation = getSizeVariation(weight.unit, weight.value, variations);\r\n      setSizing(undefined, undefined, variation);\r\n    }\r\n  }, [weight, variations]);\r\n\r\n  const onHeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing({ value: Number(e.target.value), unit: 'CM' });\r\n  };\r\n\r\n  const onWeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing(undefined, { value: Number(e.target.value), unit: 'KGS' });\r\n  };\r\n\r\n  const onVariationChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const id = e.target.value;\r\n    const selectedVariation = variations.find((v) => v.id === id);\r\n    setSizing(undefined, undefined, selectedVariation);\r\n  };\r\n\r\n  const setHeightUnit = (unit: string) => {\r\n    setSizing({ value: height?.value, unit });\r\n  };\r\n\r\n  const setWeightUnit = (unit: string) => {\r\n    setSizing(undefined, { value: weight?.value, unit });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <p className={`${styles.quickInfo} ${styles.grey}`}>\r\n          When you enter your details, an automatic size will be suggested. You can manually\r\n          over-ride this but we will check your size again when your order comes in.\r\n        </p>\r\n        <h3 className={styles.sectionTitle}>Size Details</h3>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Height'\r\n          step='0.1'\r\n          required\r\n          value={height?.value ? height.value : ''}\r\n          onChange={onHeightChange}\r\n          className={styles.input}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.CM,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.CM)}\r\n            >\r\n              {UNIT.HEIGHT.CM}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.INCH,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.INCH)}\r\n            >\r\n              {UNIT.HEIGHT.INCH}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Weight'\r\n          step='0.1'\r\n          required\r\n          value={weight?.value ? weight.value : ''}\r\n          onChange={onWeightChange}\r\n          className={styles.input}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.KG,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.KG)}\r\n            >\r\n              {UNIT.WEIGHT.KG}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.LB,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.LB)}\r\n            >\r\n              {UNIT.WEIGHT.LB}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <h3 className={styles.sectionTitle}>Suggested Size</h3>\r\n        <FormSelect value={variation?.id} onChange={onVariationChange} className={styles.select}>\r\n          {variations.map((v) => (\r\n            <option key={v.id} value={v.id}>\r\n              {v.title}\r\n            </option>\r\n          ))}\r\n        </FormSelect>\r\n      </motion.div>\r\n      {/* <NavButtons /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavSize;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"arial\":\"NavText_arial__de7L4\",\"oswald\":\"NavText_oswald__siLdE\",\"college\":\"NavText_college__YR6iT\",\"ballantines\":\"NavText_ballantines__1B1LU\",\"navTextEdit\":\"NavText_navTextEdit__8WUIS\",\"textItem\":\"NavText_textItem__nQrv4\",\"textItemText\":\"NavText_textItemText__op7hZ\",\"finishSelections\":\"NavText_finishSelections__fH4yd\",\"disabled\":\"NavText_disabled__M-nHo\",\"showOutline\":\"NavText_showOutline__T7KEv\",\"fontSelection\":\"NavText_fontSelection__AH-QM\",\"font\":\"NavText_font__v43yE\",\"finishSelection\":\"NavText_finishSelection__CfQ+O\",\"selected\":\"NavText_selected__SIXSo\",\"pricing\":\"NavText_pricing__qUsci\",\"materialGroup\":\"NavText_materialGroup__j+DTa\",\"navTextsSelection\":\"NavText_navTextsSelection__gJNy+\",\"title\":\"NavText_title__u+YKh\",\"titleText\":\"NavText_titleText__lFoUP\",\"textPreview\":\"NavText_textPreview__CfhSo\",\"noText\":\"NavText_noText__Parmv\",\"textPreview__imgContainer\":\"NavText_textPreview__imgContainer__6SJ9b\",\"promptMessage\":\"NavText_promptMessage__iKeIZ\",\"applyTextBtnContainer\":\"NavText_applyTextBtnContainer__I8nfd\",\"navHeaderSaveText\":\"NavText_navHeaderSaveText__h8PoA\",\"selectedCategoryItem\":\"NavText_selectedCategoryItem__jjmwJ\",\"finishedCategoryItem\":\"NavText_finishedCategoryItem__AC3wU\",\"categoryDisplayName\":\"NavText_categoryDisplayName__pATtN\",\"textInputContainer\":\"NavText_textInputContainer__KQMDX\",\"textInput\":\"NavText_textInput__Z49KW\",\"textDone\":\"NavText_textDone__rPeDE\",\"textPreviewTextInput\":\"NavText_textPreviewTextInput__lQXU8\"};","// extracted by mini-css-extract-plugin\nexport default {};","import cn from 'classnames';\r\n\r\nimport styles from './Price.module.scss';\r\n\r\nexport interface PriceProps {\r\n  className?: string;\r\n  price?: number;\r\n  priceString?: string;\r\n}\r\n\r\nconst Price = ({ className, price, priceString }: PriceProps) => {\r\n  const rootClassName = cn('price-item', styles.root, className);\r\n  // TODO - Make currency change depending on selected currency.\r\n  const currency = '£';\r\n\r\n  const formattedPrice =\r\n    price !== undefined ? `${currency}${price.toFixed(2)}` : `${currency}${priceString}`;\r\n\r\n  if (!formattedPrice) {\r\n    return null;\r\n  }\r\n\r\n  return <span className={rootClassName}>{formattedPrice}</span>;\r\n};\r\n\r\nexport default Price;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useMemo, useState } from 'react';\r\n\r\nimport Price from '@components/ui/Price';\r\nimport { NAME_TYPE_LUXURY_ID } from '@store/constants';\r\nimport cn from 'classnames';\r\nimport styles from './NavText.module.scss';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\n\r\nexport interface NavTextFinishProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingCrystal?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextFinish: FC<NavTextFinishProps> = ({ editText = {}, setIsPickingCrystal }) => {\r\n  const { selectedName } = editText;\r\n  const selectedMaterialId = editText?.crystalBackground?.id;\r\n\r\n  const [crystals, setCrystals] = useState<boolean>(editText?.crystalPrice ? true : false);\r\n  const [puff, setPuff] = useState<boolean>(editText?.puffPrice ? true : false);\r\n\r\n  const hasPuffOption = useMemo(() => selectedName?.id === NAME_TYPE_LUXURY_ID, [selectedName]);\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  useEffect(() => {\r\n    setPuff(editText.puffPrice ? true : false);\r\n  }, [editText.puffPrice]);\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setCrystalBackground = (crystalBackground: MaterialFragment | undefined) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        crystalBackground,\r\n      });\r\n    }\r\n  };\r\n\r\n  const addCrystals = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setCrystals(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          crystalPrice: {\r\n            price: selectedName.attributes?.crystalPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.crystalPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          crystalPrice: undefined,\r\n          crystalBackground: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const addPuff = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setPuff(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          puffPrice: {\r\n            price: selectedName.attributes?.puffPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.puffPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          puffPrice: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.finishSelections}>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: !crystals,\r\n          })}\r\n          onClick={() => {\r\n            setIsPickingCrystal && setIsPickingCrystal(false);\r\n            addCrystals(false);\r\n          }}\r\n        >\r\n          No Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: crystals,\r\n          })}\r\n          onClick={() => {\r\n            addCrystals(true);\r\n            setIsPickingCrystal && setIsPickingCrystal(true);\r\n          }}\r\n        >\r\n          Add Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.crystalPrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {!crystals && (\r\n        <div className={styles.finishSelections}>\r\n          <div\r\n            className={cn(styles.finishSelection, { [styles.selected]: !puff })}\r\n            onClick={() => addPuff(false)}\r\n          >\r\n            Flat\r\n            <div className={styles.pricing}>\r\n              {' +'}\r\n              <Price price={0} />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: puff,\r\n              [styles.disabled]: !hasPuffOption,\r\n            })}\r\n            onClick={() => addPuff(true)}\r\n          >\r\n            Add 3D Puff\r\n            {hasPuffOption ? (\r\n              <div className={styles.pricing}>\r\n                {' +'}\r\n                <Price price={selectedName.attributes?.puffPrice?.price} />\r\n              </div>\r\n            ) : (\r\n              <div className={styles.pricing}>(Only available for luxury colors)</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {crystals && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName.attributes?.materialGroup?.data}\r\n          materialType={editText.material?.attributes?.type?.data}\r\n          colourGroup={editText.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setCrystalBackground}\r\n          className={styles.materialGroup}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextFinish;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment, NameEntity, useGetNamesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\nimport { textTypesDisplay } from '@lib/string';\r\n\r\nexport interface NavTextNameTypesProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextNameTypes = ({ editText = {} }: NavTextNameTypesProps) => {\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const selectedMaterialId = editText?.material?.id;\r\n\r\n  const { selectedName } = editText;\r\n  const prevSelectedName = useRef(selectedName);\r\n\r\n  const { data: names } = useGetNamesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => data.names?.data,\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (editText?.key && selectedName && prevSelectedName.current !== selectedName) {\r\n      prevSelectedName.current = selectedName;\r\n\r\n      updateText(editText.key, {\r\n        basePrice: {\r\n          price: selectedName.attributes?.basePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.basePrice?.shopifyVariantId,\r\n        },\r\n        letterPrice: {\r\n          price: selectedName.attributes?.letterPrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.letterPrice?.shopifyVariantId,\r\n        },\r\n        nameType: {\r\n          id: selectedName.id,\r\n          name: selectedName.attributes?.name,\r\n        },\r\n        /**\r\n         * Reset material when selectedName changes.\r\n         *\r\n         * Different name types would have different\r\n         * material groups.\r\n         */\r\n        material: undefined,\r\n        ...(editText.outline\r\n          ? {\r\n              outlinePrice: {\r\n                price: selectedName.attributes?.outlinePrice?.price,\r\n                quantity: 1,\r\n                shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n              },\r\n            }\r\n          : {}),\r\n\r\n        puffPrice: undefined,\r\n      });\r\n    }\r\n  }, [selectedName]);\r\n\r\n  const setMaterial = (material: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        material,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setSelectedName = (name: NameEntity) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        selectedName: name,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!selectedName && <i className={styles.promptMessage}>Select a text color type</i>}\r\n      <div className={styles.categoryDisplayName}>Choose Color:</div>\r\n      <div className={styles.finishSelections}>\r\n        {names?.map((n) => (\r\n          <div\r\n            key={n.id}\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: selectedName && n.id === selectedName.id,\r\n            })}\r\n            onClick={() => setSelectedName(n)}\r\n          >\r\n            {textTypesDisplay({ textType: n.attributes?.name })}\r\n            <div className={styles.pricing}>\r\n              <Price price={n.attributes?.basePrice?.price} />\r\n              {' + '}\r\n              <Price price={n.attributes?.letterPrice?.price} /> per letter\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedName && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName?.attributes?.materialGroup?.data}\r\n          materialType={editText?.material?.attributes?.type?.data}\r\n          colourGroup={editText?.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setMaterial}\r\n          className={styles.materialGroup}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNameTypes;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useState } from 'react';\r\n\r\nimport PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextOutlineProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingOutline?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextOutline: FC<NavTextOutlineProps> = ({ editText = {}, setIsPickingOutline }) => {\r\n  const [showOutline, setShowOutline] = useState<boolean>(editText?.outline ? true : false);\r\n  const selectedMaterialId = editText?.outline?.id;\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  const { selectedName } = editText;\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setOutline = (outline: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        outline,\r\n        outlinePrice: {\r\n          price: selectedName.attributes?.outlinePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateOutline = (show: boolean) => {\r\n    setShowOutline(show);\r\n    if (!show && editText?.key) {\r\n      updateText(editText.key, {\r\n        outline: undefined,\r\n        outlinePrice: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={cn(styles.showOutline, styles.finishSelections)}>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: !showOutline })}\r\n          onClick={() => {\r\n            updateOutline(false);\r\n            setIsPickingOutline && setIsPickingOutline(false);\r\n          }}\r\n        >\r\n          No Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: showOutline })}\r\n          onClick={() => {\r\n            updateOutline(true);\r\n            setIsPickingOutline && setIsPickingOutline(true);\r\n          }}\r\n        >\r\n          Add Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.outlinePrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showOutline && (\r\n        <>\r\n          <MaterialGroup\r\n            hideColorGroups\r\n            materialGroup={selectedName?.attributes?.outlineGroup?.data}\r\n            materialType={editText?.outline?.attributes?.type?.data}\r\n            colourGroup={editText?.outline?.attributes?.colourGroups?.data[0]}\r\n            onMaterialSelected={setOutline}\r\n            className={styles.materialGroup}\r\n            selectedMaterialId={selectedMaterialId}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextOutline;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport interface NavTextSelectProps {\r\n  className?: string;\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst fonts = [\r\n  {\r\n    name: 'Arial',\r\n    className: styles.arial,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/arial-bold-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Oswald',\r\n    className: styles.oswald,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/oswald-semibold.woff',\r\n  },\r\n  {\r\n    name: 'College',\r\n    className: styles.college,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/college_block-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Ballantines',\r\n    className: styles.ballantines,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/ballantines-bold-webfont.woff',\r\n  },\r\n];\r\n\r\nconst NavTextSelect = ({ className, editText }: NavTextSelectProps) => {\r\n  const portalRef = usePortalRef('popupContainer');\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const [font, setFont] = useState<(typeof fonts)[number]>(\r\n    fonts.find((f) => editText?.font === f.url) ?? fonts[0],\r\n  );\r\n  const { addText, updateText } = useCustomiserStore((state) => state);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (font) {\r\n        addText({ font: font.url });\r\n      }\r\n    }\r\n  }, [font]);\r\n\r\n  const setTextOnChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onFontChange = (font: (typeof fonts)[number]) => {\r\n    setFont(font);\r\n  };\r\n\r\n  if (!portalRef) return null;\r\n\r\n  return (\r\n    <div className={className}>\r\n      {/* {ReactDOM.createPortal(\r\n        <div className={styles.textInputContainer}>\r\n          <FormInput\r\n            className={styles.textInput}\r\n            placeholder='Type text here...'\r\n            value={text}\r\n            onChange={setTextOnChange}\r\n          >\r\n            <span className={styles.textDone}>Done</span>\r\n          </FormInput>\r\n        </div>,\r\n        portalRef,\r\n      )} */}\r\n      <div className={styles.categoryDisplayName}>Choose Font:</div>\r\n      <div className={styles.fontSelection}>\r\n        {fonts.map((_font) => (\r\n          <div\r\n            key={_font.name}\r\n            onClick={() => onFontChange(_font)}\r\n            className={cn(styles.font, _font.className, {\r\n              [styles.selected]: font.name === _font.name,\r\n            })}\r\n          >\r\n            {_font.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* <FormSelect\r\n        className={fonts.find((f) => f.url === font)?.className}\r\n        value={font}\r\n        onChange={onFontChange}\r\n      >\r\n        {fonts.map((f) => (\r\n          <option className={f.className} key={f.url} value={f.url}>\r\n            {f.name}\r\n          </option>\r\n        ))}\r\n      </FormSelect> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextSelect;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { Dispatch, MouseEventHandler, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\n\r\nimport styles from './NavText.module.scss';\r\n\r\nexport interface NavTextTextProps {\r\n  text: TextCustomiser;\r\n  className?: string;\r\n  setShowSelector?: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextText = ({ className, text, setShowSelector }: NavTextTextProps) => {\r\n  const { updateText, deleteText } = useCustomiserStore((state) => state);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const editItem = () => {\r\n    if (text.key) {\r\n      updateText(text.key, { edit: true });\r\n      setShowSelector && setShowSelector(true);\r\n    }\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    if (!text.key) return;\r\n    updateText(text.key, {\r\n      isVisible: typeof text.isVisible !== 'undefined' ? !text.isVisible : false,\r\n    });\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (text.key) {\r\n      deleteText(text.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.textItem} onClick={editItem}>\r\n      <div className={styles.textItemText}>{text.text}</div>\r\n      <NavOptionEdit\r\n        toggleVisibility={toggleVisibility}\r\n        onEdit={editItem}\r\n        onDelete={deleteItem}\r\n        isVisible={text.isVisible}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextText;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface ContainedButtonProps {\r\n  onClick?: () => void;\r\n  isClickable?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n  color?: string;\r\n  type?: 'hollow';\r\n  widthType?: 'wide';\r\n\r\n  isSelected?: boolean;\r\n  isHidden?: boolean;\r\n}\r\n\r\nconst ContainedButton = ({\r\n  onClick,\r\n  isClickable,\r\n  classNames,\r\n  children,\r\n  isHidden,\r\n  color,\r\n  type,\r\n  widthType,\r\n}: ContainedButtonProps) => {\r\n  const onClickHandler = () => {\r\n    if (typeof isClickable === 'undefined' || isClickable) onClick && onClick();\r\n  };\r\n  const buttonClassNames = `\r\n      ${styles.containedButton}\r\n      ${styles[type || '']}\r\n      ${styles[widthType || '']}\r\n      ${classNames}\r\n      ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n      ${typeof isHidden === 'undefined' || !isHidden ? '' : styles.hidden}\r\n      ${color ? styles.green : ''}\r\n    `;\r\n  return (\r\n    <button className={buttonClassNames} onClick={onClickHandler}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ContainedButton;\r\n","import { FC } from 'react';\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextText from './NavTextText';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\ntype NavTextsSelectionProps = {\r\n  onAddTextClicked?: () => void;\r\n  onTextSelected?: () => void;\r\n};\r\n\r\nconst NavTextsSelection: FC<NavTextsSelectionProps> = ({ onAddTextClicked, onTextSelected }) => {\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n\r\n  return (\r\n    <div className={styles.navTextsSelection}>\r\n      <div className={styles.title}>\r\n        <h3 className={styles.titleText}>Your Texts</h3>\r\n\r\n        <ContainedButton onClick={onAddTextClicked}>Add Text</ContainedButton>\r\n      </div>\r\n\r\n      {texts.map((t) => (\r\n        <NavTextText key={t.key} text={t} setShowSelector={onTextSelected} />\r\n      ))}\r\n\r\n      {/* <NavButtons\r\n        confirmStorage='saveTextsNotification'\r\n        confirmText='You can still add more text. Save anyway?'\r\n      ></NavButtons> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextsSelection;\r\n","import type { MaterialFragment } from '@graphql/generated/graphql';\r\nimport type { Falsey } from 'lodash';\r\n// eslint-disable-next-line\r\n// @ts-ignore\r\nimport { NormalMapGenerator } from 'normalmap-online';\r\n\r\nexport function getMaterialUrl(material: MaterialFragment | undefined): string {\r\n  return material?.attributes?.images?.find((imgMap) => imgMap?.mapType === 'map')?.image.data\r\n    ?.attributes?.formats.large.url;\r\n}\r\n\r\n// TODO - Relocate this\r\ninterface ImgToNormalMapParams {\r\n  img: HTMLImageElement | HTMLCanvasElement;\r\n  hasPuff?: boolean;\r\n  blur?: number;\r\n}\r\nconst normalMapGenerator = NormalMapGenerator.instance();\r\nasync function imgToNormalMap({ img, hasPuff, blur }: ImgToNormalMapParams) {\r\n  const blurAmount = hasPuff ? blur || 7 : 1;\r\n  return normalMapGenerator.generateFromImage(img, {\r\n    strength: 0.5,\r\n    blur: blurAmount,\r\n    level: 1,\r\n  });\r\n}\r\n\r\ninterface PreviewText {\r\n  material: HTMLImageElement | undefined;\r\n  outline: HTMLImageElement | undefined;\r\n  previewImg?: HTMLImageElement;\r\n  normalMapPatternImg?: HTMLImageElement | false;\r\n  crystalBgPatternImg?: HTMLImageElement | Falsey;\r\n  crystalBgImg?: HTMLImageElement | Falsey;\r\n}\r\n\r\nexport type PatternType = 'crystals' | 'embroidery' | Falsey;\r\n\r\ninterface CanvasTextConstructor {\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n}\r\n\r\nexport class CanvasText {\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  outlineCanvas: HTMLCanvasElement;\r\n  outlineCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapTextureCanvas: HTMLCanvasElement;\r\n  normalMapTextureCtx: CanvasRenderingContext2D;\r\n  normalMapCanvas: HTMLCanvasElement;\r\n  normalMapCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapOutlineTextureCanvas: HTMLCanvasElement;\r\n  normalMapOutlineTextureCtx: CanvasRenderingContext2D;\r\n  normalMapOutlineCanvas: HTMLCanvasElement;\r\n  normalMapOutlineCtx2: CanvasRenderingContext2D;\r\n\r\n  crystalBgPatternCanvas: HTMLCanvasElement;\r\n  crystalBgPatternCtx: CanvasRenderingContext2D;\r\n\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n  fontSize: number;\r\n  outlineWidth: number;\r\n\r\n  constructor({ hasPuff, toNormalMap, text, patternType }: CanvasTextConstructor) {\r\n    this.hasPuff = hasPuff;\r\n    this.toNormalMap = toNormalMap;\r\n    this.patternType = patternType;\r\n    this.text = text;\r\n\r\n    this.fontSize = 360;\r\n    this.canvasHeight = 400;\r\n    this.canvasWidth = 3200;\r\n    this.outlineWidth = 20;\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.height = this.canvasHeight;\r\n    this.canvas.width = this.canvasWidth;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.outlineCanvas = document.createElement('canvas');\r\n    this.outlineCanvas.height = this.canvasHeight;\r\n    this.outlineCanvas.width = this.canvasWidth;\r\n    this.outlineCtx = this.outlineCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    // Normal map section\r\n\r\n    this.normalMapTextureCanvas = document.createElement('canvas');\r\n    this.normalMapTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapTextureCtx = this.normalMapTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapCanvas = document.createElement('canvas');\r\n    this.normalMapCanvas.height = this.canvasHeight;\r\n    this.normalMapCanvas.width = this.canvasWidth;\r\n    this.normalMapCtx = this.normalMapCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineTextureCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineTextureCtx = this.normalMapOutlineTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineCtx2 = this.normalMapOutlineCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    // TODO - make a function for setting canvas height and ctx instead\r\n    this.crystalBgPatternCanvas = document.createElement('canvas');\r\n    this.crystalBgPatternCanvas.height = this.canvasHeight;\r\n    this.crystalBgPatternCanvas.width = this.canvasWidth;\r\n    this.crystalBgPatternCtx = this.crystalBgPatternCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n  }\r\n\r\n  public clear() {\r\n    this.ctx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.outlineCtx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n  public async drawImg(ctx: CanvasRenderingContext2D, src: HTMLImageElement) {\r\n    ctx.drawImage(src, 0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  public showTestCanvas(canvas: HTMLCanvasElement) {\r\n    const testPreviewDom = document.getElementById('testPreview'); // TEST ONLY, TO BE REMOVED\r\n    (testPreviewDom as unknown as HTMLElement).innerHTML = ''; // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(canvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineTextureCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.crystalBgPatternCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.outlineCanvas); // TEST ONLY, TO BE REMOVED\r\n  }\r\n\r\n  public async maskImage(ctx: CanvasRenderingContext2D, img: HTMLImageElement) {\r\n    ctx.globalCompositeOperation = 'source-in';\r\n    await this.drawImg(ctx, img);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  public drawPreviewText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n  }\r\n\r\n  public drawPreviewOutlineText() {\r\n    if (!this.text) return;\r\n\r\n    this.outlineCtx.font = `${this.fontSize}px testFont`;\r\n    this.outlineCtx.textAlign = 'center';\r\n    this.outlineCtx.lineWidth = this.outlineWidth;\r\n    this.outlineCtx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n  }\r\n\r\n  public drawPreviewOutlineOnlyText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.lineWidth = 30;\r\n    ctx.fillStyle = 'green';\r\n    ctx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n    ctx.globalCompositeOperation = 'destination-out';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  private async drawNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewText(this.normalMapTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      this.normalMapTextureCtx.fillStyle = pattern;\r\n      this.normalMapTextureCtx.fill();\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    const normalMap = this.toNormalMap\r\n      ? await imgToNormalMap({\r\n          img: this.normalMapTextureCanvas,\r\n          hasPuff: this.hasPuff,\r\n        })\r\n      : this.normalMapTextureCanvas;\r\n\r\n    this.normalMapCtx.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawOutlineNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewOutlineOnlyText(this.normalMapOutlineTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapOutlineTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapOutlineTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      if (this.patternType !== 'crystals') {\r\n        this.normalMapOutlineTextureCtx.fillStyle = pattern;\r\n      }\r\n      this.normalMapOutlineTextureCtx.fill();\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    const normalMap =\r\n      this.toNormalMap || this.patternType === 'crystals'\r\n        ? await imgToNormalMap({\r\n            img: this.normalMapOutlineTextureCanvas,\r\n            hasPuff: this.patternType === 'crystals' ? true : this.hasPuff,\r\n            blur: 4,\r\n          })\r\n        : this.normalMapOutlineTextureCanvas;\r\n    this.normalMapOutlineCtx2.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawCrystalBg(\r\n    crystalBgImg: HTMLImageElement,\r\n    crystalBgPatternImg: HTMLImageElement,\r\n  ) {\r\n    const pattern = this.crystalBgPatternCtx.createPattern(crystalBgPatternImg, 'repeat');\r\n\r\n    if (!pattern) return;\r\n\r\n    this.crystalBgPatternCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.fillStyle = pattern;\r\n    this.crystalBgPatternCtx.fill();\r\n\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-in';\r\n    this.crystalBgPatternCtx.globalAlpha = 0.9;\r\n    this.crystalBgPatternCtx.drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.drawImage(crystalBgImg, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-over';\r\n\r\n    this.outlineCtx.drawImage(this.crystalBgPatternCanvas, 0, 0);\r\n  }\r\n\r\n  private printTextMapToStrokeMap() {\r\n    this.normalMapCtx.globalCompositeOperation = 'destination-in';\r\n    this.normalMapCtx.drawImage(this.normalMapTextureCanvas, 0, 0);\r\n    this.normalMapCtx.globalCompositeOperation = 'source-over'; // reset to default\r\n    this.normalMapOutlineCtx2.drawImage(this.normalMapCanvas, 0, 0);\r\n  }\r\n\r\n  public async previewText({\r\n    material,\r\n    outline,\r\n    previewImg,\r\n    normalMapPatternImg,\r\n    crystalBgPatternImg,\r\n    crystalBgImg,\r\n  }: PreviewText) {\r\n    if (!this.text) return;\r\n\r\n    this.clear();\r\n    this.showTestCanvas(this.normalMapTextureCanvas);\r\n\r\n    await this.drawNormalMap(normalMapPatternImg);\r\n    await this.drawOutlineNormalMap(normalMapPatternImg);\r\n\r\n    this.printTextMapToStrokeMap();\r\n\r\n    if (outline) {\r\n      this.drawPreviewOutlineText();\r\n      await this.maskImage(this.outlineCtx, outline);\r\n    }\r\n\r\n    this.drawPreviewText(this.ctx);\r\n\r\n    if (material) {\r\n      await this.maskImage(this.ctx, material);\r\n    }\r\n\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n    if (previewImg) previewImg.src = this.outlineCanvas.toDataURL();\r\n\r\n    if (crystalBgImg && crystalBgPatternImg) {\r\n      this.drawCrystalBg(crystalBgImg, crystalBgPatternImg);\r\n    }\r\n  }\r\n\r\n  public mergeCanvas() {\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n  }\r\n\r\n  getOutlineCanvas() {\r\n    return this.outlineCanvas;\r\n  }\r\n  getNormalMapTextureCanvas() {\r\n    return this.normalMapTextureCanvas;\r\n  }\r\n  getNormalMapOutlineCanvas() {\r\n    return this.normalMapOutlineCanvas;\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"canvasClickableCover\":\"NavTextScene_canvasClickableCover__ZoAVe\",\"canvasClickableCover__imgContainer\":\"NavTextScene_canvasClickableCover__imgContainer__qCzZl\",\"navTextSceneFullscreen\":\"NavTextScene_navTextSceneFullscreen__-hgDQ\",\"navTextSceneFullscreen__imgContainer\":\"NavTextScene_navTextSceneFullscreen__imgContainer__kyglX\",\"navTextSceneFullscreen__noPinchBg\":\"NavTextScene_navTextSceneFullscreen__noPinchBg__ZFfnC\",\"navTextSceneFullscreen__closeBtn\":\"NavTextScene_navTextSceneFullscreen__closeBtn__jtMmR\",\"navTextSceneFullscreen__zoomContainer\":\"NavTextScene_navTextSceneFullscreen__zoomContainer__struE\"};","import { Decal } from '@react-three/drei';\r\nimport { TextCustomiser } from '@store/customiser';\r\nimport { Texture, Vector2, Vector3 } from 'three';\r\nimport Lights from '../Lights';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport styles from './NavTextScene.module.scss';\r\nimport { memo, useCallback, useEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { usePortalRef } from '@hooks';\r\nimport QuickPinchZoom, { type UpdateAction, make3dTransformValue } from 'react-quick-pinch-zoom';\r\nimport { MdPinch } from 'react-icons/md';\r\n\r\ninterface NavTextPreviewSceneInterface {\r\n  text: TextCustomiser;\r\n}\r\n\r\nconst NavTextPreviewScene = ({ text }: NavTextPreviewSceneInterface) => {\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n  const [shouldShow, setShouldShow] = useState<boolean>(false);\r\n  const [zoom, setZoom] = useState<number>(1);\r\n  const [dataUrl, setDataUrl] = useState<string>('');\r\n\r\n  const portalRef = usePortalRef('popupContainer');\r\n\r\n  const scaleMultiplier = 2;\r\n  const scale = 10 * scaleMultiplier;\r\n  const scaleModifier = new Vector3(3.2 * scale, 0.4 * scale, 4);\r\n\r\n  const isLuxury: boolean = text.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = text.puffPrice ? true : false;\r\n  const hasCrystals: boolean = text.crystalPrice ? true : false;\r\n\r\n  const shouldNormalMap =\r\n    text.normalMap instanceof Texture && text.selectedName?.attributes?.name === 'Luxury';\r\n  const normalMap = shouldNormalMap ? text.normalMap : null;\r\n\r\n  const [canvasRefreshCount, setCanvasRefreshCount] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    setCanvasRefreshCount((cur) => cur + 1);\r\n  }, [text.normalMap, text.puffPrice, text.crystalPrice, text.selectedName?.id]);\r\n\r\n  let normalScale = 1;\r\n  if (hasCrystals) {\r\n    normalScale = 4;\r\n  } else if (isLuxury && !hasPuff) {\r\n    normalScale = 0.5;\r\n  } else if (isLuxury && hasPuff) {\r\n    normalScale = 3;\r\n  }\r\n\r\n  if (!portalRef) return null;\r\n\r\n  function addZoom() {\r\n    setZoom((cur) => {\r\n      if (cur >= 10) return cur;\r\n      return (cur += 0.1);\r\n    });\r\n  }\r\n  function subtractZoom() {\r\n    setZoom((cur) => {\r\n      if (cur <= 0.1) return cur;\r\n      return (cur -= 0.1);\r\n    });\r\n  }\r\n\r\n  const FullscreenImg = memo(({ dataUrl }: { dataUrl: string }) => {\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const onUpdate = useCallback(({ x, y, scale }: UpdateAction) => {\r\n      const { current: img } = imgRef;\r\n\r\n      if (img) {\r\n        const value = make3dTransformValue({ x, y, scale });\r\n\r\n        img.style.setProperty('transform', value);\r\n      }\r\n    }, []);\r\n    return (\r\n      <QuickPinchZoom onUpdate={onUpdate}>\r\n        <img ref={imgRef} src={dataUrl} alt='Text Preview' />\r\n      </QuickPinchZoom>\r\n    );\r\n  });\r\n  FullscreenImg.displayName = 'FullscreenImg';\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        key={canvasRefreshCount}\r\n        ref={(el) => {\r\n          canvasRef.current = el;\r\n        }}\r\n        gl={{\r\n          preserveDrawingBuffer: true,\r\n        }}\r\n      >\r\n        <Lights />\r\n        <mesh>\r\n          <planeBufferGeometry args={[20 * scaleMultiplier, 5 * scaleMultiplier]} />\r\n          <meshNormalMaterial visible={false} />\r\n          <Decal position={[0, 0, 0]} rotation={[0, 0, 0]} scale={scaleModifier}>\r\n            <meshStandardMaterial\r\n              map={text.preview instanceof Texture ? text.preview : null}\r\n              transparent\r\n              roughness={isLuxury && !hasCrystals ? 0.75 : 0}\r\n              depthTest\r\n              depthWrite={false}\r\n              normalMap={normalMap}\r\n              normalScale={new Vector2(normalScale, normalScale)}\r\n            />\r\n          </Decal>\r\n        </mesh>\r\n      </Canvas>\r\n      <div\r\n        className={styles.canvasClickableCover}\r\n        onClick={() => {\r\n          setShouldShow(true);\r\n          setDataUrl(canvasRef.current?.toDataURL() || '');\r\n        }}\r\n      >\r\n        <span className={styles.canvasClickableCover__imgContainer}>\r\n          <img height={32} width={32} src='/icons/click-icon.png' />\r\n        </span>\r\n      </div>\r\n      {shouldShow &&\r\n        canvasRef &&\r\n        dataUrl &&\r\n        createPortal(\r\n          <>\r\n            <div className={styles.navTextSceneFullscreen}>\r\n              <span className={styles.navTextSceneFullscreen__zoomContainer}>\r\n                {/* <img\r\n                  onClick={addZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-in-icon.png'\r\n                  alt='zoom in'\r\n                />\r\n                <img\r\n                  onClick={subtractZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-out-icon.png'\r\n                  alt='zoom out'\r\n                /> */}\r\n                <MdPinch size={64} />\r\n              </span>\r\n              <div className={styles.navTextSceneFullscreen__noPinchBg} />\r\n              <div className={styles.navTextSceneFullscreen__imgContainer}>\r\n                {dataUrl && <FullscreenImg dataUrl={dataUrl} />}\r\n              </div>\r\n              <span\r\n                onClick={() => setShouldShow(false)}\r\n                className={styles.navTextSceneFullscreen__closeBtn}\r\n              >\r\n                x\r\n              </span>\r\n            </div>\r\n          </>,\r\n          portalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextPreviewScene;\r\n","import { CanvasText, PatternType, getMaterialUrl } from '@lib/canvas';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { CanvasTexture } from 'three';\r\nimport type { NavTextSelectProps } from './NavTextSelect';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { loadImage } from '@lib/img.util';\r\nimport NavTextPreviewScene from '@components/three/CustomiserCanvas/NavTextScene';\r\nimport FormInput from '@components/ui/FormInput';\r\n\r\n// TODO - Pre load the fonts somewhere\r\nasync function loadFonts(fontUrl: string) {\r\n  const font = new FontFace('testFont', `url(${fontUrl})`);\r\n  await font.load();\r\n  document.fonts.add(font);\r\n}\r\n\r\nfunction getPatternType({\r\n  hasCrystals,\r\n  isLuxury,\r\n}: {\r\n  hasCrystals: boolean;\r\n  isLuxury: boolean;\r\n}): PatternType {\r\n  if (!hasCrystals && isLuxury) return 'embroidery';\r\n  else if (hasCrystals) return 'crystals';\r\n\r\n  return '';\r\n}\r\n\r\ninterface NavTextPreviewProps extends NavTextSelectProps {\r\n  mainTextInputRef: React.MutableRefObject<HTMLInputElement | null>;\r\n}\r\n\r\nconst NavTextPreview = ({ editText, mainTextInputRef }: NavTextPreviewProps) => {\r\n  const previewImgRef = useRef<HTMLImageElement | null>(null);\r\n  const [fontFamily, setFontFamily] = useState<string | undefined>(editText?.font);\r\n  const [isVisiblePreview, setIsVisiblePreview] = useState(false);\r\n\r\n  const hasCrystals: boolean = editText?.crystalPrice ? true : false;\r\n  const isLuxury: boolean = editText?.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = editText?.puffPrice && !hasCrystals ? true : false; // 3D puff\r\n  const toNormalMap = hasCrystals ? false : true;\r\n  const patternType = getPatternType({ hasCrystals, isLuxury });\r\n\r\n  const { updateText, addText, isMinimizedCustomiserNav } = useCustomiserStore();\r\n\r\n  const portalRef = usePortalRef('NavHeaderAfter');\r\n\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (editText?.key) {\r\n      updateText(editText?.key, {\r\n        text: e.target.value,\r\n      });\r\n    } else {\r\n      if (e.target.value) {\r\n        addText({ text: e.target.value });\r\n      }\r\n    }\r\n    mainTextInputRef?.current?.focus();\r\n  };\r\n\r\n  /**\r\n   * Save image here\r\n   */\r\n  const materialImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.material));\r\n  }, [editText?.material]);\r\n  const outlineImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.outline));\r\n  }, [editText?.outline]);\r\n  const fabricPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/Fabric_Knitted_006_height_small.png');\r\n  }, []);\r\n  const crystalNormalMapImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-12.png');\r\n  }, []);\r\n  const crystalBgImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.crystalBackground));\r\n  }, [editText?.crystalBackground]);\r\n  const crystalBgPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-bg-pattern.png');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const previewImgDom = previewImgRef.current as HTMLImageElement;\r\n\r\n    (async () => {\r\n      const canvasText = new CanvasText({\r\n        hasPuff,\r\n        toNormalMap,\r\n        patternType,\r\n        text: editText?.text,\r\n      });\r\n\r\n      if (!editText || !editText.key || !isVisiblePreview) {\r\n        canvasText.clear();\r\n        return;\r\n      }\r\n\r\n      if (!editText.text) {\r\n        canvasText.clear();\r\n        updateText(editText.key, {\r\n          preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Adjust this once preloading fonts has been implemented\r\n      if (fontFamily !== editText?.font) {\r\n        setFontFamily(editText?.font);\r\n        await loadFonts(editText?.font as string);\r\n      }\r\n\r\n      const img = editText?.material && (await materialImgMemo);\r\n      const outlineImg = editText?.outline && (await outlineImgMemo);\r\n      const embroideryPattern = await fabricPatternImgMemo;\r\n      const crystalNormalMap = await crystalNormalMapImgMemo;\r\n      const crystalBgPatternImg = await crystalBgPatternImgMemo;\r\n      const crystalBgImg = editText?.crystalBackground && (await crystalBgImgMemo);\r\n\r\n      const shouldUsePattern = isLuxury && !hasPuff;\r\n      const patternImg = shouldUsePattern && (hasCrystals ? crystalNormalMap : embroideryPattern);\r\n\r\n      await canvasText.previewText({\r\n        material: img,\r\n        outline: outlineImg,\r\n        previewImg: previewImgDom,\r\n        normalMapPatternImg: patternImg,\r\n        crystalBgPatternImg,\r\n        crystalBgImg,\r\n      });\r\n\r\n      updateText(editText.key, {\r\n        preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        normalMap: new CanvasTexture(canvasText.getNormalMapOutlineCanvas()),\r\n      });\r\n    })();\r\n  }, [\r\n    editText?.text,\r\n    editText?.material,\r\n    editText?.outline,\r\n    editText?.font,\r\n    editText?.crystalBackground,\r\n    isVisiblePreview,\r\n    editText?.puffPrice,\r\n    editText?.crystalPrice,\r\n  ]);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <>\r\n      <div id='testPreview' style={{ position: 'absolute', zIndex: '100' }} />\r\n      {!isMinimizedCustomiserNav && editText?.text && (\r\n        <div className={styles.textPreview}>\r\n          <div>\r\n            {\r\n              <>\r\n                <div className={styles.textPreview__imgContainer} style={{ display: 'none' }}>\r\n                  <img\r\n                    height={80 * 5}\r\n                    width={640 * 5}\r\n                    ref={(el) => {\r\n                      previewImgRef.current = el;\r\n                      setIsVisiblePreview(!!el);\r\n                    }}\r\n                  />\r\n                </div>\r\n                {previewImgRef.current?.src ? (\r\n                  <>\r\n                    <NavTextPreviewScene text={editText} />\r\n                  </>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavTextPreview;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"NavTextCategories_main__aV8kW\",\"selected\":\"NavTextCategories_selected__NTJgj\"};","import styles from './NavTextCategories.module.scss';\r\n\r\ninterface NavTextCategoriesProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst NavTextCategories = ({ children }: NavTextCategoriesProps) => {\r\n  return <div className={styles.main}>{children}</div>;\r\n};\r\n\r\nexport default NavTextCategories;\r\n","import { FaArrowRightLong } from 'react-icons/fa6';\r\nimport styles from './Button.module.scss';\r\n\r\ninterface NextStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst NextStepButton = ({ onClick, isClickable, isVisible }: NextStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__next}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Next Step &nbsp;\r\n      <FaArrowRightLong />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default NextStepButton;\r\n","import { FaArrowLeftLong } from 'react-icons/fa6';\r\nimport styles from './Button.module.scss';\r\n\r\ninterface PrevStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst PrevStepButton = ({ onClick, isClickable, isVisible }: PrevStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__prev}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      <FaArrowLeftLong /> &nbsp; Previous\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PrevStepButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavTextNavSteps_root__Ys0fR\"};","import styles from './Button.module.scss';\r\n\r\ninterface CancelStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst CancelStepButton = ({ onClick, isClickable, isVisible }: CancelStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__cancel}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Cancel\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CancelStepButton;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface ApplyButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst ApplyButton = ({ onClick, isClickable, isVisible }: ApplyButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__next}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Apply Text\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ApplyButton;\r\n","import NextStepButton from '@components/ui/Button/NextStepButton';\r\nimport PrevStepButton from '@components/ui/Button/PrevStepButton';\r\nimport { usePortalRef } from '@hooks';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './NavTextNavSteps.module.scss';\r\nimport CancelStepButton from '@components/ui/Button/CancelStepButton';\r\nimport ApplyButton from '@components/ui/Button/ApplyButton';\r\nimport InfoDisplay from '@components/ui/InfoButton/InfoDisplay';\r\n\r\ninterface NavTextNavStepsProps {\r\n  isClickableNext?: boolean;\r\n  isClickablePrev?: boolean;\r\n  isVisibleNext?: boolean;\r\n  isVisiblePrev?: boolean;\r\n\r\n  onClickNext?: () => void;\r\n  onClickPrev?: () => void;\r\n  onClickCancel?: () => void;\r\n  onClickSave?: () => void;\r\n}\r\n\r\nconst NavTextNavSteps = ({\r\n  isClickableNext,\r\n  isClickablePrev,\r\n  isVisibleNext,\r\n  isVisiblePrev,\r\n  onClickNext,\r\n  onClickPrev,\r\n  onClickCancel,\r\n  onClickSave,\r\n}: NavTextNavStepsProps) => {\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n\r\n  if (!portalRef || !popupContainerRef) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      {/* {ReactDOM.createPortal(\r\n        <InfoDisplay>\r\n          <h5>Click where you want the text to go</h5>\r\n        </InfoDisplay>,\r\n        popupContainerRef,\r\n      )} */}\r\n      {ReactDOM.createPortal(\r\n        <div className={styles.root}>\r\n          {isVisiblePrev !== true && (\r\n            <CancelStepButton\r\n              onClick={\r\n                onClickCancel ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {(typeof isVisiblePrev === 'undefined' || isVisiblePrev) && (\r\n            <PrevStepButton\r\n              isClickable={isClickablePrev}\r\n              isVisible={isVisiblePrev}\r\n              onClick={\r\n                onClickPrev ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {(typeof isVisibleNext === 'undefined' || isVisibleNext) && (\r\n            <NextStepButton\r\n              isClickable={isClickableNext}\r\n              isVisible={isVisibleNext}\r\n              onClick={\r\n                onClickNext ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {isVisibleNext !== true && (\r\n            <ApplyButton\r\n              onClick={\r\n                onClickSave ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        </div>,\r\n        portalRef,\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNavSteps;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport styles from './NavText.module.scss';\r\nimport { useCustomiserStore, type TextCustomiser } from '@store/customiser';\r\nimport { LegacyRef, forwardRef, useEffect, useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport inputStyles from './../../ui/FormInput/FormInput.module.scss';\r\n\r\ninterface NavTextInputProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextInput = forwardRef(({ editText }: NavTextInputProps, ref) => {\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const { updateText, addText } = useCustomiserStore((state) => state);\r\n\r\n  const setTextOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const rootClassName = cn(inputStyles.root, styles.textInput);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        // font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text });\r\n      }\r\n    }\r\n  }, [text]);\r\n\r\n  return (\r\n    <div className={styles.textInputContainer}>\r\n      {/* <FormInput\r\n        ref={inputRef}\r\n        className={styles.textInput}\r\n        placeholder='Type text here...'\r\n        value={editText?.text}\r\n        onChange={setTextOnChange}\r\n      /> */}\r\n      <div className={rootClassName}>\r\n        <input\r\n          className={inputStyles.input}\r\n          onChange={setTextOnChange}\r\n          ref={ref as LegacyRef<HTMLInputElement> | undefined}\r\n          placeholder='Type text here...'\r\n          value={editText?.text ? editText.text : ''}\r\n        />\r\n        {/* <label className={inputStyles.label}>Type text here</label> */}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nNavTextInput.displayName = 'NavTextInput';\r\n\r\nexport default NavTextInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"DontShowAgain_root__zOI6r\",\"notifContainer\":\"DontShowAgain_notifContainer__adaGf\",\"notifControlContainer\":\"DontShowAgain_notifControlContainer__gVQq0\",\"btnContainer\":\"DontShowAgain_btnContainer__We3vg\"};","import React, { useState, useEffect } from 'react';\r\nimport styles from './DontShowAgain.module.scss';\r\n\r\nconst DontShowAgain = ({\r\n  children,\r\n  notifName = 'hideShowNotification',\r\n  setShowNotification,\r\n  cb,\r\n}: {\r\n  children: React.ReactNode;\r\n  notifName: string;\r\n  setShowNotification: React.Dispatch<React.SetStateAction<boolean>>;\r\n  cb?: () => void;\r\n}) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const handleDismiss = () => {\r\n    setShowNotification(false);\r\n    if (isChecked) {\r\n      localStorage.setItem(notifName, '1');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.root}>\r\n        <span className={styles.notifContainer}>\r\n          {children}\r\n          <div className={styles.notifControlContainer}>\r\n            <label>\r\n              <input type='checkbox' onChange={(e) => setIsChecked(e.target.checked)} />\r\n              Don&apos;t show again\r\n            </label>\r\n            <span className={styles.btnContainer}>\r\n              <button onClick={handleDismiss}>Cancel</button>\r\n              <button\r\n                onClick={() => {\r\n                  handleDismiss();\r\n                  cb && cb();\r\n                }}\r\n              >\r\n                Okay\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DontShowAgain;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"iInfo\":\"InfoButton_iInfo__0SLm4\",\"iInfo__bgOnclick\":\"InfoButton_iInfo__bgOnclick__3oQL8\",\"iInfo__display\":\"InfoButton_iInfo__display__nKOtb\",\"iInfo__header\":\"InfoButton_iInfo__header__IkMmc\",\"iInfo__body\":\"InfoButton_iInfo__body__6LPfY\",\"iInfo__sampleImg\":\"InfoButton_iInfo__sampleImg__bKcTE\",\"iInfo__closebtn\":\"InfoButton_iInfo__closebtn__+Dwj4\",\"iInfo__styleName\":\"InfoButton_iInfo__styleName__3bDQ2\",\"iInfo__title\":\"InfoButton_iInfo__title__SHp10\",\"infoIcon\":\"InfoButton_infoIcon__Yu7F-\",\"imgIcon\":\"InfoButton_imgIcon__oWQbZ\"};","import { ReactNode } from 'react';\r\nimport styles from './InfoButton.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\ninterface Props {\r\n  title: string | Falsey;\r\n  cb?: () => void;\r\n  children?: ReactNode;\r\n}\r\nconst InfoDisplay = ({ title, cb, children }: Props) => {\r\n  return (\r\n    <>\r\n      <div className={styles.iInfo} onClick={(e) => e.stopPropagation()}>\r\n        <div className={styles.iInfo__bgOnclick} onClick={cb} />\r\n        <div className={styles.iInfo__display}>\r\n          <div className={styles.iInfo__header}>\r\n            <span className={styles.iInfo__title}>{`${title}` || 'EXAMPLES'}</span>\r\n            <span className={styles.iInfo__closebtn} onClick={cb}>\r\n              x\r\n            </span>\r\n          </div>\r\n\r\n          <div className={styles.iInfo__body}>\r\n            {children || (\r\n              <>\r\n                <div className={styles.iInfo__styleName}>PRINTED</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119118469/names-printed.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>EMBROIDERY</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119222257/names-flat-embroidery.png'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>3D EMBROIDERY</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119313289/names-3d-embroidery.jpg'\r\n                  alt=''\r\n                />\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119344264/names-3d-embroidery-perspective.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>3D CRYSTALS</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119433059/names-3d-crystals.jpg'\r\n                  alt=''\r\n                />\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526727869947/names-3d-crystal-perspective.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>GLITTER</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119258957/names-glitter.pg.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>NAME PATCH</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119480153/name-patch-on-shorts.jpg'\r\n                  alt=''\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoDisplay;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport { LegacyRef, startTransition, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\n\r\nimport Accordion from '@components/ui/Accordion/Accordion';\r\nimport NavStepButtons from '../NavStepButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextFinish from './NavTextFinish';\r\nimport NavTextNameTypes from './NavTextNameTypes';\r\nimport NavTextOutline from './NavTextOutline';\r\nimport NavTextSelect from './NavTextSelect';\r\nimport NavTextsSelection from './NavTextsSelection';\r\nimport NavTextPreview from './NavTextPreview';\r\nimport { usePortalRef } from '@hooks';\r\nimport Button from '@components/ui/Button';\r\nimport { createPortal } from 'react-dom';\r\nimport NavTextCategories from './NavTextCategories';\r\nimport NavTextNavSteps from './NavTextNavSteps';\r\nimport { has } from 'lodash';\r\nimport FormInput from '@components/ui/FormInput';\r\nimport NavTextInput from './NavTextInput';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\nimport DontShowAgain from '@components/ui/DontShowAgain';\r\nimport InfoDisplay from '@components/ui/InfoButton/InfoDisplay';\r\n\r\ninterface NavTextProps {\r\n  showEditText: boolean;\r\n  setShowEditText: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavText = ({ showEditText, setShowEditText }: NavTextProps) => {\r\n  const [step, setStep] = useState<number | undefined>(0);\r\n\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const deleteText = useCustomiserStore((state) => state.deleteText);\r\n  const updateIsMinimizedCustomiserNav = useCustomiserStore(\r\n    (state) => state.updateIsMinimizedCustomiserNav,\r\n  );\r\n  const isMinimizedCustomiserNav = useCustomiserStore((state) => state.isMinimizedCustomiserNav);\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const [isPickingOutline, setIsPickingOutline] = useState(false);\r\n  const [isPickingCrystal, setIsPickingCrystal] = useState(false);\r\n  const navHeaderRef = usePortalRef('NavHeader');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n\r\n  const mainTextInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const noOutlineSelected = step === 2 && isPickingOutline && !editText?.outline;\r\n  const noCrystalSelected = step === 3 && isPickingCrystal && !editText?.crystalBackground;\r\n  const hasFinishedAllSteps = step === 3 && (editText?.crystalBackground || !isPickingCrystal);\r\n\r\n  const hasFinishedStep1 = !!editText?.text;\r\n  const hasFinishedStep2 = !!editText?.material;\r\n  const hasFinishedStep3 = !!editText?.outline;\r\n  const hasFinishedStep4 = !!editText?.crystalBackground;\r\n\r\n  const finishedSteps = [\r\n    hasFinishedStep1,\r\n    hasFinishedStep2,\r\n    !noOutlineSelected,\r\n    !noCrystalSelected,\r\n  ];\r\n\r\n  const isVisiblePrev = step !== 0;\r\n  const isClickableNext = finishedSteps[step || 0];\r\n  const isVisibleNext = typeof step === 'number' ? step < 3 : false;\r\n\r\n  const saveAndApplyChecker = () => {\r\n    if (!hasFinishedStep1) {\r\n      alert('Please enter a text to continue');\r\n      setStep(0);\r\n      return false;\r\n    } else if (!hasFinishedStep2) {\r\n      alert('Select a text color to continue');\r\n      setStep(1);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      setShowEditText(true);\r\n    } else {\r\n      setShowEditText(false);\r\n    }\r\n  }, [editText]);\r\n\r\n  useEffect(() => {\r\n    setShowEditText(editText?.key !== undefined);\r\n    return () => {\r\n      setShowEditText(false);\r\n    };\r\n  }, []);\r\n\r\n  const addText = () => {\r\n    setShowEditText(true);\r\n  };\r\n\r\n  const setScale = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalScale: Number(event) });\r\n    });\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const placeText = () => {\r\n    if (isPickingCrystal && noCrystalSelected) {\r\n      alert('Select a crystal type');\r\n      return;\r\n    }\r\n    if (editText?.key && !editText?.decalPosition) {\r\n      updateText(editText.key, {\r\n        decalFreeze: true,\r\n        decalPosition: [-0.01989325641440387, 2.436930108198209, 1.6226380277735046],\r\n        decalOrientation: [\r\n          -0.14799034762565572,\r\n          -0.17866277612764514,\r\n          -0.026487426629834374,\r\n          'XYZ',\r\n        ],\r\n      });\r\n    }\r\n    updateIsMinimizedCustomiserNav(true);\r\n  };\r\n\r\n  const applyText = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n        hasApplied: true,\r\n      });\r\n    }\r\n\r\n    setStep(0);\r\n\r\n    setShowEditText(false);\r\n  };\r\n\r\n  const localStorageConfirmCancelText = localStorage.getItem('confirmCancelText');\r\n  const shouldShowConfirmCancelText = !localStorageConfirmCancelText;\r\n\r\n  const [showConfirmCancelPopup, setShowConfirmCancelPopup] = useState(false);\r\n  const [shouldShowInfoDisplay, setShouldShowInfoDisplay] = useState(true);\r\n\r\n  const cancelText = () => {\r\n    if (editText?.key) {\r\n      if (!editText?.text || (editText?.text && !editText?.hasApplied)) {\r\n        deleteText(editText.key);\r\n      } else {\r\n        applyText();\r\n      }\r\n    }\r\n  };\r\n\r\n  const cancelTextHandler = () => {\r\n    if (editText?.text) {\r\n      setShowConfirmCancelPopup(true);\r\n    } else {\r\n      cancelText();\r\n    }\r\n  };\r\n\r\n  const handleTitleClick = (_step: number | string) => {\r\n    if (_step === step) {\r\n      setStep(undefined);\r\n    } else {\r\n      setStep(_step as number);\r\n    }\r\n  };\r\n\r\n  const maxStep = 4;\r\n\r\n  const handleNext = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step < maxStep - 1) {\r\n      switch (step) {\r\n        case 0:\r\n          if (!editText?.text) {\r\n            alert('Please enter a text to continue');\r\n            return;\r\n          }\r\n          break;\r\n        case 1:\r\n          if (!editText?.selectedName) {\r\n            alert('Select a text color type');\r\n            return;\r\n          } else if (!editText?.material) {\r\n            alert('Select a color for text');\r\n            return;\r\n          }\r\n          break;\r\n        case 2:\r\n          if (isPickingOutline && !editText?.outline) {\r\n            alert('Select an outline');\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step > 0) {\r\n      setStep(step - 1);\r\n    }\r\n  };\r\n\r\n  const navCategoryNames = ['Font', 'Color', 'Outline', 'Finish'];\r\n  const NavTextCategoriesItems = () => {\r\n    const handleOnClick = (index: number) => {\r\n      if (navCategoryNames[index] === 'Outline' || navCategoryNames[index] === 'Finish') {\r\n        if (!saveAndApplyChecker()) return;\r\n      }\r\n      if (!editText?.text) {\r\n        alert('Please enter a text to continue');\r\n        return;\r\n      }\r\n      handleTitleClick(index);\r\n    };\r\n\r\n    const finishedCategories = [\r\n      hasFinishedStep1,\r\n      hasFinishedStep2,\r\n      hasFinishedStep3,\r\n      hasFinishedStep4,\r\n    ];\r\n\r\n    return navCategoryNames.map((name, index) => {\r\n      const isSelectedCategory = step === index;\r\n      const categoryClassNames = `\r\n        ${isSelectedCategory ? styles.selectedCategoryItem : ''}\r\n        ${finishedCategories[index] ? styles.finishedCategoryItem : ''}\r\n      `;\r\n      return (\r\n        <div key={index} className={categoryClassNames} onClick={() => handleOnClick(index)}>\r\n          {name}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const CategoryDisplay = () => {\r\n    switch (step) {\r\n      case 0:\r\n        return <NavTextSelect editText={editText} />;\r\n      case 1:\r\n        return <NavTextNameTypes editText={editText} />;\r\n      case 2:\r\n        return <NavTextOutline editText={editText} setIsPickingOutline={setIsPickingOutline} />;\r\n      case 3:\r\n        return (\r\n          <NavTextFinish\r\n            setIsPickingCrystal={setIsPickingCrystal}\r\n            editText={editText}\r\n          ></NavTextFinish>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showEditText ? (\r\n        <>\r\n          <div className={styles.navTextEdit}>\r\n            <NavTextPreview mainTextInputRef={mainTextInputRef} editText={editText} />\r\n            <NavTextCategories>{NavTextCategoriesItems()}</NavTextCategories>\r\n            {CategoryDisplay()}\r\n            <NavTextNavSteps\r\n              onClickNext={handleNext}\r\n              onClickPrev={handlePrevious}\r\n              onClickCancel={cancelTextHandler}\r\n              onClickSave={placeText}\r\n              isVisiblePrev={isVisiblePrev}\r\n              isVisibleNext={isVisibleNext}\r\n              isClickableNext={isClickableNext}\r\n            />\r\n            {editText?.key &&\r\n              editText.decalPosition &&\r\n              isMinimizedCustomiserNav &&\r\n              popupContainerRef && (\r\n                <>\r\n                  <NavDecalAdjust\r\n                    scale={editText?.decalScale}\r\n                    rotation={editText?.decalRotation}\r\n                    onScale={setScale}\r\n                    onRotate={setRotation}\r\n                  />\r\n                  {shouldShowInfoDisplay &&\r\n                    createPortal(\r\n                      <InfoDisplay\r\n                        cb={() => {\r\n                          setShouldShowInfoDisplay(false);\r\n                        }}\r\n                        title='Apply Text'\r\n                      >\r\n                        <h5>Click where you want the text to go</h5>\r\n                        <img\r\n                          style={{ maxWidth: '100%' }}\r\n                          src='examples/NavText/sample-apply-text.png'\r\n                        />\r\n                      </InfoDisplay>,\r\n                      popupContainerRef,\r\n                    )}\r\n                </>\r\n              )}\r\n            {editText &&\r\n              isMinimizedCustomiserNav &&\r\n              navHeaderRef &&\r\n              hasFinishedAllSteps &&\r\n              createPortal(\r\n                <ContainedButton\r\n                  onClick={() => {\r\n                    if (!saveAndApplyChecker()) {\r\n                      return updateIsMinimizedCustomiserNav(false);\r\n                    }\r\n\r\n                    applyText();\r\n                    updateIsMinimizedCustomiserNav(false);\r\n                  }}\r\n                  classNames={styles.navHeaderSaveText}\r\n                >\r\n                  SAVE\r\n                </ContainedButton>,\r\n                navHeaderRef,\r\n              )}\r\n            {popupContainerRef &&\r\n              createPortal(\r\n                <NavTextInput ref={mainTextInputRef} editText={editText} />,\r\n                popupContainerRef,\r\n              )}\r\n          </div>\r\n          {popupContainerRef &&\r\n            shouldShowConfirmCancelText &&\r\n            showConfirmCancelPopup &&\r\n            createPortal(\r\n              <DontShowAgain\r\n                cb={cancelText}\r\n                setShowNotification={setShowConfirmCancelPopup}\r\n                notifName={'editTextCancelText'}\r\n              >\r\n                <span>Cancel text customization?</span>\r\n              </DontShowAgain>,\r\n              popupContainerRef,\r\n            )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <NavTextsSelection onAddTextClicked={addText}></NavTextsSelection>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavText;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CustomiserNav_root__rgnWr\",\"open\":\"CustomiserNav_open__6TgJc\",\"isFullscreen\":\"CustomiserNav_isFullscreen__xo92v\",\"minimized\":\"CustomiserNav_minimized__-4C1L\",\"actions\":\"CustomiserNav_actions__B0fm0\",\"content\":\"CustomiserNav_content__whsIx\",\"headerAfter\":\"CustomiserNav_headerAfter__bXrUD\",\"navHeaderScroll\":\"CustomiserNav_navHeaderScroll__0nzPV\",\"tab\":\"CustomiserNav_tab__El9gn\",\"finished\":\"CustomiserNav_finished__aPBu9\",\"navName\":\"CustomiserNav_navName__YLBS9\",\"selected\":\"CustomiserNav_selected__x6zsL\",\"navHeaderScroll__tabs\":\"CustomiserNav_navHeaderScroll__tabs__Kfm2J\",\"navHeaderScroll__arrow\":\"CustomiserNav_navHeaderScroll__arrow__rs-4X\",\"hasActions\":\"CustomiserNav_hasActions__xe43g\",\"isEdittingText\":\"CustomiserNav_isEdittingText__bI3ZI\",\"closed\":\"CustomiserNav_closed__fkIqu\",\"navTabs\":\"CustomiserNav_navTabs__opEX5\",\"navTab\":\"CustomiserNav_navTab__RDrBe\",\"navTab__requiredIcon\":\"CustomiserNav_navTab__requiredIcon__V9kgy\",\"hidden\":\"CustomiserNav_hidden__XKoeq\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QuickInfo_root__3V53K\",\"root__icon\":\"QuickInfo_root__icon__+Dyye\"};","import styles from './QuickInfo.module.scss';\r\n\r\nexport interface Props {\r\n  children: React.ReactNode;\r\n}\r\nconst QuickInfo = ({ children }: Props) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      {children}\r\n      {/* A questionmark icon can be placed in here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuickInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavProduction_root__WosDO\",\"info\":\"NavProduction_info__2702c\",\"info__icon\":\"NavProduction_info__icon__+SUau\",\"productionCategories\":\"NavProduction_productionCategories__k+0vt\",\"productionCategories__category\":\"NavProduction_productionCategories__category__Kn49E\",\"productionCategories__title\":\"NavProduction_productionCategories__title__rL+FK\",\"productionCategories__infoIcon\":\"NavProduction_productionCategories__infoIcon__jlpLo\"};","import QuickInfo from '@components/ui/QuickInfo/QuickInfo';\r\nimport styles from './NavProduction.module.scss';\r\nimport { RiQuestionLine } from 'react-icons/ri';\r\n\r\nconst NavProduction = () => {\r\n  // TODO: items will have dynamic data from the backend\r\n  return (\r\n    <div className={styles.root}>\r\n      <QuickInfo>Choose how quickly you need us to work.</QuickInfo>\r\n\r\n      <div className={styles.productionCategories}>\r\n        <div className={styles.productionCategories__category}>\r\n          <div>\r\n            <div className={styles.productionCategories__title}>Standard Production</div>\r\n            <p>Approx 3-4 weeks production + delivery time</p>\r\n          </div>\r\n          <div className={styles.productionCategories__infoIcon}>\r\n            <RiQuestionLine />\r\n          </div>\r\n        </div>\r\n        <div className={styles.productionCategories__category}>\r\n          <div>\r\n            <div className={styles.productionCategories__title}>Express</div>\r\n            <p>Approx 10-12 days production + delivery time (+ £29)</p>\r\n          </div>\r\n          <span className={styles.productionCategories__infoIcon}>\r\n            <RiQuestionLine />\r\n          </span>\r\n        </div>\r\n        <div className={styles.productionCategories__category}>\r\n          <div>\r\n            <div className={styles.productionCategories__title}>Super Express</div>\r\n            <p>As fast as 6-8 days production + delivery time (+ £45)</p>\r\n          </div>\r\n          <span className={styles.productionCategories__infoIcon}>\r\n            <RiQuestionLine />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavProduction;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavBoxxerLogo_root__GOwtW\"};","import QuickInfo from '@components/ui/QuickInfo/QuickInfo';\r\nimport styles from './NavBoxxerLogo.module.scss';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\nconst NavBoxxerLogo = () => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <QuickInfo>\r\n        To keep our prices reasonable, all products need to include a Boxxer logo. You can drag this\r\n        to where you want it (except small waist band logos on shorts which are in set position). A\r\n        fee applies if you want all logos removed.\r\n      </QuickInfo>\r\n      <ContainedButton widthType='wide' type='hollow'>\r\n        Remove Boxxer Logo + £15\r\n      </ContainedButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBoxxerLogo;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavFitting from '../NavFitting';\r\nimport NavFlags from '../NavFlags';\r\nimport NavHeader from '../NavHeader';\r\nimport NavImages from '../NavImages';\r\nimport NavPart from '../NavPart';\r\nimport NavMinimize from '../NavMinimize';\r\nimport NavSize from '../NavSize';\r\nimport NavText from '../NavText';\r\n\r\nimport styles from './CustomiserNav.module.scss';\r\nimport NavHeaderScroll from '../NavHeader/NavHeaderScroll';\r\nimport NavProduction from '../NavProduction';\r\nimport { isFinishedNavItem } from '@lib/object';\r\nimport NavBoxxerLogo from '../NavBoxxerLogo/NavBoxxerLogo';\r\n\r\nexport interface CustomiserNavProps {\r\n  className?: string;\r\n}\r\n\r\nconst CustomiserNav = ({ className }: CustomiserNavProps) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [scrollCoordinates, setScrollCoordinates] = useState({ left: 0, top: 0 });\r\n  const [showEditText, setShowEditText] = useState(false);\r\n  const [finishedNavs, setFinishedNavs] = useState<\r\n    ({ name: string; isFinished: boolean } | undefined)[]\r\n  >([]);\r\n\r\n  const {\r\n    selectedPart,\r\n    selectedNav,\r\n    texts,\r\n    isMinimizedCustomiserNav,\r\n    updateIsMinimizedCustomiserNav,\r\n    setSelectedNav,\r\n    navTabs,\r\n    sizing,\r\n    parts,\r\n    flags,\r\n    graphics,\r\n  } = useCustomiserStore();\r\n  const scrollableRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const isFullscreen = useMemo(\r\n    () => selectedNav?.name === 'Text' && editText,\r\n    [selectedNav, editText],\r\n  );\r\n\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      // [styles.open]: isOpen,\r\n      [styles.minimized]: isMinimizedCustomiserNav,\r\n      [styles.hasActions]: selectedNav?.hasActions,\r\n      [styles.isEdittingText]: editText?.text && showEditText,\r\n      [styles.isFullscreen]: false,\r\n    },\r\n    className,\r\n  );\r\n\r\n  const saveScrollCoordinates = () => {\r\n    if (isOpen && scrollableRef.current) {\r\n      setScrollCoordinates({\r\n        left: scrollableRef.current.scrollLeft,\r\n        top: scrollableRef.current.scrollTop,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && scrollableRef.current) {\r\n      scrollableRef.current.scrollTo({\r\n        ...scrollCoordinates,\r\n        // Typescript issue: https://github.com/Microsoft/TypeScript/issues/28755\r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const toggleOpen = () => {\r\n    saveScrollCoordinates();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedNav === null && selectedPart === null) {\r\n      setIsOpen(true);\r\n    } else {\r\n      setIsOpen(false);\r\n    }\r\n  }, [selectedPart, selectedNav]);\r\n\r\n  function navTabClickHandler(index: number) {\r\n    setSelectedNav(navTabs[index].items[0].index || 0);\r\n    updateIsMinimizedCustomiserNav(false);\r\n  }\r\n\r\n  const navTabsComponents = navTabs.map((navTab, index) => {\r\n    const isFinishedAllNavItems = navTab.items.every((navItem) =>\r\n      isFinishedNavItem({\r\n        navItem,\r\n        sizing,\r\n        parts,\r\n        texts,\r\n        flags,\r\n        images: graphics,\r\n      }),\r\n    );\r\n\r\n    const hasRequiredItems = navTab.items.some((navItem) => navItem.required);\r\n\r\n    return (\r\n      <div\r\n        key={navTab.name}\r\n        className={`${styles.navTab} ${isFinishedAllNavItems ? styles.finished : ''}`}\r\n        onClick={() => {\r\n          navTabClickHandler(index);\r\n        }}\r\n      >\r\n        {hasRequiredItems && <span className={styles.navTab__requiredIcon}>*</span>}\r\n        {navTab.name}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {\r\n        <div className={`${styles.navTabs} ${editText ? styles.hidden : ''}`}>\r\n          {navTabsComponents}\r\n        </div>\r\n      }\r\n\r\n      <motion.nav\r\n        layout='preserve-aspect'\r\n        transition={{\r\n          type: 'spring',\r\n          stiffness: 700,\r\n          damping: 40,\r\n        }}\r\n        className={rootClassName}\r\n      >\r\n        {/* {!isOpen && (\r\n        <NavMinimize\r\n          isMinimizedCustomiserNav={isMinimizedCustomiserNav}\r\n          onMinimize={() => updateIsMinimizedCustomiserNav(true)}\r\n          onMaximize={() => updateIsMinimizedCustomiserNav(false)}\r\n        />\r\n      )} */}\r\n        <NavHeader\r\n          className={styles.header}\r\n          toggle={() => toggleOpen()}\r\n          isOpen={isOpen}\r\n          onClick={() => {\r\n            if (!editText) {\r\n              updateIsMinimizedCustomiserNav(true);\r\n            }\r\n          }}\r\n          isMinimized={isMinimizedCustomiserNav}\r\n        />\r\n        <div id='NavHeaderAfter' className={styles.headerAfter}></div>\r\n        <Suspense fallback={<div style={{ background: 'white' }}>Loading...</div>}>\r\n          <AnimatePresence initial={false}>\r\n            <motion.div\r\n              id='scrollable'\r\n              className={`${styles.content} ${isOpen && styles.closed}`}\r\n              initial='collapsed'\r\n              animate='open'\r\n              exit='collapsed'\r\n              variants={{\r\n                open: { opacity: 1 },\r\n                collapsed: { opacity: 0 },\r\n              }}\r\n              ref={(el) => {\r\n                scrollableRef.current = el;\r\n              }}\r\n            >\r\n              {isOpen ? null : selectedNav?.type === 'fitting' ? (\r\n                <NavFitting finishedNavs={finishedNavs} setFinishedNavs={setFinishedNavs} />\r\n              ) : selectedNav?.type === 'names' ? (\r\n                <NavText showEditText={showEditText} setShowEditText={setShowEditText} />\r\n              ) : selectedNav?.type === 'flags' ? (\r\n                <NavFlags />\r\n              ) : selectedNav?.type === 'images' ? (\r\n                <NavImages />\r\n              ) : selectedNav?.type === 'size' ? (\r\n                <NavSize />\r\n              ) : selectedNav?.type === 'production' ? (\r\n                <NavProduction />\r\n              ) : selectedNav?.type === 'boxxer logo' ? (\r\n                <NavBoxxerLogo />\r\n              ) : selectedPart ? (\r\n                <NavPart part={selectedPart} />\r\n              ) : null}\r\n            </motion.div>\r\n          </AnimatePresence>\r\n        </Suspense>\r\n        {!isOpen && selectedNav?.hasActions && (\r\n          <div className={styles.actions}>\r\n            {selectedPart && <div id='CustomiserNavMaterial' style={{ background: 'white' }}></div>}\r\n            <div id='CustomiserNavActions'></div>\r\n          </div>\r\n        )}\r\n      </motion.nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomiserNav;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Header_root__cz6kt\",\"total\":\"Header_total__nSueF\",\"price\":\"Header_price__GikHZ\",\"resetBtn\":\"Header_resetBtn__yzIQA\",\"addToBasket\":\"Header_addToBasket__T8GpW\"};","import Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport { useDesignStore } from '@store/design';\r\nimport styles from './Header.module.scss';\r\nimport Price from '@components/ui/Price';\r\n\r\nexport interface HeaderProps {\r\n  className?: string;\r\n}\r\n\r\nconst Header = ({ className }: HeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const total = useCustomiserStore((state) => state.total());\r\n  const designComplete = useCustomiserStore((state) => state.designComplete());\r\n  const setResetCamera = useDesignStore((state) => state.setResetCamera);\r\n  const addingToCart = useDesignStore((state) => state.addingToCart);\r\n\r\n  const resetCustomerSelections = useCustomiserStore((state) => state.resetCustomerSelections);\r\n\r\n  const saveDesign = () => {\r\n    setResetCamera();\r\n  };\r\n\r\n  const resetPopup = () => {\r\n    if (confirm('Reset everything?')) {\r\n      resetCustomerSelections();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div id='reset-btn-container' className={styles.resetBtn}>\r\n        <Button onClick={resetPopup}>CLEAR</Button>\r\n      </div>\r\n      <div className={styles.total}>\r\n        Current <Price className={styles.price} priceString={total} />\r\n      </div>\r\n      <Button\r\n        className={styles.addToBasket}\r\n        onClick={saveDesign}\r\n        disabled={!designComplete || addingToCart}\r\n      >\r\n        {addingToCart ? 'Saving' : 'Add to basket'}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Customiser_root__+9xV1\",\"nav\":\"Customiser_nav__xnqzP\",\"modelContainer\":\"Customiser_modelContainer__FVL2o\",\"model\":\"Customiser_model__jxaOf\",\"controls\":\"Customiser_controls__Ar93L\",\"background\":\"Customiser_background__qq7nU\",\"loading\":\"Customiser_loading__vNYyO\",\"header\":\"Customiser_header__1SFjA\",\"close\":\"Customiser_close__sH1pv\"};","import CustomiserNav from '@components/nav/CustomiserNav';\r\nimport Button from '@components/ui/Button';\r\nimport { useDesignStore } from '@store/design';\r\nimport cn from 'classnames';\r\nimport { lazy, Suspense, useRef } from 'react';\r\nimport Header from '../Header';\r\n\r\nconst CustomiserCanvas = lazy(() => import('@components/three/CustomiserCanvas'));\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport styles from './Customiser.module.scss';\r\nimport { Camera } from 'three';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface CustomiserProps {\r\n  className?: string;\r\n}\r\n\r\nexport type FocusCameraOnPart = (part?: string | Falsey) => void;\r\n\r\nconst Customiser = ({ className }: CustomiserProps) => {\r\n  const setShow = useDesignStore((state) => state.setShow);\r\n  const { selectedNav } = useCustomiserStore();\r\n\r\n  const cameraRef = useRef<Camera | null>(null);\r\n  const handleCameraRef = (ref: Camera | null) => {\r\n    cameraRef.current = ref;\r\n  };\r\n\r\n  const rootClassName = cn(styles.root, className, {\r\n    // [styles.navOpen]: selectedNav !== null,\r\n  });\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div\r\n        id='popupContainer'\r\n        style={{\r\n          // re-figure out again how to put styled ID in scss\r\n          position: 'absolute',\r\n          zIndex: '201',\r\n        }}\r\n      />\r\n      <CustomiserNav className={styles.nav} />\r\n      <Header className={styles.header} />\r\n      <svg\r\n        className={styles.background}\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 114.383 97.088'\r\n      >\r\n        <defs>\r\n          <clipPath id='a'>\r\n            <path d='M0 0h114.383v97.088H0z' />\r\n          </clipPath>\r\n        </defs>\r\n        <g clipPath='url(#a)' fillRule='evenodd'>\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='M8.567 88.645v-.044c1.487-.24 2.986-.466 4.472-.716a1.278 1.278 0 0 0 .743-1.862 1.019 1.019 0 0 0-.949-.409c-2.928.338-5.845.747-8.785 1.147-.492.069-.709.447-.687 1.262.012 1.216.126 1.481.721 1.375 1.5-.243 3.008-.506 4.484-.753M23.905 77.54c-1.224.072-1.842.39-1.9 2.044a69.405 69.405 0 0 0 .011 5.312c.057 1.481.606 2.112 1.716 1.99q4.444-.488 8.888-1.012a1.851 1.851 0 0 0 1.659-1.975c.057-.853.1-1.709.1-2.562.023-.856.023-1.247 0-2.093-.068-1.6-.755-1.769-2.024-1.7Zm9.982-6.006c2.119 0 3.229 1.3 3.744 3.247a8.461 8.461 0 0 1 .32 2.222 225.099 225.099 0 0 1 0 7.896 8.3 8.3 0 0 1-.869 3.622 3.721 3.721 0 0 1-2.8 2.269c-4.072.553-8.121 1.15-12.182 1.784-1.773.306-3.145-1.253-3.523-3.993a25.755 25.755 0 0 1-.229-3.54c-.011-1.275-.006-2.556 0-3.834s.046-2.562.115-3.834c.091-1.944.606-4.015 1.887-5.128a2.565 2.565 0 0 1 1.533-.709Zm61.427 6.006v-6.006h13.325c1.682-.069 2.768 1.381 3.409 3.771a16.91 16.91 0 0 1 .538 4.281 18.216 18.216 0 0 1-.515 4.3 5.807 5.807 0 0 1-1.945 3.4c-.217.181-.469.34-.652.472.8 1.45 1.611 2.926 2.4 4.443a883.295 883.295 0 0 1 2.505 4.856c-.743-.163-1.453-.331-2.139-.472-1.041-.219-2.1-.381-3.157-.644a1.328 1.328 0 0 1-.732-.643c-.641-1.2-1.285-2.373-1.933-3.55-.633-1.148-1.292-2.3-1.91-3.431-.309-.522-.606-.819-1.041-.862a90.174 90.174 0 0 1-3.74-.481c-.366-.056-.481.116-.481.656.011 1.04.011 2.081.011 3.128v3.172c-1.235-.228-2.7-.472-3.946-.691v-12.17c3.752.156 7.526.293 11.278.4.492.013 1-.006 1.487 0 .56.016.789-.769.881-1.541.091-1.2-.149-2.053-.686-2.234a3.757 3.757 0 0 0-1.19-.16Zm-11.255 0v2.709l9.585.616v4.047l-9.631-.944v2.3l9.631 1.065v5.58c-4.838-.834-8.59-1.4-13.429-2.08v-19.3h13.431v6.006ZM37.072 90.367a232.526 232.526 0 0 1 3.775-5.125 219.554 219.554 0 0 1 3.786-4.809c-1.281-1.453-2.562-2.919-3.832-4.415s-2.439-2.915-3.709-4.484h5.5a1.331 1.331 0 0 1 .881.488c.7.84 1.322 1.559 2.02 2.375s1.407 1.625 2.116 2.431c.709-.84 1.417-1.682 2.127-2.512s1.413-1.643 2.128-2.466a.948.948 0 0 1 .652-.316h5.322c-1.224 1.384-2.475 2.827-3.7 4.237s-2.448 2.853-3.672 4.287c1.3 1.472 2.628 2.933 3.935 4.387s2.619 2.919 3.924 4.409c-1.865-.006-3.741.028-5.6.091a1.194 1.194 0 0 1-.789-.422q-1.116-1.213-2.23-2.434c-.732-.8-1.476-1.625-2.208-2.45-.755.928-1.511 1.855-2.265 2.8s-1.5 1.913-2.253 2.9c-.106.138-.274.327-.423.344-1.818.208-3.66.434-5.479.685m21.618-1.509c1.258-1.422 2.528-2.816 3.786-4.215s2.516-2.809 3.775-4.218q-1.922-2.231-3.832-4.428c-1.273-1.46-2.615-2.993-3.884-4.462h5.412a1.339 1.339 0 0 1 .881.459c.7.8 1.59 1.79 2.282 2.594s1.407 1.637 2.116 2.456c.709-.822 1.422-1.647 2.128-2.481s1.557-1.842 2.268-2.7a.959.959 0 0 1 .64-.34c1.773-.006 3.534 0 5.319.012-1.235 1.516-2.584 3.175-3.812 4.64s-2.459 2.884-3.683 4.293a234.511 234.511 0 0 1 3.935 4.959 262.195 262.195 0 0 1 3.935 5.293 296.137 296.137 0 0 0-5.6-.772 1.472 1.472 0 0 1-.8-.569c-.739-.948-1.48-1.9-2.219-2.822s-1.487-1.831-2.219-2.725q-1.132 1.247-2.253 2.49c-.749.829-1.511 1.652-2.265 2.478-.1.115-.274.26-.412.253a205.452 205.452 0 0 0-5.49-.2m-43.271-6.7a3.858 3.858 0 0 1 1.979 2.993 11.586 11.586 0 0 1-.24 5.3c-.549 1.89-1.6 3-2.962 3.29C9.494 94.797 4.8 95.888.1 97.088a.159.159 0 0 1-.1-.05V81.205c.274-.019.572-.041.881-.066 3.763-.328 7.5-.656 11.255-.981.377-.031.789 0 1.018-.622.32-.9-.034-2.037-.755-2H0V71.53h12.857a3.24 3.24 0 0 1 3.2 1.944 9.3 9.3 0 0 1 .721 4.4 8.384 8.384 0 0 1-1.361 4.277'\r\n          />\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='m75.165 48.1-6.079-9.03v.049c-.057 1.036-.095 2.076-.183 3.112a2.019 2.019 0 0 1-.3.929l-8.448 12.034c-.249.368-.854 1.239-1.255 1.374a.382.382 0 0 1-.448-.158 2.924 2.924 0 0 1-.17-1.252v-.015l.451-9.913a.888.888 0 0 1 .121-.521l6.771-9.393a1.068 1.068 0 0 0 0-1.4l-6.516-9.933a3.453 3.453 0 0 1-.372-1.536l-.564-9.434c-.136-2.082.98-1.647 2.035 0l9.86 15.392 5.074-7.607c.439-.71.756-1.16 1.67-1.2a28.863 28.863 0 0 0 6.026-.866 2.49 2.49 0 0 1 .955-.113.381.381 0 0 1 .292.365 7.753 7.753 0 0 1-1.169 2.293L74.64 33.912a.971.971 0 0 0-.011 1.253l8.1 12.066a7.386 7.386 0 0 1 1.192 2.336.379.379 0 0 1-.247.33 2.314 2.314 0 0 1-1.008-.05 43.691 43.691 0 0 0-6.495-.95c-.5-.024-.775-.421-1.012-.8m-17.2-18.084 2.675 4.223a.378.378 0 0 1-.005.42L57.97 38.64a.386.386 0 0 1-.639 0l-2.729-4a.379.379 0 0 1-.005-.426l2.719-4.206a.386.386 0 0 1 .65 0m-13.64-.628 10.716-16.367c.911-1.366 2.032-2.329 1.921 0l-.453 9.457a3.209 3.209 0 0 1-.565 1.514l-6.217 9.551c-.31.474-.372.717-.048 1.2l6.446 9.577a1.569 1.569 0 0 1 .389.861l.454 9.969v.025a3.345 3.345 0 0 1-.187 1.236.385.385 0 0 1-.494.158 4.869 4.869 0 0 1-1.172-1.361l-9.863-14.918c-.149.21-.3.418-.441.636-1.474 2.327-2.954 4.649-4.408 6.989a1.51 1.51 0 0 1-1.168.806h-.025a40.188 40.188 0 0 0-6.467 1.047 3.664 3.664 0 0 1-1.08.156.385.385 0 0 1-.325-.453 11.67 11.67 0 0 1 1.3-2.279L40.716 34.9a.978.978 0 0 0 0-1.256L32.349 21.23a8.345 8.345 0 0 1-1.185-2.257.382.382 0 0 1 .294-.383 2.706 2.706 0 0 1 .969.1c1.112.258 2.222.524 3.342.747a22.428 22.428 0 0 0 3.334.462c.711.032 1.093.653 1.429 1.19 1 1.6 2.087 3.16 3.146 4.727a3.685 3.685 0 0 1 .542 2.108ZM57.652 0 45.465 18.084a.386.386 0 0 1-.628.017c-1.5-2-2.426-3.151-5.06-3.4a68.259 68.259 0 0 1-11.375-2.346c-3.454-.947-6.874-2.013-10.321-2.979l16.621 24.707a.379.379 0 0 1 0 .426L19.854 57.187c3.235-.656 6.473-1.24 9.736-1.751 3.484-.546 6.978-1.03 10.465-1.553a6.441 6.441 0 0 0 4.394-2.608l.623-.841a.385.385 0 0 1 .633.019L57.652 68.8l11.947-18.351a.386.386 0 0 1 .633-.019l.623.841a6.442 6.442 0 0 0 4.394 2.608c3.488.523 6.982 1.007 10.465 1.553 3.263.511 6.5 1.095 9.736 1.751L80.601 34.51a.378.378 0 0 1 0-.426L97.225 9.376c-3.447.965-6.868 2.031-10.321 2.979A68.266 68.266 0 0 1 75.528 14.7c-2.635.249-3.557 1.4-5.06 3.4a.386.386 0 0 1-.628-.017Z'\r\n          />\r\n        </g>\r\n      </svg>\r\n      <div className={styles.modelContainer}>\r\n        <div id='CustomiserCanvasControls' className={styles.controls}></div>\r\n        <Suspense fallback={<div className={styles.loading}>Loading ...</div>}>\r\n          <CustomiserCanvas className={styles.model} onCameraRef={handleCameraRef} />\r\n        </Suspense>\r\n      </div>\r\n      {selectedNav === null && (\r\n        <Button className={styles.close} onClick={() => setShow(false)}>\r\n          Close\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customiser;\r\n","import { SpotLight, useHelper } from '@react-three/drei';\r\nimport { useRef } from 'react';\r\nimport { SpotLightHelper, Vector3, SpotLight as SpotLightRef } from 'three';\r\nconst config = {\r\n  ambientLight: {\r\n    // color: 16777215,\r\n    // groundColor: 4473924,\r\n    intensity: 0.1,\r\n  },\r\n  directionalLights: [\r\n    {\r\n      color: 16777215,\r\n      intensity: 0.3,\r\n      position: new Vector3(0, 6, -200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 16759931,\r\n      intensity: 0.2,\r\n      position: new Vector3(-150, 0, 200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 10213119,\r\n      intensity: 0.2,\r\n      position: new Vector3(100, 0, 200),\r\n    },\r\n  ],\r\n};\r\n\r\nconst Lights = () => {\r\n  const light = useRef<SpotLightRef>(null);\r\n  // useHelper(light.current, SpotLightHelper, 'cyan');\r\n  return (\r\n    <group>\r\n      <hemisphereLight {...config.ambientLight}></hemisphereLight>\r\n      <pointLight position={[-800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[-800, 0, 1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[800, 0, 1000]} intensity={0.5} decay={120} power={7} castShadow />\r\n      <pointLight position={[800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Lights;\r\n"],"names":["_ref","onClick","isSelected","isFinished","classNames","children","buttonClassNames","concat","styles","containedNavButton","selected","finished","_jsx","className","navItemNameDisplay","selectedNav","navItemName","name","toLowerCase","optionModelNameDisplay","_ref2","optionName","modelName","optionModelTitleDisplay","_ref3","titleDisplay","type","textTypesDisplay","_ref4","textType","display","FittingOption","_selectedModels$find","_option$models","option","selectedModels","setSelectedModel","useCustomiserStore","getSelected","find","m","optionId","id","model","_Fragment","motion","div","fittingOption","initial","opacity","animate","exit","fittingButtons","models","map","_m$model","_m$model$data","_m$model3","_m$model3$data","_m$model3$data$attrib","ContainedNavButton","data","fittingButton","_m$model2","attributes","finishedNavs","fittingOptions","state","_state$customProduct","_state$customProduct$","customProduct","options","setCameraFocus","fittingTitle","getFittingOptionByName","fittingOptionName","useEffect","navItem","length","_jsxs","root","defaultMessage","getSrcSets","formats","fff","Object","entries","f","width","url","filter","format","sort","a","b","reduce","acc","current","index","array","getSrcSet","_image$attributes4","image","sizes","rootClassName","cn","relativeHeight","useMemo","_image$attributes","_image$attributes2","height","style","srcSet","_image$attributes3","src","NavFlagsSelect","editFlag","flags","addFlag","updateFlag","_f$attributes","flag","flagSelected","key","edit","Image","usePortalRef","loaded","setLoaded","useState","portalRef","useRef","document","getElementById","_prices$length","scale","rotation","prices","onScale","onRotate","scaleAdjust","rotateAdjust","currentScale","setCurrentScale","currentRotate","setCurrentRotate","rootRotateClassName","marks","range","start","stop","step","Array","from","value","p","i","markKey","Number","toFixed","createPortal","subtractScale","cur","FaCircleMinus","addScale","FaCirclePlus","rotateCounterClockwise","GiAnticlockwiseRotation","rotateClockwise","GiClockwiseRotation","disabled","onApply","ReactDOM","Button","colour","onEdit","onDelete","isVisible","toggleVisibility","isVisibleEye","undefined","event","stopPropagation","FaEye","FaEyeSlash","xmlns","viewBox","d","NavFlagsFlag","_flag$flag","_flag$flag$attributes","setShowSelector","setSelectModel","deleteFlag","flagItem","flagItemImage","NavOptionEdit","editItem","deleteItem","NavFlags","g","showSelector","flagQuery","useGetFlagsQuery","graphQLClient","pagination","limit","select","_data$flags","_data$graphicPrices","graphicPrices","NavDecalAdjust","decalScale","decalRotation","setScale","price","_price$attributes","_price$attributes2","priceValues","size","basePrice","quantity","startTransition","NavEditButtons","applyFlag","decalFreeze","customiserFlags","toggle","isOpen","isMinimized","setSelectedNav","navTabs","texts","editText","navTabItemCount","getNavTabItemCount","navItemIndex","navItemArrayIndex","getNavItemArrayIndex","isFirstNavItem","isLastNavItem","isLastNavItemChecker","closeHandler","IoMdReturnLeft","prevHandler","FaAngleLeft","required","nextHandler","FaAngleRight","NavImagesImage","_graphic$graphic","_graphic$graphic$attr","_graphic$graphic$attr2","graphic","updateGraphic","deleteGraphic","graphicItem","graphicItemImage","NavImagesUpload","setGraphic","saving","setSaving","mutate","createGraphicMutation","useCreateGraphicMutation","onSuccess","_data$createGraphic","createGraphic","fileUploadMutate","useUploadMultipleFilesMutation","fileIDs","multipleUpload","_f$data","customer","onDrop","useCallback","acceptedFiles","files","getRootProps","getInputProps","isDragActive","useDropzone","accept","maxFiles","multiple","dropZone","NavImagesSelect","_currentGraphic$attri","_currentGraphic$attri2","editGraphic","currentGraphic","setCurrentGraphic","addGraphic","graphics","graphicSelected","NavImages","imageQuery","useGetImagesQuery","applyImage","addImage","uniqueMaterialTypes","uniqBy","initialState","colourGroups","materialTypes","materials","createMaterialGroup","set","get","filteredMaterials","colourGroup","selectedColourGroup","_m$attributes","_m$attributes$colourG","resetMaterialGroup","setMaterials","materialType","produce","flatMap","_d$attributes","_d$attributes$colourG","_m$attributes2","_m$attributes2$colour","_state$selectedColour","_m$attributes3","_m$attributes3$type","selectedMaterialType","uniqueMaterials","setColourGroup","_m$attributes4","_m$attributes4$colour","_state$selectedColour2","_m$attributes5","_m$attributes5$type","setMaterialType","Provider","useStore","useMaterialGroupStore","createContext","createStore","create","devtools","Material","_material$attributes","_material$attributes$","_material$attributes2","_mapImage$image","_mapImage$image$data","_mapImage$image$data$","_mapImage$image2","_mapImage$image2$data","_mapImage$image2$data2","material","onMaterialSelected","selectedMaterialId","popupPortalRef","showPopup","setShowPopup","mapImage","images","mapType","onLongPressBinder","useLongPress","handleContextMenu","preventDefault","onContextMenu","popup","alt","color","materialId","async","loadImage","Promise","resolve","reject","img","crossOrigin","onload","onerror","crystal","testCrystalMaterial","crystalPromise","crystalImage","setCrystalImage","then","MaterialType","hideColorGroups","hideMaterialTitle","getFilteredMaterials","filteredMaterialTypes","some","acm","mt","_m$attributes$type","_m$attributes$type$da","title","materialTypeScroll","withCrystals","_mt$attributes","materialType__title","_m$attributes2$type","_m$attributes2$type$d","MaterialCrystal","SelectedMaterialInfo","_selectedMaterial$att","_selectedMaterial$att2","_selectedMaterial$att3","_selectedMaterial$att4","_selectedMaterial$att5","selectedPart","parts","selectedMaterial","_parts$find","part","MaterialGroupLoader","_materialGroup$attrib","materialGroup","typeIds","t","useGetMaterialsQuery","filters","in","pageSize","_data$materials","quickInfo","group","_group$attributes$col","_group$attributes","background","borderRadius","_group$attributes2","outline","fill","props","isOn","togglePillButton","on","_part$materialGroup","_currentPart$material","_currentPart$material2","_currentPart$material3","_currentPart$material4","setPart","removePart","currentPart","showOptional","setShowOptional","optional","buttonContainer","TogglePillButton","optionalOnClick","show","FaMinus","IoMdAdd","Suspense","fallback","MaterialGroup","placeholder","getSizeVariation","unit","weight","variations","v","_v$sku","sku","endsWith","setSizing","_state$sizing","sizing","_state$sizing2","variation","_state$sizing3","setHeightUnit","setWeightUnit","grey","sectionTitle","FormInput","onChange","e","target","input","unitToggle","toggleButton","toggleButtonSelected","UNIT","HEIGHT","CM","INCH","WEIGHT","KG","LB","FormSelect","selectedVariation","priceString","formattedPrice","_editText$crystalBack","_selectedName$attribu9","_selectedName$attribu10","_selectedName$attribu11","_selectedName$attribu12","_selectedName$attribu13","_selectedName$attribu14","_editText$material","_editText$material$at","_editText$material$at2","_editText$material2","_editText$material2$a","_editText$material2$a2","setIsPickingCrystal","selectedName","crystalBackground","crystals","setCrystals","crystalPrice","puff","setPuff","puffPrice","hasPuffOption","NAME_TYPE_LUXURY_ID","updateText","addCrystals","add","_selectedName$attribu","_selectedName$attribu2","_selectedName$attribu3","_selectedName$attribu4","shopifyVariantId","addPuff","_selectedName$attribu5","_selectedName$attribu6","_selectedName$attribu7","_selectedName$attribu8","finishSelections","finishSelection","pricing","Price","_selectedName$attribu15","_editText$material3","_editText$material3$a","_editText$material3$a2","prevSelectedName","names","useGetNamesQuery","_data$names","letterPrice","nameType","outlinePrice","promptMessage","categoryDisplayName","n","_n$attributes","_n$attributes2","_n$attributes2$basePr","_n$attributes3","_n$attributes3$letter","setSelectedName","_editText$outline","_editText$outline2","_editText$outline2$at","_editText$outline2$at2","_editText$outline3","_editText$outline3$at","_editText$outline3$at2","setIsPickingOutline","showOutline","setShowOutline","updateOutline","outlineGroup","fonts","arial","oswald","college","ballantines","_fonts$find","text","setText","font","setFont","addText","fontSelection","_font","onFontChange","deleteText","textItem","textItemText","isClickable","isHidden","widthType","containedButton","clickable","hidden","green","onClickHandler","onAddTextClicked","onTextSelected","navTextsSelection","titleText","ContainedButton","NavTextText","getMaterialUrl","_material$attributes$2","_material$attributes$3","_material$attributes$4","imgMap","large","normalMapGenerator","NormalMapGenerator","instance","imgToNormalMap","hasPuff","blur","blurAmount","generateFromImage","strength","level","CanvasText","constructor","toNormalMap","patternType","canvas","ctx","outlineCanvas","outlineCtx","normalMapTextureCanvas","normalMapTextureCtx","normalMapCanvas","normalMapCtx","normalMapOutlineTextureCanvas","normalMapOutlineTextureCtx","normalMapOutlineCanvas","normalMapOutlineCtx2","crystalBgPatternCanvas","crystalBgPatternCtx","canvasHeight","canvasWidth","fontSize","outlineWidth","this","createElement","getContext","clear","_this$ctx","_this$outlineCtx","clearRect","drawImg","drawImage","showTestCanvas","innerHTML","maskImage","globalCompositeOperation","drawPreviewText","textAlign","fillText","drawPreviewOutlineText","lineWidth","strokeText","drawPreviewOutlineOnlyText","fillStyle","drawNormalMap","normalMapPatternImg","pattern","createPattern","rect","normalMap","drawOutlineNormalMap","drawCrystalBg","crystalBgImg","crystalBgPatternImg","globalAlpha","printTextMapToStrokeMap","previewText","previewImg","toDataURL","mergeCanvas","getOutlineCanvas","getNormalMapTextureCanvas","getNormalMapOutlineCanvas","_text$selectedName","_text$selectedName2","_text$selectedName2$a","_text$selectedName3","canvasRef","shouldShow","setShouldShow","zoom","setZoom","dataUrl","setDataUrl","scaleModifier","Vector3","isLuxury","hasCrystals","Texture","canvasRefreshCount","setCanvasRefreshCount","normalScale","FullscreenImg","memo","imgRef","onUpdate","x","y","make3dTransformValue","setProperty","QuickPinchZoom","ref","displayName","Canvas","el","gl","preserveDrawingBuffer","Lights","args","visible","Decal","position","preview","transparent","roughness","depthTest","depthWrite","Vector2","_canvasRef$current","MdPinch","_editText$selectedNam","_previewImgRef$curren","mainTextInputRef","previewImgRef","fontFamily","setFontFamily","isVisiblePreview","setIsVisiblePreview","getPatternType","isMinimizedCustomiserNav","materialImgMemo","outlineImgMemo","fabricPatternImgMemo","crystalNormalMapImgMemo","crystalBgImgMemo","crystalBgPatternImgMemo","previewImgDom","canvasText","CanvasTexture","fontUrl","FontFace","load","loadFonts","outlineImg","embroideryPattern","crystalNormalMap","patternImg","zIndex","textPreview","textPreview__imgContainer","NavTextPreviewScene","stepsNavButtons","stepsNavButtons__next","FaArrowRightLong","stepsNavButtons__prev","FaArrowLeftLong","stepsNavButtons__cancel","isClickableNext","isClickablePrev","isVisibleNext","isVisiblePrev","onClickNext","onClickPrev","onClickCancel","onClickSave","popupContainerRef","CancelStepButton","PrevStepButton","NextStepButton","ApplyButton","NavTextInput","forwardRef","inputStyles","textInput","textInputContainer","notifName","setShowNotification","cb","isChecked","setIsChecked","handleDismiss","localStorage","setItem","checked","showEditText","setShowEditText","setStep","updateIsMinimizedCustomiserNav","isPickingOutline","isPickingCrystal","navHeaderRef","noOutlineSelected","noCrystalSelected","hasFinishedAllSteps","hasFinishedStep1","hasFinishedStep2","hasFinishedStep3","hasFinishedStep4","saveAndApplyChecker","alert","applyText","hasApplied","shouldShowConfirmCancelText","getItem","showConfirmCancelPopup","setShowConfirmCancelPopup","shouldShowInfoDisplay","setShouldShowInfoDisplay","cancelText","navCategoryNames","navTextEdit","NavTextPreview","NavTextCategories","NavTextCategoriesItems","handleOnClick","_step","finishedCategories","categoryClassNames","selectedCategoryItem","finishedCategoryItem","CategoryDisplay","NavTextSelect","NavTextNameTypes","NavTextOutline","NavTextFinish","NavTextNavSteps","handleNext","maxStep","handlePrevious","cancelTextHandler","placeText","decalPosition","decalOrientation","InfoDisplay","maxWidth","navHeaderSaveText","DontShowAgain","NavTextsSelection","NavProduction","QuickInfo","RiQuestionLine","NavBoxxerLogo","setIsOpen","scrollCoordinates","setScrollCoordinates","left","top","setFinishedNavs","scrollableRef","minimized","hasActions","isEdittingText","isFullscreen","scrollTo","behavior","toggleOpen","scrollLeft","scrollTop","navTabsComponents","navTab","isFinishedAllNavItems","items","every","isFinishedNavItem","hasRequiredItems","navTabClickHandler","navTab__requiredIcon","nav","layout","transition","stiffness","damping","NavHeader","header","headerAfter","AnimatePresence","content","closed","variants","open","collapsed","NavFitting","NavText","NavSize","NavPart","actions","total","designComplete","setResetCamera","useDesignStore","addingToCart","resetCustomerSelections","resetPopup","confirm","saveDesign","CustomiserCanvas","lazy","setShow","cameraRef","CustomiserNav","Header","clipPath","fillRule","onCameraRef","config","intensity","decay","power","castShadow"],"sourceRoot":""}