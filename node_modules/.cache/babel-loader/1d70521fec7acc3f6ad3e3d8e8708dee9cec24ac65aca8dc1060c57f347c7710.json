{"ast":null,"code":"import Button from'@components/ui/Button';import InfoDisplay from'@components/ui/InfoButton/InfoDisplay';import{usePortalRef}from'@hooks';import{useState}from'react';import{createPortal}from'react-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const NavTextApplyText=_ref=>{let{onClick,styles,preventShow}=_ref;const portalRef=usePortalRef('popupContainer');const[shouldShow,setShouldShow]=useState(false);const applyTextHandler=()=>{onClick&&onClick();if(preventShow)return;setShouldShow(true);};if(!portalRef)return null;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{onClick:applyTextHandler,colour:\"red\",className:styles,children:\"APPLY TEXT\"}),shouldShow&&/*#__PURE__*/createPortal(/*#__PURE__*/_jsxs(InfoDisplay,{cb:()=>{setShouldShow(false);},title:\"Apply Text\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Click where you want the text to go\"}),/*#__PURE__*/_jsx(\"img\",{style:{maxWidth:'100%'},src:\"examples/NavText/sample-apply-text.png\"})]}),portalRef)]});};export default NavTextApplyText;","map":{"version":3,"names":["Button","InfoDisplay","usePortalRef","useState","createPortal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NavTextApplyText","_ref","onClick","styles","preventShow","portalRef","shouldShow","setShouldShow","applyTextHandler","children","colour","className","cb","title","style","maxWidth","src"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavText/NavTextPlaceTextGuide.tsx"],"sourcesContent":["import Button from '@components/ui/Button';\r\nimport InfoDisplay from '@components/ui/InfoButton/InfoDisplay';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface Props {\r\n  onClick?: () => void;\r\n  styles?: string;\r\n  preventShow?: boolean;\r\n}\r\n\r\nconst NavTextApplyText = ({ onClick, styles, preventShow }: Props) => {\r\n  const portalRef = usePortalRef('popupContainer');\r\n  const [shouldShow, setShouldShow] = useState(false);\r\n\r\n  const applyTextHandler = () => {\r\n    onClick && onClick();\r\n    if (preventShow) return;\r\n    setShouldShow(true);\r\n  };\r\n\r\n  if (!portalRef) return null;\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={applyTextHandler} colour='red' className={styles}>\r\n        APPLY TEXT\r\n      </Button>\r\n      {shouldShow &&\r\n        createPortal(\r\n          <InfoDisplay\r\n            cb={() => {\r\n              setShouldShow(false);\r\n            }}\r\n            title='Apply Text'\r\n          >\r\n            <h5>Click where you want the text to go</h5>\r\n            <img style={{ maxWidth: '100%' }} src='examples/NavText/sample-apply-text.png' />\r\n          </InfoDisplay>,\r\n          portalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextApplyText;\r\n"],"mappings":"AAAA,MAAO,CAAAA,MAAM,KAAM,uBAAuB,CAC1C,MAAO,CAAAC,WAAW,KAAM,uCAAuC,CAC/D,OAASC,YAAY,KAAQ,QAAQ,CACrC,OAAiBC,QAAQ,KAAQ,OAAO,CACxC,OAASC,YAAY,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAQzC,KAAM,CAAAC,gBAAgB,CAAGC,IAAA,EAA6C,IAA5C,CAAEC,OAAO,CAAEC,MAAM,CAAEC,WAAmB,CAAC,CAAAH,IAAA,CAC/D,KAAM,CAAAI,SAAS,CAAGd,YAAY,CAAC,gBAAgB,CAAC,CAChD,KAAM,CAACe,UAAU,CAAEC,aAAa,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAgB,gBAAgB,CAAGA,CAAA,GAAM,CAC7BN,OAAO,EAAIA,OAAO,CAAC,CAAC,CACpB,GAAIE,WAAW,CAAE,OACjBG,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAED,GAAI,CAACF,SAAS,CAAE,MAAO,KAAI,CAE3B,mBACER,KAAA,CAAAE,SAAA,EAAAU,QAAA,eACEd,IAAA,CAACN,MAAM,EAACa,OAAO,CAAEM,gBAAiB,CAACE,MAAM,CAAC,KAAK,CAACC,SAAS,CAAER,MAAO,CAAAM,QAAA,CAAC,YAEnE,CAAQ,CAAC,CACRH,UAAU,eACTb,YAAY,cACVI,KAAA,CAACP,WAAW,EACVsB,EAAE,CAAEA,CAAA,GAAM,CACRL,aAAa,CAAC,KAAK,CAAC,CACtB,CAAE,CACFM,KAAK,CAAC,YAAY,CAAAJ,QAAA,eAElBd,IAAA,OAAAc,QAAA,CAAI,qCAAmC,CAAI,CAAC,cAC5Cd,IAAA,QAAKmB,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAO,CAAE,CAACC,GAAG,CAAC,wCAAwC,CAAE,CAAC,EACtE,CAAC,CACdX,SACF,CAAC,EACH,CAAC,CAEP,CAAC,CAED,cAAe,CAAAL,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}