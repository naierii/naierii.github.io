{"version":3,"file":"static/css/main.ab917b9b.css","mappings":"AAIA,oBAGE,mBAGA,wCAKA,qBCbM,CDMN,SAKA,UCRM,CDMN,eANA,oBAWA,+CCKY,CDJZ,kBACA,gBAZA,uBAaA,aAAY,CAPZ,kCAHA,qBAKA,sBAKA,CAEA,yBACE,sBAGF,6BACE,YAIJ,mBACE,wBC3BI,CD8BN,wBACE,wBC1BS,CD6BX,sBACE,wBCpCO,CDuCT,+BAEE,kBC9Bc,CD6Bd,oBAEA,UCxCM,CDyCN,wBAEA,uDACE,kBCrCQ,CDyCZ,+BAOE,mBANA,kBCxCc,CD2Cd,kBAFA,UClDM,CD0DN,eAJA,aAEA,uBALA,kBAMA,kBAJA,WAKA,CAEA,uDACE,kBCtDQ,CDuDR,eAGF,qDACE,mBAGF,qCACE,gBAKF,4EACE,eE/EJ,mBACE,aCIF,KAGE,mCACA,kCAFA,8BADA,QAGA,CAGF,4BAGE,SACA,UAGF,EACE,sBAIA,OASE,2BAA0B,CAP1B,+CFPU,CEQV,gBAGA,cACA,mBAFA,qBADA,qBAIA,qBACA,CAEA,2BAEE,8BADA,WACA,CAGF,yCACE,UFtCE,CEuCF,oCAEA,6DACE,8BF1CA,CE8CJ,uCACE,UFlDE,CEoDF,2DACE,8BFrDA,CEyDJ,qCACE,aFxDA,CEsBJ,OASE,2BAA0B,CAP1B,+CFPU,CEQV,gBAGA,cACA,mBAFA,qBADA,qBAIA,qBACA,CAEA,2BAEE,8BADA,WACA,CAGF,yCACE,UFtCE,CEuCF,oCAEA,6DACE,8BF1CA,CE8CJ,uCACE,UFlDE,CEoDF,2DACE,8BFrDA,CEyDJ,qCACE,aFxDA,CEsBJ,OASE,2BAA0B,CAP1B,+CFPU,CEQV,gBAGA,cACA,mBAFA,qBADA,qBAIA,qBACA,CAEA,2BAEE,8BADA,WACA,CAGF,yCACE,UFtCE,CEuCF,oCAEA,6DACE,8BF1CA,CE8CJ,uCACE,UFlDE,CEoDF,2DACE,8BFrDA,CEyDJ,qCACE,aFxDA,CEsBJ,OASE,2BAA0B,CAP1B,+CFPU,CEQV,gBAGA,cACA,mBAFA,qBADA,qBAIA,qBACA,CAEA,2BAEE,8BADA,WACA,CAGF,yCACE,UFtCE,CEuCF,oCAEA,6DACE,8BF1CA,CE8CJ,uCACE,UFlDE,CEoDF,2DACE,8BFrDA,CEyDJ,qCACE,aFxDA,CEsBJ,OASE,2BAA0B,CAP1B,+CFPU,CEQV,gBAGA,cACA,mBAFA,qBADA,qBAIA,qBACA,CAEA,2BAEE,8BADA,WACA,CAGF,yCACE,UFtCE,CEuCF,oCAEA,6DACE,8BF1CA,CE8CJ,uCACE,UFlDE,CEoDF,2DACE,8BFrDA,CEyDJ,qCACE,aFxDA,CEsBJ,OASE,2BAA0B,CAP1B,+CFPU,CEQV,gBAGA,cACA,mBAFA,qBADA,qBAIA,qBACA,CAEA,2BAEE,8BADA,WACA,CAGF,yCACE,UFtCE,CEuCF,oCAEA,6DACE,8BF1CA,CE8CJ,uCACE,UFlDE,CEoDF,2DACE,8BFrDA,CEyDJ,qCACE,aFxDA,CE6DN,OCjDE,eACA,8DDqDF,OCtDE,kBACA,mED+DF,cAEE,kBAGF,OAEE,mBAGF,EACE,aAEA,eC7EA,mBACA,mEDmFA,YACE,aF5FO,CEiGT,MACE,qBAIJ,OAKE,wCAHA,gBADA,SAGA,eADA,SAEA,CAEA,gBACE,mBAKJ,kEAEE,wBACA,SAIF,mBACE","sources":["components/ui/Button/Button.module.scss","styles/_variables.scss","components/layout/Main/Main.module.scss","index.scss","styles/_helpers.scss"],"sourcesContent":["@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 0;\r\n  text-decoration: none;\r\n  appearance: none;\r\n  cursor: pointer;\r\n  padding: srem.convert(13px) srem.convert(20px) srem.convert(7px);\r\n  color: $white;\r\n  transform: skewX(-5deg);\r\n  background-color: $black;\r\n  font-family: $displayFont;\r\n  font-size: srem.convert(20px);\r\n  font-weight: 900;\r\n  line-height: 1;\r\n\r\n  span {\r\n    transform: skewX(5deg);\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.25;\r\n  }\r\n}\r\n\r\n.red {\r\n  background-color: $red;\r\n}\r\n\r\n.darkGrey {\r\n  background-color: $darkGrey;\r\n}\r\n\r\n.yellow {\r\n  background-color: $yellow;\r\n}\r\n\r\n.containedButton {\r\n  border-radius: srem.convert(8px);\r\n  background: $igorLightGrey;\r\n  color: $white;\r\n  padding: srem.convert(10px) srem.convert(20px);\r\n\r\n  &.clickable {\r\n    background: $igorBlack;\r\n  }\r\n}\r\n\r\n.stepsNavButtons {\r\n  background: $igorLightGrey;\r\n  color: $white;\r\n  padding: 10px 20px;\r\n  border-radius: 8px;\r\n  width: 133px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  visibility: hidden;\r\n  cursor: unset;\r\n\r\n  &.clickable {\r\n    background: $igorBlack;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &.visible {\r\n    visibility: visible;\r\n  }\r\n\r\n  &__next {\r\n    grid-area: right;\r\n  }\r\n  &__prev {\r\n    grid-area: left;\r\n  }\r\n  &__cancel {\r\n    grid-area: left;\r\n  }\r\n}\r\n","// Colours\r\n\r\n$black: #000000;\r\n$yellow: #fcd02f;\r\n$red: #cc0101;\r\n$white: #fff;\r\n$lightGrey: #f2f2f2;\r\n$midGrey: #dddddd;\r\n$grey: #909090;\r\n$darkGrey: #696969;\r\n$green: green;\r\n\r\n$igorBlack: #141414;\r\n$igorGrey: #939393;\r\n$igorLightGrey: #e0e0e0;\r\n$igorClickableColor: #6689c2;\r\n$igorLightGreen: #bdffc7;\r\n\r\n// Fonts\r\n\r\n$defaultFont: roboto, sans-serif;\r\n$displayFont: bebas-neue-by-fontfabric, sans-serif;\r\n","@use '~sass-mq/mq' as *;\r\n\r\n.error {\r\n  padding: 1rem;\r\n}\r\n","@use './styles/mq-settings';\r\n@use '~sass-mq/mq';\r\n@use '~sass-rem' as srem;\r\n\r\n@import './styles/variables';\r\n@import './styles/helpers';\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\nhtml,\r\nbody,\r\n#BoxxerCustomiser {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\n@for $index from 1 through 6 {\r\n  h#{$index},\r\n  .h#{$index} {\r\n    font-family: $displayFont;\r\n    font-weight: 900;\r\n    padding-top: srem.convert(5px);\r\n    margin-top: srem.convert(-5px);\r\n    line-height: 1;\r\n    margin-bottom: 1rem;\r\n    word-break: break-word;\r\n    -webkit-text-stroke-width: 0;\r\n\r\n    .outlined {\r\n      color: transparent;\r\n      -webkit-text-stroke-width: 2px;\r\n    }\r\n\r\n    &.text-color-light {\r\n      color: $white;\r\n      text-shadow: 0 srem.convert(3px) srem.convert(20px) $black;\r\n\r\n      .outlined {\r\n        -webkit-text-stroke-color: $white;\r\n      }\r\n    }\r\n\r\n    &.text-color-dark {\r\n      color: $black;\r\n\r\n      .outlined {\r\n        -webkit-text-stroke-color: $black;\r\n      }\r\n    }\r\n\r\n    &.text-color-red {\r\n      color: $red;\r\n    }\r\n  }\r\n}\r\n\r\nh1,\r\n.h1 {\r\n  @include fluidType(srem.convert(48px), srem.convert(72px));\r\n}\r\n\r\nh2,\r\n.h2 {\r\n  @include fluidType(srem.convert(36px), srem.convert(45px));\r\n}\r\n\r\nh3,\r\n.h3 {\r\n  font-size: srem.convert(28px);\r\n}\r\n\r\nh4,\r\n.h4 {\r\n  font-size: srem.convert(28px);\r\n}\r\n\r\nh5,\r\n.h5 {\r\n  font-size: srem.convert(22px);\r\n}\r\n\r\np {\r\n  margin-top: 0;\r\n\r\n  .text--large & {\r\n    @include fluidType(srem.convert(18px), srem.convert(22px));\r\n  }\r\n}\r\n\r\nul,\r\nol {\r\n  li {\r\n    color: $darkGrey;\r\n  }\r\n}\r\n\r\na {\r\n  > * + * {\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\nbutton {\r\n  border: 0;\r\n  background: none;\r\n  padding: 0;\r\n  cursor: pointer;\r\n  appearance: none;\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n  }\r\n}\r\n\r\n/* Chrome, Safari, Edge, Opera */\r\ninput::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n  -webkit-appearance: none;\r\n  margin: 0;\r\n}\r\n\r\n/* Firefox */\r\ninput[type='number'] {\r\n  -moz-appearance: textfield;\r\n}\r\n","@use '~sass-rem' as srem;\r\n@use 'sass:math';\r\n\r\n// @include fluidType(20rem, 64rem, 1rem, 2rem);\r\n// https://chriskirknielsen.com/blog/modern-fluid-typography-with-clamp/\r\n\r\n@mixin fluidType(\r\n  $min-value,\r\n  $max-value,\r\n  $min-vw: srem.convert(390px),\r\n  $max-vw: srem.convert(1280px),\r\n  $content: null\r\n) {\r\n  $factor: math.div(1, $max-vw - $min-vw) * ($max-value - $min-value);\r\n  $calc-value: unquote('#{ $min-value - ($min-vw * $factor) } + #{ 100vw * $factor }');\r\n\r\n  font-size: $min-value $content;\r\n  font-size: clamp(\r\n      #{if($min-value > $max-value, $max-value, $min-value)},\r\n      #{$calc-value},\r\n      #{if($min-value > $max-value, $min-value, $max-value)}\r\n    )\r\n    $content;\r\n}\r\n\r\n@mixin breakContainer {\r\n  display: block;\r\n  width: 100vw;\r\n  margin-left: calc(50% - 50vw);\r\n  margin-right: calc(50% - 50vw);\r\n}\r\n\r\n@mixin resetBreakContainer {\r\n  display: block;\r\n  width: auto;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n"],"names":[],"sourceRoot":""}