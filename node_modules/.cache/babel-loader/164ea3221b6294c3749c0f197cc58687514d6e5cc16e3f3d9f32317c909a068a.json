{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reian\\\\Desktop\\\\Work\\\\Freelance\\\\Boxxer World\\\\boxxerworld-shopify-frontend\\\\customiser\\\\src\\\\components\\\\three\\\\Model\\\\Model.tsx\",\n  _s = $RefreshSig$();\nimport { useGLTF } from '@react-three/drei';\nimport { Fragment, useEffect } from 'react';\nimport CustomiserMesh from '../CustomiserMesh';\n\n// const parts = [\n//   {\n//     id: 1,\n//     attributes: {\n//       nodeId: 'LeePerrySmith',\n//     },\n//   },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Model = ({\n  model,\n  addNodes\n}) => {\n  _s();\n  var _model$attributes, _model$attributes$mod, _model$attributes$mod2, _model$attributes$mod3, _model$attributes2, _model$attributes2$pa;\n  const {\n    nodes\n  } = useGLTF(model === null || model === void 0 ? void 0 : (_model$attributes = model.attributes) === null || _model$attributes === void 0 ? void 0 : (_model$attributes$mod = _model$attributes.model) === null || _model$attributes$mod === void 0 ? void 0 : (_model$attributes$mod2 = _model$attributes$mod.data) === null || _model$attributes$mod2 === void 0 ? void 0 : (_model$attributes$mod3 = _model$attributes$mod2.attributes) === null || _model$attributes$mod3 === void 0 ? void 0 : _model$attributes$mod3.url);\n  useEffect(() => {\n    delete nodes['Scene'];\n    addNodes(nodes);\n    return () => {\n      addNodes(nodes, true);\n    };\n  }, [nodes]);\n  console.log('model', model);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: model === null || model === void 0 ? void 0 : (_model$attributes2 = model.attributes) === null || _model$attributes2 === void 0 ? void 0 : (_model$attributes2$pa = _model$attributes2.parts) === null || _model$attributes2$pa === void 0 ? void 0 : _model$attributes2$pa.data.map(part => {\n      var _part$attributes;\n      console.log('part.id', part.id);\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: (part === null || part === void 0 ? void 0 : (_part$attributes = part.attributes) === null || _part$attributes === void 0 ? void 0 : _part$attributes.nodeId) && (part.id === '137' || part.id === '139') && /*#__PURE__*/_jsxDEV(CustomiserMesh, {\n          node: nodes[part.attributes.nodeId],\n          nodeId: part.attributes.nodeId\n        }, part.attributes.nodeId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, part.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(Model, \"5e8Y0eJS7tV3gODAmp9xOS0osX0=\", false, function () {\n  return [useGLTF];\n});\n_c = Model;\nexport default Model;\nvar _c;\n$RefreshReg$(_c, \"Model\");","map":{"version":3,"names":["useGLTF","Fragment","useEffect","CustomiserMesh","jsxDEV","_jsxDEV","_Fragment","Model","model","addNodes","_s","_model$attributes","_model$attributes$mod","_model$attributes$mod2","_model$attributes$mod3","_model$attributes2","_model$attributes2$pa","nodes","attributes","data","url","console","log","children","parts","map","part","_part$attributes","id","nodeId","node","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/three/Model/Model.tsx"],"sourcesContent":["import { Maybe, ModelFragment } from '@graphql/generated/graphql';\r\nimport { useGLTF } from '@react-three/drei';\r\nimport { Fragment, useEffect } from 'react';\r\nimport { Material, Mesh } from 'three';\r\nimport { GLTF } from 'three-stdlib';\r\nimport CustomiserMesh from '../CustomiserMesh';\r\nimport { ModelMergeNodes } from '../ModelMerge/ModelMerge';\r\nexport interface CustomiserModelProps {\r\n  model?: Maybe<ModelFragment>;\r\n  addNodes: (newNodes: ModelMergeNodes, remove?: boolean) => void;\r\n}\r\n\r\n// const parts = [\r\n//   {\r\n//     id: 1,\r\n//     attributes: {\r\n//       nodeId: 'LeePerrySmith',\r\n//     },\r\n//   },\r\n// ];\r\n\r\ntype GLTFResult = GLTF & {\r\n  nodes: { [name: string]: Mesh };\r\n  materials: { [name: string]: Material };\r\n};\r\n\r\nconst Model = ({ model, addNodes }: CustomiserModelProps) => {\r\n  const { nodes } = useGLTF(\r\n    model?.attributes?.model?.data?.attributes?.url as string,\r\n  ) as unknown as GLTFResult;\r\n\r\n  useEffect(() => {\r\n    delete nodes['Scene'];\r\n    addNodes(nodes);\r\n\r\n    return () => {\r\n      addNodes(nodes, true);\r\n    };\r\n  }, [nodes]);\r\n\r\n  console.log('model', model);\r\n\r\n  return (\r\n    <>\r\n      {model?.attributes?.parts?.data.map((part) => {\r\n        console.log('part.id', part.id);\r\n        return (\r\n          <Fragment key={part.id}>\r\n            {part?.attributes?.nodeId && (part.id === '137' || part.id === '139') && (\r\n              <CustomiserMesh\r\n                key={part.attributes.nodeId}\r\n                node={nodes[part.attributes.nodeId]}\r\n                nodeId={part.attributes.nodeId}\r\n              />\r\n            )}\r\n          </Fragment>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n"],"mappings":";;AACA,SAASA,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAG3C,OAAOC,cAAc,MAAM,mBAAmB;;AAO9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAJ,QAAA,IAAAK,SAAA;AAOA,MAAMC,KAAK,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAA+B,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,kBAAA,EAAAC,qBAAA;EAC3D,MAAM;IAAEC;EAAM,CAAC,GAAGjB,OAAO,CACvBQ,KAAK,aAALA,KAAK,wBAAAG,iBAAA,GAALH,KAAK,CAAEU,UAAU,cAAAP,iBAAA,wBAAAC,qBAAA,GAAjBD,iBAAA,CAAmBH,KAAK,cAAAI,qBAAA,wBAAAC,sBAAA,GAAxBD,qBAAA,CAA0BO,IAAI,cAAAN,sBAAA,wBAAAC,sBAAA,GAA9BD,sBAAA,CAAgCK,UAAU,cAAAJ,sBAAA,uBAA1CA,sBAAA,CAA4CM,GAC9C,CAA0B;EAE1BlB,SAAS,CAAC,MAAM;IACd,OAAOe,KAAK,CAAC,OAAO,CAAC;IACrBR,QAAQ,CAACQ,KAAK,CAAC;IAEf,OAAO,MAAM;MACXR,QAAQ,CAACQ,KAAK,EAAE,IAAI,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEXI,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEd,KAAK,CAAC;EAE3B,oBACEH,OAAA,CAAAC,SAAA;IAAAiB,QAAA,EACGf,KAAK,aAALA,KAAK,wBAAAO,kBAAA,GAALP,KAAK,CAAEU,UAAU,cAAAH,kBAAA,wBAAAC,qBAAA,GAAjBD,kBAAA,CAAmBS,KAAK,cAAAR,qBAAA,uBAAxBA,qBAAA,CAA0BG,IAAI,CAACM,GAAG,CAAEC,IAAI,IAAK;MAAA,IAAAC,gBAAA;MAC5CN,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEI,IAAI,CAACE,EAAE,CAAC;MAC/B,oBACEvB,OAAA,CAACJ,QAAQ;QAAAsB,QAAA,EACN,CAAAG,IAAI,aAAJA,IAAI,wBAAAC,gBAAA,GAAJD,IAAI,CAAER,UAAU,cAAAS,gBAAA,uBAAhBA,gBAAA,CAAkBE,MAAM,MAAKH,IAAI,CAACE,EAAE,KAAK,KAAK,IAAIF,IAAI,CAACE,EAAE,KAAK,KAAK,CAAC,iBACnEvB,OAAA,CAACF,cAAc;UAEb2B,IAAI,EAAEb,KAAK,CAACS,IAAI,CAACR,UAAU,CAACW,MAAM,CAAE;UACpCA,MAAM,EAAEH,IAAI,CAACR,UAAU,CAACW;QAAO,GAF1BH,IAAI,CAACR,UAAU,CAACW,MAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAG5B;MACF,GAPYR,IAAI,CAACE,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQZ,CAAC;IAEf,CAAC;EAAC,gBACF,CAAC;AAEP,CAAC;AAACxB,EAAA,CAlCIH,KAAK;EAAA,QACSP,OAAO;AAAA;AAAAmC,EAAA,GADrB5B,KAAK;AAoCX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}