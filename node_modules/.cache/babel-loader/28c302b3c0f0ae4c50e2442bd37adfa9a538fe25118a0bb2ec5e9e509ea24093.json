{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reian\\\\Desktop\\\\Work\\\\Freelance\\\\Boxxer World\\\\boxxerworld-shopify-frontend\\\\customiser\\\\src\\\\components\\\\nav\\\\NavText\\\\NavTextsSelection.tsx\",\n  _s = $RefreshSig$();\nimport Button from '@components/ui/Button';\nimport { useCustomiserStore } from '@store/customiser';\nimport NavButtons from '../NavButtons';\nimport styles from './NavText.module.scss';\nimport NavTextText from './NavTextText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavTextsSelection = ({\n  onAddTextClicked,\n  onTextSelected\n}) => {\n  _s();\n  const texts = useCustomiserStore(state => state.texts);\n  const toggleTextVisibility = isVisible => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.navTextsSelection,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.titleText,\n        children: \"Your Texts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colour: \"red\",\n        onClick: onAddTextClicked,\n        children: \"Add Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), texts.map(t => /*#__PURE__*/_jsxDEV(NavTextText, {\n      text: t,\n      setShowSelector: onTextSelected\n    }, t.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(NavButtons, {\n      confirmText: \"You can still add more text. Save anyway?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(NavTextsSelection, \"aRssCOD5epnRbLt+1w950syRkdg=\", false, function () {\n  return [useCustomiserStore];\n});\n_c = NavTextsSelection;\nexport default NavTextsSelection;\nvar _c;\n$RefreshReg$(_c, \"NavTextsSelection\");","map":{"version":3,"names":["Button","useCustomiserStore","NavButtons","styles","NavTextText","jsxDEV","_jsxDEV","NavTextsSelection","onAddTextClicked","onTextSelected","_s","texts","state","toggleTextVisibility","isVisible","className","navTextsSelection","children","title","titleText","fileName","_jsxFileName","lineNumber","columnNumber","colour","onClick","map","t","text","setShowSelector","key","confirmText","_c","$RefreshReg$"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavText/NavTextsSelection.tsx"],"sourcesContent":["import { FC } from 'react';\r\n\r\nimport Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextText from './NavTextText';\r\n\r\ntype NavTextsSelectionProps = {\r\n  onAddTextClicked?: () => void;\r\n  onTextSelected?: () => void;\r\n};\r\n\r\nconst NavTextsSelection: FC<NavTextsSelectionProps> = ({ onAddTextClicked, onTextSelected }) => {\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n\r\n  const toggleTextVisibility = (isVisible: boolean) => {};\r\n  return (\r\n    <div className={styles.navTextsSelection}>\r\n      <div className={styles.title}>\r\n        <h3 className={styles.titleText}>Your Texts</h3>\r\n\r\n        <Button colour='red' onClick={onAddTextClicked}>\r\n          Add Text\r\n        </Button>\r\n      </div>\r\n\r\n      {texts.map((t) => (\r\n        <NavTextText key={t.key} text={t} setShowSelector={onTextSelected} />\r\n      ))}\r\n\r\n      <NavButtons confirmText='You can still add more text. Save anyway?'></NavButtons>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextsSelection;\r\n"],"mappings":";;AAEA,OAAOA,MAAM,MAAM,uBAAuB;AAC1C,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,iBAA6C,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC9F,MAAMC,KAAK,GAAGV,kBAAkB,CAAEW,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EAExD,MAAME,oBAAoB,GAAIC,SAAkB,IAAK,CAAC,CAAC;EACvD,oBACER,OAAA;IAAKS,SAAS,EAAEZ,MAAM,CAACa,iBAAkB;IAAAC,QAAA,gBACvCX,OAAA;MAAKS,SAAS,EAAEZ,MAAM,CAACe,KAAM;MAAAD,QAAA,gBAC3BX,OAAA;QAAIS,SAAS,EAAEZ,MAAM,CAACgB,SAAU;QAAAF,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEhDjB,OAAA,CAACN,MAAM;QAACwB,MAAM,EAAC,KAAK;QAACC,OAAO,EAAEjB,gBAAiB;QAAAS,QAAA,EAAC;MAEhD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELZ,KAAK,CAACe,GAAG,CAAEC,CAAC,iBACXrB,OAAA,CAACF,WAAW;MAAawB,IAAI,EAAED,CAAE;MAACE,eAAe,EAAEpB;IAAe,GAAhDkB,CAAC,CAACG,GAAG;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6C,CACrE,CAAC,eAEFjB,OAAA,CAACJ,UAAU;MAAC6B,WAAW,EAAC;IAA2C;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEV,CAAC;AAACb,EAAA,CArBIH,iBAA6C;EAAA,QACnCN,kBAAkB;AAAA;AAAA+B,EAAA,GAD5BzB,iBAA6C;AAuBnD,eAAeA,iBAAiB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}