{"ast":null,"code":"import{create}from'zustand';import createContext from'zustand/context';import produce from'immer';import{devtools}from'zustand/middleware';import{uniqBy}from'lodash';const uniqueColourGroups=array=>uniqBy(array,'id');const uniqueMaterialTypes=array=>uniqBy(array,'id');const uniqueMaterials=array=>uniqBy(array,'id');const initialState={colourGroups:[],materialTypes:[],materials:[]};const createMaterialGroup=(set,get)=>({...initialState,filteredMaterials:()=>{const materials=get().materials;const colourGroup=get().selectedColourGroup;const filteredMaterials=materials.filter(m=>{var _m$attributes,_m$attributes$colourG;return(_m$attributes=m.attributes)===null||_m$attributes===void 0?void 0:(_m$attributes$colourG=_m$attributes.colourGroups)===null||_m$attributes$colourG===void 0?void 0:_m$attributes$colourG.data.find(g=>g.id===(colourGroup===null||colourGroup===void 0?void 0:colourGroup.id));});return filteredMaterials;},resetMaterialGroup:()=>set(initialState),setMaterials:(materials,materialType,colourGroup)=>{set(produce(state=>{const colourGroups=materials.flatMap(d=>{var _d$attributes,_d$attributes$colourG;return(_d$attributes=d.attributes)===null||_d$attributes===void 0?void 0:(_d$attributes$colourG=_d$attributes.colourGroups)===null||_d$attributes$colourG===void 0?void 0:_d$attributes$colourG.data;});state.colourGroups=uniqueColourGroups(colourGroups);if(colourGroup){state.selectedColourGroup=colourGroup;}else{state.selectedColourGroup=state.colourGroups[0];}const materialTypes=materials.filter(m=>{var _m$attributes2,_m$attributes2$colour;return(_m$attributes2=m.attributes)===null||_m$attributes2===void 0?void 0:(_m$attributes2$colour=_m$attributes2.colourGroups)===null||_m$attributes2$colour===void 0?void 0:_m$attributes2$colour.data.find(g=>{var _state$selectedColour;return g.id===((_state$selectedColour=state.selectedColourGroup)===null||_state$selectedColour===void 0?void 0:_state$selectedColour.id);});}).map(m=>{var _m$attributes3,_m$attributes3$type;return(_m$attributes3=m.attributes)===null||_m$attributes3===void 0?void 0:(_m$attributes3$type=_m$attributes3.type)===null||_m$attributes3$type===void 0?void 0:_m$attributes3$type.data;});state.materialTypes=uniqueMaterialTypes(materialTypes);if(materialType){state.selectedMaterialType=materialType;}else{state.selectedMaterialType=state.materialTypes[0];}state.materials=uniqueMaterials(materials);}));},setColourGroup:colourGroup=>{set(produce(state=>{state.selectedColourGroup=colourGroup;const materialTypes=state.materials.filter(m=>{var _m$attributes4,_m$attributes4$colour;return(_m$attributes4=m.attributes)===null||_m$attributes4===void 0?void 0:(_m$attributes4$colour=_m$attributes4.colourGroups)===null||_m$attributes4$colour===void 0?void 0:_m$attributes4$colour.data.find(g=>{var _state$selectedColour2;return g.id===((_state$selectedColour2=state.selectedColourGroup)===null||_state$selectedColour2===void 0?void 0:_state$selectedColour2.id);});}).map(m=>{var _m$attributes5,_m$attributes5$type;return(_m$attributes5=m.attributes)===null||_m$attributes5===void 0?void 0:(_m$attributes5$type=_m$attributes5.type)===null||_m$attributes5$type===void 0?void 0:_m$attributes5$type.data;});state.materialTypes=uniqueMaterialTypes(materialTypes);}));},setMaterialType:materialType=>{set(produce(state=>{state.selectedMaterialType=materialType;}));}});export const{Provider,useStore:useMaterialGroupStore}=createContext();export const createStore=()=>create()(devtools(createMaterialGroup));","map":{"version":3,"names":["create","createContext","produce","devtools","uniqBy","uniqueColourGroups","array","uniqueMaterialTypes","uniqueMaterials","initialState","colourGroups","materialTypes","materials","createMaterialGroup","set","get","filteredMaterials","colourGroup","selectedColourGroup","filter","m","_m$attributes","_m$attributes$colourG","attributes","data","find","g","id","resetMaterialGroup","setMaterials","materialType","state","flatMap","d","_d$attributes","_d$attributes$colourG","_m$attributes2","_m$attributes2$colour","_state$selectedColour","map","_m$attributes3","_m$attributes3$type","type","selectedMaterialType","setColourGroup","_m$attributes4","_m$attributes4$colour","_state$selectedColour2","_m$attributes5","_m$attributes5$type","setMaterialType","Provider","useStore","useMaterialGroupStore","createStore"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/MaterialGroup/MaterialGroupState.ts"],"sourcesContent":["import { create, StateCreator, StoreApi } from 'zustand';\r\nimport createContext from 'zustand/context';\r\nimport produce from 'immer';\r\nimport { devtools } from 'zustand/middleware';\r\nimport {\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n} from '@graphql/generated/graphql';\r\nimport { uniqBy } from 'lodash';\r\n\r\nconst uniqueColourGroups = (array: MaterialColourGroupEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterialTypes = (array: MaterialTypeEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterials = (array: MaterialEntity[]) => uniqBy(array, 'id');\r\ninterface MaterialGroupInitialState {\r\n  colourGroups: MaterialColourGroupEntity[];\r\n  materialTypes: MaterialTypeEntity[];\r\n  materials: MaterialEntity[];\r\n  selectedColourGroup?: MaterialColourGroupEntity;\r\n  selectedMaterialType?: MaterialTypeEntity;\r\n}\r\nexport interface MaterialGroupState extends MaterialGroupInitialState {\r\n  resetMaterialGroup: () => void;\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => void;\r\n  filteredMaterials: () => MaterialEntity[];\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => void;\r\n  setMaterialType: (materialType: MaterialTypeEntity) => void;\r\n}\r\n\r\nconst initialState: MaterialGroupInitialState = {\r\n  colourGroups: [],\r\n  materialTypes: [],\r\n  materials: [],\r\n};\r\n\r\nconst createMaterialGroup: StateCreator<MaterialGroupState, [['zustand/devtools', never]], []> = (\r\n  set,\r\n  get,\r\n) => ({\r\n  ...initialState,\r\n  filteredMaterials: () => {\r\n    const materials = get().materials;\r\n    const colourGroup = get().selectedColourGroup;\r\n    const filteredMaterials = materials.filter((m) =>\r\n      m.attributes?.colourGroups?.data.find((g) => g.id === colourGroup?.id),\r\n    );\r\n    return filteredMaterials;\r\n  },\r\n  resetMaterialGroup: () => set(initialState),\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        const colourGroups = materials.flatMap(\r\n          (d) => d.attributes?.colourGroups?.data,\r\n        ) as MaterialColourGroupEntity[];\r\n        state.colourGroups = uniqueColourGroups(colourGroups);\r\n        if (colourGroup) {\r\n          state.selectedColourGroup = colourGroup;\r\n        } else {\r\n          state.selectedColourGroup = state.colourGroups[0];\r\n        }\r\n\r\n        const materialTypes = materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n\r\n        if (materialType) {\r\n          state.selectedMaterialType = materialType;\r\n        } else {\r\n          state.selectedMaterialType = state.materialTypes[0];\r\n        }\r\n\r\n        state.materials = uniqueMaterials(materials);\r\n      }),\r\n    );\r\n  },\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedColourGroup = colourGroup;\r\n        const materialTypes = state.materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n      }),\r\n    );\r\n  },\r\n  setMaterialType: (materialType: MaterialTypeEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedMaterialType = materialType;\r\n      }),\r\n    );\r\n  },\r\n});\r\n\r\nexport const { Provider, useStore: useMaterialGroupStore } =\r\n  createContext<StoreApi<MaterialGroupState>>();\r\n\r\nexport const createStore = () => create<MaterialGroupState>()(devtools(createMaterialGroup));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}