{"ast":null,"code":"import ReactExports from 'react';\nimport { useStoreWithEqualityFn } from 'zustand/traditional';\nconst {\n  createElement,\n  createContext: reactCreateContext,\n  useContext,\n  useMemo,\n  useRef\n} = ReactExports;\nfunction createContext() {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\"[DEPRECATED] `context` will be removed in a future version. Instead use `import { createStore, useStore } from 'zustand'`. See: https://github.com/pmndrs/zustand/discussions/1180.\");\n  }\n  const ZustandContext = reactCreateContext(void 0);\n  const Provider = ({\n    createStore,\n    children\n  }) => {\n    const storeRef = useRef();\n    if (!storeRef.current) {\n      storeRef.current = createStore();\n    }\n    return createElement(ZustandContext.Provider, {\n      value: storeRef.current\n    }, children);\n  };\n  const useContextStore = (selector, equalityFn) => {\n    const store = useContext(ZustandContext);\n    if (!store) {\n      throw new Error(\"Seems like you have not used zustand provider as an ancestor.\");\n    }\n    return useStoreWithEqualityFn(store, selector, equalityFn);\n  };\n  const useStoreApi = () => {\n    const store = useContext(ZustandContext);\n    if (!store) {\n      throw new Error(\"Seems like you have not used zustand provider as an ancestor.\");\n    }\n    return useMemo(() => ({\n      ...store\n    }), [store]);\n  };\n  return {\n    Provider,\n    useStore: useContextStore,\n    useStoreApi\n  };\n}\nexport { createContext as default };","map":{"version":3,"names":["ReactExports","useStoreWithEqualityFn","createElement","createContext","reactCreateContext","useContext","useMemo","useRef","import","meta","env","MODE","console","warn","ZustandContext","Provider","createStore","children","storeRef","current","value","useContextStore","selector","equalityFn","store","Error","useStoreApi","useStore","default"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/node_modules/zustand/esm/context.mjs"],"sourcesContent":["import ReactExports from 'react';\nimport { useStoreWithEqualityFn } from 'zustand/traditional';\n\nconst {\n  createElement,\n  createContext: reactCreateContext,\n  useContext,\n  useMemo,\n  useRef\n} = ReactExports;\nfunction createContext() {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] `context` will be removed in a future version. Instead use `import { createStore, useStore } from 'zustand'`. See: https://github.com/pmndrs/zustand/discussions/1180.\"\n    );\n  }\n  const ZustandContext = reactCreateContext(void 0);\n  const Provider = ({\n    createStore,\n    children\n  }) => {\n    const storeRef = useRef();\n    if (!storeRef.current) {\n      storeRef.current = createStore();\n    }\n    return createElement(\n      ZustandContext.Provider,\n      { value: storeRef.current },\n      children\n    );\n  };\n  const useContextStore = (selector, equalityFn) => {\n    const store = useContext(ZustandContext);\n    if (!store) {\n      throw new Error(\n        \"Seems like you have not used zustand provider as an ancestor.\"\n      );\n    }\n    return useStoreWithEqualityFn(\n      store,\n      selector,\n      equalityFn\n    );\n  };\n  const useStoreApi = () => {\n    const store = useContext(ZustandContext);\n    if (!store) {\n      throw new Error(\n        \"Seems like you have not used zustand provider as an ancestor.\"\n      );\n    }\n    return useMemo(() => ({ ...store }), [store]);\n  };\n  return {\n    Provider,\n    useStore: useContextStore,\n    useStoreApi\n  };\n}\n\nexport { createContext as default };\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,OAAO;AAChC,SAASC,sBAAsB,QAAQ,qBAAqB;AAE5D,MAAM;EACJC,aAAa;EACbC,aAAa,EAAEC,kBAAkB;EACjCC,UAAU;EACVC,OAAO;EACPC;AACF,CAAC,GAAGP,YAAY;AAChB,SAASG,aAAaA,CAAA,EAAG;EACvB,IAAI,CAACK,MAAM,CAACC,IAAI,CAACC,GAAG,GAAGF,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,IAAI,GAAG,KAAK,CAAC,MAAM,YAAY,EAAE;IACtEC,OAAO,CAACC,IAAI,CACV,qLACF,CAAC;EACH;EACA,MAAMC,cAAc,GAAGV,kBAAkB,CAAC,KAAK,CAAC,CAAC;EACjD,MAAMW,QAAQ,GAAGA,CAAC;IAChBC,WAAW;IACXC;EACF,CAAC,KAAK;IACJ,MAAMC,QAAQ,GAAGX,MAAM,CAAC,CAAC;IACzB,IAAI,CAACW,QAAQ,CAACC,OAAO,EAAE;MACrBD,QAAQ,CAACC,OAAO,GAAGH,WAAW,CAAC,CAAC;IAClC;IACA,OAAOd,aAAa,CAClBY,cAAc,CAACC,QAAQ,EACvB;MAAEK,KAAK,EAAEF,QAAQ,CAACC;IAAQ,CAAC,EAC3BF,QACF,CAAC;EACH,CAAC;EACD,MAAMI,eAAe,GAAGA,CAACC,QAAQ,EAAEC,UAAU,KAAK;IAChD,MAAMC,KAAK,GAAGnB,UAAU,CAACS,cAAc,CAAC;IACxC,IAAI,CAACU,KAAK,EAAE;MACV,MAAM,IAAIC,KAAK,CACb,+DACF,CAAC;IACH;IACA,OAAOxB,sBAAsB,CAC3BuB,KAAK,EACLF,QAAQ,EACRC,UACF,CAAC;EACH,CAAC;EACD,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMF,KAAK,GAAGnB,UAAU,CAACS,cAAc,CAAC;IACxC,IAAI,CAACU,KAAK,EAAE;MACV,MAAM,IAAIC,KAAK,CACb,+DACF,CAAC;IACH;IACA,OAAOnB,OAAO,CAAC,OAAO;MAAE,GAAGkB;IAAM,CAAC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAC/C,CAAC;EACD,OAAO;IACLT,QAAQ;IACRY,QAAQ,EAAEN,eAAe;IACzBK;EACF,CAAC;AACH;AAEA,SAASvB,aAAa,IAAIyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}