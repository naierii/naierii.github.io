{"ast":null,"code":"import styles from'./NavText.module.scss';import{useCustomiserStore}from'@store/customiser';import{forwardRef,useEffect,useState}from'react';import cn from'classnames';import inputStyles from'./../../ui/FormInput/FormInput.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";const NavTextInput=/*#__PURE__*/forwardRef((_ref,ref)=>{let{editText}=_ref;const[text,setText]=useState(editText===null||editText===void 0?void 0:editText.text);const{updateText,addText}=useCustomiserStore(state=>state);const setTextOnChange=e=>{setText(e.target.value);};const rootClassName=cn(inputStyles.root,styles.textInput);useEffect(()=>{if(editText!==null&&editText!==void 0&&editText.key){updateText(editText.key,{text,// font: font.url,\nedit:true});}else{if(text){addText({text});}}},[text]);useEffect(()=>{console.log('ref',ref);},[ref]);return/*#__PURE__*/_jsx(\"div\",{className:styles.textInputContainer,children:/*#__PURE__*/_jsx(\"div\",{className:rootClassName,children:/*#__PURE__*/_jsx(\"input\",{className:inputStyles.input,onChange:setTextOnChange,ref:ref,placeholder:\"Type text here...\",value:editText===null||editText===void 0?void 0:editText.text})})});});NavTextInput.displayName='NavTextInput';export default NavTextInput;","map":{"version":3,"names":["styles","useCustomiserStore","forwardRef","useEffect","useState","cn","inputStyles","jsx","_jsx","NavTextInput","_ref","ref","editText","text","setText","updateText","addText","state","setTextOnChange","e","target","value","rootClassName","root","textInput","key","edit","console","log","className","textInputContainer","children","input","onChange","placeholder","displayName"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavText/NavTextInput.tsx"],"sourcesContent":["import FormInput from '@components/ui/FormInput';\r\nimport styles from './NavText.module.scss';\r\nimport { useCustomiserStore, type TextCustomiser } from '@store/customiser';\r\nimport { LegacyRef, forwardRef, useEffect, useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport inputStyles from './../../ui/FormInput/FormInput.module.scss';\r\n\r\ninterface NavTextInputProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextInput = forwardRef(({ editText }: NavTextInputProps, ref) => {\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const { updateText, addText } = useCustomiserStore((state) => state);\r\n\r\n  const setTextOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const rootClassName = cn(inputStyles.root, styles.textInput);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        // font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text });\r\n      }\r\n    }\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    console.log('ref', ref);\r\n  }, [ref]);\r\n\r\n  return (\r\n    <div className={styles.textInputContainer}>\r\n      {/* <FormInput\r\n        ref={inputRef}\r\n        className={styles.textInput}\r\n        placeholder='Type text here...'\r\n        value={editText?.text}\r\n        onChange={setTextOnChange}\r\n      /> */}\r\n      <div className={rootClassName}>\r\n        <input\r\n          className={inputStyles.input}\r\n          onChange={setTextOnChange}\r\n          ref={ref as LegacyRef<HTMLInputElement> | undefined}\r\n          placeholder='Type text here...'\r\n          value={editText?.text}\r\n        />\r\n        {/* <label className={inputStyles.label}>Type text here</label> */}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nNavTextInput.displayName = 'NavTextInput';\r\n\r\nexport default NavTextInput;\r\n"],"mappings":"AACA,MAAO,CAAAA,MAAM,KAAM,uBAAuB,CAC1C,OAASC,kBAAkB,KAA6B,mBAAmB,CAC3E,OAAoBC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClE,MAAO,CAAAC,EAAE,KAAM,YAAY,CAE3B,MAAO,CAAAC,WAAW,KAAM,4CAA4C,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAMrE,KAAM,CAAAC,YAAY,cAAGP,UAAU,CAAC,CAAAQ,IAAA,CAAkCC,GAAG,GAAK,IAAzC,CAAEC,QAA4B,CAAC,CAAAF,IAAA,CAC9D,KAAM,CAACG,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAqBQ,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEC,IAAI,CAAC,CACpE,KAAM,CAAEE,UAAU,CAAEC,OAAQ,CAAC,CAAGf,kBAAkB,CAAEgB,KAAK,EAAKA,KAAK,CAAC,CAEpE,KAAM,CAAAC,eAAe,CAAIC,CAAsC,EAAK,CAClEL,OAAO,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACzB,CAAC,CAED,KAAM,CAAAC,aAAa,CAAGjB,EAAE,CAACC,WAAW,CAACiB,IAAI,CAAEvB,MAAM,CAACwB,SAAS,CAAC,CAE5DrB,SAAS,CAAC,IAAM,CACd,GAAIS,QAAQ,SAARA,QAAQ,WAARA,QAAQ,CAAEa,GAAG,CAAE,CACjBV,UAAU,CAACH,QAAQ,CAACa,GAAG,CAAE,CACvBZ,IAAI,CACJ;AACAa,IAAI,CAAE,IACR,CAAC,CAAC,CACJ,CAAC,IAAM,CACL,GAAIb,IAAI,CAAE,CACRG,OAAO,CAAC,CAAEH,IAAK,CAAC,CAAC,CACnB,CACF,CACF,CAAC,CAAE,CAACA,IAAI,CAAC,CAAC,CAEVV,SAAS,CAAC,IAAM,CACdwB,OAAO,CAACC,GAAG,CAAC,KAAK,CAAEjB,GAAG,CAAC,CACzB,CAAC,CAAE,CAACA,GAAG,CAAC,CAAC,CAET,mBACEH,IAAA,QAAKqB,SAAS,CAAE7B,MAAM,CAAC8B,kBAAmB,CAAAC,QAAA,cAQxCvB,IAAA,QAAKqB,SAAS,CAAEP,aAAc,CAAAS,QAAA,cAC5BvB,IAAA,UACEqB,SAAS,CAAEvB,WAAW,CAAC0B,KAAM,CAC7BC,QAAQ,CAAEf,eAAgB,CAC1BP,GAAG,CAAEA,GAA+C,CACpDuB,WAAW,CAAC,mBAAmB,CAC/Bb,KAAK,CAAET,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEC,IAAK,CACvB,CAAC,CAEC,CAAC,CACH,CAAC,CAEV,CAAC,CAAC,CAEFJ,YAAY,CAAC0B,WAAW,CAAG,cAAc,CAEzC,cAAe,CAAA1B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}