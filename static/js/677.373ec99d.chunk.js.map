{"version":3,"file":"static/js/677.373ec99d.chunk.js","mappings":"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","sources":["hooks/useHydration/useHydration.ts","hooks/usePortalRef/usePortalRef.ts","webpack://boxxerworld-customiser/./src/components/nav/NavButtons/NavButtons.module.scss?b4ae","webpack://boxxerworld-customiser/./src/components/ui/DontShowAgain/DontShowAgain.module.scss?2c56","components/ui/DontShowAgain/DontShowAgain.tsx","components/ui/Button/ContainedButton.tsx","components/nav/NavButtons/NavButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFitting/NavFitting.module.scss?96df","components/ui/Button/CapsuleNavButton.tsx","components/ui/Button/ContainedNavButton.tsx","components/nav/NavFitting/NavFitting.tsx","components/ui/Image/getSrcSets.ts","webpack://boxxerworld-customiser/./src/components/ui/Image/Image.module.scss?e41e","components/ui/Image/Image.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFlags/NavFlags.module.scss?2098","components/nav/NavFlags/NavFlagsSelect.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavDecalAdjust/NavDecalAdjust.module.scss?c425","components/nav/NavDecalAdjust/NavDecalAdjust.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavEditButtons/NavEditButtons.module.scss?6ae0","components/nav/NavEditButtons/NavEditButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavOptionEdit/NavOptionEdit.module.scss?d15e","components/nav/NavOptionEdit/NavOptionEdit.tsx","components/nav/NavFlags/NavFlagsFlag.tsx","components/nav/NavFlags/NavFlags.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavHeader/NavHeader.module.scss?a403","components/nav/NavHeader/NavHeader.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavImages/NavImages.module.scss?0415","components/nav/NavImages/NavImagesImage.tsx","components/nav/NavImages/NavImagesUpload.tsx","components/nav/NavImages/NavImagesSelect.tsx","components/nav/NavImages/NavImages.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/MaterialGroup.module.scss?bec8","components/nav/MaterialGroup/MaterialGroupState.ts","components/nav/MaterialGroup/Material.tsx","components/nav/MaterialGroup/MaterialType.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/SelectedMaterialInfo.module.scss?ad46","components/nav/MaterialGroup/SelectedMaterialInfo.tsx","components/nav/MaterialGroup/test-material.ts","components/nav/MaterialGroup/MaterialGroup.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavPart/NavPart.module.scss?e3f3","components/ui/Button/TogglePillButton.tsx","components/nav/NavPart/NavPart.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormInput/FormInput.module.scss?a3cb","components/ui/FormInput/FormInput.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormSelect/FormSelect.module.scss?5df1","components/ui/FormSelect/FormSelect.tsx","services/size.ts","webpack://boxxerworld-customiser/./src/components/nav/NavSize/NavSize.module.scss?68ae","components/nav/NavSize/NavSize.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavText.module.scss?7ead","components/ui/Price/Price.module.scss","components/ui/Price/Price.tsx","components/nav/NavText/NavTextFinish.tsx","components/nav/NavText/NavTextNameTypes.tsx","components/nav/NavText/NavTextOutline.tsx","components/nav/NavText/NavTextSelect.tsx","components/nav/NavText/NavTextText.tsx","components/nav/NavText/NavTextsSelection.tsx","lib/canvas.ts","lib/img.util.ts","webpack://boxxerworld-customiser/./src/components/three/CustomiserCanvas/NavTextScene.module.scss?f04f","components/three/CustomiserCanvas/NavTextScene.tsx","components/nav/NavText/NavTextPreview.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavTextCategories.module.scss?c8c9","components/nav/NavText/NavTextCategories.tsx","components/ui/Button/NextStepButton.tsx","components/ui/Button/PrevStepButton.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavTextNavSteps.module.scss?13e7","components/ui/Button/CancelStepButton.tsx","components/ui/Button/ApplyButton.tsx","components/nav/NavText/NavTextNavSteps.tsx","components/nav/NavText/NavTextInput.tsx","webpack://boxxerworld-customiser/./src/components/ui/InfoButton/InfoButton.module.scss?0cd7","components/ui/InfoButton/InfoDisplay.tsx","components/nav/NavText/NavText.tsx","webpack://boxxerworld-customiser/./src/components/nav/CustomiserNav/CustomiserNav.module.scss?394a","components/nav/NavHeader/NavHeaderScroll.tsx","components/nav/CustomiserNav/CustomiserNav.tsx","webpack://boxxerworld-customiser/./src/components/layout/Header/Header.module.scss?47aa","components/layout/Header/Header.tsx","webpack://boxxerworld-customiser/./src/components/layout/Customiser/Customiser.module.scss?e94f","components/layout/Customiser/Customiser.tsx","components/three/Lights/Lights.tsx"],"sourcesContent":["import { useCustomiserStore } from '@store/customiser';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const useHydration = () => {\r\n  const [hydrated, setHydrated] = useState(useCustomiserStore.persist.hasHydrated);\r\n\r\n  useEffect(() => {\r\n    const unsubHydrate = useCustomiserStore.persist.onHydrate(() => setHydrated(false)); // Note: this is just in case you want to take into account manual rehydrations. You can remove this if you don't need it/don't want it.\r\n    const unsubFinishHydration = useCustomiserStore.persist.onFinishHydration(() =>\r\n      setHydrated(true),\r\n    );\r\n\r\n    setHydrated(useCustomiserStore.persist.hasHydrated());\r\n\r\n    return () => {\r\n      unsubHydrate();\r\n      unsubFinishHydration();\r\n    };\r\n  }, []);\r\n\r\n  return hydrated;\r\n};\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nexport const usePortalRef = (id: string) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const portalRef = useRef<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) {\r\n      portalRef.current = document.getElementById(id);\r\n      if (portalRef.current) {\r\n        setLoaded(true);\r\n      }\r\n    }\r\n  }, [id, loaded]);\r\n\r\n  return loaded ? portalRef.current : null;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavButtons_root__ON-jJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"DontShowAgain_root__zOI6r\",\"notifContainer\":\"DontShowAgain_notifContainer__adaGf\",\"notifControlContainer\":\"DontShowAgain_notifControlContainer__gVQq0\",\"btnContainer\":\"DontShowAgain_btnContainer__We3vg\"};","import React, { useState, useEffect } from 'react';\r\nimport styles from './DontShowAgain.module.scss';\r\n\r\nconst DontShowAgain = ({\r\n  children,\r\n  notifName = 'hideShowNotification',\r\n  setShowNotification,\r\n  cb,\r\n}: {\r\n  children: React.ReactNode;\r\n  notifName: string;\r\n  setShowNotification: React.Dispatch<React.SetStateAction<boolean>>;\r\n  cb?: () => void;\r\n}) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const handleDismiss = () => {\r\n    setShowNotification(false);\r\n    if (isChecked) {\r\n      localStorage.setItem(notifName, '1');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.root}>\r\n        <span className={styles.notifContainer}>\r\n          {children}\r\n          <div className={styles.notifControlContainer}>\r\n            <label>\r\n              <input type='checkbox' onChange={(e) => setIsChecked(e.target.checked)} />\r\n              Don&apos;t show again\r\n            </label>\r\n            <span className={styles.btnContainer}>\r\n              <button onClick={handleDismiss}>Cancel</button>\r\n              <button\r\n                onClick={() => {\r\n                  handleDismiss();\r\n                  cb && cb();\r\n                }}\r\n              >\r\n                Okay\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DontShowAgain;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface ContainedButtonProps {\r\n  onClick?: () => void;\r\n  isClickable?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n  color?: string;\r\n\r\n  isSelected?: boolean;\r\n  isHidden?: boolean;\r\n}\r\n\r\nconst ContainedButton = ({\r\n  onClick,\r\n  isClickable,\r\n  classNames,\r\n  children,\r\n  isHidden,\r\n  color,\r\n}: ContainedButtonProps) => {\r\n  const onClickHandler = () => {\r\n    if (typeof isClickable === 'undefined' || isClickable) onClick && onClick();\r\n  };\r\n  const buttonClassNames = `\r\n      ${styles.containedButton}\r\n      ${classNames}\r\n      ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n      ${typeof isHidden === 'undefined' || !isHidden ? '' : styles.hidden}\r\n      ${color ? styles.green : ''}\r\n    `;\r\n  return (\r\n    <button className={buttonClassNames} onClick={onClickHandler}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ContainedButton;\r\n","import { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavButtons.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\nimport DontShowAgain from '../../ui/DontShowAgain';\r\nimport { useState } from 'react';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\nimport { finished } from 'stream';\r\nimport { useDesignStore } from '@store/design';\r\n\r\nexport interface NavButtonsProps {\r\n  className?: string;\r\n  confirmText?: string | Falsey;\r\n  confirmStorage?: string;\r\n  onNext?: (() => void) | Falsey;\r\n  finishedNavs?: (\r\n    | {\r\n        name: string;\r\n        isFinished: boolean;\r\n      }\r\n    | undefined\r\n  )[];\r\n}\r\n\r\nconst NavButtons = ({\r\n  finishedNavs: finishedNavsParam,\r\n  className,\r\n  confirmText,\r\n  confirmStorage,\r\n  onNext,\r\n}: NavButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const {\r\n    navItems,\r\n    selectedNav,\r\n    parts,\r\n    sizing,\r\n\r\n    cancelPartChange,\r\n    resetNav,\r\n    setSelectedNav,\r\n    designComplete,\r\n  } = useCustomiserStore();\r\n\r\n  const { setResetCamera, addingToCart } = useDesignStore();\r\n\r\n  const navIndex = navItems.findIndex((nav) => nav.name === selectedNav?.name);\r\n  const hasNextTab = navIndex < navItems.length - 1;\r\n\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const notifTitle = confirmStorage;\r\n  const localStorageItem = localStorage.getItem(notifTitle || '');\r\n  const shouldShowNotification = !localStorageItem;\r\n\r\n  let finishedNavs = parts.map((part) => {\r\n    const partName = part.part.name;\r\n    if (!partName) return;\r\n    const isFinishedPart = !!navItems.find((navItem) => {\r\n      return navItem.name === partName;\r\n    });\r\n    return {\r\n      name: partName,\r\n      isFinished: isFinishedPart,\r\n    };\r\n  });\r\n\r\n  if (finishedNavsParam && finishedNavsParam.length) {\r\n    finishedNavs = [...finishedNavs, ...finishedNavsParam];\r\n  }\r\n\r\n  let isFinishedCurrentNav = !!(\r\n    selectedNav && finishedNavs.find((nav) => nav?.name === selectedNav.name)?.isFinished\r\n  );\r\n  let isRequired = selectedNav?.required;\r\n  if (selectedNav?.name === 'Fitting') {\r\n    isRequired = false;\r\n  } else if (selectedNav?.name === 'Size') {\r\n    isFinishedCurrentNav = !!(sizing?.height?.value && sizing?.weight?.value);\r\n  }\r\n\r\n  const noCancelNavs = ['Fitting', 'Text', 'Size'];\r\n  const shouldHideCancel = !!noCancelNavs.find((noCancelNav) => noCancelNav === selectedNav?.name);\r\n\r\n  const saveHandler = () => {\r\n    if (!isRequired || (navIndex !== -1 && isFinishedCurrentNav)) {\r\n      setSelectedNav(navIndex + 1);\r\n    }\r\n\r\n    // if (!confirmText) {\r\n    //   resetNav();\r\n    // } else {\r\n    //   if (shouldShowNotification) {\r\n    //     setShowPopup(true);\r\n    //   } else {\r\n    //     resetNav();\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  const isClickableAddToBasket = isFinishedCurrentNav && !addingToCart && designComplete();\r\n  const addToBasketHandler = () => {\r\n    setResetCamera();\r\n  };\r\n\r\n  if (!portalRef || !popupPortalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className={rootClassName}>\r\n        <ContainedButton\r\n          isClickable={isFinishedCurrentNav}\r\n          isHidden={shouldHideCancel}\r\n          onClick={() => cancelPartChange()}\r\n        >\r\n          Cancel\r\n        </ContainedButton>\r\n        {!onNext ? (\r\n          hasNextTab ? (\r\n            <ContainedButton\r\n              isClickable={!isRequired || isFinishedCurrentNav}\r\n              onClick={saveHandler}\r\n            >\r\n              Save\r\n            </ContainedButton>\r\n          ) : (\r\n            <ContainedButton\r\n              color={isClickableAddToBasket ? 'green' : ''}\r\n              isClickable={isClickableAddToBasket}\r\n              onClick={addToBasketHandler}\r\n            >\r\n              {addingToCart ? 'Saving...' : 'Add to basket'}\r\n            </ContainedButton>\r\n          )\r\n        ) : (\r\n          <ContainedButton onClick={onNext}>Next</ContainedButton>\r\n        )}\r\n      </div>\r\n      {confirmText &&\r\n        showPopup &&\r\n        shouldShowNotification &&\r\n        notifTitle &&\r\n        ReactDOM.createPortal(\r\n          <DontShowAgain cb={resetNav} setShowNotification={setShowPopup} notifName={notifTitle}>\r\n            <span>{confirmText}</span>\r\n          </DontShowAgain>,\r\n          popupPortalRef,\r\n        )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"fittingOption\":\"NavFitting_fittingOption__XQUUG\",\"fittingButtons\":\"NavFitting_fittingButtons__Y1hdd\",\"fittingButton\":\"NavFitting_fittingButton__djmDJ\",\"navButtonContainer\":\"NavFitting_navButtonContainer__K9a4D\"};","import styles from './Button.module.scss';\r\n\r\ninterface CapsuleButtonProps {\r\n  onClick?: () => void;\r\n  isClickable?: boolean;\r\n  isSelected?: boolean;\r\n  isFinished?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst CapsuleNavButton = ({\r\n  onClick,\r\n  isClickable,\r\n  isSelected,\r\n  isFinished,\r\n  classNames,\r\n  children,\r\n}: CapsuleButtonProps) => {\r\n  const buttonClassNames = `\r\n    ${styles.capsuleNavButton}\r\n    ${classNames}\r\n    ${isSelected ? styles.selected : ''}\r\n    ${isFinished ? styles.finished : ''}\r\n    `;\r\n  return (\r\n    <span className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default CapsuleNavButton;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface CapsuleButtonProps {\r\n  onClick?: () => void;\r\n  isSelected?: boolean;\r\n  isFinished?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ContainedNavButton = ({\r\n  onClick,\r\n  isSelected,\r\n  isFinished,\r\n  classNames,\r\n  children,\r\n}: CapsuleButtonProps) => {\r\n  const buttonClassNames = `\r\n    ${styles.containedNavButton}\r\n    ${classNames}\r\n    ${isSelected ? styles.selected : ''}\r\n    ${isFinished ? styles.finished : ''}\r\n    `;\r\n  return (\r\n    <span className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ContainedNavButton;\r\n","import { CustomProductOptionFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { motion } from 'framer-motion';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavFitting.module.scss';\r\nimport CapsuleButton from '@components/ui/Button/CapsuleNavButton';\r\nimport { useEffect, useState } from 'react';\r\nimport ContainedNavButton from '@components/ui/Button/ContainedNavButton';\r\n\r\nexport interface FittingOptionProps {\r\n  option: CustomProductOptionFragment;\r\n}\r\n\r\nconst FittingOption = ({ option }: FittingOptionProps) => {\r\n  const selectedModels = useCustomiserStore((state) => state.selectedModels);\r\n  const setSelectedModel = useCustomiserStore((state) => state.setSelectedModel);\r\n\r\n  if (!option) {\r\n    return null;\r\n  }\r\n\r\n  const getSelected = selectedModels.find((m) => m.optionId === option.id)?.model;\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={styles.fittingOption}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <div className={styles.fittingButtons}>\r\n          {option.models?.map((m) => (\r\n            <ContainedNavButton\r\n              key={m?.id}\r\n              isSelected={getSelected?.id === m?.model?.data?.id}\r\n              classNames={styles.fittingButton}\r\n              onClick={() => {\r\n                setSelectedModel(option.id, m?.model?.data);\r\n              }}\r\n            >\r\n              {m?.model?.data?.attributes?.name}\r\n            </ContainedNavButton>\r\n          ))}\r\n        </div>\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface NavFittingProps {\r\n  additionalFinishedNavs?: {\r\n    name: string;\r\n    isFinished: boolean;\r\n  }[];\r\n  setAdditionalFinishedNavs?: React.Dispatch<\r\n    React.SetStateAction<{ name: string; isFinished: boolean }[]>\r\n  >;\r\n  finishedNavs: ({ name: string; isFinished: boolean } | undefined)[];\r\n  setFinishedNavs: React.Dispatch<\r\n    React.SetStateAction<({ name: string; isFinished: boolean } | undefined)[]>\r\n  >;\r\n}\r\nconst NavFitting = ({ finishedNavs, setFinishedNavs }: NavFittingProps) => {\r\n  const fittingOptions = useCustomiserStore(\r\n    (state) => state.customProduct?.attributes?.options,\r\n  ) as Array<CustomProductOptionFragment>;\r\n  const { setCameraFocus } = useCustomiserStore();\r\n\r\n  const fittingOptionsTitles = fittingOptions?.map((o) => o.name);\r\n\r\n  const initialStep = finishedNavs?.find(\r\n    (navItem) => navItem?.name === 'Fitting' && navItem.isFinished === true,\r\n  )\r\n    ? fittingOptions.length - 1\r\n    : 0;\r\n  const [navStep, setNavStep] = useState(initialStep);\r\n  const hasNextStep = navStep < fittingOptions.length - 1;\r\n\r\n  useEffect(() => {\r\n    if (!hasNextStep) {\r\n      setFinishedNavs &&\r\n        setFinishedNavs((prev) => {\r\n          const iFitting = prev.findIndex((navItem) => navItem?.name === 'Fitting');\r\n          if (iFitting !== -1) {\r\n            prev[iFitting] = {\r\n              name: 'Fitting',\r\n              isFinished: true,\r\n            };\r\n            return prev;\r\n          }\r\n          const newFinishedNavs = [\r\n            ...prev,\r\n            {\r\n              name: 'Fitting',\r\n              isFinished: true,\r\n            },\r\n          ];\r\n          return newFinishedNavs;\r\n        });\r\n    }\r\n  }, [navStep]);\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className={styles.navButtonContainer}>\r\n        {fittingOptionsTitles.map((title, i) => {\r\n          return (\r\n            <CapsuleButton\r\n              isFinished={navStep > i}\r\n              isSelected={navStep === i}\r\n              onClick={() => {\r\n                setNavStep(i);\r\n                setCameraFocus(title || '');\r\n              }}\r\n              key={i}\r\n            >\r\n              {title}\r\n            </CapsuleButton>\r\n          );\r\n        })}\r\n      </div>\r\n      <div>\r\n        <b>Select {fittingOptionsTitles[navStep]}:</b>\r\n      </div>\r\n      <br />\r\n      {<FittingOption key={fittingOptions[navStep]?.id} option={fittingOptions[navStep]} />}\r\n      <NavButtons\r\n        onNext={\r\n          hasNextStep &&\r\n          (() => {\r\n            setNavStep((cur) => {\r\n              const newCur = cur + 1;\r\n              setCameraFocus(fittingOptionsTitles[newCur] || '');\r\n              return newCur;\r\n            });\r\n          })\r\n        }\r\n        finishedNavs={finishedNavs}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavFitting;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Formats } from './types';\r\n\r\nfunction getSrcSet(formats: Formats): string | null {\r\n  if (!formats) return null;\r\n\r\n  const fff = Object.entries(formats)\r\n    .map((f) => {\r\n      return f[1]\r\n        ? {\r\n            width: f[1].width,\r\n            url: f[1].url,\r\n          }\r\n        : null;\r\n    })\r\n    .filter((format) => format);\r\n\r\n  return !fff.length\r\n    ? null\r\n    : fff\r\n        .sort((a, b) => {\r\n          if (a?.width && b?.width && a.width < b.width) return -1;\r\n          if (a?.width && b?.width && a.width > b.width) return 1;\r\n          return 0;\r\n        })\r\n        .reduce((acc: any, current: any, index: number, array: any) => {\r\n          return acc + `${current.url} ${current.width}w${index < array.length - 1 ? ', ' : ''}`;\r\n        }, '');\r\n}\r\n\r\nexport default function getSrcSets(formats: Formats): string | null {\r\n  return getSrcSet(formats);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Image_root__u7aDb\"};","import { ImageFragment, Maybe } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { CSSProperties, useMemo } from 'react';\r\nimport getSrcSets from './getSrcSets';\r\n\r\nimport styles from './Image.module.scss';\r\n\r\nexport interface ImageProps {\r\n  className?: string;\r\n  image?: Maybe<ImageFragment>;\r\n  sizes?: string;\r\n}\r\n\r\nconst Image = ({ className, image, sizes }: ImageProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  if (!image) {\r\n    return null;\r\n  }\r\n\r\n  const relativeHeight = useMemo(() => {\r\n    if (image.attributes?.height && image.attributes?.width) {\r\n      return (image.attributes.height / image.attributes.width) * 100;\r\n    }\r\n    return 100;\r\n  }, [image]);\r\n\r\n  const style = { '--image-padding-top': `${relativeHeight}%` } as CSSProperties;\r\n\r\n  const srcSet = useMemo(() => getSrcSets(image.attributes?.formats), [image]);\r\n\r\n  return (\r\n    <div className={rootClassName} style={style}>\r\n      {srcSet && (\r\n        <img src={image.attributes?.url} srcSet={srcSet} sizes={sizes ? sizes : '100vw'} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"flags\":\"NavFlags_flags__S52CT\",\"flag\":\"NavFlags_flag__gtrVs\",\"flagItem\":\"NavFlags_flagItem__rI7sv\",\"flagItemImage\":\"NavFlags_flagItemImage__6ov2x\"};","import Image from '@components/ui/Image';\r\nimport { FlagFragment } from '@graphql/generated/graphql';\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\n\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsSelectProps {\r\n  editFlag?: FlagCustomiser;\r\n  flags: FlagFragment[];\r\n}\r\n\r\nexport const NavFlagsSelect = ({ editFlag, flags }: NavFlagsSelectProps) => {\r\n  const { addFlag, updateFlag } = useCustomiserStore((state) => state);\r\n\r\n  const flagSelected = (flag: FlagFragment) => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        flag: flag,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addFlag({\r\n        flag: flag,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flags}>\r\n      {flags?.map((f) => (\r\n        <div className={styles.flag} key={f.id} onClick={() => flagSelected(f)}>\r\n          <Image image={f.attributes?.image.data} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavDecalAdjust_root__t6vBt\",\"root__rotate\":\"NavDecalAdjust_root__rotate__jXeZv\",\"rotate\":\"NavDecalAdjust_rotate__adO98\",\"scale\":\"NavDecalAdjust_scale__gq4ry\",\"iconContainer\":\"NavDecalAdjust_iconContainer__nW-8U\",\"rotateIcon\":\"NavDecalAdjust_rotateIcon__fOqK4\",\"adjustControls\":\"NavDecalAdjust_adjustControls__ioLx3\"};","/* eslint-disable react/prop-types */\r\nimport { GraphicPriceEntity, GraphicPriceFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport ReactSlider from 'react-slider';\r\nimport styles from './NavDecalAdjust.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\nimport { FaCircleMinus, FaCirclePlus } from 'react-icons/fa6';\r\nimport { useState } from 'react';\r\n\r\nimport { GiClockwiseRotation, GiAnticlockwiseRotation } from 'react-icons/gi';\r\n\r\nexport interface NavDecalAdjustProps {\r\n  className?: string;\r\n  prices?: GraphicPriceFragment[];\r\n  scale?: number;\r\n  rotation?: number;\r\n  onScale?: (event: number, price?: GraphicPriceEntity) => void;\r\n  onRotate?: (event: number) => void;\r\n}\r\n\r\nconst range = (start: number, stop: number, step: number) =>\r\n  Array.from({ length: (stop - start) / step + 1 }, (value, index) => start + index * step);\r\n\r\nconst NavDecalAdjust = ({\r\n  className,\r\n  scale = 1,\r\n  rotation = 0,\r\n  prices,\r\n  onScale,\r\n  onRotate,\r\n}: NavDecalAdjustProps) => {\r\n  const scaleAdjust = 0.15;\r\n  const rotateAdjust = 7.5;\r\n  const portalRef = usePortalRef('CustomiserCanvasControls');\r\n\r\n  const [currentScale, setCurrentScale] = useState(scale);\r\n  const [currentRotate, setCurrentRotate] = useState(rotation);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  const rootRotateClassName = cn(styles.root, className, styles.root__rotate);\r\n  const min = 1;\r\n  const max = 2;\r\n  const numberOfSteps = prices?.length ?? 10;\r\n  const step = (max - min) / (numberOfSteps - 1);\r\n  const marks = range(min, max, step);\r\n\r\n  const formattedPrices = prices?.map((p, i) => ({\r\n    ...p,\r\n    markKey: Number(marks[i].toFixed(5)),\r\n  }));\r\n\r\n  const onChange = (value: number) => {\r\n    const price = formattedPrices?.find((p) => p.markKey === value);\r\n    if (onScale) onScale(value, price);\r\n  };\r\n\r\n  const addScale = () => {\r\n    setCurrentScale((cur) => {\r\n      onScale && onScale(cur + scaleAdjust);\r\n      return cur + scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const subtractScale = () => {\r\n    setCurrentScale((cur) => {\r\n      if (cur - scaleAdjust <= 0) return cur;\r\n      onScale && onScale(cur - scaleAdjust);\r\n      return cur - scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur - rotateAdjust);\r\n      return cur - rotateAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateCounterClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur + rotateAdjust);\r\n      return cur + rotateAdjust;\r\n    });\r\n  };\r\n\r\n  return createPortal(\r\n    <>\r\n      <div className={rootRotateClassName}>\r\n        <span>\r\n          <h4>Size</h4>\r\n          <span className={styles.iconContainer}>\r\n            <span onClick={subtractScale}>\r\n              <FaCircleMinus />\r\n            </span>\r\n            <span onClick={addScale}>\r\n              <FaCirclePlus />\r\n            </span>\r\n          </span>\r\n        </span>\r\n        <span>\r\n          <h4>Rotate</h4>\r\n          <span className={styles.iconContainer}>\r\n            <span className={styles.rotateIcon} onClick={rotateCounterClockwise}>\r\n              <GiAnticlockwiseRotation />\r\n            </span>\r\n            <span className={styles.rotateIcon} onClick={rotateClockwise}>\r\n              <GiClockwiseRotation />\r\n            </span>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavDecalAdjust;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavEditButtons_root__43Hm3\"};","import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavEditButtons.module.scss';\r\n\r\nexport interface NavEditButtonsProps {\r\n  className?: string;\r\n  onApply?: () => void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst NavEditButtons = ({ className, disabled, onApply }: NavEditButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={rootClassName}>\r\n      <Button onClick={onApply}>Canacel</Button>\r\n      <Button colour='red' onClick={onApply} disabled={disabled}>\r\n        Save\r\n      </Button>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavEditButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavOptionEdit_root__q-pp0\",\"eyeIcon\":\"NavOptionEdit_eyeIcon__v85fP\"};","import cn from 'classnames';\r\n\r\nimport styles from './NavOptionEdit.module.scss';\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa6';\r\nimport { MouseEventHandler } from 'react';\r\n\r\nexport interface NavOptionEditProps {\r\n  className?: string;\r\n  onEdit?: () => void;\r\n  onDelete?: () => void;\r\n  isVisible?: boolean;\r\n  toggleVisibility?: () => void;\r\n}\r\n\r\nconst NavOptionEdit = ({\r\n  className,\r\n  onEdit,\r\n  onDelete,\r\n  isVisible = true,\r\n  toggleVisibility,\r\n}: NavOptionEditProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const isVisibleEye = typeof isVisible === undefined ? true : isVisible;\r\n\r\n  const handleIsVisible: MouseEventHandler<HTMLSpanElement> = (event) => {\r\n    event.stopPropagation();\r\n    toggleVisibility && toggleVisibility();\r\n  };\r\n  return (\r\n    <div className={rootClassName}>\r\n      <span onClick={handleIsVisible} className={styles.eyeIcon}>\r\n        {isVisibleEye ? <FaEye /> : <FaEyeSlash />}\r\n      </span>\r\n      <button onClick={onEdit}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24.785 24.788'>\r\n          <path d='M24.785 6.739 18.046 0 0 18.049v6.739h6.739Zm-6.738-3.218 3.218 3.218-1.351 1.352-3.217-3.218Zm-3.112 3.112 3.218 3.218L7.467 20.538l-3.218-3.22ZM2.489 22.298v-3.219l3.218 3.218Z' />\r\n        </svg>\r\n      </button>\r\n      <button onClick={onDelete}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.601 23.219'>\r\n          <path d='m14.601 11.609-1.489-1.489L2.992 0 .001 2.978l8.631 8.631-8.631 8.632 2.991 2.978L13.112 13.1Z' />\r\n          <path d='m9 11.609 1.489 1.489 10.12 10.12L23.6 20.24l-8.631-8.631L23.6 2.977 20.609-.001l-10.12 10.119Z' />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavOptionEdit;\r\n","import Image from '@components/ui/Image';\r\n\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsFlagProps {\r\n  flag: FlagCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavFlagsFlag = ({ flag, setShowSelector: setSelectModel }: NavFlagsFlagProps) => {\r\n  const { updateFlag, deleteFlag } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (flag.key) {\r\n      updateFlag(flag.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (flag.key) {\r\n      deleteFlag(flag.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flagItem}>\r\n      <div className={styles.flagItemImage}>\r\n        <Image image={flag.flag?.attributes?.image.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import { startTransition, useState } from 'react';\r\nimport { NavFlagsSelect } from './NavFlagsSelect';\r\n\r\nimport Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\nimport styles from './NavFlags.module.scss';\r\nimport { NavFlagsFlag } from './NavFlagsFlag';\r\nimport { GraphicPriceEntity, useGetFlagsQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nconst NavFlags = () => {\r\n  const flags = useCustomiserStore((state) => state.flags);\r\n  const updateFlag = useCustomiserStore((state) => state.updateFlag);\r\n  const editFlag = flags?.find((g) => g.edit);\r\n\r\n  const [showSelector, setShowSelector] = useState(false);\r\n\r\n  const { data: flagQuery } = useGetFlagsQuery(\r\n    graphQLClient,\r\n    {\r\n      pagination: { limit: 500 },\r\n    },\r\n    {\r\n      select: (data) => ({ flags: data.flags?.data, prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addFlag = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editFlag?.key) updateFlag(editFlag.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyFlag = () => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editFlag?.decalScale}\r\n            rotation={editFlag?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={flagQuery?.prices}\r\n          />\r\n          {flagQuery?.flags && <NavFlagsSelect editFlag={editFlag} flags={flagQuery.flags} />}\r\n          <NavEditButtons disabled={!editFlag} onApply={applyFlag} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Flags</h3>\r\n            {flags?.map((flag) => (\r\n              <NavFlagsFlag key={flag.key} flag={flag} setShowSelector={setShowSelector} />\r\n            ))}\r\n            <Button colour='red' onClick={addFlag}>\r\n              Add Flag\r\n            </Button>\r\n          </div>\r\n          <NavButtons />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavFlags;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavHeader_root__jnadG\",\"menu\":\"NavHeader_menu__Mmpjx\",\"nav\":\"NavHeader_nav__mJbli\",\"title\":\"NavHeader_title__tOyZd\",\"minimizeIcon\":\"NavHeader_minimizeIcon__GKC2n\",\"minimized\":\"NavHeader_minimized__04mp3\",\"navIcon\":\"NavHeader_navIcon__6iUBm\"};","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport styles from './NavHeader.module.scss';\r\nimport InfoButton from '@components/ui/InfoButton';\r\n\r\nexport interface NavHeaderProps {\r\n  className?: string;\r\n  toggle: () => void;\r\n  isOpen: boolean;\r\n  isMinimized?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst NavHeader = ({ className, toggle, isOpen, isMinimized = false, onClick }: NavHeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedNav = useCustomiserStore((state) => state.selectedNav);\r\n\r\n  if (isOpen) {\r\n    return null;\r\n  }\r\n\r\n  const minimizeIconClassname = cn(styles.minimizeIcon, {\r\n    [styles.minimized]: isMinimized,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div id='NavHeader' className={rootClassName}>\r\n        <div className={styles.nav}>\r\n          {/* <div className={styles.title}>{selectedNav?.name}</div> */}\r\n          <div className={minimizeIconClassname} onClick={onClick}>\r\n            <svg viewBox='0 0 330 330'>\r\n              <path\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                id='XMLID_224_'\r\n                d='M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394  l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393  C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z'\r\n              />\r\n            </svg>\r\n          </div>\r\n          {/* <InfoButton title={selectedNav?.name} /> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavHeader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dropZone\":\"NavImages_dropZone__4YMrM\",\"image\":\"NavImages_image__svpqZ\",\"graphicItem\":\"NavImages_graphicItem__XenKS\",\"graphicItemImage\":\"NavImages_graphicItemImage__8GS2T\"};","import Image from '@components/ui/Image';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesImageProps {\r\n  graphic: GraphicCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavImagesImage = ({\r\n  graphic,\r\n  setShowSelector: setSelectModel,\r\n}: NavImagesImageProps) => {\r\n  const { updateGraphic, deleteGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (graphic.key) {\r\n      updateGraphic(graphic.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (graphic.key) {\r\n      deleteGraphic(graphic.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphicItem}>\r\n      <div className={styles.graphicItemImage}>\r\n        <Image image={graphic.graphic?.attributes?.image?.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  GraphicFragment,\r\n  useCreateGraphicMutation,\r\n  useUploadMultipleFilesMutation,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { Dispatch, SetStateAction, useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesUploadProps {\r\n  setGraphic: (graphic: GraphicFragment) => void;\r\n}\r\n\r\nexport const NavImagesUpload = ({ setGraphic }: NavImagesUploadProps) => {\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const { mutate: createGraphicMutation } = useCreateGraphicMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const graphic = data.createGraphic?.data;\r\n      setSaving(false);\r\n      if (graphic) setGraphic(graphic);\r\n    },\r\n  });\r\n\r\n  const { mutate: fileUploadMutate } = useUploadMultipleFilesMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const fileIDs = data.multipleUpload.map((f) => f?.data?.id) as string[];\r\n      createGraphicMutation({ data: { image: fileIDs[0], customer: true, name: fileIDs[0] } });\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback((acceptedFiles: File[]) => {\r\n    setSaving(true);\r\n    fileUploadMutate({ files: acceptedFiles });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'image/jpeg': [],\r\n      'image/png': [],\r\n    },\r\n    maxFiles: 1,\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h5>Upload an image</h5>\r\n      <div className={styles.dropZone} {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <div>\r\n          <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.219 29.191'>\r\n            <g>\r\n              <path d='M11.609 0 10.12 1.489 0 11.609 2.978 14.6l8.631-8.631 8.632 8.631 2.978-2.991L13.1 1.489Z' />\r\n              <path d='M14.356 29.191h-5v-26h5Z' />\r\n            </g>\r\n          </svg>\r\n          {saving ? (\r\n            <h5>Please wait...</h5>\r\n          ) : isDragActive ? (\r\n            <h5>Drop images here ...</h5>\r\n          ) : (\r\n            <h5>Click or drag images here to upload</h5>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { GraphicFragment } from '@graphql/generated/graphql';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState } from 'react';\r\nimport Image from '@components/ui/Image';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesUpload } from './NavImagesUpload';\r\nimport Button from '@components/ui/Button';\r\n\r\nexport interface NavImagesSelectProps {\r\n  editGraphic?: GraphicCustomiser;\r\n  graphic?: GraphicFragment;\r\n}\r\n\r\nexport const NavImagesSelect = ({ editGraphic, graphic }: NavImagesSelectProps) => {\r\n  const [currentGraphic, setCurrentGraphic] = useState<GraphicFragment | undefined>(graphic);\r\n  const { addGraphic, updateGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const graphicSelected = (graphic: GraphicFragment) => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        graphic,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addGraphic({\r\n        graphic,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setGraphic = (graphic: GraphicFragment) => {\r\n    setCurrentGraphic(graphic);\r\n    graphicSelected(graphic);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphics}>\r\n      {currentGraphic ? (\r\n        <>\r\n          <Image className={styles.image} image={currentGraphic.attributes?.image?.data} />\r\n          <Button onClick={() => setCurrentGraphic(undefined)}>Change Image</Button>\r\n        </>\r\n      ) : (\r\n        <NavImagesUpload setGraphic={setGraphic} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import Button from '@components/ui/Button';\r\nimport { GraphicPriceEntity, useGetImagesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { startTransition, useState } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesImage } from './NavImagesImage';\r\nimport { NavImagesSelect } from './NavImagesSelect';\r\n\r\nconst NavImages = () => {\r\n  const [showSelector, setShowSelector] = useState(false);\r\n  const graphics = useCustomiserStore((state) => state.graphics);\r\n  const updateGraphic = useCustomiserStore((state) => state.updateGraphic);\r\n  const editGraphic = graphics?.find((g) => g.edit);\r\n\r\n  const { data: imageQuery } = useGetImagesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => ({ prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addImage = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editGraphic?.key) updateGraphic(editGraphic.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyImage = () => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editGraphic?.decalScale}\r\n            rotation={editGraphic?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={imageQuery?.prices}\r\n          />\r\n          <NavImagesSelect editGraphic={editGraphic} graphic={editGraphic?.graphic} />\r\n          <NavEditButtons disabled={!editGraphic} onApply={applyImage} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Images</h3>\r\n            {graphics?.map((graphic) => (\r\n              <NavImagesImage\r\n                key={graphic.key}\r\n                graphic={graphic}\r\n                setShowSelector={setShowSelector}\r\n              />\r\n            ))}\r\n            <Button colour='red' onClick={addImage}>\r\n              Add Image\r\n            </Button>\r\n          </div>\r\n          <NavButtons />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavImages;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MaterialGroup_root__M5bHl\",\"colourGroups\":\"MaterialGroup_colourGroups__G3KSo\",\"materialType\":\"MaterialGroup_materialType__X63YP\",\"materialType__title\":\"MaterialGroup_materialType__title__nQjVb\",\"materials\":\"MaterialGroup_materials__iAoDB\",\"selected\":\"MaterialGroup_selected__YMvLv\",\"popup\":\"MaterialGroup_popup__4J8xn\"};","import { create, StateCreator, StoreApi } from 'zustand';\r\nimport createContext from 'zustand/context';\r\nimport produce from 'immer';\r\nimport { devtools } from 'zustand/middleware';\r\nimport {\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n} from '@graphql/generated/graphql';\r\nimport { uniqBy } from 'lodash';\r\n\r\nconst uniqueColourGroups = (array: MaterialColourGroupEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterialTypes = (array: MaterialTypeEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterials = (array: MaterialEntity[]) => uniqBy(array, 'id');\r\ninterface MaterialGroupInitialState {\r\n  colourGroups: MaterialColourGroupEntity[];\r\n  materialTypes: MaterialTypeEntity[];\r\n  materials: MaterialEntity[];\r\n  selectedColourGroup?: MaterialColourGroupEntity;\r\n  selectedMaterialType?: MaterialTypeEntity;\r\n}\r\nexport interface MaterialGroupState extends MaterialGroupInitialState {\r\n  resetMaterialGroup: () => void;\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => void;\r\n  filteredMaterials: () => MaterialEntity[];\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => void;\r\n  setMaterialType: (materialType: MaterialTypeEntity) => void;\r\n}\r\n\r\nconst initialState: MaterialGroupInitialState = {\r\n  colourGroups: [],\r\n  materialTypes: [],\r\n  materials: [],\r\n};\r\n\r\nconst createMaterialGroup: StateCreator<MaterialGroupState, [['zustand/devtools', never]], []> = (\r\n  set,\r\n  get,\r\n) => ({\r\n  ...initialState,\r\n  filteredMaterials: () => {\r\n    const materials = get().materials;\r\n    const colourGroup = get().selectedColourGroup;\r\n    const filteredMaterials = materials.filter((m) =>\r\n      m.attributes?.colourGroups?.data.find((g) => g.id === colourGroup?.id),\r\n    );\r\n    return filteredMaterials;\r\n  },\r\n  resetMaterialGroup: () => set(initialState),\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        const colourGroups = materials.flatMap(\r\n          (d) => d.attributes?.colourGroups?.data,\r\n        ) as MaterialColourGroupEntity[];\r\n        state.colourGroups = uniqueColourGroups(colourGroups);\r\n        if (colourGroup) {\r\n          state.selectedColourGroup = colourGroup;\r\n        } else {\r\n          state.selectedColourGroup = state.colourGroups[0];\r\n        }\r\n\r\n        const materialTypes = materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n\r\n        if (materialType) {\r\n          state.selectedMaterialType = materialType;\r\n        } else {\r\n          state.selectedMaterialType = state.materialTypes[0];\r\n        }\r\n\r\n        state.materials = uniqueMaterials(materials);\r\n      }),\r\n    );\r\n  },\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedColourGroup = colourGroup;\r\n        const materialTypes = state.materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n      }),\r\n    );\r\n  },\r\n  setMaterialType: (materialType: MaterialTypeEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedMaterialType = materialType;\r\n      }),\r\n    );\r\n  },\r\n});\r\n\r\nexport const { Provider, useStore: useMaterialGroupStore } =\r\n  createContext<StoreApi<MaterialGroupState>>();\r\n\r\nexport const createStore = () => create<MaterialGroupState>()(devtools(createMaterialGroup));\r\n","import { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { Falsey } from 'lodash';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useLongPress } from 'use-long-press';\r\n\r\nexport interface MaterialProps {\r\n  className?: string;\r\n  material: MaterialFragment;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const Material = ({\r\n  className,\r\n  material,\r\n  onMaterialSelected,\r\n  selectedMaterialId,\r\n}: MaterialProps) => {\r\n  const rootClassName = cn(styles.material, className, {\r\n    [styles.selected]: material.id === selectedMaterialId,\r\n  });\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const mapImage = material?.attributes?.images?.find((i) => i?.mapType === 'map');\r\n\r\n  const onClick = () => {\r\n    if (material) {\r\n      onMaterialSelected(material);\r\n    }\r\n  };\r\n\r\n  const onLongPressBinder = useLongPress((event) => {\r\n    setShowPopup(true);\r\n  });\r\n\r\n  const handleContextMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={rootClassName}\r\n        onContextMenu={handleContextMenu}\r\n        onClick={onClick}\r\n        {...onLongPressBinder()}\r\n        data-name={material.attributes?.name}\r\n      >\r\n        {mapImage && <img src={mapImage?.image?.data?.attributes?.formats['thumbnail'].url} />}\r\n      </button>\r\n      {showPopup &&\r\n        popupPortalRef &&\r\n        createPortal(\r\n          <div\r\n            className={styles.popup}\r\n            onClick={() => {\r\n              setShowPopup(false);\r\n            }}\r\n          >\r\n            <img\r\n              height='300'\r\n              width='300'\r\n              src={mapImage?.image?.data?.attributes?.formats['large'].url}\r\n              alt=''\r\n              onContextMenu={handleContextMenu}\r\n            />\r\n          </div>,\r\n          popupPortalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n","import PillButton from '@components/ui/PillButton';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { Material } from './Material';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { useMaterialGroupStore } from './MaterialGroupState';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialTypeProps {\r\n  className?: string;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const MaterialType = ({\r\n  className,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  selectedMaterialId,\r\n}: MaterialTypeProps) => {\r\n  const rootClassName = cn(styles.materialType, className);\r\n\r\n  const {\r\n    materialTypes,\r\n    filteredMaterials: getFilteredMaterials,\r\n    materials,\r\n  } = useMaterialGroupStore();\r\n\r\n  const filteredMaterials = hideColorGroups ? materials : getFilteredMaterials();\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && <h5>Texture</h5>}\r\n      {materialTypes.map((mt) => (\r\n        <div key={mt.id} className={styles.materialType}>\r\n          <h6 className={styles.materialType__title}>{mt.attributes?.name}</h6>\r\n          <div className={styles.materials}>\r\n            {filteredMaterials\r\n              .filter((m) => m.attributes?.type?.data?.id === mt.id)\r\n              .map((m) => (\r\n                <Material\r\n                  key={m.id}\r\n                  material={m}\r\n                  onMaterialSelected={onMaterialSelected}\r\n                  selectedMaterialId={selectedMaterialId}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SelectedMaterialInfo_root__kIp+x\",\"root__noMaterial\":\"SelectedMaterialInfo_root__noMaterial__dtWKf\",\"currencyContainer\":\"SelectedMaterialInfo_currencyContainer__s15RH\",\"materialName\":\"SelectedMaterialInfo_materialName__vha4F\"};","import { FC, useMemo } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport styles from './SelectedMaterialInfo.module.scss';\r\n\r\nconst SelectedMaterialInfo: FC = () => {\r\n  const portalRef = usePortalRef('CustomiserNavMaterial');\r\n  const { selectedPart, parts } = useCustomiserStore();\r\n\r\n  const selectedMaterial = useMemo(\r\n    () => parts.find((part) => part.part.id === selectedPart?.id)?.material,\r\n    [selectedPart, parts],\r\n  );\r\n\r\n  if (!portalRef) return null;\r\n\r\n  if (!selectedMaterial) {\r\n    return ReactDOM.createPortal(\r\n      <div className={cn(styles.root, styles.root__noMaterial)}>No material selected.</div>,\r\n      portalRef,\r\n    );\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={styles.root}>\r\n      <span>\r\n        <div className={styles.materialName}>{selectedMaterial.attributes?.name}</div>\r\n        <small>\r\n          <i>TODO: Add currency</i>\r\n        </small>\r\n      </span>\r\n      {/* TODO: Add currency */}\r\n      <div className={styles.currencyContainer}>\r\n        ${selectedMaterial.attributes?.price?.data?.attributes?.price}\r\n      </div>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default SelectedMaterialInfo;\r\n","// temporary rainbow material\r\nexport default {\r\n  id: '999',\r\n  attributes: {\r\n    name: 'leatherette black',\r\n    hex: '#000000',\r\n    type: {\r\n      data: {\r\n        id: '5',\r\n        attributes: {\r\n          name: 'Fur',\r\n        },\r\n      },\r\n    },\r\n    colourGroups: {\r\n      data: [\r\n        {\r\n          id: '1',\r\n          attributes: {\r\n            name: 'Black',\r\n            colour: '#000000',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    price: {\r\n      data: {\r\n        id: '1',\r\n        attributes: {\r\n          name: 'Basic Material',\r\n          price: 0,\r\n          sku: 'MAT-BASIC',\r\n        },\r\n      },\r\n    },\r\n    images: [\r\n      {\r\n        mapType: 'roughnessMap',\r\n        image: {\r\n          data: {\r\n            id: '1670',\r\n            attributes: {\r\n              url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Roughness_test.jpg',\r\n              size: 72.54,\r\n              width: 1024,\r\n              height: 1024,\r\n              ext: '.jpg',\r\n              mime: 'image/jpeg',\r\n              name: 'leatherrete black _Roughness.jpg',\r\n              formats: {\r\n                large: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Roughness_test.jpg',\r\n                  hash: 'large_leatherrete_black_Roughness_b5f13bdb10',\r\n                  mime: 'image/jpeg',\r\n                  name: 'large_leatherrete black _Roughness.jpg',\r\n                  path: null,\r\n                  size: 68.76,\r\n                  width: 1000,\r\n                  height: 1000,\r\n                },\r\n                small: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Roughness_test.jpg',\r\n                  hash: 'small_leatherrete_black_Roughness_b5f13bdb10',\r\n                  mime: 'image/jpeg',\r\n                  name: 'small_leatherrete black _Roughness.jpg',\r\n                  path: null,\r\n                  size: 9.53,\r\n                  width: 500,\r\n                  height: 500,\r\n                },\r\n                medium: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Roughness_test.jpg',\r\n                  hash: 'medium_leatherrete_black_Roughness_b5f13bdb10',\r\n                  mime: 'image/jpeg',\r\n                  name: 'medium_leatherrete black _Roughness.jpg',\r\n                  path: null,\r\n                  size: 32.15,\r\n                  width: 750,\r\n                  height: 750,\r\n                },\r\n                thumbnail: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Roughness_test.jpg',\r\n                  hash: 'thumbnail_leatherrete_black_Roughness_b5f13bdb10',\r\n                  mime: 'image/jpeg',\r\n                  name: 'thumbnail_leatherrete black _Roughness.jpg',\r\n                  path: null,\r\n                  size: 0.48,\r\n                  width: 156,\r\n                  height: 156,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      {\r\n        mapType: 'normalMap',\r\n        image: {\r\n          data: {\r\n            id: '1669',\r\n            attributes: {\r\n              url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Normal_test.jpg',\r\n              size: 218.41,\r\n              width: 1024,\r\n              height: 1024,\r\n              ext: '.jpg',\r\n              mime: 'image/jpeg',\r\n              name: 'leatherrete black _Normal.jpg',\r\n              formats: {\r\n                large: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Normal_test.jpg',\r\n                  hash: 'large_leatherrete_black_Normal_b06ee1120c',\r\n                  mime: 'image/jpeg',\r\n                  name: 'large_leatherrete black _Normal.jpg',\r\n                  path: null,\r\n                  size: 187.02,\r\n                  width: 1000,\r\n                  height: 1000,\r\n                },\r\n                small: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Normal_test.jpg',\r\n                  hash: 'small_leatherrete_black_Normal_b06ee1120c',\r\n                  mime: 'image/jpeg',\r\n                  name: 'small_leatherrete black _Normal.jpg',\r\n                  path: null,\r\n                  size: 10.12,\r\n                  width: 500,\r\n                  height: 500,\r\n                },\r\n                medium: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Normal_test.jpg',\r\n                  hash: 'medium_leatherrete_black_Normal_b06ee1120c',\r\n                  mime: 'image/jpeg',\r\n                  name: 'medium_leatherrete black _Normal.jpg',\r\n                  path: null,\r\n                  size: 57.89,\r\n                  width: 750,\r\n                  height: 750,\r\n                },\r\n                thumbnail: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Normal_test.jpg',\r\n                  hash: 'thumbnail_leatherrete_black_Normal_b06ee1120c',\r\n                  mime: 'image/jpeg',\r\n                  name: 'thumbnail_leatherrete black _Normal.jpg',\r\n                  path: null,\r\n                  size: 0.47,\r\n                  width: 156,\r\n                  height: 156,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      {\r\n        mapType: 'metalnessMap',\r\n        image: {\r\n          data: {\r\n            id: '1668',\r\n            attributes: {\r\n              url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Metallic_test.jpg',\r\n              size: 6.41,\r\n              width: 1024,\r\n              height: 1024,\r\n              ext: '.jpg',\r\n              mime: 'image/jpeg',\r\n              name: 'leatherrete black _Metallic.jpg',\r\n              formats: {\r\n                large: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Metallic_test.jpg',\r\n                  hash: 'large_leatherrete_black_Metallic_215a850718',\r\n                  mime: 'image/jpeg',\r\n                  name: 'large_leatherrete black _Metallic.jpg',\r\n                  path: null,\r\n                  size: 6.22,\r\n                  width: 1000,\r\n                  height: 1000,\r\n                },\r\n                small: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Metallic_test.jpg',\r\n                  hash: 'small_leatherrete_black_Metallic_215a850718',\r\n                  mime: 'image/jpeg',\r\n                  name: 'small_leatherrete black _Metallic.jpg',\r\n                  path: null,\r\n                  size: 1.8,\r\n                  width: 500,\r\n                  height: 500,\r\n                },\r\n                medium: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Metallic_test.jpg',\r\n                  hash: 'medium_leatherrete_black_Metallic_215a850718',\r\n                  mime: 'image/jpeg',\r\n                  name: 'medium_leatherrete black _Metallic.jpg',\r\n                  path: null,\r\n                  size: 3.58,\r\n                  width: 750,\r\n                  height: 750,\r\n                },\r\n                thumbnail: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Metallic_test.jpg',\r\n                  hash: 'thumbnail_leatherrete_black_Metallic_215a850718',\r\n                  mime: 'image/jpeg',\r\n                  name: 'thumbnail_leatherrete black _Metallic.jpg',\r\n                  path: null,\r\n                  size: 0.42,\r\n                  width: 156,\r\n                  height: 156,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      {\r\n        mapType: 'displacementMap',\r\n        image: {\r\n          data: {\r\n            id: '1667',\r\n            attributes: {\r\n              url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Height_test.jpg',\r\n              size: 37.78,\r\n              width: 1024,\r\n              height: 1024,\r\n              ext: '.jpg',\r\n              mime: 'image/jpeg',\r\n              name: 'leatherrete black _Height.jpg',\r\n              formats: {\r\n                large: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Height_test.jpg',\r\n                  hash: 'large_leatherrete_black_Height_2df036cfe9',\r\n                  mime: 'image/jpeg',\r\n                  name: 'large_leatherrete black _Height.jpg',\r\n                  path: null,\r\n                  size: 35.71,\r\n                  width: 1000,\r\n                  height: 1000,\r\n                },\r\n                small: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Height_test.jpg',\r\n                  hash: 'small_leatherrete_black_Height_2df036cfe9',\r\n                  mime: 'image/jpeg',\r\n                  name: 'small_leatherrete black _Height.jpg',\r\n                  path: null,\r\n                  size: 4.75,\r\n                  width: 500,\r\n                  height: 500,\r\n                },\r\n                medium: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Height_test.jpg',\r\n                  hash: 'medium_leatherrete_black_Height_2df036cfe9',\r\n                  mime: 'image/jpeg',\r\n                  name: 'medium_leatherrete black _Height.jpg',\r\n                  path: null,\r\n                  size: 16.73,\r\n                  width: 750,\r\n                  height: 750,\r\n                },\r\n                thumbnail: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Height_test.jpg',\r\n                  hash: 'thumbnail_leatherrete_black_Height_2df036cfe9',\r\n                  mime: 'image/jpeg',\r\n                  name: 'thumbnail_leatherrete black _Height.jpg',\r\n                  path: null,\r\n                  size: 0.45,\r\n                  width: 156,\r\n                  height: 156,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      {\r\n        mapType: 'map',\r\n        image: {\r\n          data: {\r\n            id: '1666',\r\n            attributes: {\r\n              url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Map_test.jpg',\r\n              size: 6.41,\r\n              width: 1024,\r\n              height: 1024,\r\n              ext: '.jpg',\r\n              mime: 'image/jpeg',\r\n              name: 'leatherrete black _BaseColor.jpg',\r\n              formats: {\r\n                large: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Map_test.jpg',\r\n                  hash: 'large_leatherrete_black_Base_Color_e88b772053',\r\n                  mime: 'image/jpeg',\r\n                  name: 'large_leatherrete black _BaseColor.jpg',\r\n                  path: null,\r\n                  size: 6.22,\r\n                  width: 1000,\r\n                  height: 1000,\r\n                },\r\n                small: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Map_test.jpg',\r\n                  hash: 'small_leatherrete_black_Base_Color_e88b772053',\r\n                  mime: 'image/jpeg',\r\n                  name: 'small_leatherrete black _BaseColor.jpg',\r\n                  path: null,\r\n                  size: 1.8,\r\n                  width: 500,\r\n                  height: 500,\r\n                },\r\n                medium: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Map_test.jpg',\r\n                  hash: 'medium_leatherrete_black_Base_Color_e88b772053',\r\n                  mime: 'image/jpeg',\r\n                  name: 'medium_leatherrete black _BaseColor.jpg',\r\n                  path: null,\r\n                  size: 3.58,\r\n                  width: 750,\r\n                  height: 750,\r\n                },\r\n                thumbnail: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Map_test.jpg',\r\n                  hash: 'thumbnail_leatherrete_black_Base_Color_e88b772053',\r\n                  mime: 'image/jpeg',\r\n                  name: 'thumbnail_leatherrete black _BaseColor.jpg',\r\n                  path: null,\r\n                  size: 0.42,\r\n                  width: 156,\r\n                  height: 156,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      {\r\n        mapType: 'aoMap',\r\n        image: {\r\n          data: {\r\n            id: '1665',\r\n            attributes: {\r\n              url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Ambient_Occlusion_test.jpg',\r\n              size: 55.72,\r\n              width: 1024,\r\n              height: 1024,\r\n              ext: '.jpg',\r\n              mime: 'image/jpeg',\r\n              name: 'leatherrete black _AmbientOcclusion.jpg',\r\n              formats: {\r\n                large: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Ambient_Occlusion_test.jpg',\r\n                  hash: 'large_leatherrete_black_Ambient_Occlusion_75b9c3d553',\r\n                  mime: 'image/jpeg',\r\n                  name: 'large_leatherrete black _AmbientOcclusion.jpg',\r\n                  path: null,\r\n                  size: 49.49,\r\n                  width: 1000,\r\n                  height: 1000,\r\n                },\r\n                small: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Ambient_Occlusion_test.jpg',\r\n                  hash: 'small_leatherrete_black_Ambient_Occlusion_75b9c3d553',\r\n                  mime: 'image/jpeg',\r\n                  name: 'small_leatherrete black _AmbientOcclusion.jpg',\r\n                  path: null,\r\n                  size: 3.52,\r\n                  width: 500,\r\n                  height: 500,\r\n                },\r\n                medium: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Ambient_Occlusion_test.jpg',\r\n                  hash: 'medium_leatherrete_black_Ambient_Occlusion_75b9c3d553',\r\n                  mime: 'image/jpeg',\r\n                  name: 'medium_leatherrete black _AmbientOcclusion.jpg',\r\n                  path: null,\r\n                  size: 19.7,\r\n                  width: 750,\r\n                  height: 750,\r\n                },\r\n                thumbnail: {\r\n                  ext: '.jpg',\r\n                  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/roze_strelice_Ambient_Occlusion_test.jpg',\r\n                  hash: 'thumbnail_leatherrete_black_Ambient_Occlusion_75b9c3d553',\r\n                  mime: 'image/jpeg',\r\n                  name: 'thumbnail_leatherrete black _AmbientOcclusion.jpg',\r\n                  path: null,\r\n                  size: 0.42,\r\n                  width: 156,\r\n                  height: 156,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n","import {\r\n  InputMaybe,\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialFragment,\r\n  MaterialGroupEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n  useGetMaterialsQuery,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nimport cn from 'classnames';\r\nimport { useEffect } from 'react';\r\n\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { createStore, Provider, useMaterialGroupStore } from './MaterialGroupState';\r\nimport { MaterialType } from './MaterialType';\r\nimport SelectedMaterialInfo from './SelectedMaterialInfo';\r\nimport { Falsey } from 'lodash';\r\nimport testMaterial from './test-material';\r\n\r\nexport interface MaterialGroupProps {\r\n  className?: string;\r\n  materialGroup?: Maybe<MaterialGroupEntity>;\r\n  materialType?: Maybe<MaterialTypeEntity>;\r\n  colourGroup?: Maybe<MaterialColourGroupEntity>;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nconst MaterialGroupLoader = ({\r\n  className,\r\n  materialGroup,\r\n  materialType,\r\n  colourGroup,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  selectedMaterialId,\r\n}: MaterialGroupProps) => {\r\n  const colourGroups = useMaterialGroupStore((state) => state.colourGroups);\r\n  const selectedColourGroup = useMaterialGroupStore((state) => state.selectedColourGroup);\r\n  const setMaterials = useMaterialGroupStore((state) => state.setMaterials);\r\n  const setColourGroup = useMaterialGroupStore((state) => state.setColourGroup);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const typeIds = materialGroup?.attributes?.materialTypes\r\n    ? (materialGroup.attributes.materialTypes.data.map((t) => t.id) as InputMaybe<string>[])\r\n    : [];\r\n\r\n  const { data: materials } = useGetMaterialsQuery(\r\n    graphQLClient,\r\n    { filters: { type: { id: { in: typeIds } } }, pagination: { pageSize: 200 } },\r\n    {\r\n      select: (data) => data.materials?.data as MaterialEntity[],\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (materials?.length) {\r\n      // // TODO - remove: temporary for testing new materials\r\n      if (!materials.find((a) => a.id === '999')) {\r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        materials.push(testMaterial);\r\n      }\r\n      // console.log('materials', materials);\r\n      setMaterials(materials, materialType, colourGroup);\r\n    }\r\n  }, [materials]);\r\n\r\n  if (!materialGroup) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && (\r\n        <>\r\n          <h5>Colour</h5>\r\n          <div className={styles.colourGroups}>\r\n            {colourGroups.map((group) => {\r\n              const styles: React.CSSProperties | undefined = {\r\n                background: group.attributes?.colour ?? '#000',\r\n              };\r\n              if (selectedColourGroup?.id === group.id) {\r\n                styles.outline = `4px solid ${group.attributes?.colour}`;\r\n              }\r\n\r\n              return (\r\n                <button key={group.id} onClick={() => setColourGroup(group)}>\r\n                  <svg\r\n                    style={styles}\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    viewBox='0 0 42 42'\r\n                    // strokeWidth={4}\r\n                    // stroke={\r\n                    //   selectedColourGroup?.id === group.id\r\n                    //     ? '#000'\r\n                    //     : group.attributes?.colour ?? '#000'\r\n                    // }\r\n                    fill={'transparent'}\r\n                  >\r\n                    <rect width='100%' height='100%' />\r\n                  </svg>\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n      <MaterialType\r\n        hideColorGroups={hideColorGroups}\r\n        onMaterialSelected={onMaterialSelected}\r\n        selectedMaterialId={selectedMaterialId}\r\n      />\r\n      <SelectedMaterialInfo />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MaterialGroup = (props: MaterialGroupProps) => {\r\n  return (\r\n    <Provider createStore={createStore}>\r\n      <MaterialGroupLoader {...props} />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default MaterialGroup;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"NavPart_buttonContainer__3whqC\",\"showOptional\":\"NavPart_showOptional__s6PPL\"};","import styles from './Button.module.scss';\r\n\r\ninterface TogglePillButtonProps {\r\n  onClick?: () => void;\r\n  children: React.ReactNode;\r\n  isOn?: boolean;\r\n\r\n  className?: string;\r\n}\r\n\r\nconst TogglePillButton = ({ onClick, children, isOn, className }: TogglePillButtonProps) => {\r\n  const buttonClassNames = `\r\n    ${styles.togglePillButton}\r\n    ${className}\r\n    ${isOn ? styles.on : ''}\r\n  `;\r\n  return (\r\n    <button className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TogglePillButton;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport { CustomProductPartFragment, MaterialFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport NavButtons from '../NavButtons';\r\n\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { FaMinus } from 'react-icons/fa';\r\n\r\nimport styles from './NavPart.module.scss';\r\nimport TogglePillButton from '@components/ui/Button/TogglePillButton';\r\n\r\nexport interface NavPartProps {\r\n  className?: string;\r\n  part: CustomProductPartFragment;\r\n}\r\n\r\nconst NavPart = ({ className, part }: NavPartProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedPart = useCustomiserStore((state) => state.selectedPart);\r\n  const setPart = useCustomiserStore((state) => state.setPart);\r\n  const removePart = useCustomiserStore((state) => state.removePart);\r\n  const parts = useCustomiserStore((state) => state.parts);\r\n  const currentPart = useMemo(() => parts.find((p) => p.part.id === part?.id), [part]);\r\n  const [showOptional, setShowOptional] = useState(false);\r\n\r\n  let selectedMaterialId = parts.find((part) => part.part.name === selectedPart?.name)?.material.id;\r\n  const confirmText = !selectedMaterialId\r\n    ? 'Are you sure you want to continue with the default color?'\r\n    : null;\r\n\r\n  if (!part?.materialGroup?.data) {\r\n    return null;\r\n  }\r\n\r\n  const onMaterialSelected = (material: MaterialFragment) => {\r\n    if (selectedPart && material) {\r\n      selectedMaterialId = material.id;\r\n      setPart(selectedPart, material);\r\n    }\r\n  };\r\n\r\n  const optionalOnClick = (show: boolean) => {\r\n    setShowOptional(show);\r\n    if (!show) {\r\n      removePart(part);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (part.optional && !showOptional && currentPart) {\r\n      setShowOptional(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        key={part.id}\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <div className={styles.buttonContainer}>\r\n          {part.optional && (\r\n            <TogglePillButton\r\n              className={styles.showOptional}\r\n              isOn={showOptional}\r\n              onClick={() => optionalOnClick(!showOptional)}\r\n            >\r\n              {showOptional ? (\r\n                <>\r\n                  <FaMinus />\r\n                  &ensp;Remove\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <IoMdAdd />\r\n                  &ensp;Add\r\n                </>\r\n              )}{' '}\r\n              {part.name}\r\n            </TogglePillButton>\r\n          )}\r\n        </div>\r\n        {(!part.optional || (part.optional && showOptional)) && (\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <MaterialGroup\r\n              materialGroup={part.materialGroup.data}\r\n              materialType={currentPart?.material.attributes?.type?.data}\r\n              colourGroup={currentPart?.material.attributes?.colourGroups?.data[0]}\r\n              onMaterialSelected={onMaterialSelected}\r\n              selectedMaterialId={selectedMaterialId}\r\n            />\r\n          </Suspense>\r\n        )}\r\n      </motion.div>\r\n      <NavButtons confirmStorage='partsMaterial' confirmText={confirmText} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavPart;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormInput_root__cf10F\",\"input\":\"FormInput_input__gRXur\",\"label\":\"FormInput_label__9L2lb\"};","import cn from 'classnames';\r\nimport { InputHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormInput.module.scss';\r\n\r\nexport interface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormInput = ({ className, placeholder, children, ...props }: FormInputProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <input className={styles.input} {...props} placeholder=' ' />\r\n      <label className={styles.label}>{placeholder}</label>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormSelect_root__li+Rt\",\"select\":\"FormSelect_select__ftYcv\",\"icon\":\"FormSelect_icon__juFw+\"};","import cn from 'classnames';\r\nimport { SelectHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormSelect.module.scss';\r\n\r\nexport interface FormSelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormSelect = ({ className, children, ...props }: FormSelectProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <select className={styles.select} {...props}>\r\n        {children}\r\n      </select>\r\n      <svg xmlns='http://www.w3.org/2000/svg' className={styles.icon} viewBox='0 0 18.108 30.546'>\r\n        <path d='m2.835 30.545-2.836-2.836 12.387-12.436L0 2.835 2.836-.001l15.272 15.274Z' />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSelect;\r\n","import { ShopifyProductVariantFragment } from '@graphql/generated/graphql-shopify';\r\n\r\nconst getSizeVariation = (\r\n  unit: string,\r\n  weight: number,\r\n  variations: Array<ShopifyProductVariantFragment>,\r\n) => {\r\n  let size = '';\r\n  if (unit === 'KGS') {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 10:\r\n        size = 'BABY';\r\n        break;\r\n      case 10 <= weight && weight < 16:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 16 <= weight && weight < 22:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 22 <= weight && weight < 30:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 30 <= weight && weight < 40:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 40 <= weight && weight < 50:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 50 <= weight && weight < 59:\r\n        size = 'XS';\r\n        break;\r\n      case 59 <= weight && weight < 69:\r\n        size = 'S';\r\n        break;\r\n      case 69 <= weight && weight < 79:\r\n        size = 'M';\r\n        break;\r\n      case 79 <= weight && weight < 90:\r\n        size = 'L';\r\n        break;\r\n      case 90 <= weight && weight < 101:\r\n        size = 'XL';\r\n        break;\r\n      case 101 <= weight && weight < 111:\r\n        size = '2XL';\r\n        break;\r\n      case 111 <= weight && weight < 120:\r\n        size = '3XL';\r\n        break;\r\n      case 120 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  } else {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 22:\r\n        size = 'BABY';\r\n        break;\r\n      case 22 <= weight && weight < 35.3:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 35.3 <= weight && weight < 48.5:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 48.5 <= weight && weight < 66.1:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 66.1 <= weight && weight < 88.2:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 88.2 <= weight && weight < 110.2:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 110.2 <= weight && weight < 130:\r\n        size = 'XS';\r\n        break;\r\n      case 130 <= weight && weight < 152.1:\r\n        size = 'S';\r\n        break;\r\n      case 152.1 <= weight && weight < 174.2:\r\n        size = 'M';\r\n        break;\r\n      case 174.2 <= weight && weight < 198.4:\r\n        size = 'L';\r\n        break;\r\n      case 198.4 <= weight && weight < 222.7:\r\n        size = 'XL';\r\n        break;\r\n      case 222.7 <= weight && weight < 244.7:\r\n        size = '2XL';\r\n        break;\r\n      case 244.7 <= weight && weight < 264.6:\r\n        size = '3XL';\r\n        break;\r\n      case 264.6 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  }\r\n\r\n  return variations.find((v) => v.sku?.endsWith(size));\r\n};\r\n\r\nexport default getSizeVariation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"variations\":\"NavSize_variations__cMdjc\",\"unitToggle\":\"NavSize_unitToggle__LqIuI\",\"toggleButton\":\"NavSize_toggleButton__5PZDI\",\"toggleButtonSelected\":\"NavSize_toggleButtonSelected__au+Rx\"};","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport getSizeVariation from '@services/size';\r\nimport { UNIT } from '@store/constants';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { ChangeEvent, useEffect } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavSize.module.scss';\r\n\r\nexport interface NavSizeProps {\r\n  className?: string;\r\n}\r\n\r\nconst NavSize = ({ className }: NavSizeProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const variations = useCustomiserStore((state) => state.variations);\r\n  const setSizing = useCustomiserStore((state) => state.setSizing);\r\n  const weight = useCustomiserStore((state) => state.sizing?.weight);\r\n  const height = useCustomiserStore((state) => state.sizing?.height);\r\n  const variation = useCustomiserStore((state) => state.sizing?.variation);\r\n\r\n  useEffect(() => {\r\n    if (weight?.value && weight.unit) {\r\n      const variation = getSizeVariation(weight.unit, weight.value, variations);\r\n      setSizing(undefined, undefined, variation);\r\n    }\r\n  }, [weight, variations]);\r\n\r\n  const onHeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing({ value: Number(e.target.value), unit: 'CM' });\r\n  };\r\n\r\n  const onWeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing(undefined, { value: Number(e.target.value), unit: 'KGS' });\r\n  };\r\n\r\n  const onVariationChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const id = e.target.value;\r\n    const selectedVariation = variations.find((v) => v.id === id);\r\n    setSizing(undefined, undefined, selectedVariation);\r\n  };\r\n\r\n  const setHeightUnit = (unit: string) => {\r\n    setSizing({ value: height?.value, unit });\r\n  };\r\n\r\n  const setWeightUnit = (unit: string) => {\r\n    setSizing(undefined, { value: weight?.value, unit });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <h3>Size Details</h3>\r\n        <p>\r\n          To help us make sure the size you’ve selected is correct, enter your height and weight\r\n          below.\r\n        </p>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Height'\r\n          step='0.1'\r\n          required\r\n          value={height?.value ? height.value : ''}\r\n          onChange={onHeightChange}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.CM,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.CM)}\r\n            >\r\n              {UNIT.HEIGHT.CM}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.INCH,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.INCH)}\r\n            >\r\n              {UNIT.HEIGHT.INCH}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Weight'\r\n          step='0.1'\r\n          required\r\n          value={weight?.value ? weight.value : ''}\r\n          onChange={onWeightChange}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.KG,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.KG)}\r\n            >\r\n              {UNIT.WEIGHT.KG}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.LB,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.LB)}\r\n            >\r\n              {UNIT.WEIGHT.LB}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <h3>Suggested Size</h3>\r\n        <FormSelect value={variation?.id} onChange={onVariationChange}>\r\n          {variations.map((v) => (\r\n            <option key={v.id} value={v.id}>\r\n              {v.title}\r\n            </option>\r\n          ))}\r\n        </FormSelect>\r\n      </motion.div>\r\n      <NavButtons />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavSize;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"arial\":\"NavText_arial__de7L4\",\"oswald\":\"NavText_oswald__siLdE\",\"college\":\"NavText_college__YR6iT\",\"ballantines\":\"NavText_ballantines__1B1LU\",\"navTextEdit\":\"NavText_navTextEdit__8WUIS\",\"textItem\":\"NavText_textItem__nQrv4\",\"textItemText\":\"NavText_textItemText__op7hZ\",\"finishSelections\":\"NavText_finishSelections__fH4yd\",\"disabled\":\"NavText_disabled__M-nHo\",\"showOutline\":\"NavText_showOutline__T7KEv\",\"fontSelection\":\"NavText_fontSelection__AH-QM\",\"font\":\"NavText_font__v43yE\",\"finishSelection\":\"NavText_finishSelection__CfQ+O\",\"selected\":\"NavText_selected__SIXSo\",\"pricing\":\"NavText_pricing__qUsci\",\"materialGroup\":\"NavText_materialGroup__j+DTa\",\"navTextsSelection\":\"NavText_navTextsSelection__gJNy+\",\"title\":\"NavText_title__u+YKh\",\"titleText\":\"NavText_titleText__lFoUP\",\"textPreview\":\"NavText_textPreview__CfhSo\",\"noText\":\"NavText_noText__Parmv\",\"textPreview__imgContainer\":\"NavText_textPreview__imgContainer__6SJ9b\",\"promptMessage\":\"NavText_promptMessage__iKeIZ\",\"applyTextBtnContainer\":\"NavText_applyTextBtnContainer__I8nfd\",\"navHeaderSaveText\":\"NavText_navHeaderSaveText__h8PoA\",\"selectedCategoryItem\":\"NavText_selectedCategoryItem__jjmwJ\",\"finishedCategoryItem\":\"NavText_finishedCategoryItem__AC3wU\",\"categoryDisplayName\":\"NavText_categoryDisplayName__pATtN\",\"textInputContainer\":\"NavText_textInputContainer__KQMDX\",\"textInput\":\"NavText_textInput__Z49KW\",\"textDone\":\"NavText_textDone__rPeDE\",\"textPreviewTextInput\":\"NavText_textPreviewTextInput__lQXU8\"};","// extracted by mini-css-extract-plugin\nexport default {};","import cn from 'classnames';\r\n\r\nimport styles from './Price.module.scss';\r\n\r\nexport interface PriceProps {\r\n  className?: string;\r\n  price?: number;\r\n  priceString?: string;\r\n}\r\n\r\nconst Price = ({ className, price, priceString }: PriceProps) => {\r\n  const rootClassName = cn('price-item', styles.root, className);\r\n  // TODO - Make currency change depending on selected currency.\r\n  const currency = '£';\r\n\r\n  const formattedPrice =\r\n    price !== undefined ? `${currency}${price.toFixed(2)}` : `${currency}${priceString}`;\r\n\r\n  if (!formattedPrice) {\r\n    return null;\r\n  }\r\n\r\n  return <span className={rootClassName}>{formattedPrice}</span>;\r\n};\r\n\r\nexport default Price;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useMemo, useState } from 'react';\r\n\r\nimport Price from '@components/ui/Price';\r\nimport { NAME_TYPE_LUXURY_ID } from '@store/constants';\r\nimport cn from 'classnames';\r\nimport styles from './NavText.module.scss';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\n\r\nexport interface NavTextFinishProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingCrystal?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextFinish: FC<NavTextFinishProps> = ({ editText = {}, setIsPickingCrystal }) => {\r\n  const { selectedName } = editText;\r\n  const selectedMaterialId = editText?.crystalBackground?.id;\r\n\r\n  const [crystals, setCrystals] = useState<boolean>(editText?.crystalPrice ? true : false);\r\n  const [puff, setPuff] = useState<boolean>(editText?.puffPrice ? true : false);\r\n\r\n  const hasPuffOption = useMemo(() => selectedName?.id === NAME_TYPE_LUXURY_ID, [selectedName]);\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  useEffect(() => {\r\n    setPuff(editText.puffPrice ? true : false);\r\n  }, [editText.puffPrice]);\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setCrystalBackground = (crystalBackground: MaterialFragment | undefined) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        crystalBackground,\r\n      });\r\n    }\r\n  };\r\n\r\n  const addCrystals = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setCrystals(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          crystalPrice: {\r\n            price: selectedName.attributes?.crystalPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.crystalPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          crystalPrice: undefined,\r\n          crystalBackground: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const addPuff = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setPuff(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          puffPrice: {\r\n            price: selectedName.attributes?.puffPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.puffPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          puffPrice: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.finishSelections}>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: !crystals,\r\n          })}\r\n          onClick={() => {\r\n            setIsPickingCrystal && setIsPickingCrystal(false);\r\n            addCrystals(false);\r\n          }}\r\n        >\r\n          No Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: crystals,\r\n          })}\r\n          onClick={() => {\r\n            addCrystals(true);\r\n            setIsPickingCrystal && setIsPickingCrystal(true);\r\n          }}\r\n        >\r\n          Add Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.crystalPrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {!crystals && (\r\n        <div className={styles.finishSelections}>\r\n          <div\r\n            className={cn(styles.finishSelection, { [styles.selected]: !puff })}\r\n            onClick={() => addPuff(false)}\r\n          >\r\n            Flat\r\n            <div className={styles.pricing}>\r\n              {' +'}\r\n              <Price price={0} />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: puff,\r\n              [styles.disabled]: !hasPuffOption,\r\n            })}\r\n            onClick={() => addPuff(true)}\r\n          >\r\n            Add 3D Puff\r\n            {hasPuffOption ? (\r\n              <div className={styles.pricing}>\r\n                {' +'}\r\n                <Price price={selectedName.attributes?.puffPrice?.price} />\r\n              </div>\r\n            ) : (\r\n              <div className={styles.pricing}>(Only available for luxury colors)</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {crystals && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName.attributes?.materialGroup?.data}\r\n          materialType={editText.material?.attributes?.type?.data}\r\n          colourGroup={editText.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setCrystalBackground}\r\n          className={styles.materialGroup}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextFinish;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment, NameEntity, useGetNamesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextNameTypesProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextNameTypes = ({ editText = {} }: NavTextNameTypesProps) => {\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const selectedMaterialId = editText?.material?.id;\r\n\r\n  const { selectedName } = editText;\r\n  const prevSelectedName = useRef(selectedName);\r\n\r\n  const { data: names } = useGetNamesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => data.names?.data,\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (editText?.key && selectedName && prevSelectedName.current !== selectedName) {\r\n      prevSelectedName.current = selectedName;\r\n\r\n      updateText(editText.key, {\r\n        basePrice: {\r\n          price: selectedName.attributes?.basePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.basePrice?.shopifyVariantId,\r\n        },\r\n        letterPrice: {\r\n          price: selectedName.attributes?.letterPrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.letterPrice?.shopifyVariantId,\r\n        },\r\n        nameType: {\r\n          id: selectedName.id,\r\n          name: selectedName.attributes?.name,\r\n        },\r\n        /**\r\n         * Reset material when selectedName changes.\r\n         *\r\n         * Different name types would have different\r\n         * material groups.\r\n         */\r\n        material: undefined,\r\n        ...(editText.outline\r\n          ? {\r\n              outlinePrice: {\r\n                price: selectedName.attributes?.outlinePrice?.price,\r\n                quantity: 1,\r\n                shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n              },\r\n            }\r\n          : {}),\r\n\r\n        puffPrice: undefined,\r\n      });\r\n    }\r\n  }, [selectedName]);\r\n\r\n  const setMaterial = (material: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        material,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setSelectedName = (name: NameEntity) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        selectedName: name,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!selectedName && <i className={styles.promptMessage}>Select a text color type</i>}\r\n      <div className={styles.categoryDisplayName}>Choose Color:</div>\r\n      <div className={styles.finishSelections}>\r\n        {names?.map((n) => (\r\n          <div\r\n            key={n.id}\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: selectedName && n.id === selectedName.id,\r\n            })}\r\n            onClick={() => setSelectedName(n)}\r\n          >\r\n            {n.attributes?.name}\r\n            <div className={styles.pricing}>\r\n              <Price price={n.attributes?.basePrice?.price} />\r\n              {' + '}\r\n              <Price price={n.attributes?.letterPrice?.price} /> per letter\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedName && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName?.attributes?.materialGroup?.data}\r\n          materialType={editText?.material?.attributes?.type?.data}\r\n          colourGroup={editText?.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setMaterial}\r\n          className={styles.materialGroup}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNameTypes;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useState } from 'react';\r\n\r\nimport PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextOutlineProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingOutline?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextOutline: FC<NavTextOutlineProps> = ({ editText = {}, setIsPickingOutline }) => {\r\n  const [showOutline, setShowOutline] = useState<boolean>(editText?.outline ? true : false);\r\n  const selectedMaterialId = editText?.outline?.id;\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  const { selectedName } = editText;\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setOutline = (outline: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        outline,\r\n        outlinePrice: {\r\n          price: selectedName.attributes?.outlinePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateOutline = (show: boolean) => {\r\n    setShowOutline(show);\r\n    if (!show && editText?.key) {\r\n      updateText(editText.key, {\r\n        outline: undefined,\r\n        outlinePrice: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={cn(styles.showOutline, styles.finishSelections)}>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: !showOutline })}\r\n          onClick={() => {\r\n            updateOutline(false);\r\n            setIsPickingOutline && setIsPickingOutline(false);\r\n          }}\r\n        >\r\n          No Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: showOutline })}\r\n          onClick={() => {\r\n            updateOutline(true);\r\n            setIsPickingOutline && setIsPickingOutline(true);\r\n          }}\r\n        >\r\n          Add Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.outlinePrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showOutline && (\r\n        <>\r\n          <MaterialGroup\r\n            hideColorGroups\r\n            materialGroup={selectedName?.attributes?.outlineGroup?.data}\r\n            materialType={editText?.outline?.attributes?.type?.data}\r\n            colourGroup={editText?.outline?.attributes?.colourGroups?.data[0]}\r\n            onMaterialSelected={setOutline}\r\n            className={styles.materialGroup}\r\n            selectedMaterialId={selectedMaterialId}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextOutline;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport interface NavTextSelectProps {\r\n  className?: string;\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst fonts = [\r\n  {\r\n    name: 'Arial',\r\n    className: styles.arial,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/arial-bold-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Oswald',\r\n    className: styles.oswald,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/oswald-semibold.woff',\r\n  },\r\n  {\r\n    name: 'College',\r\n    className: styles.college,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/college_block-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Ballantines',\r\n    className: styles.ballantines,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/ballantines-bold-webfont.woff',\r\n  },\r\n];\r\n\r\nconst NavTextSelect = ({ className, editText }: NavTextSelectProps) => {\r\n  const portalRef = usePortalRef('popupContainer');\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const [font, setFont] = useState<(typeof fonts)[number]>(\r\n    fonts.find((f) => editText?.font === f.url) ?? fonts[0],\r\n  );\r\n  const { addText, updateText } = useCustomiserStore((state) => state);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (font) {\r\n        addText({ font: font.url });\r\n      }\r\n    }\r\n  }, [font]);\r\n\r\n  const setTextOnChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onFontChange = (font: (typeof fonts)[number]) => {\r\n    setFont(font);\r\n  };\r\n\r\n  if (!portalRef) return null;\r\n\r\n  return (\r\n    <div className={className}>\r\n      {/* {ReactDOM.createPortal(\r\n        <div className={styles.textInputContainer}>\r\n          <FormInput\r\n            className={styles.textInput}\r\n            placeholder='Type text here...'\r\n            value={text}\r\n            onChange={setTextOnChange}\r\n          >\r\n            <span className={styles.textDone}>Done</span>\r\n          </FormInput>\r\n        </div>,\r\n        portalRef,\r\n      )} */}\r\n      <div className={styles.categoryDisplayName}>Choose Font:</div>\r\n      <div className={styles.fontSelection}>\r\n        {fonts.map((_font) => (\r\n          <div\r\n            key={_font.name}\r\n            onClick={() => onFontChange(_font)}\r\n            className={cn(styles.font, _font.className, {\r\n              [styles.selected]: font.name === _font.name,\r\n            })}\r\n          >\r\n            {_font.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* <FormSelect\r\n        className={fonts.find((f) => f.url === font)?.className}\r\n        value={font}\r\n        onChange={onFontChange}\r\n      >\r\n        {fonts.map((f) => (\r\n          <option className={f.className} key={f.url} value={f.url}>\r\n            {f.name}\r\n          </option>\r\n        ))}\r\n      </FormSelect> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextSelect;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { Dispatch, MouseEventHandler, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\n\r\nimport styles from './NavText.module.scss';\r\n\r\nexport interface NavTextTextProps {\r\n  text: TextCustomiser;\r\n  className?: string;\r\n  setShowSelector?: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextText = ({ className, text, setShowSelector }: NavTextTextProps) => {\r\n  const { updateText, deleteText } = useCustomiserStore((state) => state);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const editItem = () => {\r\n    if (text.key) {\r\n      updateText(text.key, { edit: true });\r\n      setShowSelector && setShowSelector(true);\r\n    }\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    if (!text.key) return;\r\n    updateText(text.key, {\r\n      isVisible: typeof text.isVisible !== 'undefined' ? !text.isVisible : false,\r\n    });\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (text.key) {\r\n      deleteText(text.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.textItem} onClick={editItem}>\r\n      <div className={styles.textItemText}>{text.text}</div>\r\n      <NavOptionEdit\r\n        toggleVisibility={toggleVisibility}\r\n        onEdit={editItem}\r\n        onDelete={deleteItem}\r\n        isVisible={text.isVisible}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextText;\r\n","import { FC } from 'react';\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextText from './NavTextText';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\ntype NavTextsSelectionProps = {\r\n  onAddTextClicked?: () => void;\r\n  onTextSelected?: () => void;\r\n};\r\n\r\nconst NavTextsSelection: FC<NavTextsSelectionProps> = ({ onAddTextClicked, onTextSelected }) => {\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n\r\n  return (\r\n    <div className={styles.navTextsSelection}>\r\n      <div className={styles.title}>\r\n        <h3 className={styles.titleText}>Your Texts</h3>\r\n\r\n        <ContainedButton onClick={onAddTextClicked}>Add Text</ContainedButton>\r\n      </div>\r\n\r\n      {texts.map((t) => (\r\n        <NavTextText key={t.key} text={t} setShowSelector={onTextSelected} />\r\n      ))}\r\n\r\n      <NavButtons\r\n        confirmStorage='saveTextsNotification'\r\n        confirmText='You can still add more text. Save anyway?'\r\n      ></NavButtons>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextsSelection;\r\n","import type { MaterialFragment } from '@graphql/generated/graphql';\r\nimport type { Falsey } from 'lodash';\r\n// eslint-disable-next-line\r\n// @ts-ignore\r\nimport { NormalMapGenerator } from 'normalmap-online';\r\n\r\nexport function getMaterialUrl(material: MaterialFragment | undefined): string {\r\n  return material?.attributes?.images?.find((imgMap) => imgMap?.mapType === 'map')?.image.data\r\n    ?.attributes?.formats.large.url;\r\n}\r\n\r\n// TODO - Relocate this\r\ninterface ImgToNormalMapParams {\r\n  img: HTMLImageElement | HTMLCanvasElement;\r\n  hasPuff?: boolean;\r\n  blur?: number;\r\n}\r\nconst normalMapGenerator = NormalMapGenerator.instance();\r\nasync function imgToNormalMap({ img, hasPuff, blur }: ImgToNormalMapParams) {\r\n  const blurAmount = hasPuff ? blur || 7 : 1;\r\n  return normalMapGenerator.generateFromImage(img, {\r\n    strength: 0.5,\r\n    blur: blurAmount,\r\n    level: 1,\r\n  });\r\n}\r\n\r\ninterface PreviewText {\r\n  material: HTMLImageElement | undefined;\r\n  outline: HTMLImageElement | undefined;\r\n  previewImg?: HTMLImageElement;\r\n  normalMapPatternImg?: HTMLImageElement | false;\r\n  crystalBgPatternImg?: HTMLImageElement | Falsey;\r\n  crystalBgImg?: HTMLImageElement | Falsey;\r\n}\r\n\r\nexport type PatternType = 'crystals' | 'embroidery' | Falsey;\r\n\r\ninterface CanvasTextConstructor {\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n}\r\n\r\nexport class CanvasText {\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  outlineCanvas: HTMLCanvasElement;\r\n  outlineCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapTextureCanvas: HTMLCanvasElement;\r\n  normalMapTextureCtx: CanvasRenderingContext2D;\r\n  normalMapCanvas: HTMLCanvasElement;\r\n  normalMapCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapOutlineTextureCanvas: HTMLCanvasElement;\r\n  normalMapOutlineTextureCtx: CanvasRenderingContext2D;\r\n  normalMapOutlineCanvas: HTMLCanvasElement;\r\n  normalMapOutlineCtx2: CanvasRenderingContext2D;\r\n\r\n  crystalBgPatternCanvas: HTMLCanvasElement;\r\n  crystalBgPatternCtx: CanvasRenderingContext2D;\r\n\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n  fontSize: number;\r\n  outlineWidth: number;\r\n\r\n  constructor({ hasPuff, toNormalMap, text, patternType }: CanvasTextConstructor) {\r\n    this.hasPuff = hasPuff;\r\n    this.toNormalMap = toNormalMap;\r\n    this.patternType = patternType;\r\n    this.text = text;\r\n\r\n    this.fontSize = 360;\r\n    this.canvasHeight = 400;\r\n    this.canvasWidth = 3200;\r\n    this.outlineWidth = 20;\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.height = this.canvasHeight;\r\n    this.canvas.width = this.canvasWidth;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.outlineCanvas = document.createElement('canvas');\r\n    this.outlineCanvas.height = this.canvasHeight;\r\n    this.outlineCanvas.width = this.canvasWidth;\r\n    this.outlineCtx = this.outlineCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    // Normal map section\r\n\r\n    this.normalMapTextureCanvas = document.createElement('canvas');\r\n    this.normalMapTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapTextureCtx = this.normalMapTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapCanvas = document.createElement('canvas');\r\n    this.normalMapCanvas.height = this.canvasHeight;\r\n    this.normalMapCanvas.width = this.canvasWidth;\r\n    this.normalMapCtx = this.normalMapCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineTextureCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineTextureCtx = this.normalMapOutlineTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineCtx2 = this.normalMapOutlineCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    // TODO - make a function for setting canvas height and ctx instead\r\n    this.crystalBgPatternCanvas = document.createElement('canvas');\r\n    this.crystalBgPatternCanvas.height = this.canvasHeight;\r\n    this.crystalBgPatternCanvas.width = this.canvasWidth;\r\n    this.crystalBgPatternCtx = this.crystalBgPatternCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n  }\r\n\r\n  public clear() {\r\n    this.ctx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.outlineCtx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n  public async drawImg(ctx: CanvasRenderingContext2D, src: HTMLImageElement) {\r\n    ctx.drawImage(src, 0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  public showTestCanvas(canvas: HTMLCanvasElement) {\r\n    const testPreviewDom = document.getElementById('testPreview'); // TEST ONLY, TO BE REMOVED\r\n    (testPreviewDom as unknown as HTMLElement).innerHTML = ''; // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(canvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineTextureCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.crystalBgPatternCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.outlineCanvas); // TEST ONLY, TO BE REMOVED\r\n  }\r\n\r\n  public async maskImage(ctx: CanvasRenderingContext2D, img: HTMLImageElement) {\r\n    ctx.globalCompositeOperation = 'source-in';\r\n    await this.drawImg(ctx, img);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  public drawPreviewText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n  }\r\n\r\n  public drawPreviewOutlineText() {\r\n    if (!this.text) return;\r\n\r\n    this.outlineCtx.font = `${this.fontSize}px testFont`;\r\n    this.outlineCtx.textAlign = 'center';\r\n    this.outlineCtx.lineWidth = this.outlineWidth;\r\n    this.outlineCtx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n  }\r\n\r\n  public drawPreviewOutlineOnlyText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.lineWidth = 30;\r\n    ctx.fillStyle = 'green';\r\n    ctx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n    ctx.globalCompositeOperation = 'destination-out';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  private async drawNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewText(this.normalMapTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      this.normalMapTextureCtx.fillStyle = pattern;\r\n      this.normalMapTextureCtx.fill();\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    const normalMap = this.toNormalMap\r\n      ? await imgToNormalMap({\r\n          img: this.normalMapTextureCanvas,\r\n          hasPuff: this.hasPuff,\r\n        })\r\n      : this.normalMapTextureCanvas;\r\n\r\n    this.normalMapCtx.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawOutlineNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewOutlineOnlyText(this.normalMapOutlineTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapOutlineTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapOutlineTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      if (this.patternType !== 'crystals') {\r\n        this.normalMapOutlineTextureCtx.fillStyle = pattern;\r\n      }\r\n      this.normalMapOutlineTextureCtx.fill();\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    const normalMap =\r\n      this.toNormalMap || this.patternType === 'crystals'\r\n        ? await imgToNormalMap({\r\n            img: this.normalMapOutlineTextureCanvas,\r\n            hasPuff: this.patternType === 'crystals' ? true : this.hasPuff,\r\n            blur: 4,\r\n          })\r\n        : this.normalMapOutlineTextureCanvas;\r\n    this.normalMapOutlineCtx2.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawCrystalBg(\r\n    crystalBgImg: HTMLImageElement,\r\n    crystalBgPatternImg: HTMLImageElement,\r\n  ) {\r\n    const pattern = this.crystalBgPatternCtx.createPattern(crystalBgPatternImg, 'repeat');\r\n\r\n    if (!pattern) return;\r\n\r\n    this.crystalBgPatternCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.fillStyle = pattern;\r\n    this.crystalBgPatternCtx.fill();\r\n\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-in';\r\n    this.crystalBgPatternCtx.globalAlpha = 0.9;\r\n    this.crystalBgPatternCtx.drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.drawImage(crystalBgImg, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-over';\r\n\r\n    this.outlineCtx.drawImage(this.crystalBgPatternCanvas, 0, 0);\r\n  }\r\n\r\n  private printTextMapToStrokeMap() {\r\n    this.normalMapCtx.globalCompositeOperation = 'destination-in';\r\n    this.normalMapCtx.drawImage(this.normalMapTextureCanvas, 0, 0);\r\n    this.normalMapCtx.globalCompositeOperation = 'source-over'; // reset to default\r\n    this.normalMapOutlineCtx2.drawImage(this.normalMapCanvas, 0, 0);\r\n  }\r\n\r\n  public async previewText({\r\n    material,\r\n    outline,\r\n    previewImg,\r\n    normalMapPatternImg,\r\n    crystalBgPatternImg,\r\n    crystalBgImg,\r\n  }: PreviewText) {\r\n    if (!this.text) return;\r\n\r\n    this.clear();\r\n    this.showTestCanvas(this.normalMapTextureCanvas);\r\n\r\n    await this.drawNormalMap(normalMapPatternImg);\r\n    await this.drawOutlineNormalMap(normalMapPatternImg);\r\n\r\n    this.printTextMapToStrokeMap();\r\n\r\n    if (outline) {\r\n      this.drawPreviewOutlineText();\r\n      await this.maskImage(this.outlineCtx, outline);\r\n    }\r\n\r\n    this.drawPreviewText(this.ctx);\r\n\r\n    if (material) {\r\n      await this.maskImage(this.ctx, material);\r\n    }\r\n\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n    if (previewImg) previewImg.src = this.outlineCanvas.toDataURL();\r\n\r\n    if (crystalBgImg && crystalBgPatternImg) {\r\n      this.drawCrystalBg(crystalBgImg, crystalBgPatternImg);\r\n    }\r\n  }\r\n\r\n  public mergeCanvas() {\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n  }\r\n\r\n  getOutlineCanvas() {\r\n    return this.outlineCanvas;\r\n  }\r\n  getNormalMapTextureCanvas() {\r\n    return this.normalMapTextureCanvas;\r\n  }\r\n  getNormalMapOutlineCanvas() {\r\n    return this.normalMapOutlineCanvas;\r\n  }\r\n}\r\n","export async function loadImage(src: string): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    if (!src) resolve(img);\r\n    img.crossOrigin = 'anonymous';\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n    img.src = src;\r\n  });\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"canvasClickableCover\":\"NavTextScene_canvasClickableCover__ZoAVe\",\"canvasClickableCover__imgContainer\":\"NavTextScene_canvasClickableCover__imgContainer__qCzZl\",\"navTextSceneFullscreen\":\"NavTextScene_navTextSceneFullscreen__-hgDQ\",\"navTextSceneFullscreen__imgContainer\":\"NavTextScene_navTextSceneFullscreen__imgContainer__kyglX\",\"navTextSceneFullscreen__closeBtn\":\"NavTextScene_navTextSceneFullscreen__closeBtn__jtMmR\",\"navTextSceneFullscreen__zoomContainer\":\"NavTextScene_navTextSceneFullscreen__zoomContainer__struE\"};","import { Decal } from '@react-three/drei';\r\nimport { TextCustomiser } from '@store/customiser';\r\nimport { Texture, Vector2, Vector3 } from 'three';\r\nimport Lights from '../Lights';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport styles from './NavTextScene.module.scss';\r\nimport { memo, useCallback, useEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { usePortalRef } from '@hooks';\r\nimport QuickPinchZoom, { type UpdateAction, make3dTransformValue } from 'react-quick-pinch-zoom';\r\nimport { MdPinch } from 'react-icons/md';\r\n\r\ninterface NavTextPreviewSceneInterface {\r\n  text: TextCustomiser;\r\n}\r\n\r\nconst NavTextPreviewScene = ({ text }: NavTextPreviewSceneInterface) => {\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n  const [shouldShow, setShouldShow] = useState<boolean>(false);\r\n  const [zoom, setZoom] = useState<number>(1);\r\n  const [dataUrl, setDataUrl] = useState<string>('');\r\n\r\n  const portalRef = usePortalRef('popupContainer');\r\n\r\n  const scaleMultiplier = 2;\r\n  const scale = 10 * scaleMultiplier;\r\n  const scaleModifier = new Vector3(3.2 * scale, 0.4 * scale, 4);\r\n\r\n  const isLuxury: boolean = text.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = text.puffPrice ? true : false;\r\n  const hasCrystals: boolean = text.crystalPrice ? true : false;\r\n\r\n  const shouldNormalMap =\r\n    text.normalMap instanceof Texture && text.selectedName?.attributes?.name === 'Luxury';\r\n  const normalMap = shouldNormalMap ? text.normalMap : null;\r\n\r\n  const [canvasRefreshCount, setCanvasRefreshCount] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    setCanvasRefreshCount((cur) => cur + 1);\r\n  }, [text.normalMap, text.puffPrice, text.crystalPrice, text.selectedName?.id]);\r\n\r\n  let normalScale = 1;\r\n  if (hasCrystals) {\r\n    normalScale = 4;\r\n  } else if (isLuxury && !hasPuff) {\r\n    normalScale = 0.5;\r\n  } else if (isLuxury && hasPuff) {\r\n    normalScale = 3;\r\n  }\r\n\r\n  if (!portalRef) return null;\r\n\r\n  function addZoom() {\r\n    setZoom((cur) => {\r\n      if (cur >= 10) return cur;\r\n      return (cur += 0.1);\r\n    });\r\n  }\r\n  function subtractZoom() {\r\n    setZoom((cur) => {\r\n      if (cur <= 0.1) return cur;\r\n      return (cur -= 0.1);\r\n    });\r\n  }\r\n\r\n  const FullscreenImg = memo(({ dataUrl }: { dataUrl: string }) => {\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const onUpdate = useCallback(({ x, y, scale }: UpdateAction) => {\r\n      const { current: img } = imgRef;\r\n\r\n      if (img) {\r\n        const value = make3dTransformValue({ x, y, scale });\r\n\r\n        img.style.setProperty('transform', value);\r\n      }\r\n    }, []);\r\n    return (\r\n      <QuickPinchZoom onUpdate={onUpdate}>\r\n        <img ref={imgRef} src={dataUrl} alt='Text Preview' />\r\n      </QuickPinchZoom>\r\n    );\r\n  });\r\n  FullscreenImg.displayName = 'FullscreenImg';\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        key={canvasRefreshCount}\r\n        ref={(el) => {\r\n          canvasRef.current = el;\r\n        }}\r\n        gl={{\r\n          preserveDrawingBuffer: true,\r\n        }}\r\n      >\r\n        <Lights />\r\n        <mesh>\r\n          <planeBufferGeometry args={[20 * scaleMultiplier, 5 * scaleMultiplier]} />\r\n          <meshNormalMaterial visible={false} />\r\n          <Decal position={[0, 0, 0]} rotation={[0, 0, 0]} scale={scaleModifier}>\r\n            <meshStandardMaterial\r\n              map={text.preview instanceof Texture ? text.preview : null}\r\n              transparent\r\n              roughness={isLuxury && !hasCrystals ? 0.75 : 0}\r\n              depthTest\r\n              depthWrite={false}\r\n              normalMap={normalMap}\r\n              normalScale={new Vector2(normalScale, normalScale)}\r\n            />\r\n          </Decal>\r\n        </mesh>\r\n      </Canvas>\r\n      <div\r\n        className={styles.canvasClickableCover}\r\n        onClick={() => {\r\n          setShouldShow(true);\r\n          setDataUrl(canvasRef.current?.toDataURL() || '');\r\n        }}\r\n      >\r\n        <span className={styles.canvasClickableCover__imgContainer}>\r\n          <img height={32} width={32} src='/icons/click-icon.png' />\r\n        </span>\r\n      </div>\r\n      {shouldShow &&\r\n        canvasRef &&\r\n        dataUrl &&\r\n        createPortal(\r\n          <>\r\n            <div className={styles.navTextSceneFullscreen}>\r\n              <span\r\n                onClick={() => setShouldShow(false)}\r\n                className={styles.navTextSceneFullscreen__closeBtn}\r\n              >\r\n                x\r\n              </span>\r\n              <div className={styles.navTextSceneFullscreen__imgContainer}>\r\n                {dataUrl && <FullscreenImg dataUrl={dataUrl} />}\r\n              </div>\r\n              <span className={styles.navTextSceneFullscreen__zoomContainer}>\r\n                {/* <img\r\n                  onClick={addZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-in-icon.png'\r\n                  alt='zoom in'\r\n                />\r\n                <img\r\n                  onClick={subtractZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-out-icon.png'\r\n                  alt='zoom out'\r\n                /> */}\r\n                <MdPinch size={64} />\r\n              </span>\r\n            </div>\r\n          </>,\r\n          portalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextPreviewScene;\r\n","import { CanvasText, PatternType, getMaterialUrl } from '@lib/canvas';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { CanvasTexture } from 'three';\r\nimport type { NavTextSelectProps } from './NavTextSelect';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { loadImage } from '@lib/img.util';\r\nimport NavTextPreviewScene from '@components/three/CustomiserCanvas/NavTextScene';\r\nimport FormInput from '@components/ui/FormInput';\r\n\r\n// TODO - Pre load the fonts somewhere\r\nasync function loadFonts(fontUrl: string) {\r\n  const font = new FontFace('testFont', `url(${fontUrl})`);\r\n  await font.load();\r\n  document.fonts.add(font);\r\n}\r\n\r\nfunction getPatternType({\r\n  hasCrystals,\r\n  isLuxury,\r\n}: {\r\n  hasCrystals: boolean;\r\n  isLuxury: boolean;\r\n}): PatternType {\r\n  if (!hasCrystals && isLuxury) return 'embroidery';\r\n  else if (hasCrystals) return 'crystals';\r\n\r\n  return '';\r\n}\r\n\r\ninterface NavTextPreviewProps extends NavTextSelectProps {\r\n  mainTextInputRef: React.MutableRefObject<HTMLInputElement | null>;\r\n}\r\n\r\nconst NavTextPreview = ({ editText, mainTextInputRef }: NavTextPreviewProps) => {\r\n  const previewImgRef = useRef<HTMLImageElement | null>(null);\r\n  const [fontFamily, setFontFamily] = useState<string | undefined>(editText?.font);\r\n  const [isVisiblePreview, setIsVisiblePreview] = useState(false);\r\n\r\n  const hasCrystals: boolean = editText?.crystalPrice ? true : false;\r\n  const isLuxury: boolean = editText?.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = editText?.puffPrice && !hasCrystals ? true : false; // 3D puff\r\n  const toNormalMap = hasCrystals ? false : true;\r\n  const patternType = getPatternType({ hasCrystals, isLuxury });\r\n\r\n  const { updateText, addText, isMinimizedCustomiserNav } = useCustomiserStore();\r\n\r\n  const portalRef = usePortalRef('NavHeaderAfter');\r\n\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (editText?.key) {\r\n      updateText(editText?.key, {\r\n        text: e.target.value,\r\n      });\r\n    } else {\r\n      if (e.target.value) {\r\n        addText({ text: e.target.value });\r\n      }\r\n    }\r\n    mainTextInputRef?.current?.focus();\r\n  };\r\n\r\n  /**\r\n   * Save image here\r\n   */\r\n  const materialImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.material));\r\n  }, [editText?.material]);\r\n  const outlineImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.outline));\r\n  }, [editText?.outline]);\r\n  const fabricPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/Fabric_Knitted_006_height_small.png');\r\n  }, []);\r\n  const crystalNormalMapImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-12.png');\r\n  }, []);\r\n  const crystalBgImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.crystalBackground));\r\n  }, [editText?.crystalBackground]);\r\n  const crystalBgPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-bg-pattern.png');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const previewImgDom = previewImgRef.current as HTMLImageElement;\r\n\r\n    (async () => {\r\n      const canvasText = new CanvasText({\r\n        hasPuff,\r\n        toNormalMap,\r\n        patternType,\r\n        text: editText?.text,\r\n      });\r\n\r\n      if (!editText || !editText.key || !isVisiblePreview) {\r\n        canvasText.clear();\r\n        return;\r\n      }\r\n\r\n      if (!editText.text) {\r\n        canvasText.clear();\r\n        updateText(editText.key, {\r\n          preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Adjust this once preloading fonts has been implemented\r\n      if (fontFamily !== editText?.font) {\r\n        setFontFamily(editText?.font);\r\n        await loadFonts(editText?.font as string);\r\n      }\r\n\r\n      const img = editText?.material && (await materialImgMemo);\r\n      const outlineImg = editText?.outline && (await outlineImgMemo);\r\n      const embroideryPattern = await fabricPatternImgMemo;\r\n      const crystalNormalMap = await crystalNormalMapImgMemo;\r\n      const crystalBgPatternImg = await crystalBgPatternImgMemo;\r\n      const crystalBgImg = editText?.crystalBackground && (await crystalBgImgMemo);\r\n\r\n      const shouldUsePattern = isLuxury && !hasPuff;\r\n      const patternImg = shouldUsePattern && (hasCrystals ? crystalNormalMap : embroideryPattern);\r\n\r\n      await canvasText.previewText({\r\n        material: img,\r\n        outline: outlineImg,\r\n        previewImg: previewImgDom,\r\n        normalMapPatternImg: patternImg,\r\n        crystalBgPatternImg,\r\n        crystalBgImg,\r\n      });\r\n\r\n      updateText(editText.key, {\r\n        preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        normalMap: new CanvasTexture(canvasText.getNormalMapOutlineCanvas()),\r\n      });\r\n    })();\r\n  }, [\r\n    editText?.text,\r\n    editText?.material,\r\n    editText?.outline,\r\n    editText?.font,\r\n    editText?.crystalBackground,\r\n    isVisiblePreview,\r\n    editText?.puffPrice,\r\n    editText?.crystalPrice,\r\n  ]);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <>\r\n      <div id='testPreview' style={{ position: 'absolute', zIndex: '100' }} />\r\n      {!isMinimizedCustomiserNav && editText?.text && (\r\n        <div className={styles.textPreview}>\r\n          <div>\r\n            {\r\n              <>\r\n                <div className={styles.textPreview__imgContainer} style={{ display: 'none' }}>\r\n                  <img\r\n                    height={80 * 5}\r\n                    width={640 * 5}\r\n                    ref={(el) => {\r\n                      previewImgRef.current = el;\r\n                      setIsVisiblePreview(!!el);\r\n                    }}\r\n                  />\r\n                </div>\r\n                {previewImgRef.current?.src ? (\r\n                  <>\r\n                    <NavTextPreviewScene text={editText} />\r\n                  </>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavTextPreview;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"NavTextCategories_main__aV8kW\",\"selected\":\"NavTextCategories_selected__NTJgj\"};","import styles from './NavTextCategories.module.scss';\r\n\r\ninterface NavTextCategoriesProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst NavTextCategories = ({ children }: NavTextCategoriesProps) => {\r\n  return <div className={styles.main}>{children}</div>;\r\n};\r\n\r\nexport default NavTextCategories;\r\n","import { FaArrowRightLong } from 'react-icons/fa6';\r\nimport styles from './Button.module.scss';\r\n\r\ninterface NextStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst NextStepButton = ({ onClick, isClickable, isVisible }: NextStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__next}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Next Step &nbsp;\r\n      <FaArrowRightLong />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default NextStepButton;\r\n","import { FaArrowLeftLong } from 'react-icons/fa6';\r\nimport styles from './Button.module.scss';\r\n\r\ninterface PrevStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst PrevStepButton = ({ onClick, isClickable, isVisible }: PrevStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__prev}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      <FaArrowLeftLong /> &nbsp; Previous\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PrevStepButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavTextNavSteps_root__Ys0fR\"};","import styles from './Button.module.scss';\r\n\r\ninterface CancelStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst CancelStepButton = ({ onClick, isClickable, isVisible }: CancelStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__cancel}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Cancel\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CancelStepButton;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface ApplyButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst ApplyButton = ({ onClick, isClickable, isVisible }: ApplyButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__next}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Apply Text\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ApplyButton;\r\n","import NextStepButton from '@components/ui/Button/NextStepButton';\r\nimport PrevStepButton from '@components/ui/Button/PrevStepButton';\r\nimport { usePortalRef } from '@hooks';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './NavTextNavSteps.module.scss';\r\nimport CancelStepButton from '@components/ui/Button/CancelStepButton';\r\nimport ApplyButton from '@components/ui/Button/ApplyButton';\r\nimport InfoDisplay from '@components/ui/InfoButton/InfoDisplay';\r\n\r\ninterface NavTextNavStepsProps {\r\n  isClickableNext?: boolean;\r\n  isClickablePrev?: boolean;\r\n  isVisibleNext?: boolean;\r\n  isVisiblePrev?: boolean;\r\n\r\n  onClickNext?: () => void;\r\n  onClickPrev?: () => void;\r\n  onClickCancel?: () => void;\r\n  onClickSave?: () => void;\r\n}\r\n\r\nconst NavTextNavSteps = ({\r\n  isClickableNext,\r\n  isClickablePrev,\r\n  isVisibleNext,\r\n  isVisiblePrev,\r\n  onClickNext,\r\n  onClickPrev,\r\n  onClickCancel,\r\n  onClickSave,\r\n}: NavTextNavStepsProps) => {\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n\r\n  if (!portalRef || !popupContainerRef) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      {/* {ReactDOM.createPortal(\r\n        <InfoDisplay>\r\n          <h5>Click where you want the text to go</h5>\r\n        </InfoDisplay>,\r\n        popupContainerRef,\r\n      )} */}\r\n      {ReactDOM.createPortal(\r\n        <div className={styles.root}>\r\n          {isVisiblePrev !== true && (\r\n            <CancelStepButton\r\n              onClick={\r\n                onClickCancel ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {(typeof isVisiblePrev === 'undefined' || isVisiblePrev) && (\r\n            <PrevStepButton\r\n              isClickable={isClickablePrev}\r\n              isVisible={isVisiblePrev}\r\n              onClick={\r\n                onClickPrev ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {(typeof isVisibleNext === 'undefined' || isVisibleNext) && (\r\n            <NextStepButton\r\n              isClickable={isClickableNext}\r\n              isVisible={isVisibleNext}\r\n              onClick={\r\n                onClickNext ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {isVisibleNext !== true && (\r\n            <ApplyButton\r\n              onClick={\r\n                onClickSave ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        </div>,\r\n        portalRef,\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNavSteps;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport styles from './NavText.module.scss';\r\nimport { useCustomiserStore, type TextCustomiser } from '@store/customiser';\r\nimport { LegacyRef, forwardRef, useEffect, useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport inputStyles from './../../ui/FormInput/FormInput.module.scss';\r\n\r\ninterface NavTextInputProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextInput = forwardRef(({ editText }: NavTextInputProps, ref) => {\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const { updateText, addText } = useCustomiserStore((state) => state);\r\n\r\n  const setTextOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const rootClassName = cn(inputStyles.root, styles.textInput);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        // font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text });\r\n      }\r\n    }\r\n  }, [text]);\r\n\r\n  return (\r\n    <div className={styles.textInputContainer}>\r\n      {/* <FormInput\r\n        ref={inputRef}\r\n        className={styles.textInput}\r\n        placeholder='Type text here...'\r\n        value={editText?.text}\r\n        onChange={setTextOnChange}\r\n      /> */}\r\n      <div className={rootClassName}>\r\n        <input\r\n          className={inputStyles.input}\r\n          onChange={setTextOnChange}\r\n          ref={ref as LegacyRef<HTMLInputElement> | undefined}\r\n          placeholder='Type text here...'\r\n          value={editText?.text}\r\n        />\r\n        {/* <label className={inputStyles.label}>Type text here</label> */}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nNavTextInput.displayName = 'NavTextInput';\r\n\r\nexport default NavTextInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"iInfo\":\"InfoButton_iInfo__0SLm4\",\"iInfo__bgOnclick\":\"InfoButton_iInfo__bgOnclick__3oQL8\",\"iInfo__display\":\"InfoButton_iInfo__display__nKOtb\",\"iInfo__header\":\"InfoButton_iInfo__header__IkMmc\",\"iInfo__body\":\"InfoButton_iInfo__body__6LPfY\",\"iInfo__sampleImg\":\"InfoButton_iInfo__sampleImg__bKcTE\",\"iInfo__closebtn\":\"InfoButton_iInfo__closebtn__+Dwj4\",\"iInfo__styleName\":\"InfoButton_iInfo__styleName__3bDQ2\",\"iInfo__title\":\"InfoButton_iInfo__title__SHp10\",\"infoIcon\":\"InfoButton_infoIcon__Yu7F-\",\"imgIcon\":\"InfoButton_imgIcon__oWQbZ\"};","import { ReactNode } from 'react';\r\nimport styles from './InfoButton.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\ninterface Props {\r\n  title: string | Falsey;\r\n  cb?: () => void;\r\n  children?: ReactNode;\r\n}\r\nconst InfoDisplay = ({ title, cb, children }: Props) => {\r\n  return (\r\n    <>\r\n      <div className={styles.iInfo} onClick={(e) => e.stopPropagation()}>\r\n        <div className={styles.iInfo__bgOnclick} onClick={cb} />\r\n        <div className={styles.iInfo__display}>\r\n          <div className={styles.iInfo__header}>\r\n            <span className={styles.iInfo__title}>{`${title}` || 'EXAMPLES'}</span>\r\n            <span className={styles.iInfo__closebtn} onClick={cb}>\r\n              x\r\n            </span>\r\n          </div>\r\n\r\n          <div className={styles.iInfo__body}>\r\n            {children || (\r\n              <>\r\n                <div className={styles.iInfo__styleName}>PRINTED</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119118469/names-printed.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>EMBROIDERY</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119222257/names-flat-embroidery.png'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>3D EMBROIDERY</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119313289/names-3d-embroidery.jpg'\r\n                  alt=''\r\n                />\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119344264/names-3d-embroidery-perspective.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>3D CRYSTALS</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119433059/names-3d-crystals.jpg'\r\n                  alt=''\r\n                />\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526727869947/names-3d-crystal-perspective.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>GLITTER</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119258957/names-glitter.pg.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>NAME PATCH</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119480153/name-patch-on-shorts.jpg'\r\n                  alt=''\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoDisplay;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport { LegacyRef, startTransition, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\n\r\nimport Accordion from '@components/ui/Accordion/Accordion';\r\nimport NavStepButtons from '../NavStepButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextFinish from './NavTextFinish';\r\nimport NavTextNameTypes from './NavTextNameTypes';\r\nimport NavTextOutline from './NavTextOutline';\r\nimport NavTextSelect from './NavTextSelect';\r\nimport NavTextsSelection from './NavTextsSelection';\r\nimport NavTextPreview from './NavTextPreview';\r\nimport { usePortalRef } from '@hooks';\r\nimport Button from '@components/ui/Button';\r\nimport { createPortal } from 'react-dom';\r\nimport NavTextCategories from './NavTextCategories';\r\nimport NavTextNavSteps from './NavTextNavSteps';\r\nimport { has } from 'lodash';\r\nimport FormInput from '@components/ui/FormInput';\r\nimport NavTextInput from './NavTextInput';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\nimport DontShowAgain from '@components/ui/DontShowAgain';\r\nimport InfoDisplay from '@components/ui/InfoButton/InfoDisplay';\r\n\r\ninterface NavTextProps {\r\n  showEditText: boolean;\r\n  setShowEditText: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavText = ({ showEditText, setShowEditText }: NavTextProps) => {\r\n  const [step, setStep] = useState<number | undefined>(0);\r\n\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const deleteText = useCustomiserStore((state) => state.deleteText);\r\n  const updateIsMinimizedCustomiserNav = useCustomiserStore(\r\n    (state) => state.updateIsMinimizedCustomiserNav,\r\n  );\r\n  const isMinimizedCustomiserNav = useCustomiserStore((state) => state.isMinimizedCustomiserNav);\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const [isPickingOutline, setIsPickingOutline] = useState(false);\r\n  const [isPickingCrystal, setIsPickingCrystal] = useState(false);\r\n  const navHeaderRef = usePortalRef('NavHeader');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n\r\n  const mainTextInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const noOutlineSelected = step === 2 && isPickingOutline && !editText?.outline;\r\n  const noCrystalSelected = step === 3 && isPickingCrystal && !editText?.crystalBackground;\r\n  const hasFinishedAllSteps = step === 3 && (editText?.crystalBackground || !isPickingCrystal);\r\n\r\n  const hasFinishedStep1 = !!editText?.text;\r\n  const hasFinishedStep2 = !!editText?.material;\r\n  const hasFinishedStep3 = !!editText?.outline;\r\n  const hasFinishedStep4 = !!editText?.crystalBackground;\r\n\r\n  const finishedSteps = [\r\n    hasFinishedStep1,\r\n    hasFinishedStep2,\r\n    !noOutlineSelected,\r\n    !noCrystalSelected,\r\n  ];\r\n\r\n  const isVisiblePrev = step !== 0;\r\n  const isClickableNext = finishedSteps[step || 0];\r\n  const isVisibleNext = typeof step === 'number' ? step < 3 : false;\r\n\r\n  const saveAndApplyChecker = () => {\r\n    if (!hasFinishedStep1) {\r\n      alert('Please enter a text to continue');\r\n      setStep(0);\r\n      return false;\r\n    } else if (!hasFinishedStep2) {\r\n      alert('Select a text color to continue');\r\n      setStep(1);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      setShowEditText(true);\r\n    } else {\r\n      setShowEditText(false);\r\n    }\r\n  }, [editText]);\r\n\r\n  useEffect(() => {\r\n    setShowEditText(editText?.key !== undefined);\r\n    return () => {\r\n      setShowEditText(false);\r\n    };\r\n  }, []);\r\n\r\n  const addText = () => {\r\n    setShowEditText(true);\r\n  };\r\n\r\n  const setScale = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalScale: Number(event) });\r\n    });\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const placeText = () => {\r\n    if (isPickingCrystal && noCrystalSelected) {\r\n      alert('Select a crystal type');\r\n      return;\r\n    }\r\n    if (editText?.key && !editText?.decalPosition) {\r\n      updateText(editText.key, {\r\n        decalFreeze: true,\r\n        decalPosition: [-0.01989325641440387, 2.436930108198209, 1.6226380277735046],\r\n        decalOrientation: [\r\n          -0.14799034762565572,\r\n          -0.17866277612764514,\r\n          -0.026487426629834374,\r\n          'XYZ',\r\n        ],\r\n      });\r\n    }\r\n    updateIsMinimizedCustomiserNav(true);\r\n  };\r\n\r\n  const applyText = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n        hasApplied: true,\r\n      });\r\n    }\r\n\r\n    setStep(0);\r\n\r\n    setShowEditText(false);\r\n  };\r\n\r\n  const localStorageConfirmCancelText = localStorage.getItem('confirmCancelText');\r\n  const shouldShowConfirmCancelText = !localStorageConfirmCancelText;\r\n\r\n  const [showConfirmCancelPopup, setShowConfirmCancelPopup] = useState(false);\r\n  const [shouldShowInfoDisplay, setShouldShowInfoDisplay] = useState(true);\r\n\r\n  const cancelText = () => {\r\n    if (editText?.key) {\r\n      if (!editText?.text || (editText?.text && !editText?.hasApplied)) {\r\n        deleteText(editText.key);\r\n      } else {\r\n        applyText();\r\n      }\r\n    }\r\n  };\r\n\r\n  const cancelTextHandler = () => {\r\n    if (editText?.text) {\r\n      setShowConfirmCancelPopup(true);\r\n    } else {\r\n      cancelText();\r\n    }\r\n  };\r\n\r\n  const handleTitleClick = (_step: number | string) => {\r\n    if (_step === step) {\r\n      setStep(undefined);\r\n    } else {\r\n      setStep(_step as number);\r\n    }\r\n  };\r\n\r\n  const maxStep = 4;\r\n\r\n  const handleNext = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step < maxStep - 1) {\r\n      switch (step) {\r\n        case 0:\r\n          if (!editText?.text) {\r\n            alert('Please enter a text to continue');\r\n            return;\r\n          }\r\n          break;\r\n        case 1:\r\n          if (!editText?.selectedName) {\r\n            alert('Select a text color type');\r\n            return;\r\n          } else if (!editText?.material) {\r\n            alert('Select a color for text');\r\n            return;\r\n          }\r\n          break;\r\n        case 2:\r\n          if (isPickingOutline && !editText?.outline) {\r\n            alert('Select an outline');\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step > 0) {\r\n      setStep(step - 1);\r\n    }\r\n  };\r\n\r\n  const navCategoryNames = ['Font', 'Color', 'Outline', 'Finish'];\r\n  const NavTextCategoriesItems = () => {\r\n    const handleOnClick = (index: number) => {\r\n      if (navCategoryNames[index] === 'Outline' || navCategoryNames[index] === 'Finish') {\r\n        if (!saveAndApplyChecker()) return;\r\n      }\r\n      if (!editText?.text) {\r\n        alert('Please enter a text to continue');\r\n        return;\r\n      }\r\n      handleTitleClick(index);\r\n    };\r\n\r\n    const finishedCategories = [\r\n      hasFinishedStep1,\r\n      hasFinishedStep2,\r\n      hasFinishedStep3,\r\n      hasFinishedStep4,\r\n    ];\r\n\r\n    return navCategoryNames.map((name, index) => {\r\n      const isSelectedCategory = step === index;\r\n      const categoryClassNames = `\r\n        ${isSelectedCategory ? styles.selectedCategoryItem : ''}\r\n        ${finishedCategories[index] ? styles.finishedCategoryItem : ''}\r\n      `;\r\n      return (\r\n        <div key={index} className={categoryClassNames} onClick={() => handleOnClick(index)}>\r\n          {name}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const CategoryDisplay = () => {\r\n    switch (step) {\r\n      case 0:\r\n        return <NavTextSelect editText={editText} />;\r\n      case 1:\r\n        return <NavTextNameTypes editText={editText} />;\r\n      case 2:\r\n        return <NavTextOutline editText={editText} setIsPickingOutline={setIsPickingOutline} />;\r\n      case 3:\r\n        return (\r\n          <NavTextFinish\r\n            setIsPickingCrystal={setIsPickingCrystal}\r\n            editText={editText}\r\n          ></NavTextFinish>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showEditText ? (\r\n        <>\r\n          <div className={styles.navTextEdit}>\r\n            <NavTextPreview mainTextInputRef={mainTextInputRef} editText={editText} />\r\n            <NavTextCategories>{NavTextCategoriesItems()}</NavTextCategories>\r\n            {CategoryDisplay()}\r\n            <NavTextNavSteps\r\n              onClickNext={handleNext}\r\n              onClickPrev={handlePrevious}\r\n              onClickCancel={cancelTextHandler}\r\n              onClickSave={placeText}\r\n              isVisiblePrev={isVisiblePrev}\r\n              isVisibleNext={isVisibleNext}\r\n              isClickableNext={isClickableNext}\r\n            />\r\n            {editText?.key &&\r\n              editText.decalPosition &&\r\n              isMinimizedCustomiserNav &&\r\n              popupContainerRef && (\r\n                <>\r\n                  <NavDecalAdjust\r\n                    scale={editText?.decalScale}\r\n                    rotation={editText?.decalRotation}\r\n                    onScale={setScale}\r\n                    onRotate={setRotation}\r\n                  />\r\n                  {shouldShowInfoDisplay &&\r\n                    createPortal(\r\n                      <InfoDisplay\r\n                        cb={() => {\r\n                          setShouldShowInfoDisplay(false);\r\n                        }}\r\n                        title='Apply Text'\r\n                      >\r\n                        <h5>Click where you want the text to go</h5>\r\n                        <img\r\n                          style={{ maxWidth: '100%' }}\r\n                          src='examples/NavText/sample-apply-text.png'\r\n                        />\r\n                      </InfoDisplay>,\r\n                      popupContainerRef,\r\n                    )}\r\n                </>\r\n              )}\r\n            {editText &&\r\n              isMinimizedCustomiserNav &&\r\n              navHeaderRef &&\r\n              hasFinishedAllSteps &&\r\n              createPortal(\r\n                <ContainedButton\r\n                  onClick={() => {\r\n                    if (!saveAndApplyChecker()) {\r\n                      return updateIsMinimizedCustomiserNav(false);\r\n                    }\r\n\r\n                    applyText();\r\n                    updateIsMinimizedCustomiserNav(false);\r\n                  }}\r\n                  classNames={styles.navHeaderSaveText}\r\n                >\r\n                  SAVE\r\n                </ContainedButton>,\r\n                navHeaderRef,\r\n              )}\r\n            {popupContainerRef &&\r\n              createPortal(\r\n                <NavTextInput ref={mainTextInputRef} editText={editText} />,\r\n                popupContainerRef,\r\n              )}\r\n          </div>\r\n          {popupContainerRef &&\r\n            shouldShowConfirmCancelText &&\r\n            showConfirmCancelPopup &&\r\n            createPortal(\r\n              <DontShowAgain\r\n                cb={cancelText}\r\n                setShowNotification={setShowConfirmCancelPopup}\r\n                notifName={'editTextCancelText'}\r\n              >\r\n                <span>Cancel text customization?</span>\r\n              </DontShowAgain>,\r\n              popupContainerRef,\r\n            )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <NavTextsSelection onAddTextClicked={addText}></NavTextsSelection>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavText;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CustomiserNav_root__rgnWr\",\"open\":\"CustomiserNav_open__6TgJc\",\"isFullscreen\":\"CustomiserNav_isFullscreen__xo92v\",\"minimized\":\"CustomiserNav_minimized__-4C1L\",\"actions\":\"CustomiserNav_actions__B0fm0\",\"content\":\"CustomiserNav_content__whsIx\",\"headerAfter\":\"CustomiserNav_headerAfter__bXrUD\",\"navHeaderScroll\":\"CustomiserNav_navHeaderScroll__0nzPV\",\"tab\":\"CustomiserNav_tab__El9gn\",\"navName\":\"CustomiserNav_navName__YLBS9\",\"selected\":\"CustomiserNav_selected__x6zsL\",\"dot\":\"CustomiserNav_dot__FGM8D\",\"finished\":\"CustomiserNav_finished__aPBu9\",\"hasActions\":\"CustomiserNav_hasActions__xe43g\",\"isEdittingText\":\"CustomiserNav_isEdittingText__bI3ZI\",\"closed\":\"CustomiserNav_closed__fkIqu\"};","import DontShowAgain from '@components/ui/DontShowAgain';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { Falsey } from 'lodash';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface NavHeaderScrollProps {\r\n  styles?: {\r\n    readonly [key: string]: string;\r\n  };\r\n  finishedNavs: ({ name: string; isFinished: boolean } | undefined)[];\r\n  setFinishedNavs: React.Dispatch<\r\n    React.SetStateAction<({ name: string; isFinished: boolean } | undefined)[]>\r\n  >;\r\n}\r\n\r\nconst NavHeaderScroll = ({ styles, finishedNavs, setFinishedNavs }: NavHeaderScrollProps) => {\r\n  const { navItems, selectedNav, setSelectedNav, deleteText, flags, sizing } = useCustomiserStore();\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const { texts, updateText, parts } = useCustomiserStore((state) => state);\r\n  const editText = texts?.find((g) => g.edit);\r\n\r\n  const navIndex = navItems.findIndex((nav) => nav.name === selectedNav?.name);\r\n\r\n  const navTabRefs = useRef<(HTMLDivElement | null)[]>([]);\r\n\r\n  useEffect(() => {\r\n    const partsFinishedNavs = parts.map((part) => {\r\n      const partName = part.part.name;\r\n      if (!partName) return;\r\n      const isFinishedPart = !!navItems.find((navItem) => {\r\n        return navItem.name === partName;\r\n      });\r\n      return {\r\n        name: partName,\r\n        isFinished: isFinishedPart,\r\n      };\r\n    });\r\n\r\n    setFinishedNavs((cur) => {\r\n      const resetCur = cur.map((item) => {\r\n        if (!item) return;\r\n        if (item.name === 'Fitting') return item;\r\n        if (item.name === 'Text') return item;\r\n        item = {\r\n          ...item,\r\n          isFinished: false,\r\n        };\r\n        return item;\r\n      });\r\n\r\n      const newFinishedNavs = [...partsFinishedNavs, ...resetCur, ...(finishedNavs || [])];\r\n      if (flags.length) {\r\n        newFinishedNavs.unshift({\r\n          name: 'Flags',\r\n          isFinished: true,\r\n        });\r\n      } else {\r\n        newFinishedNavs.map((nav) => {\r\n          if (nav?.name === 'Flags') {\r\n            nav.isFinished = false;\r\n          }\r\n        });\r\n      }\r\n      if (sizing?.height?.value && sizing?.weight?.value) {\r\n        newFinishedNavs.unshift({\r\n          name: 'Size',\r\n          isFinished: true,\r\n        });\r\n      } else {\r\n        newFinishedNavs.map((nav) => {\r\n          if (nav?.name === 'Size') {\r\n            nav.isFinished = false;\r\n          }\r\n        });\r\n      }\r\n\r\n      const uniqueFinishedNavs = newFinishedNavs.filter(\r\n        (nav, index, self) => self.findIndex((t) => t?.name === nav?.name) === index,\r\n      );\r\n      return uniqueFinishedNavs;\r\n    });\r\n  }, [parts, flags, sizing]);\r\n\r\n  useEffect(() => {\r\n    if (texts.length > 0) {\r\n      const iText = finishedNavs.findIndex((nav) => nav?.name === 'Text');\r\n      if (iText === -1) {\r\n        finishedNavs.push({\r\n          name: 'Text',\r\n          isFinished: true,\r\n        });\r\n      } else {\r\n        finishedNavs.map((nav) => {\r\n          if (nav?.name === 'Text') {\r\n            nav.isFinished = true;\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      finishedNavs.map((nav) => {\r\n        if (texts.length === 0 && nav?.name === 'Text') {\r\n          nav.isFinished = false;\r\n        }\r\n      });\r\n    }\r\n  }, [texts]);\r\n\r\n  useEffect(() => {\r\n    navTabRefs.current[navIndex]?.scrollIntoView();\r\n  }, [navIndex]);\r\n\r\n  const isFinishedNav = (name?: string | Falsey) => {\r\n    if (!name) return;\r\n\r\n    const finishedNav = finishedNavs.find((nav) => nav && nav.name === name);\r\n\r\n    if (!finishedNav) return;\r\n\r\n    return finishedNav.isFinished;\r\n  };\r\n\r\n  const localStorageItem = localStorage.getItem('navConfirmText');\r\n  const shouldShowConfirmCancelText = !localStorageItem;\r\n\r\n  const cancelTextEdit = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n        hasApplied: true,\r\n      });\r\n\r\n      if (!editText?.hasApplied) {\r\n        deleteText(editText?.key);\r\n      }\r\n    }\r\n    setSelectedNav(navIndex);\r\n  };\r\n\r\n  const navClickHandler = (index: number, name: string | Falsey) => {\r\n    if (index === navIndex) return;\r\n    if (editText?.text && name && name?.toLowerCase() !== 'text') {\r\n      setShowPopup(true);\r\n    } else {\r\n      setSelectedNav(index);\r\n    }\r\n  };\r\n\r\n  if (!popupPortalRef) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles?.navHeaderScroll}>\r\n        {navItems.map((item, index) => {\r\n          const classes = `\r\n            ${selectedNav?.name === item.name ? styles?.selected : ''}\r\n            ${styles?.tab}\r\n          `;\r\n          return (\r\n            <div\r\n              ref={(elem) => (navTabRefs.current[index] = elem)}\r\n              className={classes}\r\n              key={index}\r\n              onClick={(e) => {\r\n                navClickHandler(index, item.name);\r\n                e.currentTarget.scrollIntoView();\r\n              }}\r\n            >\r\n              <span className={`${styles?.dot} ${isFinishedNav(item.name) && styles?.finished}`} />\r\n              <span className={styles?.navName}>{item.name}</span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {showPopup &&\r\n        shouldShowConfirmCancelText &&\r\n        createPortal(\r\n          <DontShowAgain\r\n            cb={cancelTextEdit}\r\n            setShowNotification={setShowPopup}\r\n            notifName={'navConfirmText'}\r\n          >\r\n            <span>Cancel text customization?</span>\r\n          </DontShowAgain>,\r\n          popupPortalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavHeaderScroll;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavFitting from '../NavFitting';\r\nimport NavFlags from '../NavFlags';\r\nimport NavHeader from '../NavHeader';\r\nimport NavImages from '../NavImages';\r\nimport NavPart from '../NavPart';\r\nimport NavMinimize from '../NavMinimize';\r\nimport NavSize from '../NavSize';\r\nimport NavText from '../NavText';\r\n\r\nimport styles from './CustomiserNav.module.scss';\r\nimport NavHeaderScroll from '../NavHeader/NavHeaderScroll';\r\n\r\nexport interface CustomiserNavProps {\r\n  className?: string;\r\n}\r\n\r\nconst CustomiserNav = ({ className }: CustomiserNavProps) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [scrollCoordinates, setScrollCoordinates] = useState({ left: 0, top: 0 });\r\n  const [showEditText, setShowEditText] = useState(false);\r\n  const [finishedNavs, setFinishedNavs] = useState<\r\n    ({ name: string; isFinished: boolean } | undefined)[]\r\n  >([]);\r\n\r\n  const {\r\n    selectedPart,\r\n    selectedNav,\r\n    texts,\r\n    isMinimizedCustomiserNav,\r\n    updateIsMinimizedCustomiserNav,\r\n  } = useCustomiserStore();\r\n\r\n  const scrollableRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const isFullscreen = useMemo(\r\n    () => selectedNav?.name === 'Text' && editText,\r\n    [selectedNav, editText],\r\n  );\r\n\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      // [styles.open]: isOpen,\r\n      [styles.minimized]: isMinimizedCustomiserNav,\r\n      [styles.hasActions]: selectedNav?.hasActions,\r\n      [styles.isEdittingText]: editText?.text && showEditText,\r\n      [styles.isFullscreen]: false,\r\n    },\r\n    className,\r\n  );\r\n\r\n  const saveScrollCoordinates = () => {\r\n    if (isOpen && scrollableRef.current) {\r\n      setScrollCoordinates({\r\n        left: scrollableRef.current.scrollLeft,\r\n        top: scrollableRef.current.scrollTop,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && scrollableRef.current) {\r\n      scrollableRef.current.scrollTo({\r\n        ...scrollCoordinates,\r\n        // Typescript issue: https://github.com/Microsoft/TypeScript/issues/28755\r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const toggleOpen = () => {\r\n    saveScrollCoordinates();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedNav === null && selectedPart === null) {\r\n      setIsOpen(true);\r\n    } else {\r\n      setIsOpen(false);\r\n      updateIsMinimizedCustomiserNav(false);\r\n    }\r\n  }, [selectedPart, selectedNav]);\r\n\r\n  return (\r\n    <motion.nav\r\n      layout='preserve-aspect'\r\n      transition={{\r\n        type: 'spring',\r\n        stiffness: 700,\r\n        damping: 40,\r\n      }}\r\n      className={rootClassName}\r\n    >\r\n      {/* {!isOpen && (\r\n        <NavMinimize\r\n          isMinimizedCustomiserNav={isMinimizedCustomiserNav}\r\n          onMinimize={() => updateIsMinimizedCustomiserNav(true)}\r\n          onMaximize={() => updateIsMinimizedCustomiserNav(false)}\r\n        />\r\n      )} */}\r\n      <NavHeader\r\n        className={styles.header}\r\n        toggle={() => toggleOpen()}\r\n        isOpen={isOpen}\r\n        onClick={() => {\r\n          updateIsMinimizedCustomiserNav(!isMinimizedCustomiserNav);\r\n        }}\r\n        isMinimized={isMinimizedCustomiserNav}\r\n      />\r\n      {\r\n        <NavHeaderScroll\r\n          finishedNavs={finishedNavs}\r\n          setFinishedNavs={setFinishedNavs}\r\n          styles={styles}\r\n        />\r\n      }\r\n      <div id='NavHeaderAfter' className={styles.headerAfter}></div>\r\n      <Suspense fallback={<div style={{ background: 'white' }}>Loading...</div>}>\r\n        <AnimatePresence initial={false}>\r\n          <motion.div\r\n            id='scrollable'\r\n            className={`${styles.content} ${isOpen && styles.closed}`}\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n              open: { opacity: 1 },\r\n              collapsed: { opacity: 0 },\r\n            }}\r\n            ref={(el) => {\r\n              scrollableRef.current = el;\r\n            }}\r\n          >\r\n            {isOpen ? null : selectedNav?.type === 'fitting' ? (\r\n              <NavFitting finishedNavs={finishedNavs} setFinishedNavs={setFinishedNavs} />\r\n            ) : selectedNav?.type === 'names' ? (\r\n              <NavText showEditText={showEditText} setShowEditText={setShowEditText} />\r\n            ) : selectedNav?.type === 'flags' ? (\r\n              <NavFlags />\r\n            ) : selectedNav?.type === 'images' ? (\r\n              <NavImages />\r\n            ) : selectedNav?.type === 'size' ? (\r\n              <NavSize />\r\n            ) : selectedPart ? (\r\n              <NavPart part={selectedPart} />\r\n            ) : null}\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </Suspense>\r\n      {!isOpen && selectedNav?.hasActions && (\r\n        <div className={styles.actions}>\r\n          {selectedPart && <div id='CustomiserNavMaterial' style={{ background: 'white' }}></div>}\r\n          <div id='CustomiserNavActions'></div>\r\n        </div>\r\n      )}\r\n    </motion.nav>\r\n  );\r\n};\r\n\r\nexport default CustomiserNav;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Header_root__cz6kt\",\"total\":\"Header_total__nSueF\",\"price\":\"Header_price__GikHZ\",\"resetBtn\":\"Header_resetBtn__yzIQA\",\"addToBasket\":\"Header_addToBasket__T8GpW\"};","import Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport { useDesignStore } from '@store/design';\r\nimport styles from './Header.module.scss';\r\nimport Price from '@components/ui/Price';\r\n\r\nexport interface HeaderProps {\r\n  className?: string;\r\n}\r\n\r\nconst Header = ({ className }: HeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const total = useCustomiserStore((state) => state.total());\r\n  const designComplete = useCustomiserStore((state) => state.designComplete());\r\n  const setResetCamera = useDesignStore((state) => state.setResetCamera);\r\n  const addingToCart = useDesignStore((state) => state.addingToCart);\r\n\r\n  const resetCustomerSelections = useCustomiserStore((state) => state.resetCustomerSelections);\r\n\r\n  const saveDesign = () => {\r\n    setResetCamera();\r\n  };\r\n\r\n  const resetPopup = () => {\r\n    if (confirm('Reset everything?')) {\r\n      resetCustomerSelections();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div id='reset-btn-container' className={styles.resetBtn}>\r\n        <Button onClick={resetPopup}>CLEAR</Button>\r\n      </div>\r\n      <div className={styles.total}>\r\n        Current <Price className={styles.price} priceString={total} />\r\n      </div>\r\n      <Button\r\n        className={styles.addToBasket}\r\n        onClick={saveDesign}\r\n        disabled={!designComplete || addingToCart}\r\n      >\r\n        {addingToCart ? 'Saving' : 'Add to basket'}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Customiser_root__+9xV1\",\"nav\":\"Customiser_nav__xnqzP\",\"modelContainer\":\"Customiser_modelContainer__FVL2o\",\"model\":\"Customiser_model__jxaOf\",\"controls\":\"Customiser_controls__Ar93L\",\"background\":\"Customiser_background__qq7nU\",\"loading\":\"Customiser_loading__vNYyO\",\"header\":\"Customiser_header__1SFjA\",\"close\":\"Customiser_close__sH1pv\"};","import CustomiserNav from '@components/nav/CustomiserNav';\r\nimport Button from '@components/ui/Button';\r\nimport { useDesignStore } from '@store/design';\r\nimport cn from 'classnames';\r\nimport { lazy, Suspense, useRef } from 'react';\r\nimport Header from '../Header';\r\n\r\nconst CustomiserCanvas = lazy(() => import('@components/three/CustomiserCanvas'));\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport styles from './Customiser.module.scss';\r\nimport { Camera } from 'three';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface CustomiserProps {\r\n  className?: string;\r\n}\r\n\r\nexport type FocusCameraOnPart = (part?: string | Falsey) => void;\r\n\r\nconst Customiser = ({ className }: CustomiserProps) => {\r\n  const setShow = useDesignStore((state) => state.setShow);\r\n  const { selectedNav } = useCustomiserStore();\r\n\r\n  const cameraRef = useRef<Camera | null>(null);\r\n  const handleCameraRef = (ref: Camera | null) => {\r\n    cameraRef.current = ref;\r\n  };\r\n\r\n  const rootClassName = cn(styles.root, className, {\r\n    // [styles.navOpen]: selectedNav !== null,\r\n  });\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div\r\n        id='popupContainer'\r\n        style={{\r\n          // re-figure out again how to put styled ID in scss\r\n          position: 'absolute',\r\n          zIndex: '201',\r\n        }}\r\n      />\r\n      <CustomiserNav className={styles.nav} />\r\n      <Header className={styles.header} />\r\n      <svg\r\n        className={styles.background}\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 114.383 97.088'\r\n      >\r\n        <defs>\r\n          <clipPath id='a'>\r\n            <path d='M0 0h114.383v97.088H0z' />\r\n          </clipPath>\r\n        </defs>\r\n        <g clipPath='url(#a)' fillRule='evenodd'>\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='M8.567 88.645v-.044c1.487-.24 2.986-.466 4.472-.716a1.278 1.278 0 0 0 .743-1.862 1.019 1.019 0 0 0-.949-.409c-2.928.338-5.845.747-8.785 1.147-.492.069-.709.447-.687 1.262.012 1.216.126 1.481.721 1.375 1.5-.243 3.008-.506 4.484-.753M23.905 77.54c-1.224.072-1.842.39-1.9 2.044a69.405 69.405 0 0 0 .011 5.312c.057 1.481.606 2.112 1.716 1.99q4.444-.488 8.888-1.012a1.851 1.851 0 0 0 1.659-1.975c.057-.853.1-1.709.1-2.562.023-.856.023-1.247 0-2.093-.068-1.6-.755-1.769-2.024-1.7Zm9.982-6.006c2.119 0 3.229 1.3 3.744 3.247a8.461 8.461 0 0 1 .32 2.222 225.099 225.099 0 0 1 0 7.896 8.3 8.3 0 0 1-.869 3.622 3.721 3.721 0 0 1-2.8 2.269c-4.072.553-8.121 1.15-12.182 1.784-1.773.306-3.145-1.253-3.523-3.993a25.755 25.755 0 0 1-.229-3.54c-.011-1.275-.006-2.556 0-3.834s.046-2.562.115-3.834c.091-1.944.606-4.015 1.887-5.128a2.565 2.565 0 0 1 1.533-.709Zm61.427 6.006v-6.006h13.325c1.682-.069 2.768 1.381 3.409 3.771a16.91 16.91 0 0 1 .538 4.281 18.216 18.216 0 0 1-.515 4.3 5.807 5.807 0 0 1-1.945 3.4c-.217.181-.469.34-.652.472.8 1.45 1.611 2.926 2.4 4.443a883.295 883.295 0 0 1 2.505 4.856c-.743-.163-1.453-.331-2.139-.472-1.041-.219-2.1-.381-3.157-.644a1.328 1.328 0 0 1-.732-.643c-.641-1.2-1.285-2.373-1.933-3.55-.633-1.148-1.292-2.3-1.91-3.431-.309-.522-.606-.819-1.041-.862a90.174 90.174 0 0 1-3.74-.481c-.366-.056-.481.116-.481.656.011 1.04.011 2.081.011 3.128v3.172c-1.235-.228-2.7-.472-3.946-.691v-12.17c3.752.156 7.526.293 11.278.4.492.013 1-.006 1.487 0 .56.016.789-.769.881-1.541.091-1.2-.149-2.053-.686-2.234a3.757 3.757 0 0 0-1.19-.16Zm-11.255 0v2.709l9.585.616v4.047l-9.631-.944v2.3l9.631 1.065v5.58c-4.838-.834-8.59-1.4-13.429-2.08v-19.3h13.431v6.006ZM37.072 90.367a232.526 232.526 0 0 1 3.775-5.125 219.554 219.554 0 0 1 3.786-4.809c-1.281-1.453-2.562-2.919-3.832-4.415s-2.439-2.915-3.709-4.484h5.5a1.331 1.331 0 0 1 .881.488c.7.84 1.322 1.559 2.02 2.375s1.407 1.625 2.116 2.431c.709-.84 1.417-1.682 2.127-2.512s1.413-1.643 2.128-2.466a.948.948 0 0 1 .652-.316h5.322c-1.224 1.384-2.475 2.827-3.7 4.237s-2.448 2.853-3.672 4.287c1.3 1.472 2.628 2.933 3.935 4.387s2.619 2.919 3.924 4.409c-1.865-.006-3.741.028-5.6.091a1.194 1.194 0 0 1-.789-.422q-1.116-1.213-2.23-2.434c-.732-.8-1.476-1.625-2.208-2.45-.755.928-1.511 1.855-2.265 2.8s-1.5 1.913-2.253 2.9c-.106.138-.274.327-.423.344-1.818.208-3.66.434-5.479.685m21.618-1.509c1.258-1.422 2.528-2.816 3.786-4.215s2.516-2.809 3.775-4.218q-1.922-2.231-3.832-4.428c-1.273-1.46-2.615-2.993-3.884-4.462h5.412a1.339 1.339 0 0 1 .881.459c.7.8 1.59 1.79 2.282 2.594s1.407 1.637 2.116 2.456c.709-.822 1.422-1.647 2.128-2.481s1.557-1.842 2.268-2.7a.959.959 0 0 1 .64-.34c1.773-.006 3.534 0 5.319.012-1.235 1.516-2.584 3.175-3.812 4.64s-2.459 2.884-3.683 4.293a234.511 234.511 0 0 1 3.935 4.959 262.195 262.195 0 0 1 3.935 5.293 296.137 296.137 0 0 0-5.6-.772 1.472 1.472 0 0 1-.8-.569c-.739-.948-1.48-1.9-2.219-2.822s-1.487-1.831-2.219-2.725q-1.132 1.247-2.253 2.49c-.749.829-1.511 1.652-2.265 2.478-.1.115-.274.26-.412.253a205.452 205.452 0 0 0-5.49-.2m-43.271-6.7a3.858 3.858 0 0 1 1.979 2.993 11.586 11.586 0 0 1-.24 5.3c-.549 1.89-1.6 3-2.962 3.29C9.494 94.797 4.8 95.888.1 97.088a.159.159 0 0 1-.1-.05V81.205c.274-.019.572-.041.881-.066 3.763-.328 7.5-.656 11.255-.981.377-.031.789 0 1.018-.622.32-.9-.034-2.037-.755-2H0V71.53h12.857a3.24 3.24 0 0 1 3.2 1.944 9.3 9.3 0 0 1 .721 4.4 8.384 8.384 0 0 1-1.361 4.277'\r\n          />\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='m75.165 48.1-6.079-9.03v.049c-.057 1.036-.095 2.076-.183 3.112a2.019 2.019 0 0 1-.3.929l-8.448 12.034c-.249.368-.854 1.239-1.255 1.374a.382.382 0 0 1-.448-.158 2.924 2.924 0 0 1-.17-1.252v-.015l.451-9.913a.888.888 0 0 1 .121-.521l6.771-9.393a1.068 1.068 0 0 0 0-1.4l-6.516-9.933a3.453 3.453 0 0 1-.372-1.536l-.564-9.434c-.136-2.082.98-1.647 2.035 0l9.86 15.392 5.074-7.607c.439-.71.756-1.16 1.67-1.2a28.863 28.863 0 0 0 6.026-.866 2.49 2.49 0 0 1 .955-.113.381.381 0 0 1 .292.365 7.753 7.753 0 0 1-1.169 2.293L74.64 33.912a.971.971 0 0 0-.011 1.253l8.1 12.066a7.386 7.386 0 0 1 1.192 2.336.379.379 0 0 1-.247.33 2.314 2.314 0 0 1-1.008-.05 43.691 43.691 0 0 0-6.495-.95c-.5-.024-.775-.421-1.012-.8m-17.2-18.084 2.675 4.223a.378.378 0 0 1-.005.42L57.97 38.64a.386.386 0 0 1-.639 0l-2.729-4a.379.379 0 0 1-.005-.426l2.719-4.206a.386.386 0 0 1 .65 0m-13.64-.628 10.716-16.367c.911-1.366 2.032-2.329 1.921 0l-.453 9.457a3.209 3.209 0 0 1-.565 1.514l-6.217 9.551c-.31.474-.372.717-.048 1.2l6.446 9.577a1.569 1.569 0 0 1 .389.861l.454 9.969v.025a3.345 3.345 0 0 1-.187 1.236.385.385 0 0 1-.494.158 4.869 4.869 0 0 1-1.172-1.361l-9.863-14.918c-.149.21-.3.418-.441.636-1.474 2.327-2.954 4.649-4.408 6.989a1.51 1.51 0 0 1-1.168.806h-.025a40.188 40.188 0 0 0-6.467 1.047 3.664 3.664 0 0 1-1.08.156.385.385 0 0 1-.325-.453 11.67 11.67 0 0 1 1.3-2.279L40.716 34.9a.978.978 0 0 0 0-1.256L32.349 21.23a8.345 8.345 0 0 1-1.185-2.257.382.382 0 0 1 .294-.383 2.706 2.706 0 0 1 .969.1c1.112.258 2.222.524 3.342.747a22.428 22.428 0 0 0 3.334.462c.711.032 1.093.653 1.429 1.19 1 1.6 2.087 3.16 3.146 4.727a3.685 3.685 0 0 1 .542 2.108ZM57.652 0 45.465 18.084a.386.386 0 0 1-.628.017c-1.5-2-2.426-3.151-5.06-3.4a68.259 68.259 0 0 1-11.375-2.346c-3.454-.947-6.874-2.013-10.321-2.979l16.621 24.707a.379.379 0 0 1 0 .426L19.854 57.187c3.235-.656 6.473-1.24 9.736-1.751 3.484-.546 6.978-1.03 10.465-1.553a6.441 6.441 0 0 0 4.394-2.608l.623-.841a.385.385 0 0 1 .633.019L57.652 68.8l11.947-18.351a.386.386 0 0 1 .633-.019l.623.841a6.442 6.442 0 0 0 4.394 2.608c3.488.523 6.982 1.007 10.465 1.553 3.263.511 6.5 1.095 9.736 1.751L80.601 34.51a.378.378 0 0 1 0-.426L97.225 9.376c-3.447.965-6.868 2.031-10.321 2.979A68.266 68.266 0 0 1 75.528 14.7c-2.635.249-3.557 1.4-5.06 3.4a.386.386 0 0 1-.628-.017Z'\r\n          />\r\n        </g>\r\n      </svg>\r\n      <div className={styles.modelContainer}>\r\n        <div id='CustomiserCanvasControls' className={styles.controls}></div>\r\n        <Suspense fallback={<div className={styles.loading}>Loading ...</div>}>\r\n          <CustomiserCanvas className={styles.model} onCameraRef={handleCameraRef} />\r\n        </Suspense>\r\n      </div>\r\n      {selectedNav === null && (\r\n        <Button className={styles.close} onClick={() => setShow(false)}>\r\n          Close\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customiser;\r\n","import { SpotLight, useHelper } from '@react-three/drei';\r\nimport { useRef } from 'react';\r\nimport { SpotLightHelper, Vector3, SpotLight as SpotLightRef } from 'three';\r\nconst config = {\r\n  ambientLight: {\r\n    // color: 16777215,\r\n    // groundColor: 4473924,\r\n    intensity: 0.1,\r\n  },\r\n  directionalLights: [\r\n    {\r\n      color: 16777215,\r\n      intensity: 0.3,\r\n      position: new Vector3(0, 6, -200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 16759931,\r\n      intensity: 0.2,\r\n      position: new Vector3(-150, 0, 200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 10213119,\r\n      intensity: 0.2,\r\n      position: new Vector3(100, 0, 200),\r\n    },\r\n  ],\r\n};\r\n\r\nconst Lights = () => {\r\n  const light = useRef<SpotLightRef>(null);\r\n  // useHelper(light.current, SpotLightHelper, 'cyan');\r\n  return (\r\n    <group>\r\n      <hemisphereLight {...config.ambientLight}></hemisphereLight>\r\n      <pointLight position={[-800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[-800, 0, 1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[800, 0, 1000]} intensity={0.5} decay={120} power={7} castShadow />\r\n      <pointLight position={[800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Lights;\r\n"],"names":["usePortalRef","id","loaded","setLoaded","useState","portalRef","useRef","useEffect","current","document","getElementById","_ref","children","notifName","setShowNotification","cb","isChecked","setIsChecked","handleDismiss","localStorage","setItem","_jsx","_Fragment","className","styles","_jsxs","type","onChange","e","target","checked","onClick","isClickable","classNames","isHidden","color","buttonClassNames","concat","containedButton","clickable","hidden","green","onClickHandler","_finishedNavs$find","finishedNavs","finishedNavsParam","confirmText","confirmStorage","onNext","rootClassName","cn","navItems","selectedNav","parts","sizing","cancelPartChange","resetNav","setSelectedNav","designComplete","useCustomiserStore","setResetCamera","addingToCart","useDesignStore","navIndex","findIndex","nav","name","hasNextTab","length","popupPortalRef","showPopup","setShowPopup","notifTitle","shouldShowNotification","getItem","map","part","partName","isFinishedPart","find","navItem","isFinished","isFinishedCurrentNav","isRequired","required","_sizing$height","_sizing$weight","height","value","weight","shouldHideCancel","noCancelNav","isClickableAddToBasket","ReactDOM","ContainedButton","saveHandler","addToBasketHandler","DontShowAgain","isSelected","capsuleNavButton","selected","finished","containedNavButton","FittingOption","_selectedModels$find","_option$models","option","selectedModels","state","setSelectedModel","getSelected","m","optionId","model","motion","div","fittingOption","initial","opacity","animate","exit","fittingButtons","models","_m$model","_m$model$data","_m$model3","_m$model3$data","_m$model3$data$attrib","ContainedNavButton","data","fittingButton","_m$model2","attributes","_ref2","_fittingOptions$navSt","setFinishedNavs","fittingOptions","_state$customProduct","_state$customProduct$","customProduct","options","setCameraFocus","fittingOptionsTitles","o","initialStep","navStep","setNavStep","hasNextStep","prev","iFitting","root","navButtonContainer","title","i","CapsuleButton","NavButtons","cur","newCur","getSrcSets","formats","fff","Object","entries","f","width","url","filter","format","sort","a","b","reduce","acc","index","array","getSrcSet","_image$attributes4","image","sizes","relativeHeight","useMemo","_image$attributes","_image$attributes2","style","srcSet","_image$attributes3","src","NavFlagsSelect","editFlag","flags","addFlag","updateFlag","_f$attributes","flag","flagSelected","key","edit","Image","_prices$length","scale","rotation","prices","onScale","onRotate","scaleAdjust","rotateAdjust","currentScale","setCurrentScale","currentRotate","setCurrentRotate","rootRotateClassName","marks","range","start","stop","step","Array","from","p","markKey","Number","toFixed","createPortal","subtractScale","FaCircleMinus","addScale","FaCirclePlus","rotateCounterClockwise","GiAnticlockwiseRotation","rotateClockwise","GiClockwiseRotation","disabled","onApply","Button","colour","onEdit","onDelete","isVisible","toggleVisibility","isVisibleEye","undefined","event","stopPropagation","FaEye","FaEyeSlash","xmlns","viewBox","d","NavFlagsFlag","_flag$flag","_flag$flag$attributes","setShowSelector","setSelectModel","deleteFlag","flagItem","flagItemImage","NavOptionEdit","editItem","deleteItem","NavFlags","g","showSelector","flagQuery","useGetFlagsQuery","graphQLClient","pagination","limit","select","_data$flags","_data$graphicPrices","graphicPrices","NavDecalAdjust","decalScale","decalRotation","setScale","price","_price$attributes","_price$attributes2","priceValues","size","basePrice","quantity","startTransition","NavEditButtons","applyFlag","decalFreeze","customiserFlags","toggle","isOpen","isMinimized","minimizeIconClassname","NavImagesImage","_graphic$graphic","_graphic$graphic$attr","_graphic$graphic$attr2","graphic","updateGraphic","deleteGraphic","graphicItem","graphicItemImage","NavImagesUpload","setGraphic","saving","setSaving","mutate","createGraphicMutation","useCreateGraphicMutation","onSuccess","_data$createGraphic","createGraphic","fileUploadMutate","useUploadMultipleFilesMutation","fileIDs","multipleUpload","_f$data","customer","onDrop","useCallback","acceptedFiles","files","getRootProps","getInputProps","isDragActive","useDropzone","accept","maxFiles","multiple","dropZone","NavImagesSelect","_currentGraphic$attri","_currentGraphic$attri2","editGraphic","currentGraphic","setCurrentGraphic","addGraphic","graphics","graphicSelected","NavImages","imageQuery","useGetImagesQuery","applyImage","addImage","uniqueMaterialTypes","uniqBy","initialState","colourGroups","materialTypes","materials","createMaterialGroup","set","get","filteredMaterials","colourGroup","selectedColourGroup","_m$attributes","_m$attributes$colourG","resetMaterialGroup","setMaterials","materialType","produce","flatMap","_d$attributes","_d$attributes$colourG","_m$attributes2","_m$attributes2$colour","_state$selectedColour","_m$attributes3","_m$attributes3$type","selectedMaterialType","uniqueMaterials","setColourGroup","_m$attributes4","_m$attributes4$colour","_state$selectedColour2","_m$attributes5","_m$attributes5$type","setMaterialType","Provider","useStore","useMaterialGroupStore","createContext","createStore","create","devtools","Material","_material$attributes","_material$attributes$","_material$attributes2","_mapImage$image","_mapImage$image$data","_mapImage$image$data$","_mapImage$image2","_mapImage$image2$data","_mapImage$image2$data2","material","onMaterialSelected","selectedMaterialId","mapImage","images","mapType","onLongPressBinder","useLongPress","handleContextMenu","preventDefault","onContextMenu","popup","alt","MaterialType","hideColorGroups","getFilteredMaterials","mt","_mt$attributes","materialType__title","_m$attributes$type","_m$attributes$type$da","SelectedMaterialInfo","_selectedMaterial$att","_selectedMaterial$att2","_selectedMaterial$att3","_selectedMaterial$att4","_selectedMaterial$att5","selectedPart","selectedMaterial","_parts$find","hex","sku","ext","mime","large","hash","path","small","medium","thumbnail","MaterialGroupLoader","_materialGroup$attrib","materialGroup","typeIds","t","useGetMaterialsQuery","filters","in","pageSize","_data$materials","push","testMaterial","group","_group$attributes$col","_group$attributes","background","_group$attributes2","outline","fill","props","isOn","togglePillButton","on","_part$materialGroup","_currentPart$material","_currentPart$material2","_currentPart$material3","_currentPart$material4","setPart","removePart","currentPart","showOptional","setShowOptional","optional","buttonContainer","TogglePillButton","optionalOnClick","show","FaMinus","IoMdAdd","Suspense","fallback","MaterialGroup","placeholder","getSizeVariation","unit","variations","v","_v$sku","endsWith","setSizing","_state$sizing","_state$sizing2","variation","_state$sizing3","setHeightUnit","setWeightUnit","FormInput","unitToggle","toggleButton","toggleButtonSelected","UNIT","HEIGHT","CM","INCH","WEIGHT","KG","LB","FormSelect","selectedVariation","priceString","formattedPrice","_editText$crystalBack","_selectedName$attribu9","_selectedName$attribu10","_selectedName$attribu11","_selectedName$attribu12","_selectedName$attribu13","_selectedName$attribu14","_editText$material","_editText$material$at","_editText$material$at2","_editText$material2","_editText$material2$a","_editText$material2$a2","editText","setIsPickingCrystal","selectedName","crystalBackground","crystals","setCrystals","crystalPrice","puff","setPuff","puffPrice","hasPuffOption","NAME_TYPE_LUXURY_ID","updateText","addCrystals","add","_selectedName$attribu","_selectedName$attribu2","_selectedName$attribu3","_selectedName$attribu4","shopifyVariantId","addPuff","_selectedName$attribu5","_selectedName$attribu6","_selectedName$attribu7","_selectedName$attribu8","finishSelections","finishSelection","pricing","Price","_selectedName$attribu15","_editText$material3","_editText$material3$a","_editText$material3$a2","prevSelectedName","names","useGetNamesQuery","_data$names","letterPrice","nameType","outlinePrice","promptMessage","categoryDisplayName","n","_n$attributes","_n$attributes2","_n$attributes2$basePr","_n$attributes3","_n$attributes3$letter","setSelectedName","_editText$outline","_editText$outline2","_editText$outline2$at","_editText$outline2$at2","_editText$outline3","_editText$outline3$at","_editText$outline3$at2","setIsPickingOutline","showOutline","setShowOutline","updateOutline","outlineGroup","fonts","arial","oswald","college","ballantines","_fonts$find","text","setText","font","setFont","addText","fontSelection","_font","onFontChange","deleteText","textItem","textItemText","onAddTextClicked","onTextSelected","texts","navTextsSelection","titleText","NavTextText","getMaterialUrl","_material$attributes$2","_material$attributes$3","_material$attributes$4","imgMap","normalMapGenerator","NormalMapGenerator","instance","async","imgToNormalMap","img","hasPuff","blur","blurAmount","generateFromImage","strength","level","CanvasText","constructor","toNormalMap","patternType","canvas","ctx","outlineCanvas","outlineCtx","normalMapTextureCanvas","normalMapTextureCtx","normalMapCanvas","normalMapCtx","normalMapOutlineTextureCanvas","normalMapOutlineTextureCtx","normalMapOutlineCanvas","normalMapOutlineCtx2","crystalBgPatternCanvas","crystalBgPatternCtx","canvasHeight","canvasWidth","fontSize","outlineWidth","this","createElement","getContext","clear","_this$ctx","_this$outlineCtx","clearRect","drawImg","drawImage","showTestCanvas","innerHTML","maskImage","globalCompositeOperation","drawPreviewText","textAlign","fillText","drawPreviewOutlineText","lineWidth","strokeText","drawPreviewOutlineOnlyText","fillStyle","drawNormalMap","normalMapPatternImg","pattern","createPattern","rect","normalMap","drawOutlineNormalMap","drawCrystalBg","crystalBgImg","crystalBgPatternImg","globalAlpha","printTextMapToStrokeMap","previewText","_ref3","previewImg","toDataURL","mergeCanvas","getOutlineCanvas","getNormalMapTextureCanvas","getNormalMapOutlineCanvas","loadImage","Promise","resolve","reject","crossOrigin","onload","onerror","_text$selectedName","_text$selectedName2","_text$selectedName2$a","_text$selectedName3","canvasRef","shouldShow","setShouldShow","zoom","setZoom","dataUrl","setDataUrl","scaleModifier","Vector3","isLuxury","hasCrystals","Texture","canvasRefreshCount","setCanvasRefreshCount","normalScale","FullscreenImg","memo","imgRef","onUpdate","x","y","make3dTransformValue","setProperty","QuickPinchZoom","ref","displayName","Canvas","el","gl","preserveDrawingBuffer","Lights","args","visible","Decal","position","preview","transparent","roughness","depthTest","depthWrite","Vector2","_canvasRef$current","MdPinch","_editText$selectedNam","_previewImgRef$curren","mainTextInputRef","previewImgRef","fontFamily","setFontFamily","isVisiblePreview","setIsVisiblePreview","getPatternType","isMinimizedCustomiserNav","materialImgMemo","outlineImgMemo","fabricPatternImgMemo","crystalNormalMapImgMemo","crystalBgImgMemo","crystalBgPatternImgMemo","previewImgDom","canvasText","CanvasTexture","fontUrl","FontFace","load","loadFonts","outlineImg","embroideryPattern","crystalNormalMap","patternImg","zIndex","textPreview","textPreview__imgContainer","display","NavTextPreviewScene","stepsNavButtons","stepsNavButtons__next","FaArrowRightLong","stepsNavButtons__prev","FaArrowLeftLong","stepsNavButtons__cancel","isClickableNext","isClickablePrev","isVisibleNext","isVisiblePrev","onClickNext","onClickPrev","onClickCancel","onClickSave","popupContainerRef","CancelStepButton","PrevStepButton","NextStepButton","ApplyButton","NavTextInput","forwardRef","inputStyles","textInput","textInputContainer","showEditText","setShowEditText","setStep","updateIsMinimizedCustomiserNav","isPickingOutline","isPickingCrystal","navHeaderRef","noOutlineSelected","noCrystalSelected","hasFinishedAllSteps","hasFinishedStep1","hasFinishedStep2","hasFinishedStep3","hasFinishedStep4","saveAndApplyChecker","alert","applyText","hasApplied","shouldShowConfirmCancelText","showConfirmCancelPopup","setShowConfirmCancelPopup","shouldShowInfoDisplay","setShouldShowInfoDisplay","cancelText","navCategoryNames","navTextEdit","NavTextPreview","NavTextCategories","NavTextCategoriesItems","handleOnClick","_step","finishedCategories","categoryClassNames","selectedCategoryItem","finishedCategoryItem","CategoryDisplay","NavTextSelect","NavTextNameTypes","NavTextOutline","NavTextFinish","NavTextNavSteps","handleNext","maxStep","handlePrevious","cancelTextHandler","placeText","decalPosition","decalOrientation","InfoDisplay","maxWidth","navHeaderSaveText","NavTextsSelection","navTabRefs","partsFinishedNavs","resetCur","item","newFinishedNavs","unshift","self","_navTabRefs$current$n","scrollIntoView","isFinishedNav","finishedNav","navHeaderScroll","classes","tab","elem","navClickHandler","toLowerCase","currentTarget","dot","navName","cancelTextEdit","setIsOpen","scrollCoordinates","setScrollCoordinates","left","top","scrollableRef","minimized","hasActions","isEdittingText","isFullscreen","scrollTo","behavior","toggleOpen","scrollLeft","scrollTop","layout","transition","stiffness","damping","NavHeader","header","NavHeaderScroll","headerAfter","AnimatePresence","content","closed","variants","open","collapsed","NavFitting","NavText","NavSize","NavPart","actions","total","resetCustomerSelections","resetPopup","confirm","saveDesign","CustomiserCanvas","lazy","setShow","cameraRef","CustomiserNav","Header","clipPath","fillRule","onCameraRef","config","intensity","decay","power","castShadow"],"sourceRoot":""}