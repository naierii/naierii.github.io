{"version":3,"file":"static/js/682.c3e76e34.chunk.js","mappings":"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","sources":["webpack://boxxerworld-customiser/./src/components/nav/NavFitting/NavFitting.module.scss?96df","components/ui/Button/ContainedNavButton.tsx","lib/string.ts","components/nav/NavFitting/NavFitting.tsx","components/ui/Image/getSrcSets.ts","webpack://boxxerworld-customiser/./src/components/ui/Image/Image.module.scss?e41e","components/ui/Image/Image.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFlags/NavFlags.module.scss?2098","components/nav/NavFlags/NavFlagsSelect.tsx","hooks/usePortalRef/usePortalRef.ts","webpack://boxxerworld-customiser/./src/components/nav/NavEditButtons/NavEditButtons.module.scss?6ae0","components/ui/Button/ContainedButton.tsx","components/nav/NavEditButtons/NavEditButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavOptionEdit/NavOptionEdit.module.scss?d15e","components/nav/NavOptionEdit/NavOptionEdit.tsx","components/nav/NavFlags/NavFlagsFlag.tsx","webpack://boxxerworld-customiser/./src/components/ui/ImageDecalPreview/ImageDecalPreview.module.scss?4e1b","components/nav/NavDecalAdjust copy/NavDecalAdjust.module.scss","components/nav/NavDecalAdjust copy/NavDecalAdjust.tsx","components/ui/ImageDecalPreview/ImageDecalPreview.tsx","components/nav/NavFlags/NavFlags.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavHeader/NavHeader.module.scss?a403","components/nav/NavHeader/NavHeader.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavImages/NavImages.module.scss?0415","components/nav/NavImages/NavImagesImage.tsx","components/nav/MaterialGroup/test-upload-image-response.ts","components/nav/NavImages/NavImagesUpload.tsx","components/nav/NavImages/NavImagesSelect.tsx","components/nav/NavImages/NavImages.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/MaterialGroup.module.scss?bec8","components/nav/MaterialGroup/MaterialGroupState.ts","components/nav/MaterialGroup/Material.tsx","components/nav/MaterialGroup/test-crystal-material.ts","lib/img.util.ts","components/nav/MaterialGroup/MaterialCrystal.tsx","components/nav/MaterialGroup/MaterialType.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/SelectedMaterialInfo.module.scss?ad46","components/nav/MaterialGroup/SelectedMaterialInfo.tsx","components/nav/MaterialGroup/MaterialGroup.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavPart/NavPart.module.scss?e3f3","components/ui/Button/TogglePillButton.tsx","webpack://boxxerworld-customiser/./src/components/nav/Crystals/Crystals.module.scss?46d0","components/nav/Crystals/CrystalsSelect.tsx","components/nav/Crystals/Crystals.tsx","components/nav/NavPart/NavPart.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormInput/FormInput.module.scss?a3cb","components/ui/FormInput/FormInput.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormSelect/FormSelect.module.scss?5df1","components/ui/FormSelect/FormSelect.tsx","services/size.ts","webpack://boxxerworld-customiser/./src/components/nav/NavSize/NavSize.module.scss?68ae","components/nav/NavSize/NavSize.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavText.module.scss?7ead","components/ui/Price/Price.module.scss","components/ui/Price/Price.tsx","components/nav/NavText/NavTextFinish.tsx","components/nav/NavText/NavTextNameTypes.tsx","components/nav/NavText/NavTextOutline.tsx","components/nav/NavText/NavTextSelect.tsx","components/nav/NavText/NavTextText.tsx","components/nav/NavText/NavTextsSelection.tsx","lib/canvas.ts","components/nav/NavText/NavTextPreview.tsx","components/ui/Button/NextStepButton.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavTextNavSteps.module.scss?13e7","components/ui/Button/CancelStepButton.tsx","components/ui/Button/ApplyButton.tsx","components/nav/NavText/NavTextNavSteps.tsx","components/nav/NavText/NavTextInput.tsx","webpack://boxxerworld-customiser/./src/components/ui/DontShowAgain/DontShowAgain.module.scss?2c56","components/ui/DontShowAgain/DontShowAgain.tsx","webpack://boxxerworld-customiser/./src/components/ui/InfoButton/InfoButton.module.scss?0cd7","components/ui/InfoButton/InfoDisplay.tsx","components/nav/NavText/NavText.tsx","webpack://boxxerworld-customiser/./src/components/nav/CustomiserNav/CustomiserNav.module.scss?394a","webpack://boxxerworld-customiser/./src/components/ui/QuickInfo/QuickInfo.module.scss?c138","components/ui/QuickInfo/QuickInfo.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavProduction/NavProduction.module.scss?4789","components/nav/NavProduction/NavProduction.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavBoxxerLogo/NavBoxxerLogo.module.scss?8495","components/nav/NavBoxxerLogo/NavBoxxerLogo.tsx","components/nav/CustomiserNav/CustomiserNav.tsx","webpack://boxxerworld-customiser/./src/components/layout/Header/Header.module.scss?47aa","components/layout/Header/Header.tsx","webpack://boxxerworld-customiser/./src/components/layout/Customiser/Customiser.module.scss?e94f","components/layout/Customiser/Customiser.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"fittingButtons\":\"NavFitting_fittingButtons__Y1hdd\",\"fittingButton\":\"NavFitting_fittingButton__djmDJ\",\"navButtonContainer\":\"NavFitting_navButtonContainer__K9a4D\",\"defaultMessage\":\"NavFitting_defaultMessage__YBU6l\"};","import styles from './Button.module.scss';\r\n\r\ninterface CapsuleButtonProps {\r\n  onClick?: () => void;\r\n  isSelected?: boolean;\r\n  isFinished?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ContainedNavButton = ({\r\n  onClick,\r\n  isSelected,\r\n  isFinished,\r\n  classNames,\r\n  children,\r\n}: CapsuleButtonProps) => {\r\n  const buttonClassNames = `\r\n    ${styles.containedNavButton}\r\n    ${classNames}\r\n    ${isSelected ? styles.selected : ''}\r\n    ${isFinished ? styles.finished : ''}\r\n    `;\r\n  return (\r\n    <span className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ContainedNavButton;\r\n","import { NavItem } from '@store/customiser';\r\n\r\ninterface NavItemNameDisplayParameters {\r\n  selectedNav?: NavItem | null;\r\n}\r\nexport const navItemNameDisplay = ({ selectedNav }: NavItemNameDisplayParameters) => {\r\n  let navItemName = selectedNav?.name || '';\r\n\r\n  if (navItemName.toLowerCase() === 'waist') {\r\n    navItemName = 'Waistband';\r\n  }\r\n\r\n  return navItemName;\r\n};\r\n\r\ninterface OptionModelNameDisplayParameters {\r\n  name?: string | null;\r\n  optionName?: string | null;\r\n}\r\nexport const optionModelNameDisplay = ({ name, optionName }: OptionModelNameDisplayParameters) => {\r\n  let modelName = name || '';\r\n\r\n  if (optionName?.toLowerCase() === 'waist') {\r\n    switch (modelName.toLowerCase()) {\r\n      case 'waist 4\" new':\r\n        modelName = '4\"';\r\n        break;\r\n      case 'waist 5\" new':\r\n        modelName = '5\"';\r\n        break;\r\n      default:\r\n    }\r\n  } else if (optionName?.toLowerCase() === 'leg cut') {\r\n    switch (modelName.toLowerCase()) {\r\n      case 'straight leg':\r\n        modelName = 'Side Slit';\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  return modelName;\r\n};\r\n\r\ninterface OptionModelTitleDisplayParameters {\r\n  selectedNav?: NavItem | null;\r\n}\r\nexport const optionModelTitleDisplay = ({ selectedNav }: OptionModelTitleDisplayParameters) => {\r\n  let titleDisplay = selectedNav?.name || '';\r\n\r\n  if (titleDisplay.toLowerCase() === 'waist' && selectedNav?.type === 'fitting') {\r\n    titleDisplay = 'Waistband Height';\r\n  } else {\r\n    titleDisplay = `Select ${titleDisplay}`;\r\n  }\r\n\r\n  return titleDisplay;\r\n};\r\n\r\ninterface TextTypesDisplayParameters {\r\n  textType?: string | null;\r\n}\r\nexport const textTypesDisplay = ({ textType }: TextTypesDisplayParameters) => {\r\n  let display = textType || '';\r\n\r\n  if (display.toLowerCase() === 'basic') {\r\n    display = 'Print';\r\n  } else if (display.toLowerCase() === 'luxury') {\r\n    display = 'Embroidery';\r\n  }\r\n\r\n  return display;\r\n};\r\n","import { CustomProductOptionFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { motion } from 'framer-motion';\r\nimport styles from './NavFitting.module.scss';\r\nimport { useEffect } from 'react';\r\nimport ContainedNavButton from '@components/ui/Button/ContainedNavButton';\r\nimport { getFittingOptionByName } from '@lib/object';\r\nimport { optionModelNameDisplay, optionModelTitleDisplay } from '@lib/string';\r\n\r\nexport interface FittingOptionProps {\r\n  option: CustomProductOptionFragment;\r\n}\r\n\r\nconst FittingOption = ({ option }: FittingOptionProps) => {\r\n  const { selectedModels, setSelectedModel } = useCustomiserStore();\r\n\r\n  if (!option) {\r\n    return null;\r\n  }\r\n\r\n  const getSelected = selectedModels.find((m) => m.optionId === option.id)?.model;\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={styles.fittingOption}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <div className={styles.fittingButtons}>\r\n          {option.models?.map((m) => (\r\n            <ContainedNavButton\r\n              key={m?.id}\r\n              isSelected={getSelected?.id === m?.model?.data?.id}\r\n              classNames={styles.fittingButton}\r\n              onClick={() => {\r\n                setSelectedModel(option.id, m?.model?.data);\r\n              }}\r\n            >\r\n              {optionModelNameDisplay({\r\n                optionName: option.name,\r\n                name: m?.model?.data?.attributes?.name,\r\n              })}\r\n            </ContainedNavButton>\r\n          ))}\r\n        </div>\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface NavFittingProps {\r\n  additionalFinishedNavs?: {\r\n    name: string;\r\n    isFinished: boolean;\r\n  }[];\r\n  setAdditionalFinishedNavs?: React.Dispatch<\r\n    React.SetStateAction<{ name: string; isFinished: boolean }[]>\r\n  >;\r\n  finishedNavs: ({ name: string; isFinished: boolean } | undefined)[];\r\n  setFinishedNavs: React.Dispatch<\r\n    React.SetStateAction<({ name: string; isFinished: boolean } | undefined)[]>\r\n  >;\r\n}\r\nconst NavFitting = ({ finishedNavs }: NavFittingProps) => {\r\n  const fittingOptions = useCustomiserStore(\r\n    (state) => state.customProduct?.attributes?.options,\r\n  ) as Array<CustomProductOptionFragment>;\r\n  const { setCameraFocus, selectedNav } = useCustomiserStore();\r\n\r\n  const fittingTitle = selectedNav?.name || '';\r\n  const fittingOption = getFittingOptionByName({\r\n    fittingOptions,\r\n    fittingOptionName: fittingTitle,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (fittingTitle) {\r\n      setCameraFocus(fittingTitle);\r\n    }\r\n  }, [fittingTitle]);\r\n\r\n  if (!fittingOption) {\r\n    return null;\r\n  }\r\n\r\n  const initialStep = finishedNavs?.find(\r\n    (navItem) => navItem?.name === 'Fitting' && navItem.isFinished === true,\r\n  )\r\n    ? fittingOptions.length - 1\r\n    : 0;\r\n  // const [navStep, setNavStep] = useState(initialStep);\r\n  // const hasNextStep = navStep < fittingOptions.length - 1;\r\n\r\n  // useEffect(() => {\r\n  //   if (!hasNextStep) {\r\n  //     setFinishedNavs &&\r\n  //       setFinishedNavs((prev) => {\r\n  //         const iFitting = prev.findIndex((navItem) => navItem?.name === 'Fitting');\r\n  //         if (iFitting !== -1) {\r\n  //           prev[iFitting] = {\r\n  //             name: 'Fitting',\r\n  //             isFinished: true,\r\n  //           };\r\n  //           return prev;\r\n  //         }\r\n  //         const newFinishedNavs = [\r\n  //           ...prev,\r\n  //           {\r\n  //             name: 'Fitting',\r\n  //             isFinished: true,\r\n  //           },\r\n  //         ];\r\n  //         return newFinishedNavs;\r\n  //       });\r\n  //   }\r\n  // }, [navStep]);\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {/* <div className={styles.navButtonContainer}>\r\n        {fittingOptionsTitles.map((title, i) => {\r\n          return (\r\n            <CapsuleButton\r\n              isFinished={navStep > i}\r\n              isSelected={navStep === i}\r\n              onClick={() => {\r\n                setNavStep(i);\r\n                setCameraFocus(title || '');\r\n              }}\r\n              key={i}\r\n            >\r\n              {title}\r\n            </CapsuleButton>\r\n          );\r\n        })}\r\n      </div> */}\r\n      <div>\r\n        <b>{optionModelTitleDisplay({ selectedNav })}:</b>\r\n      </div>\r\n      <br />\r\n      {<FittingOption key={fittingOption.id} option={fittingOption} />}\r\n      <p className={styles.defaultMessage}>\r\n        The default display automatically represents the model with a waist of 4&quot;, please make\r\n        changes to see the difference.\r\n      </p>\r\n      {/* <NavButtons\r\n        onNext={\r\n          hasNextStep &&\r\n          (() => {\r\n            setNavStep((cur) => {\r\n              const newCur = cur + 1;\r\n              setCameraFocus(fittingTitle || '');\r\n              return newCur;\r\n            });\r\n          })\r\n        }\r\n        finishedNavs={finishedNavs}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavFitting;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Formats } from './types';\r\n\r\nfunction getSrcSet(formats: Formats): string | null {\r\n  if (!formats) return null;\r\n\r\n  const fff = Object.entries(formats)\r\n    .map((f) => {\r\n      return f[1]\r\n        ? {\r\n            width: f[1].width,\r\n            url: f[1].url,\r\n          }\r\n        : null;\r\n    })\r\n    .filter((format) => format);\r\n\r\n  return !fff.length\r\n    ? null\r\n    : fff\r\n        .sort((a, b) => {\r\n          if (a?.width && b?.width && a.width < b.width) return -1;\r\n          if (a?.width && b?.width && a.width > b.width) return 1;\r\n          return 0;\r\n        })\r\n        .reduce((acc: any, current: any, index: number, array: any) => {\r\n          return acc + `${current.url} ${current.width}w${index < array.length - 1 ? ', ' : ''}`;\r\n        }, '');\r\n}\r\n\r\nexport default function getSrcSets(formats: Formats): string | null {\r\n  return getSrcSet(formats);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Image_root__u7aDb\"};","import { ImageFragment, Maybe } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { CSSProperties, useMemo } from 'react';\r\nimport getSrcSets from './getSrcSets';\r\n\r\nimport styles from './Image.module.scss';\r\n\r\nexport interface ImageProps {\r\n  className?: string;\r\n  image?: Maybe<ImageFragment>;\r\n  sizes?: string;\r\n}\r\n\r\nconst Image = ({ className, image, sizes }: ImageProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  if (!image) {\r\n    return null;\r\n  }\r\n\r\n  const relativeHeight = useMemo(() => {\r\n    if (image.attributes?.height && image.attributes?.width) {\r\n      return (image.attributes.height / image.attributes.width) * 100;\r\n    }\r\n    return 100;\r\n  }, [image]);\r\n\r\n  const style = { '--image-padding-top': `${relativeHeight}%` } as CSSProperties;\r\n\r\n  const srcSet = useMemo(() => getSrcSets(image.attributes?.formats), [image]);\r\n\r\n  return (\r\n    <div className={rootClassName} style={style}>\r\n      {srcSet && (\r\n        <img src={image.attributes?.url} srcSet={srcSet} sizes={sizes ? sizes : '100vw'} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"flags\":\"NavFlags_flags__S52CT\",\"flag\":\"NavFlags_flag__gtrVs\",\"edit\":\"NavFlags_edit__RNMVf\",\"flagImgContainer\":\"NavFlags_flagImgContainer__yswf3\",\"flagItem\":\"NavFlags_flagItem__rI7sv\",\"flagItemImage\":\"NavFlags_flagItemImage__6ov2x\",\"addBtnContainer\":\"NavFlags_addBtnContainer__hWkoe\",\"itemsTitle\":\"NavFlags_itemsTitle__bTU8h\"};","import Image from '@components/ui/Image';\r\nimport { FlagFragment } from '@graphql/generated/graphql';\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\n\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsSelectProps {\r\n  editFlag?: FlagCustomiser;\r\n  flags: FlagFragment[];\r\n}\r\n\r\nexport const NavFlagsSelect = ({ editFlag, flags }: NavFlagsSelectProps) => {\r\n  const { addFlag, updateFlag } = useCustomiserStore((state) => state);\r\n\r\n  const editFlagId = editFlag?.flag?.id;\r\n\r\n  const flagSelected = (flag: FlagFragment) => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        flag: flag,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addFlag({\r\n        flag: flag,\r\n        decalFreeze: true,\r\n        decalPosition: [-0.01989325641440387, 2.436930108198209, 1.6226380277735046],\r\n        decalOrientation: [\r\n          -0.14799034762565572,\r\n          -0.17866277612764514,\r\n          -0.026487426629834374,\r\n          'XYZ',\r\n        ],\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flags}>\r\n      {flags?.map((f) => {\r\n        const editClass = editFlagId === f.id ? styles.edit : '';\r\n\r\n        return (\r\n          <div className={`${styles.flag} ${editClass}`} key={f.id} onClick={() => flagSelected(f)}>\r\n            <Image\r\n              className={`${styles.flagImgContainer} ${editClass}`}\r\n              image={f.attributes?.image.data}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nexport const usePortalRef = (id: string) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const portalRef = useRef<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) {\r\n      portalRef.current = document.getElementById(id);\r\n      if (portalRef.current) {\r\n        setLoaded(true);\r\n      }\r\n    }\r\n  }, [id, loaded]);\r\n\r\n  return loaded ? portalRef.current : null;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavEditButtons_root__43Hm3\"};","import styles from './Button.module.scss';\r\n\r\ninterface ContainedButtonProps {\r\n  onClick?: () => void;\r\n  isClickable?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n  color?: 'red' | 'darkGrey' | 'yellow' | 'white' | 'grey' | 'gray' | 'black';\r\n  type?: 'hollow';\r\n  widthType?: 'wide';\r\n\r\n  isSelected?: boolean;\r\n  isHidden?: boolean;\r\n}\r\n\r\nconst ContainedButton = ({\r\n  onClick,\r\n  isClickable,\r\n  classNames,\r\n  children,\r\n  isHidden,\r\n  color,\r\n  type,\r\n  widthType,\r\n}: ContainedButtonProps) => {\r\n  const onClickHandler = () => {\r\n    if (typeof isClickable === 'undefined' || isClickable) onClick && onClick();\r\n  };\r\n  const buttonClassNames = `\r\n      ${styles.containedButton}\r\n      ${styles[type || '']}\r\n      ${styles[widthType || '']}\r\n      ${classNames}\r\n      ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n      ${typeof isHidden === 'undefined' || !isHidden ? '' : styles.hidden}\r\n      ${color ? styles[color] : ''}\r\n    `;\r\n  return (\r\n    <button className={buttonClassNames} onClick={onClickHandler}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ContainedButton;\r\n","import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavEditButtons.module.scss';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\nexport interface NavEditButtonsProps {\r\n  hasCancel?: boolean;\r\n  className?: string;\r\n  onApply?: () => void;\r\n  disabled: boolean;\r\n  onNext?: false | (() => void);\r\n}\r\n\r\nconst NavEditButtons = ({\r\n  className,\r\n  disabled,\r\n  onApply,\r\n  hasCancel = true,\r\n  onNext,\r\n}: NavEditButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={rootClassName}>\r\n      <ContainedButton onClick={onApply} isHidden={!hasCancel}>\r\n        Cancel\r\n      </ContainedButton>\r\n      {onNext ? (\r\n        <ContainedButton onClick={onNext} isClickable={!disabled}>\r\n          Next\r\n        </ContainedButton>\r\n      ) : (\r\n        <ContainedButton color='black' onClick={onApply} isClickable={!disabled}>\r\n          Save\r\n        </ContainedButton>\r\n      )}\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavEditButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavOptionEdit_root__q-pp0\",\"eyeIcon\":\"NavOptionEdit_eyeIcon__v85fP\"};","import cn from 'classnames';\r\n\r\nimport styles from './NavOptionEdit.module.scss';\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa6';\r\nimport { MouseEventHandler } from 'react';\r\n\r\nexport interface NavOptionEditProps {\r\n  className?: string;\r\n  onEdit?: () => void;\r\n  onDelete?: () => void;\r\n  isVisible?: boolean;\r\n  toggleVisibility?: () => void;\r\n}\r\n\r\nconst NavOptionEdit = ({\r\n  className,\r\n  onEdit,\r\n  onDelete,\r\n  isVisible = true,\r\n  toggleVisibility,\r\n}: NavOptionEditProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const isVisibleEye = typeof isVisible === undefined ? true : isVisible;\r\n\r\n  const handleIsVisible: MouseEventHandler<HTMLSpanElement> = (event) => {\r\n    event.stopPropagation();\r\n    toggleVisibility && toggleVisibility();\r\n  };\r\n  return (\r\n    <div className={rootClassName}>\r\n      <span onClick={handleIsVisible} className={styles.eyeIcon}>\r\n        {isVisibleEye ? <FaEye /> : <FaEyeSlash />}\r\n      </span>\r\n      <button onClick={onEdit}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24.785 24.788'>\r\n          <path d='M24.785 6.739 18.046 0 0 18.049v6.739h6.739Zm-6.738-3.218 3.218 3.218-1.351 1.352-3.217-3.218Zm-3.112 3.112 3.218 3.218L7.467 20.538l-3.218-3.22ZM2.489 22.298v-3.219l3.218 3.218Z' />\r\n        </svg>\r\n      </button>\r\n      <button onClick={onDelete}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.601 23.219'>\r\n          <path d='m14.601 11.609-1.489-1.489L2.992 0 .001 2.978l8.631 8.631-8.631 8.632 2.991 2.978L13.112 13.1Z' />\r\n          <path d='m9 11.609 1.489 1.489 10.12 10.12L23.6 20.24l-8.631-8.631L23.6 2.977 20.609-.001l-10.12 10.119Z' />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavOptionEdit;\r\n","import Image from '@components/ui/Image';\r\n\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsFlagProps {\r\n  flag: FlagCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavFlagsFlag = ({ flag, setShowSelector: setSelectModel }: NavFlagsFlagProps) => {\r\n  const { updateFlag, deleteFlag } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (flag.key) {\r\n      updateFlag(flag.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (flag.key) {\r\n      deleteFlag(flag.key);\r\n    }\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    if (!flag.key) return;\r\n    updateFlag(flag.key, {\r\n      isVisible: typeof flag.isVisible !== 'undefined' ? !flag.isVisible : false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flagItem}>\r\n      <div className={styles.flagItemImage}>\r\n        <Image image={flag.flag?.attributes?.image.data} />\r\n      </div>\r\n      <span>{flag.flag?.attributes?.name}</span>\r\n      <NavOptionEdit\r\n        isVisible={flag.isVisible}\r\n        toggleVisibility={toggleVisibility}\r\n        onEdit={editItem}\r\n        onDelete={deleteItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ImageDecalPreview_title__+0uJ3\",\"preview\":\"ImageDecalPreview_preview__FcNaI\",\"imageContainer\":\"ImageDecalPreview_imageContainer__ps5dB\",\"editIcon\":\"ImageDecalPreview_editIcon__5s8Ny\",\"noImage\":\"ImageDecalPreview_noImage__FWBZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavDecalAdjust_root__dpTza\",\"root__rotate\":\"NavDecalAdjust_root__rotate__rOY5u\",\"noImage\":\"NavDecalAdjust_noImage__oc8fj\",\"iconTitle\":\"NavDecalAdjust_iconTitle__ytxaZ\",\"rotate\":\"NavDecalAdjust_rotate__5Kafi\",\"scale\":\"NavDecalAdjust_scale__MuVws\",\"iconContainer\":\"NavDecalAdjust_iconContainer__2VFM9\",\"icon\":\"NavDecalAdjust_icon__6Qd7n\",\"adjustControls\":\"NavDecalAdjust_adjustControls__HRTY0\"};","/* eslint-disable react/prop-types */\r\nimport { GraphicPriceEntity, GraphicPriceFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport ReactSlider from 'react-slider';\r\nimport styles from './NavDecalAdjust.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\nimport { useState } from 'react';\r\n\r\nimport { FaMinus, FaPlus, FaRotateLeft, FaRotateRight } from 'react-icons/fa6';\r\n\r\nexport interface NavDecalAdjustProps {\r\n  className?: string;\r\n  prices?: GraphicPriceFragment[];\r\n  scale?: number;\r\n  rotation?: number;\r\n  onScale?: (event: number, price?: GraphicPriceEntity) => void;\r\n  onRotate?: (event: number) => void;\r\n  hasImage?: boolean;\r\n}\r\n\r\nconst range = (start: number, stop: number, step: number) =>\r\n  Array.from({ length: (stop - start) / step + 1 }, (value, index) => start + index * step);\r\n\r\nconst NavDecalAdjust = ({\r\n  className,\r\n  scale = 1,\r\n  rotation = 0,\r\n  prices,\r\n  onScale,\r\n  onRotate,\r\n  hasImage,\r\n}: NavDecalAdjustProps) => {\r\n  const scaleAdjust = 0.15;\r\n  const rotateAdjust = 7.5;\r\n\r\n  const [currentScale, setCurrentScale] = useState(scale);\r\n  const [currentRotate, setCurrentRotate] = useState(rotation);\r\n\r\n  const rootRotateClassName = cn(styles.root, className, styles.root__rotate, {\r\n    [styles.noImage]: !hasImage,\r\n  });\r\n  const min = 1;\r\n  const max = 2;\r\n  const numberOfSteps = prices?.length ?? 10;\r\n  const step = (max - min) / (numberOfSteps - 1);\r\n  const marks = range(min, max, step);\r\n\r\n  const formattedPrices = prices?.map((p, i) => ({\r\n    ...p,\r\n    markKey: Number(marks[i].toFixed(5)),\r\n  }));\r\n\r\n  const onChange = (value: number) => {\r\n    const price = formattedPrices?.find((p) => p.markKey === value);\r\n    if (onScale) onScale(value, price);\r\n  };\r\n\r\n  const addScale = () => {\r\n    setCurrentScale((cur) => {\r\n      onScale && onScale(cur + scaleAdjust);\r\n      return cur + scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const subtractScale = () => {\r\n    setCurrentScale((cur) => {\r\n      if (cur - scaleAdjust <= 0) return cur;\r\n      onScale && onScale(cur - scaleAdjust);\r\n      return cur - scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur - rotateAdjust);\r\n      return cur - rotateAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateCounterClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur + rotateAdjust);\r\n      return cur + rotateAdjust;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={rootRotateClassName}>\r\n        <span>\r\n          <div className={styles.iconTitle}>SIZE</div>\r\n          <span className={styles.iconContainer}>\r\n            <span className={styles.icon} onClick={subtractScale}>\r\n              <FaMinus />\r\n            </span>\r\n            <span className={styles.icon} onClick={addScale}>\r\n              <FaPlus />\r\n            </span>\r\n          </span>\r\n        </span>\r\n        <span>\r\n          <div className={styles.iconTitle}>ROTATE</div>\r\n          <span className={styles.iconContainer}>\r\n            <span className={`${styles.icon}`} onClick={rotateCounterClockwise}>\r\n              <FaRotateLeft />\r\n            </span>\r\n            <span className={`${styles.icon}`} onClick={rotateClockwise}>\r\n              <FaRotateRight />\r\n            </span>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavDecalAdjust;\r\n","import {\r\n  GraphicPriceEntity,\r\n  GraphicPriceFragment,\r\n  ImageFragment,\r\n  Maybe,\r\n} from '@graphql/generated/graphql';\r\nimport Image from '../Image/Image';\r\nimport styles from './ImageDecalPreview.module.scss';\r\nimport NavDecalAdjust from '@components/nav/NavDecalAdjust copy';\r\nimport { FaEdit } from 'react-icons/fa';\r\n\r\ninterface ImageDecalPreview {\r\n  image?: Maybe<ImageFragment>;\r\n  scale?: number;\r\n  rotation?: number;\r\n  onScale?: (event: number, price?: GraphicPriceEntity) => void;\r\n  onRotate?: (event: number) => void;\r\n  prices?: GraphicPriceFragment[];\r\n\r\n  onImgClick?: () => void;\r\n}\r\nconst ImageDecalPreview = ({\r\n  image,\r\n  scale,\r\n  rotation,\r\n  onScale,\r\n  onRotate,\r\n  prices,\r\n  onImgClick,\r\n}: ImageDecalPreview) => {\r\n  return (\r\n    <div>\r\n      {image && <div className={styles.title}>IMAGE PREVIEW</div>}\r\n      <div className={`${styles.preview} ${!image ? styles.noImage : ''}`}>\r\n        {image && (\r\n          <span className={styles.imageContainer} onClick={onImgClick}>\r\n            <Image image={image} />\r\n            {/* {onImgClick && (\r\n              <span className={styles.editIcon}>\r\n                <FaEdit />\r\n              </span>\r\n            )} */}\r\n          </span>\r\n        )}\r\n        <div>\r\n          <NavDecalAdjust\r\n            scale={scale}\r\n            rotation={rotation}\r\n            onScale={onScale}\r\n            onRotate={onRotate}\r\n            prices={prices}\r\n            hasImage={!!image}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageDecalPreview;\r\n","import { startTransition, useState } from 'react';\r\nimport { NavFlagsSelect } from './NavFlagsSelect';\r\n\r\nimport Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\nimport styles from './NavFlags.module.scss';\r\nimport { NavFlagsFlag } from './NavFlagsFlag';\r\nimport { GraphicPriceEntity, useGetFlagsQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\nimport { IoAddOutline } from 'react-icons/io5';\r\nimport ImageDecalPreview from '@components/ui/ImageDecalPreview/ImageDecalPreview';\r\n\r\nconst NavFlags = () => {\r\n  const flags = useCustomiserStore((state) => state.flags);\r\n  const updateFlag = useCustomiserStore((state) => state.updateFlag);\r\n  const editFlag = flags?.find((g) => g.edit);\r\n\r\n  const [showSelector, setShowSelector] = useState(false);\r\n\r\n  const [page, setPage] = useState(0);\r\n  const maxPage = 1;\r\n  const hasNextPage = page < maxPage;\r\n\r\n  const nextPageHandler = () => {\r\n    setPage((cur) => {\r\n      if (!hasNextPage) return cur;\r\n      return (cur += 1);\r\n    });\r\n  };\r\n\r\n  const { data: flagQuery } = useGetFlagsQuery(\r\n    graphQLClient,\r\n    {\r\n      pagination: { limit: 500 },\r\n    },\r\n    {\r\n      select: (data) => ({ flags: data.flags?.data, prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addFlag = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editFlag?.key) updateFlag(editFlag.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyFlag = () => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setPage(0);\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          {/* <NavDecalAdjust\r\n            scale={editFlag?.decalScale}\r\n            rotation={editFlag?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={flagQuery?.prices}\r\n          /> */}\r\n\r\n          {page === 0 && flagQuery?.flags && (\r\n            <NavFlagsSelect editFlag={editFlag} flags={flagQuery.flags} />\r\n          )}\r\n\r\n          {page === 1 && (\r\n            <ImageDecalPreview\r\n              image={editFlag?.flag?.attributes?.image.data}\r\n              scale={editFlag?.decalScale}\r\n              rotation={editFlag?.decalRotation}\r\n              onScale={setScale}\r\n              onRotate={setRotation}\r\n              prices={flagQuery?.prices}\r\n            />\r\n          )}\r\n          <NavEditButtons\r\n            disabled={!editFlag}\r\n            onApply={applyFlag}\r\n            onNext={hasNextPage && nextPageHandler}\r\n            hasCancel={false}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <div className={styles.addBtnContainer}>\r\n              <ContainedButton onClick={addFlag} color='grey'>\r\n                <IoAddOutline /> &nbsp; Add Flag\r\n              </ContainedButton>\r\n            </div>\r\n            {flags.length ? <div className={styles.itemsTitle}>YOUR FLAGS</div> : ''}\r\n            {flags?.map((flag) => (\r\n              <NavFlagsFlag key={flag.key} flag={flag} setShowSelector={setShowSelector} />\r\n            ))}\r\n          </div>\r\n          {/* <NavButtons /> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavFlags;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavHeader_root__jnadG\",\"menu\":\"NavHeader_menu__Mmpjx\",\"topIcons\":\"NavHeader_topIcons__2qYFd\",\"topIcons__icon\":\"NavHeader_topIcons__icon__tY8Cl\",\"nav\":\"NavHeader_nav__mJbli\",\"title\":\"NavHeader_title__tOyZd\",\"title__page\":\"NavHeader_title__page__rgTMK\",\"title__requiredIcon\":\"NavHeader_title__requiredIcon__7WU0A\",\"navButton\":\"NavHeader_navButton__znGEK\",\"unfinished\":\"NavHeader_unfinished__iG2iT\",\"hidden\":\"NavHeader_hidden__eJpU9\",\"minimizeIcon\":\"NavHeader_minimizeIcon__GKC2n\",\"minimized\":\"NavHeader_minimized__04mp3\",\"navIcon\":\"NavHeader_navIcon__6iUBm\",\"slash\":\"NavHeader_slash__DpezR\"};","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport styles from './NavHeader.module.scss';\r\nimport {\r\n  getNavItemArrayIndex,\r\n  getNavTabItemCount,\r\n  hasNextNavItem as hasNextNavItemChecker,\r\n  isFinishedNavItem,\r\n  isLastNavItem as isLastNavItemChecker,\r\n} from '@lib/object';\r\n\r\nimport { FaAngleLeft, FaAngleRight } from 'react-icons/fa6';\r\nimport { IoMdClose, IoMdReturnLeft } from 'react-icons/io';\r\nimport { navItemNameDisplay } from '@lib/string';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { MdKeyboardBackspace } from 'react-icons/md';\r\n\r\nexport interface NavHeaderProps {\r\n  className?: string;\r\n  toggle: () => void;\r\n  isOpen: boolean;\r\n  isMinimized?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst NavHeader = ({ className, toggle, isOpen, isMinimized = false, onClick }: NavHeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const { selectedNav, setSelectedNav, navTabs, texts } = useCustomiserStore();\r\n  const editText = texts?.find((g) => g.edit);\r\n\r\n  const navTabItemCount =\r\n    typeof selectedNav?.index === 'number'\r\n      ? getNavTabItemCount({\r\n          navTabs,\r\n          navItemIndex: selectedNav.index,\r\n        })\r\n      : 0;\r\n  const navItemArrayIndex =\r\n    typeof selectedNav?.index === 'number'\r\n      ? getNavItemArrayIndex({\r\n          navTabs,\r\n          navItemIndex: selectedNav.index,\r\n        })\r\n      : 0;\r\n\r\n  const isFirstNavItem = typeof selectedNav?.index === 'number' ? selectedNav?.index === 0 : false;\r\n  const isLastNavItem =\r\n    typeof selectedNav?.index === 'number'\r\n      ? isLastNavItemChecker({\r\n          navTabs,\r\n          navItemIndex: selectedNav?.index,\r\n        })\r\n      : false;\r\n\r\n  const prevHandler = () => {\r\n    if (editText) return;\r\n    if (typeof selectedNav?.index !== 'number' || selectedNav?.index <= 0) {\r\n      return;\r\n    }\r\n    setSelectedNav(selectedNav.index - 1);\r\n  };\r\n  const nextHandler = () => {\r\n    if (editText) return;\r\n    if (typeof selectedNav?.index !== 'number') {\r\n      return;\r\n    }\r\n    setSelectedNav(selectedNav.index + 1);\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    if (onClick) {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  if (isOpen) {\r\n    return null;\r\n  }\r\n\r\n  const minimizeIconClassname = cn(styles.minimizeIcon, {\r\n    [styles.minimized]: isMinimized,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div id='NavHeader' className={rootClassName}>\r\n        <div className={styles.topIcons}>\r\n          <span className={styles.topIcons__icon} onClick={closeHandler}>\r\n            {!editText && <MdKeyboardBackspace />}\r\n          </span>\r\n        </div>\r\n\r\n        <div id='NavHeaderNav' className={styles.nav}>\r\n          {!editText && (\r\n            <>\r\n              <span\r\n                className={`${styles.navButton} ${isFirstNavItem || editText ? styles.hidden : ''}`}\r\n                onClick={prevHandler}\r\n              >\r\n                <FaAngleLeft />\r\n              </span>\r\n              <div className={styles.title}>\r\n                <span>\r\n                  {selectedNav?.required && <span className={styles.title__requiredIcon}>*</span>}\r\n                  {navItemNameDisplay({ selectedNav })}\r\n                </span>\r\n                <span className={styles.title__page}>\r\n                  {navItemArrayIndex + 1}\r\n                  <span className={styles.slash}>/</span>\r\n                  {navTabItemCount}\r\n                </span>\r\n              </div>\r\n              <span\r\n                className={`${styles.navButton} ${isLastNavItem || editText ? styles.hidden : ''}`}\r\n                onClick={nextHandler}\r\n              >\r\n                <FaAngleRight />\r\n              </span>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavHeader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dropZone\":\"NavImages_dropZone__4YMrM\",\"image\":\"NavImages_image__svpqZ\",\"graphicItem\":\"NavImages_graphicItem__XenKS\",\"graphicItemImage\":\"NavImages_graphicItemImage__8GS2T\",\"addBtnContainer\":\"NavImages_addBtnContainer__YYMBT\",\"itemsTitle\":\"NavImages_itemsTitle__Q+pUc\"};","import Image from '@components/ui/Image';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesImageProps {\r\n  graphic: GraphicCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavImagesImage = ({\r\n  graphic,\r\n  setShowSelector: setSelectModel,\r\n}: NavImagesImageProps) => {\r\n  const { updateGraphic, deleteGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (graphic.key) {\r\n      updateGraphic(graphic.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (graphic.key) {\r\n      deleteGraphic(graphic.key);\r\n    }\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    if (!graphic.key) return;\r\n    updateGraphic(graphic.key, {\r\n      isVisible: typeof graphic.isVisible !== 'undefined' ? !graphic.isVisible : false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphicItem}>\r\n      <div className={styles.graphicItemImage}>\r\n        <Image image={graphic.graphic?.attributes?.image?.data} />\r\n      </div>\r\n      <NavOptionEdit\r\n        isVisible={graphic.isVisible}\r\n        toggleVisibility={toggleVisibility}\r\n        onEdit={editItem}\r\n        onDelete={deleteItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { CreateGraphicMutation } from '@graphql/generated/graphql';\r\n\r\nconst testUploadImageResponse = (): CreateGraphicMutation => {\r\n  return {\r\n    __typename: 'Mutation',\r\n    createGraphic: {\r\n      __typename: 'GraphicEntityResponse',\r\n      data: {\r\n        __typename: 'GraphicEntity',\r\n        id: Math.random().toString(),\r\n        attributes: {\r\n          __typename: 'Graphic',\r\n          name: 'Sample Graphic',\r\n          image: {\r\n            __typename: 'UploadFileEntityResponse',\r\n            data: {\r\n              __typename: 'UploadFileEntity',\r\n              id: Math.random().toString(),\r\n              attributes: {\r\n                __typename: 'UploadFile',\r\n                url: 'examples/add-image/image.png',\r\n                size: 51200, // 50 KB\r\n                width: 800,\r\n                height: 600,\r\n                ext: '.jpg',\r\n                mime: 'image/jpeg',\r\n                name: 'sample.jpg',\r\n                formats: {\r\n                  thumbnail: {\r\n                    url: 'examples/add-image/image.png',\r\n                    width: 200,\r\n                    height: 150,\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default testUploadImageResponse;\r\n","import {\r\n  GraphicFragment,\r\n  useCreateGraphicMutation,\r\n  useUploadMultipleFilesMutation,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { Dispatch, SetStateAction, useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport testUploadImageResponse from '../MaterialGroup/test-upload-image-response';\r\n\r\nexport interface NavImagesUploadProps {\r\n  setGraphic: (graphic: GraphicFragment) => void;\r\n}\r\n\r\nexport const NavImagesUpload = ({ setGraphic }: NavImagesUploadProps) => {\r\n  const [saving, setSaving] = useState(false);\r\n  const [imgToDataUrl, setImgToDataUrl] = useState<string | null>(null);\r\n\r\n  const { mutate: createGraphicMutation } = useCreateGraphicMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const graphic = data.createGraphic?.data;\r\n      setSaving(false);\r\n      if (graphic) setGraphic(graphic);\r\n    },\r\n    onError() {\r\n      const data = testUploadImageResponse();\r\n      if (imgToDataUrl) {\r\n        const attrObjRef = data.createGraphic?.data?.attributes?.image?.data?.attributes;\r\n        if (attrObjRef) {\r\n          attrObjRef.url = imgToDataUrl;\r\n          attrObjRef.formats.thumbnail.url = imgToDataUrl;\r\n        }\r\n      }\r\n      const graphic = data.createGraphic?.data;\r\n      setSaving(false);\r\n      if (graphic) setGraphic(graphic);\r\n    },\r\n  });\r\n\r\n  const { mutate: fileUploadMutate } = useUploadMultipleFilesMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const fileIDs = data.multipleUpload.map((f) => f?.data?.id) as string[];\r\n      createGraphicMutation({ data: { image: fileIDs[0], customer: true, name: fileIDs[0] } });\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback((acceptedFiles: File[]) => {\r\n    setSaving(true);\r\n    fileUploadMutate({ files: acceptedFiles });\r\n\r\n    const file = acceptedFiles[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const dataURL = img.src; // This is your toDataURL\r\n\r\n        // console.log('Data URL:', dataURL);\r\n        setImgToDataUrl(dataURL);\r\n\r\n        // Proceed with the upload\r\n        fileUploadMutate({ files: acceptedFiles });\r\n      };\r\n      img.src = event.target?.result as string;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'image/jpg': [],\r\n      'image/jpeg': [],\r\n      'image/png': [],\r\n    },\r\n    maxFiles: 1,\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h5>Upload an image</h5>\r\n      <div className={styles.dropZone} {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <div>\r\n          <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.219 29.191'>\r\n            <g>\r\n              <path d='M11.609 0 10.12 1.489 0 11.609 2.978 14.6l8.631-8.631 8.632 8.631 2.978-2.991L13.1 1.489Z' />\r\n              <path d='M14.356 29.191h-5v-26h5Z' />\r\n            </g>\r\n          </svg>\r\n          {saving ? (\r\n            <h5>Please wait...</h5>\r\n          ) : isDragActive ? (\r\n            <h5>Drop images here ...</h5>\r\n          ) : (\r\n            <h5>Click or drag images here to upload</h5>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  GraphicFragment,\r\n  GraphicPriceEntity,\r\n  GraphicPriceFragment,\r\n} from '@graphql/generated/graphql';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState } from 'react';\r\nimport Image from '@components/ui/Image';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesUpload } from './NavImagesUpload';\r\nimport Button from '@components/ui/Button';\r\nimport ImageDecalPreview from '@components/ui/ImageDecalPreview/ImageDecalPreview';\r\n\r\nexport interface NavImagesSelectProps {\r\n  editGraphic?: GraphicCustomiser;\r\n  graphic?: GraphicFragment;\r\n\r\n  scale?: number;\r\n  rotation?: number;\r\n  onScale?: (event: number, price?: GraphicPriceEntity) => void;\r\n  onRotate?: (event: number) => void;\r\n  prices?: GraphicPriceFragment[];\r\n}\r\n\r\nexport const NavImagesSelect = ({\r\n  editGraphic,\r\n  graphic,\r\n  onScale,\r\n  onRotate,\r\n  prices,\r\n  scale,\r\n  rotation,\r\n}: NavImagesSelectProps) => {\r\n  const [currentGraphic, setCurrentGraphic] = useState<GraphicFragment | undefined>(graphic);\r\n  const { addGraphic, updateGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const graphicSelected = (graphic: GraphicFragment) => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        graphic,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addGraphic({\r\n        graphic,\r\n        decalFreeze: true,\r\n        decalPosition: [-0.01989325641440387, 2.436930108198209, 1.6226380277735046],\r\n        decalOrientation: [\r\n          -0.14799034762565572,\r\n          -0.17866277612764514,\r\n          -0.026487426629834374,\r\n          'XYZ',\r\n        ],\r\n      });\r\n    }\r\n  };\r\n\r\n  const setGraphic = (graphic: GraphicFragment) => {\r\n    setCurrentGraphic(graphic);\r\n    graphicSelected(graphic);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphics}>\r\n      {currentGraphic ? (\r\n        <>\r\n          <ImageDecalPreview\r\n            image={currentGraphic.attributes?.image?.data}\r\n            scale={scale}\r\n            rotation={rotation}\r\n            onScale={onScale}\r\n            onRotate={onRotate}\r\n            prices={prices}\r\n            onImgClick={() => setCurrentGraphic(undefined)}\r\n          />\r\n        </>\r\n      ) : (\r\n        <NavImagesUpload setGraphic={setGraphic} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import Button from '@components/ui/Button';\r\nimport { GraphicPriceEntity, useGetImagesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { startTransition, useState } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesImage } from './NavImagesImage';\r\nimport { NavImagesSelect } from './NavImagesSelect';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\nimport { IoAddOutline } from 'react-icons/io5';\r\n\r\nconst NavImages = () => {\r\n  const [showSelector, setShowSelector] = useState(false);\r\n  const graphics = useCustomiserStore((state) => state.graphics);\r\n  const updateGraphic = useCustomiserStore((state) => state.updateGraphic);\r\n  const editGraphic = graphics?.find((g) => g.edit);\r\n\r\n  const { data: imageQuery } = useGetImagesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => ({ prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addImage = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editGraphic?.key) updateGraphic(editGraphic.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyImage = () => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavImagesSelect\r\n            editGraphic={editGraphic}\r\n            graphic={editGraphic?.graphic}\r\n            scale={editGraphic?.decalScale}\r\n            rotation={editGraphic?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={imageQuery?.prices}\r\n          />\r\n          <NavEditButtons disabled={!editGraphic} onApply={applyImage} hasCancel={false} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <div className={styles.addBtnContainer}>\r\n              <ContainedButton color='grey' onClick={addImage}>\r\n                <IoAddOutline /> &nbsp; Add Image\r\n              </ContainedButton>\r\n            </div>\r\n            {graphics.length ? <div className={styles.itemsTitle}>Your Images</div> : ''}\r\n\r\n            {graphics?.map((graphic) => (\r\n              <NavImagesImage\r\n                key={graphic.key}\r\n                graphic={graphic}\r\n                setShowSelector={setShowSelector}\r\n              />\r\n            ))}\r\n          </div>\r\n          {/* <NavButtons /> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavImages;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MaterialGroup_root__M5bHl\",\"quickInfo\":\"MaterialGroup_quickInfo__a7QRT\",\"colourGroups\":\"MaterialGroup_colourGroups__G3KSo\",\"materialType\":\"MaterialGroup_materialType__X63YP\",\"materialType__title\":\"MaterialGroup_materialType__title__nQjVb\",\"materials\":\"MaterialGroup_materials__iAoDB\",\"selected\":\"MaterialGroup_selected__YMvLv\",\"popup\":\"MaterialGroup_popup__4J8xn\",\"title\":\"MaterialGroup_title__oOvyv\",\"materialTypeScroll\":\"MaterialGroup_materialTypeScroll__gRvp6\",\"withCrystals\":\"MaterialGroup_withCrystals__FWknL\"};","import { create, StateCreator, StoreApi } from 'zustand';\r\nimport createContext from 'zustand/context';\r\nimport produce from 'immer';\r\nimport { devtools } from 'zustand/middleware';\r\nimport {\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n} from '@graphql/generated/graphql';\r\nimport { uniqBy } from 'lodash';\r\n\r\nconst uniqueColourGroups = (array: MaterialColourGroupEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterialTypes = (array: MaterialTypeEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterials = (array: MaterialEntity[]) => uniqBy(array, 'id');\r\ninterface MaterialGroupInitialState {\r\n  colourGroups: MaterialColourGroupEntity[];\r\n  materialTypes: MaterialTypeEntity[];\r\n  materials: MaterialEntity[];\r\n  selectedColourGroup?: MaterialColourGroupEntity;\r\n  selectedMaterialType?: MaterialTypeEntity;\r\n}\r\nexport interface MaterialGroupState extends MaterialGroupInitialState {\r\n  resetMaterialGroup: () => void;\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => void;\r\n  filteredMaterials: () => MaterialEntity[];\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => void;\r\n  setMaterialType: (materialType: MaterialTypeEntity) => void;\r\n}\r\n\r\nconst initialState: MaterialGroupInitialState = {\r\n  colourGroups: [],\r\n  materialTypes: [],\r\n  materials: [],\r\n};\r\n\r\nconst createMaterialGroup: StateCreator<MaterialGroupState, [['zustand/devtools', never]], []> = (\r\n  set,\r\n  get,\r\n) => ({\r\n  ...initialState,\r\n  filteredMaterials: () => {\r\n    const materials = get().materials;\r\n    const colourGroup = get().selectedColourGroup;\r\n    const filteredMaterials = materials.filter((m) =>\r\n      m.attributes?.colourGroups?.data.find((g) => g.id === colourGroup?.id),\r\n    );\r\n    return filteredMaterials;\r\n  },\r\n  resetMaterialGroup: () => set(initialState),\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        const colourGroups = materials.flatMap(\r\n          (d) => d.attributes?.colourGroups?.data,\r\n        ) as MaterialColourGroupEntity[];\r\n        state.colourGroups = uniqueColourGroups(colourGroups);\r\n        if (colourGroup) {\r\n          state.selectedColourGroup = colourGroup;\r\n        } else {\r\n          state.selectedColourGroup = state.colourGroups[0];\r\n        }\r\n\r\n        const materialTypes = materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n\r\n        if (materialType) {\r\n          state.selectedMaterialType = materialType;\r\n        } else {\r\n          state.selectedMaterialType = state.materialTypes[0];\r\n        }\r\n\r\n        state.materials = uniqueMaterials(materials);\r\n      }),\r\n    );\r\n  },\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedColourGroup = colourGroup;\r\n        const materialTypes = state.materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n      }),\r\n    );\r\n  },\r\n  setMaterialType: (materialType: MaterialTypeEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedMaterialType = materialType;\r\n      }),\r\n    );\r\n  },\r\n});\r\n\r\nexport const { Provider, useStore: useMaterialGroupStore } =\r\n  createContext<StoreApi<MaterialGroupState>>();\r\n\r\nexport const createStore = () => create<MaterialGroupState>()(devtools(createMaterialGroup));\r\n","import { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { Falsey } from 'lodash';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useLongPress } from 'use-long-press';\r\n\r\nexport interface MaterialProps {\r\n  className?: string;\r\n  material: MaterialFragment;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const Material = ({\r\n  className,\r\n  material,\r\n  onMaterialSelected,\r\n  selectedMaterialId,\r\n}: MaterialProps) => {\r\n  const rootClassName = cn(styles.material, className, {\r\n    [styles.selected]: material.id === selectedMaterialId,\r\n  });\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const mapImage = material?.attributes?.images?.find((i) => i?.mapType === 'map');\r\n\r\n  const onClick = () => {\r\n    if (material) {\r\n      onMaterialSelected(material);\r\n    }\r\n  };\r\n\r\n  const onLongPressBinder = useLongPress((event) => {\r\n    setShowPopup(true);\r\n  });\r\n\r\n  const handleContextMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={rootClassName}\r\n        onContextMenu={handleContextMenu}\r\n        onClick={onClick}\r\n        {...onLongPressBinder()}\r\n        data-name={material.attributes?.name}\r\n      >\r\n        {mapImage && <img src={mapImage?.image?.data?.attributes?.formats['thumbnail'].url} />}\r\n      </button>\r\n      {showPopup &&\r\n        popupPortalRef &&\r\n        createPortal(\r\n          <div\r\n            className={styles.popup}\r\n            onClick={() => {\r\n              setShowPopup(false);\r\n            }}\r\n          >\r\n            <img\r\n              height='300'\r\n              width='300'\r\n              src={mapImage?.image?.data?.attributes?.formats['large'].url}\r\n              alt=''\r\n              onContextMenu={handleContextMenu}\r\n            />\r\n          </div>,\r\n          popupPortalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n","export default [\r\n  {\r\n    color: 'red',\r\n    materialId: '165',\r\n  },\r\n  {\r\n    color: 'blue',\r\n    materialId: '183',\r\n  },\r\n  {\r\n    color: 'black',\r\n    materialId: '106',\r\n  },\r\n];\r\n","export async function loadImage(src: string): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    if (!src) resolve(img);\r\n    img.crossOrigin = 'anonymous';\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n    img.src = src;\r\n  });\r\n}\r\n","import { MaterialProps } from './Material';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { Falsey } from 'lodash';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useLongPress } from 'use-long-press';\r\nimport { loadImage } from '@lib/img.util';\r\nimport testCrystalMaterial from './test-crystal-material';\r\n\r\nexport const MaterialCrystal = ({\r\n  className,\r\n  material,\r\n  onMaterialSelected,\r\n  selectedMaterialId,\r\n}: MaterialProps) => {\r\n  const crystal = testCrystalMaterial.find((m) => m.materialId === material.id) || {\r\n    materialId: material.id,\r\n    color: 'pink',\r\n  };\r\n  const crystalPromise = useMemo(() => {\r\n    return loadImage(`/materials/crystals/${crystal.color}.png`);\r\n  }, []);\r\n\r\n  const [crystalImage, setCrystalImage] = useState<HTMLImageElement | null>(null);\r\n  useEffect(() => {\r\n    crystalPromise.then((img) => {\r\n      setCrystalImage(img);\r\n    });\r\n  }, [crystalPromise]);\r\n\r\n  const rootClassName = cn(styles.material, className, {\r\n    [styles.selected]: material.id === selectedMaterialId,\r\n  });\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const mapImage = material?.attributes?.images?.find((i) => i?.mapType === 'map');\r\n\r\n  const onClick = () => {\r\n    if (material) {\r\n      onMaterialSelected(material);\r\n    }\r\n  };\r\n\r\n  const onLongPressBinder = useLongPress((event) => {\r\n    setShowPopup(true);\r\n  });\r\n\r\n  const handleContextMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  if (!crystalImage) return null;\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={rootClassName}\r\n        onContextMenu={handleContextMenu}\r\n        onClick={onClick}\r\n        {...onLongPressBinder()}\r\n        data-name={material.attributes?.name}\r\n      >\r\n        {mapImage && <img src={crystalImage.src} />}\r\n      </button>\r\n      {showPopup &&\r\n        popupPortalRef &&\r\n        createPortal(\r\n          <div\r\n            className={styles.popup}\r\n            onClick={() => {\r\n              setShowPopup(false);\r\n            }}\r\n          >\r\n            <img\r\n              height='300'\r\n              width='300'\r\n              src={crystalImage.src}\r\n              alt=''\r\n              onContextMenu={handleContextMenu}\r\n            />\r\n          </div>,\r\n          popupPortalRef,\r\n        )}\r\n    </>\r\n  );\r\n\r\n  return <></>;\r\n};\r\nexport default MaterialCrystal;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { Material } from './Material';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { useMaterialGroupStore } from './MaterialGroupState';\r\nimport { Falsey } from 'lodash';\r\nimport testCrystalMaterial from './test-crystal-material';\r\nimport MaterialCrystal from './MaterialCrystal';\r\n\r\nexport interface MaterialTypeProps {\r\n  className?: string;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  hideMaterialTitle?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const MaterialType = ({\r\n  className,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  hideMaterialTitle,\r\n  selectedMaterialId,\r\n}: MaterialTypeProps) => {\r\n  const rootClassName = cn(styles.materialType, className);\r\n\r\n  const {\r\n    materialTypes,\r\n    filteredMaterials: getFilteredMaterials,\r\n    materials,\r\n  } = useMaterialGroupStore();\r\n\r\n  let filteredMaterials = hideColorGroups ? materials : getFilteredMaterials();\r\n  let filteredMaterialTypes = materialTypes;\r\n  if (hideMaterialTitle) {\r\n    filteredMaterials = filteredMaterials.filter((m) => {\r\n      return testCrystalMaterial.some((acm) => acm.materialId === m.id);\r\n    });\r\n    filteredMaterialTypes = materialTypes.filter((mt) =>\r\n      filteredMaterials.some((m) => m.attributes?.type?.data?.id === mt.id),\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && <h5 className={styles.title}>Texture</h5>}\r\n      <div\r\n        className={`${styles.materialTypeScroll} ${hideMaterialTitle ? styles.withCrystals : ''}`}\r\n      >\r\n        {filteredMaterialTypes.map((mt) => (\r\n          <div key={mt.id} className={styles.materialType}>\r\n            {!hideMaterialTitle && (\r\n              <h6 className={styles.materialType__title}>{mt.attributes?.name}</h6>\r\n            )}\r\n            <div className={styles.materials}>\r\n              {filteredMaterials\r\n                .filter((m) => m.attributes?.type?.data?.id === mt.id)\r\n                .map((m) => {\r\n                  if (!hideMaterialTitle) {\r\n                    return (\r\n                      <Material\r\n                        key={m.id}\r\n                        material={m}\r\n                        onMaterialSelected={onMaterialSelected}\r\n                        selectedMaterialId={selectedMaterialId}\r\n                      />\r\n                    );\r\n                  }\r\n                  return (\r\n                    <MaterialCrystal\r\n                      key={m.id}\r\n                      material={m}\r\n                      onMaterialSelected={onMaterialSelected}\r\n                      selectedMaterialId={selectedMaterialId}\r\n                    />\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SelectedMaterialInfo_root__kIp+x\",\"root__noMaterial\":\"SelectedMaterialInfo_root__noMaterial__dtWKf\",\"currencyContainer\":\"SelectedMaterialInfo_currencyContainer__s15RH\",\"materialName\":\"SelectedMaterialInfo_materialName__vha4F\"};","import { FC, useMemo } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport styles from './SelectedMaterialInfo.module.scss';\r\n\r\nconst SelectedMaterialInfo: FC = () => {\r\n  const portalRef = usePortalRef('CustomiserNavMaterial');\r\n  const { selectedPart, parts } = useCustomiserStore();\r\n\r\n  const selectedMaterial = useMemo(\r\n    () => parts.find((part) => part.part.id === selectedPart?.id)?.material,\r\n    [selectedPart, parts],\r\n  );\r\n\r\n  let price: number | undefined = 0;\r\n  if (\r\n    selectedMaterial &&\r\n    selectedMaterial.attributes &&\r\n    'price' in selectedMaterial.attributes &&\r\n    selectedMaterial.attributes?.price\r\n  ) {\r\n    price = selectedMaterial.attributes?.price?.data?.attributes?.price;\r\n  }\r\n\r\n  if (!portalRef) return null;\r\n\r\n  if (!selectedMaterial) {\r\n    return ReactDOM.createPortal(\r\n      <div className={cn(styles.root, styles.root__noMaterial)}>No material selected.</div>,\r\n      portalRef,\r\n    );\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={styles.root}>\r\n      <span>\r\n        <div className={styles.materialName}>{selectedMaterial.attributes?.name}</div>\r\n        <small>\r\n          <i>TODO: Add currency</i>\r\n        </small>\r\n      </span>\r\n      {/* TODO: Add currency */}\r\n      <div className={styles.currencyContainer}>${price || 0}</div>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default SelectedMaterialInfo;\r\n","import {\r\n  InputMaybe,\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialFragment,\r\n  MaterialGroupEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n  useGetMaterialsQuery,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nimport cn from 'classnames';\r\nimport { useEffect } from 'react';\r\n\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { createStore, Provider, useMaterialGroupStore } from './MaterialGroupState';\r\nimport { MaterialType } from './MaterialType';\r\nimport SelectedMaterialInfo from './SelectedMaterialInfo';\r\nimport { Falsey } from 'lodash';\r\n// import testMaterial from './test-material';\r\n\r\nexport interface MaterialGroupProps {\r\n  className?: string;\r\n  materialGroup?: Maybe<MaterialGroupEntity>;\r\n  materialType?: Maybe<MaterialTypeEntity>;\r\n  colourGroup?: Maybe<MaterialColourGroupEntity>;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  hideMaterialTitle?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nconst MaterialGroupLoader = ({\r\n  className,\r\n  materialGroup,\r\n  materialType,\r\n  colourGroup,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  hideMaterialTitle,\r\n  selectedMaterialId,\r\n}: MaterialGroupProps) => {\r\n  const colourGroups = useMaterialGroupStore((state) => state.colourGroups);\r\n  const selectedColourGroup = useMaterialGroupStore((state) => state.selectedColourGroup);\r\n  const setMaterials = useMaterialGroupStore((state) => state.setMaterials);\r\n  const setColourGroup = useMaterialGroupStore((state) => state.setColourGroup);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const typeIds = materialGroup?.attributes?.materialTypes\r\n    ? (materialGroup.attributes.materialTypes.data.map((t) => t.id) as InputMaybe<string>[])\r\n    : [];\r\n\r\n  const { data: materials } = useGetMaterialsQuery(\r\n    graphQLClient,\r\n    { filters: { type: { id: { in: typeIds } } }, pagination: { pageSize: 200 } },\r\n    {\r\n      select: (data) => {\r\n        // if (!data.materials?.data.find((a) => a.id === '999')) {\r\n        //   data.materials?.data.push(testMaterial);\r\n        //   console.log('Test material added!!!', testMaterial);\r\n        // }\r\n        return data.materials?.data as MaterialEntity[];\r\n      },\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (materials?.length) {\r\n      // // TODO - remove: temporary for testing new materials\r\n      // if (!materials.find((a) => a.id === '999')) {\r\n      // // eslint-disable-next-line\r\n      // // @ts-ignore\r\n      // materials.push(testMaterial);\r\n      // }\r\n      // console.log('materials', materials);\r\n      setMaterials(materials, materialType, colourGroup);\r\n    }\r\n  }, [materials]);\r\n\r\n  if (!materialGroup) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && (\r\n        <>\r\n          <div className={styles.quickInfo}>\r\n            <i>Tap model or follow arrows to colour</i>\r\n          </div>\r\n          <h5 className={styles.title}>Colour Filter</h5>\r\n          <div className={styles.colourGroups}>\r\n            {colourGroups.map((group) => {\r\n              const styles: React.CSSProperties | undefined = {\r\n                background: group.attributes?.colour ?? '#000',\r\n                borderRadius: '50%',\r\n              };\r\n              if (selectedColourGroup?.id === group.id) {\r\n                styles.outline = `4px solid ${group.attributes?.colour}`;\r\n              }\r\n\r\n              return (\r\n                <button key={group.id} onClick={() => setColourGroup(group)}>\r\n                  <svg\r\n                    style={styles}\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    viewBox='0 0 42 42'\r\n                    // strokeWidth={4}\r\n                    // stroke={\r\n                    //   selectedColourGroup?.id === group.id\r\n                    //     ? '#000'\r\n                    //     : group.attributes?.colour ?? '#000'\r\n                    // }\r\n                    fill={'transparent'}\r\n                  >\r\n                    <rect width='100%' height='100%' />\r\n                  </svg>\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n      <MaterialType\r\n        hideColorGroups={hideColorGroups}\r\n        hideMaterialTitle={hideMaterialTitle}\r\n        onMaterialSelected={onMaterialSelected}\r\n        selectedMaterialId={selectedMaterialId}\r\n      />\r\n      {!hideMaterialTitle && <SelectedMaterialInfo />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MaterialGroup = (props: MaterialGroupProps) => {\r\n  return (\r\n    <Provider createStore={createStore}>\r\n      <MaterialGroupLoader {...props} />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default MaterialGroup;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"NavPart_buttonContainer__3whqC\",\"showOptional\":\"NavPart_showOptional__s6PPL\"};","import styles from './Button.module.scss';\r\n\r\ninterface TogglePillButtonProps {\r\n  onClick?: () => void;\r\n  children: React.ReactNode;\r\n  isOn?: boolean;\r\n\r\n  className?: string;\r\n}\r\n\r\nconst TogglePillButton = ({ onClick, children, isOn, className }: TogglePillButtonProps) => {\r\n  const buttonClassNames = `\r\n    ${styles.togglePillButton}\r\n    ${className}\r\n    ${isOn ? styles.on : ''}\r\n  `;\r\n  return (\r\n    <button className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TogglePillButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"crystals\":\"Crystals_crystals__0r8Po\",\"crystal\":\"Crystals_crystal__i+MGa\",\"selected\":\"Crystals_selected__67rK3\"};","import { CrystalFragment } from '@graphql/generated/graphql';\r\n\r\nimport styles from './Crystals.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface CrystalsSelectProps {\r\n  crystals: CrystalFragment[];\r\n  onCrystalSelected: (crystal: CrystalFragment) => void;\r\n  selectedMaterialId: Falsey | string;\r\n}\r\n\r\nexport const CrystalSelect = ({\r\n  crystals,\r\n  onCrystalSelected,\r\n  selectedMaterialId,\r\n}: CrystalsSelectProps) => {\r\n  return (\r\n    <div className={styles.crystals}>\r\n      {crystals?.map((c) => {\r\n        const imgSrc = c.attributes?.image.data?.attributes?.url;\r\n        const isSelectedCrystal = selectedMaterialId === c.id;\r\n\r\n        return (\r\n          <div\r\n            className={`${styles.crystal} ${isSelectedCrystal ? styles.selected : ''}`}\r\n            key={c.id}\r\n            onClick={() => {\r\n              onCrystalSelected(c);\r\n            }}\r\n          >\r\n            <img src={imgSrc} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import { CrystalEntity, CrystalFragment, useGetCrystalsQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { CrystalSelect } from './CrystalsSelect';\r\nimport { Falsey } from 'lodash';\r\n\r\ninterface CrystalsProps {\r\n  onCrystalSelected: (crystal: CrystalFragment) => void;\r\n  selectedMaterialId: Falsey | string;\r\n}\r\n\r\nconst Crystals = ({ onCrystalSelected, selectedMaterialId }: CrystalsProps) => {\r\n  const { data: crystalsQuery } = useGetCrystalsQuery(\r\n    graphQLClient,\r\n    { pagination: { pageSize: 200 } },\r\n    {\r\n      select: (data) => {\r\n        return data.crystals?.data as CrystalEntity[];\r\n      },\r\n    },\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {crystalsQuery?.length && (\r\n        <CrystalSelect\r\n          crystals={crystalsQuery}\r\n          onCrystalSelected={onCrystalSelected}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Crystals;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport {\r\n  CrystalFragment,\r\n  CustomProductPartFragment,\r\n  MaterialFragment,\r\n} from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport NavButtons from '../NavButtons';\r\n\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { FaMinus } from 'react-icons/fa';\r\n\r\nimport styles from './NavPart.module.scss';\r\nimport TogglePillButton from '@components/ui/Button/TogglePillButton';\r\nimport MaterialGroupCrystals from '../MaterialGroupCrystals/MaterialGroupCrystals';\r\nimport CrystalGroup from '../Crystals';\r\n\r\nexport interface NavPartProps {\r\n  className?: string;\r\n  part: CustomProductPartFragment;\r\n}\r\n\r\nconst NavPart = ({ className, part }: NavPartProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedPart = useCustomiserStore((state) => state.selectedPart);\r\n  const setPart = useCustomiserStore((state) => state.setPart);\r\n  const removePart = useCustomiserStore((state) => state.removePart);\r\n  const parts = useCustomiserStore((state) => state.parts);\r\n  const currentPart = useMemo(() => parts.find((p) => p.part.id === part?.id), [part]);\r\n  const [showOptional, setShowOptional] = useState(false);\r\n\r\n  let selectedMaterialId = parts.find((part) => part.part.name === selectedPart?.name)?.material.id;\r\n  const confirmText = !selectedMaterialId\r\n    ? 'Are you sure you want to continue with the default color?'\r\n    : null;\r\n\r\n  if (!part?.materialGroup?.data) {\r\n    return null;\r\n  }\r\n\r\n  const onMaterialSelected = (material: MaterialFragment | CrystalFragment) => {\r\n    if (selectedPart && material) {\r\n      selectedMaterialId = material.id;\r\n      setPart(selectedPart, material);\r\n    }\r\n  };\r\n\r\n  const optionalOnClick = (show: boolean) => {\r\n    setShowOptional(show);\r\n    if (!show) {\r\n      removePart(part);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (part.optional && !showOptional && currentPart) {\r\n      setShowOptional(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        key={part.id}\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <div className={styles.buttonContainer}>\r\n          {part.optional && (\r\n            <TogglePillButton\r\n              className={styles.showOptional}\r\n              isOn={showOptional}\r\n              onClick={() => optionalOnClick(!showOptional)}\r\n            >\r\n              {showOptional ? (\r\n                <>\r\n                  <FaMinus />\r\n                  &ensp;Remove\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <IoMdAdd />\r\n                  &ensp;Add\r\n                </>\r\n              )}{' '}\r\n              {part.name}\r\n            </TogglePillButton>\r\n          )}\r\n        </div>\r\n        {(!part.optional || (part.optional && showOptional)) && (\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            {part.name !== 'Crystals' ? (\r\n              <MaterialGroup\r\n                materialGroup={part.materialGroup.data}\r\n                materialType={(currentPart?.material as MaterialFragment)?.attributes?.type?.data}\r\n                colourGroup={\r\n                  (currentPart?.material as MaterialFragment)?.attributes?.colourGroups?.data[0]\r\n                }\r\n                onMaterialSelected={onMaterialSelected}\r\n                selectedMaterialId={selectedMaterialId}\r\n                hideColorGroups={part.name === 'Crystals'}\r\n                hideMaterialTitle={part.name === 'Crystals'}\r\n              />\r\n            ) : (\r\n              <CrystalGroup\r\n                onCrystalSelected={onMaterialSelected}\r\n                selectedMaterialId={selectedMaterialId}\r\n              />\r\n            )}\r\n          </Suspense>\r\n        )}\r\n      </motion.div>\r\n      {/* <NavButtons confirmStorage='partsMaterial' confirmText={confirmText} /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavPart;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormInput_root__cf10F\",\"input\":\"FormInput_input__gRXur\",\"label\":\"FormInput_label__9L2lb\"};","import cn from 'classnames';\r\nimport { InputHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormInput.module.scss';\r\n\r\nexport interface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormInput = ({ className, placeholder, children, ...props }: FormInputProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <input className={styles.input} {...props} placeholder=' ' />\r\n      <label className={styles.label}>{placeholder}</label>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormSelect_root__li+Rt\",\"select\":\"FormSelect_select__ftYcv\",\"icon\":\"FormSelect_icon__juFw+\"};","import cn from 'classnames';\r\nimport { SelectHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormSelect.module.scss';\r\n\r\nexport interface FormSelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormSelect = ({ className, children, ...props }: FormSelectProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <select className={styles.select} {...props}>\r\n        {children}\r\n      </select>\r\n      <svg xmlns='http://www.w3.org/2000/svg' className={styles.icon} viewBox='0 0 18.108 30.546'>\r\n        <path d='m2.835 30.545-2.836-2.836 12.387-12.436L0 2.835 2.836-.001l15.272 15.274Z' />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSelect;\r\n","import { ShopifyProductVariantFragment } from '@graphql/generated/graphql-shopify';\r\n\r\nconst getSizeVariation = (\r\n  unit: string,\r\n  weight: number,\r\n  variations: Array<ShopifyProductVariantFragment>,\r\n) => {\r\n  let size = '';\r\n  if (unit === 'KGS') {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 10:\r\n        size = 'BABY';\r\n        break;\r\n      case 10 <= weight && weight < 16:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 16 <= weight && weight < 22:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 22 <= weight && weight < 30:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 30 <= weight && weight < 40:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 40 <= weight && weight < 50:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 50 <= weight && weight < 59:\r\n        size = 'XS';\r\n        break;\r\n      case 59 <= weight && weight < 69:\r\n        size = 'S';\r\n        break;\r\n      case 69 <= weight && weight < 79:\r\n        size = 'M';\r\n        break;\r\n      case 79 <= weight && weight < 90:\r\n        size = 'L';\r\n        break;\r\n      case 90 <= weight && weight < 101:\r\n        size = 'XL';\r\n        break;\r\n      case 101 <= weight && weight < 111:\r\n        size = '2XL';\r\n        break;\r\n      case 111 <= weight && weight < 120:\r\n        size = '3XL';\r\n        break;\r\n      case 120 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  } else {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 22:\r\n        size = 'BABY';\r\n        break;\r\n      case 22 <= weight && weight < 35.3:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 35.3 <= weight && weight < 48.5:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 48.5 <= weight && weight < 66.1:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 66.1 <= weight && weight < 88.2:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 88.2 <= weight && weight < 110.2:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 110.2 <= weight && weight < 130:\r\n        size = 'XS';\r\n        break;\r\n      case 130 <= weight && weight < 152.1:\r\n        size = 'S';\r\n        break;\r\n      case 152.1 <= weight && weight < 174.2:\r\n        size = 'M';\r\n        break;\r\n      case 174.2 <= weight && weight < 198.4:\r\n        size = 'L';\r\n        break;\r\n      case 198.4 <= weight && weight < 222.7:\r\n        size = 'XL';\r\n        break;\r\n      case 222.7 <= weight && weight < 244.7:\r\n        size = '2XL';\r\n        break;\r\n      case 244.7 <= weight && weight < 264.6:\r\n        size = '3XL';\r\n        break;\r\n      case 264.6 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  }\r\n\r\n  return variations.find((v) => v.sku?.endsWith(size));\r\n};\r\n\r\nexport default getSizeVariation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"grey\":\"NavSize_grey__S6CU8\",\"quickInfo\":\"NavSize_quickInfo__Tiyyr\",\"variations\":\"NavSize_variations__cMdjc\",\"sectionTitle\":\"NavSize_sectionTitle__Dn5R+\",\"input\":\"NavSize_input__HkDjj\",\"select\":\"NavSize_select__jpNez\",\"unitToggle\":\"NavSize_unitToggle__LqIuI\",\"toggleButton\":\"NavSize_toggleButton__5PZDI\",\"toggleButtonSelected\":\"NavSize_toggleButtonSelected__au+Rx\"};","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport getSizeVariation from '@services/size';\r\nimport { UNIT } from '@store/constants';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { ChangeEvent, useEffect } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavSize.module.scss';\r\n\r\nexport interface NavSizeProps {\r\n  className?: string;\r\n}\r\n\r\nconst NavSize = ({ className }: NavSizeProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const variations = useCustomiserStore((state) => state.variations);\r\n  const setSizing = useCustomiserStore((state) => state.setSizing);\r\n  const weight = useCustomiserStore((state) => state.sizing?.weight);\r\n  const height = useCustomiserStore((state) => state.sizing?.height);\r\n  const variation = useCustomiserStore((state) => state.sizing?.variation);\r\n\r\n  useEffect(() => {\r\n    if (weight?.value && weight.unit) {\r\n      const variation = getSizeVariation(weight.unit, weight.value, variations);\r\n      setSizing(undefined, undefined, variation);\r\n    }\r\n  }, [weight, variations]);\r\n\r\n  const onHeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing({ value: Number(e.target.value), unit: 'CM' });\r\n  };\r\n\r\n  const onWeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing(undefined, { value: Number(e.target.value), unit: 'KGS' });\r\n  };\r\n\r\n  const onVariationChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const id = e.target.value;\r\n    const selectedVariation = variations.find((v) => v.id === id);\r\n    setSizing(undefined, undefined, selectedVariation);\r\n  };\r\n\r\n  const setHeightUnit = (unit: string) => {\r\n    setSizing({ value: height?.value, unit });\r\n  };\r\n\r\n  const setWeightUnit = (unit: string) => {\r\n    setSizing(undefined, { value: weight?.value, unit });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <p className={`${styles.quickInfo} ${styles.grey}`}>\r\n          When you enter your details, an automatic size will be suggested. You can manually\r\n          over-ride this but we will check your size again when your order comes in.\r\n        </p>\r\n        <h3 className={styles.sectionTitle}>Size Details</h3>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Height'\r\n          step='0.1'\r\n          required\r\n          value={height?.value ? height.value : ''}\r\n          onChange={onHeightChange}\r\n          className={styles.input}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.CM,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.CM)}\r\n            >\r\n              {UNIT.HEIGHT.CM}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.INCH,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.INCH)}\r\n            >\r\n              {UNIT.HEIGHT.INCH}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Weight'\r\n          step='0.1'\r\n          required\r\n          value={weight?.value ? weight.value : ''}\r\n          onChange={onWeightChange}\r\n          className={styles.input}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.KG,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.KG)}\r\n            >\r\n              {UNIT.WEIGHT.KG}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.LB,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.LB)}\r\n            >\r\n              {UNIT.WEIGHT.LB}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <h3 className={styles.sectionTitle}>Suggested Size</h3>\r\n        <FormSelect value={variation?.id} onChange={onVariationChange} className={styles.select}>\r\n          {variations.map((v) => (\r\n            <option key={v.id} value={v.id}>\r\n              {v.title}\r\n            </option>\r\n          ))}\r\n        </FormSelect>\r\n      </motion.div>\r\n      {/* <NavButtons /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavSize;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"arial\":\"NavText_arial__de7L4\",\"oswald\":\"NavText_oswald__siLdE\",\"college\":\"NavText_college__YR6iT\",\"ballantines\":\"NavText_ballantines__1B1LU\",\"navTextEdit\":\"NavText_navTextEdit__8WUIS\",\"textItem\":\"NavText_textItem__nQrv4\",\"textItemText\":\"NavText_textItemText__op7hZ\",\"finishSelections\":\"NavText_finishSelections__fH4yd\",\"disabled\":\"NavText_disabled__M-nHo\",\"showOutline\":\"NavText_showOutline__T7KEv\",\"fontSelection\":\"NavText_fontSelection__AH-QM\",\"font\":\"NavText_font__v43yE\",\"finishSelection\":\"NavText_finishSelection__CfQ+O\",\"selected\":\"NavText_selected__SIXSo\",\"pricing\":\"NavText_pricing__qUsci\",\"materialGroup\":\"NavText_materialGroup__j+DTa\",\"navTextsSelection\":\"NavText_navTextsSelection__gJNy+\",\"title\":\"NavText_title__u+YKh\",\"titleText\":\"NavText_titleText__lFoUP\",\"textPreview\":\"NavText_textPreview__CfhSo\",\"noText\":\"NavText_noText__Parmv\",\"textPreview__imgContainer\":\"NavText_textPreview__imgContainer__6SJ9b\",\"promptMessage\":\"NavText_promptMessage__iKeIZ\",\"applyTextBtnContainer\":\"NavText_applyTextBtnContainer__I8nfd\",\"navHeaderSaveText\":\"NavText_navHeaderSaveText__h8PoA\",\"selectedCategoryItem\":\"NavText_selectedCategoryItem__jjmwJ\",\"finishedCategoryItem\":\"NavText_finishedCategoryItem__AC3wU\",\"categoryDisplayName\":\"NavText_categoryDisplayName__pATtN\",\"textInputContainer\":\"NavText_textInputContainer__KQMDX\",\"textInput\":\"NavText_textInput__Z49KW\",\"textDone\":\"NavText_textDone__rPeDE\",\"textPreviewTextInput\":\"NavText_textPreviewTextInput__lQXU8\",\"doneBtn\":\"NavText_doneBtn__nCR9t\"};","// extracted by mini-css-extract-plugin\nexport default {};","import cn from 'classnames';\r\n\r\nimport styles from './Price.module.scss';\r\n\r\nexport interface PriceProps {\r\n  className?: string;\r\n  price?: number;\r\n  priceString?: string;\r\n}\r\n\r\nconst Price = ({ className, price, priceString }: PriceProps) => {\r\n  const rootClassName = cn('price-item', styles.root, className);\r\n  // TODO - Make currency change depending on selected currency.\r\n  const currency = '£';\r\n\r\n  const formattedPrice =\r\n    price !== undefined ? `${currency}${price.toFixed(2)}` : `${currency}${priceString}`;\r\n\r\n  if (!formattedPrice) {\r\n    return null;\r\n  }\r\n\r\n  return <span className={rootClassName}>{formattedPrice}</span>;\r\n};\r\n\r\nexport default Price;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useMemo, useState } from 'react';\r\n\r\nimport Price from '@components/ui/Price';\r\nimport { NAME_TYPE_LUXURY_ID } from '@store/constants';\r\nimport cn from 'classnames';\r\nimport styles from './NavText.module.scss';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport { CrystalFragment, MaterialFragment } from '@graphql/generated/graphql';\r\nimport Crystals from '../Crystals';\r\n\r\nexport interface NavTextFinishProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingCrystal?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextFinish: FC<NavTextFinishProps> = ({ editText = {}, setIsPickingCrystal }) => {\r\n  const { selectedName } = editText;\r\n  const selectedMaterialId = editText?.crystalBackground?.id;\r\n\r\n  const [crystals, setCrystals] = useState<boolean>(editText?.crystalPrice ? true : false);\r\n  const [puff, setPuff] = useState<boolean>(editText?.puffPrice ? true : false);\r\n\r\n  const hasPuffOption = useMemo(() => selectedName?.id === NAME_TYPE_LUXURY_ID, [selectedName]);\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  useEffect(() => {\r\n    setPuff(editText.puffPrice ? true : false);\r\n  }, [editText.puffPrice]);\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setCrystalBackground = (crystalBackground: CrystalFragment | undefined) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        crystalBackground,\r\n      });\r\n    }\r\n  };\r\n\r\n  const addCrystals = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setCrystals(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          crystalPrice: {\r\n            price: selectedName.attributes?.crystalPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.crystalPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          crystalPrice: undefined,\r\n          crystalBackground: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const addPuff = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setPuff(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          puffPrice: {\r\n            price: selectedName.attributes?.puffPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.puffPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          puffPrice: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.finishSelections}>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: !crystals,\r\n          })}\r\n          onClick={() => {\r\n            setIsPickingCrystal && setIsPickingCrystal(false);\r\n            addCrystals(false);\r\n          }}\r\n        >\r\n          No Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: crystals,\r\n          })}\r\n          onClick={() => {\r\n            addCrystals(true);\r\n            setIsPickingCrystal && setIsPickingCrystal(true);\r\n          }}\r\n        >\r\n          Add Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.crystalPrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {!crystals && (\r\n        <div className={styles.finishSelections}>\r\n          <div\r\n            className={cn(styles.finishSelection, { [styles.selected]: !puff })}\r\n            onClick={() => addPuff(false)}\r\n          >\r\n            Flat\r\n            <div className={styles.pricing}>\r\n              {' +'}\r\n              <Price price={0} />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: puff,\r\n              [styles.disabled]: !hasPuffOption,\r\n            })}\r\n            onClick={() => addPuff(true)}\r\n          >\r\n            Add 3D Puff\r\n            {hasPuffOption ? (\r\n              <div className={styles.pricing}>\r\n                {' +'}\r\n                <Price price={selectedName.attributes?.puffPrice?.price} />\r\n              </div>\r\n            ) : (\r\n              <div className={styles.pricing}>(Only available for luxury colors)</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {crystals && (\r\n        // <MaterialGroup\r\n        //   hideColorGroups={true}\r\n        //   materialGroup={selectedName.attributes?.materialGroup?.data}\r\n        //   materialType={editText.material?.attributes?.type?.data}\r\n        //   colourGroup={editText.material?.attributes?.colourGroups?.data[0]}\r\n        //   onMaterialSelected={setCrystalBackground}\r\n        //   className={styles.materialGroup}\r\n        //   selectedMaterialId={selectedMaterialId}\r\n        // />\r\n        <Crystals\r\n          onCrystalSelected={setCrystalBackground}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextFinish;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment, NameEntity, useGetNamesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\nimport { textTypesDisplay } from '@lib/string';\r\n\r\nexport interface NavTextNameTypesProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextNameTypes = ({ editText = {} }: NavTextNameTypesProps) => {\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const selectedMaterialId = editText?.material?.id;\r\n\r\n  const { selectedName } = editText;\r\n  const prevSelectedName = useRef(selectedName);\r\n\r\n  const { data: names } = useGetNamesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => data.names?.data,\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (editText?.key && selectedName && prevSelectedName.current !== selectedName) {\r\n      prevSelectedName.current = selectedName;\r\n\r\n      updateText(editText.key, {\r\n        basePrice: {\r\n          price: selectedName.attributes?.basePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.basePrice?.shopifyVariantId,\r\n        },\r\n        letterPrice: {\r\n          price: selectedName.attributes?.letterPrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.letterPrice?.shopifyVariantId,\r\n        },\r\n        nameType: {\r\n          id: selectedName.id,\r\n          name: selectedName.attributes?.name,\r\n        },\r\n        /**\r\n         * Reset material when selectedName changes.\r\n         *\r\n         * Different name types would have different\r\n         * material groups.\r\n         */\r\n        material: undefined,\r\n        ...(editText.outline\r\n          ? {\r\n              outlinePrice: {\r\n                price: selectedName.attributes?.outlinePrice?.price,\r\n                quantity: 1,\r\n                shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n              },\r\n            }\r\n          : {}),\r\n\r\n        puffPrice: undefined,\r\n      });\r\n    }\r\n  }, [selectedName]);\r\n\r\n  const setMaterial = (material: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        material,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setSelectedName = (name: NameEntity) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        selectedName: name,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!selectedName && <i className={styles.promptMessage}>Select a text color type</i>}\r\n      <div className={styles.categoryDisplayName}>Choose Color:</div>\r\n      <div className={styles.finishSelections}>\r\n        {names?.map((n) => (\r\n          <div\r\n            key={n.id}\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: selectedName && n.id === selectedName.id,\r\n            })}\r\n            onClick={() => setSelectedName(n)}\r\n          >\r\n            {textTypesDisplay({ textType: n.attributes?.name })}\r\n            <div className={styles.pricing}>\r\n              <Price price={n.attributes?.basePrice?.price} />\r\n              {' + '}\r\n              <Price price={n.attributes?.letterPrice?.price} /> per letter\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedName && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName?.attributes?.materialGroup?.data}\r\n          materialType={editText?.material?.attributes?.type?.data}\r\n          colourGroup={editText?.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setMaterial}\r\n          className={styles.materialGroup}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNameTypes;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useState } from 'react';\r\n\r\nimport PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextOutlineProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingOutline?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextOutline: FC<NavTextOutlineProps> = ({ editText = {}, setIsPickingOutline }) => {\r\n  const [showOutline, setShowOutline] = useState<boolean>(editText?.outline ? true : false);\r\n  const selectedMaterialId = editText?.outline?.id;\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  const { selectedName } = editText;\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setOutline = (outline: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        outline,\r\n        outlinePrice: {\r\n          price: selectedName.attributes?.outlinePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateOutline = (show: boolean) => {\r\n    setShowOutline(show);\r\n    if (!show && editText?.key) {\r\n      updateText(editText.key, {\r\n        outline: undefined,\r\n        outlinePrice: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={cn(styles.showOutline, styles.finishSelections)}>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: !showOutline })}\r\n          onClick={() => {\r\n            updateOutline(false);\r\n            setIsPickingOutline && setIsPickingOutline(false);\r\n          }}\r\n        >\r\n          No Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: showOutline })}\r\n          onClick={() => {\r\n            updateOutline(true);\r\n            setIsPickingOutline && setIsPickingOutline(true);\r\n          }}\r\n        >\r\n          Add Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.outlinePrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showOutline && (\r\n        <>\r\n          <MaterialGroup\r\n            hideColorGroups\r\n            materialGroup={selectedName?.attributes?.outlineGroup?.data}\r\n            materialType={editText?.outline?.attributes?.type?.data}\r\n            colourGroup={editText?.outline?.attributes?.colourGroups?.data[0]}\r\n            onMaterialSelected={setOutline}\r\n            className={styles.materialGroup}\r\n            selectedMaterialId={selectedMaterialId}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextOutline;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport interface NavTextSelectProps {\r\n  className?: string;\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst fonts = [\r\n  {\r\n    name: 'Arial',\r\n    className: styles.arial,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/arial-bold-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Oswald',\r\n    className: styles.oswald,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/oswald-semibold.woff',\r\n  },\r\n  {\r\n    name: 'College',\r\n    className: styles.college,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/college_block-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Ballantines',\r\n    className: styles.ballantines,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/ballantines-bold-webfont.woff',\r\n  },\r\n];\r\n\r\nconst NavTextSelect = ({ className, editText }: NavTextSelectProps) => {\r\n  const portalRef = usePortalRef('popupContainer');\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const [font, setFont] = useState<(typeof fonts)[number]>(\r\n    fonts.find((f) => editText?.font === f.url) ?? fonts[0],\r\n  );\r\n  const { addText, updateText } = useCustomiserStore((state) => state);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (font) {\r\n        addText({ font: font.url });\r\n      }\r\n    }\r\n  }, [font]);\r\n\r\n  const setTextOnChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onFontChange = (font: (typeof fonts)[number]) => {\r\n    setFont(font);\r\n  };\r\n\r\n  if (!portalRef) return null;\r\n\r\n  return (\r\n    <div className={className}>\r\n      {/* {ReactDOM.createPortal(\r\n        <div className={styles.textInputContainer}>\r\n          <FormInput\r\n            className={styles.textInput}\r\n            placeholder='Type text here...'\r\n            value={text}\r\n            onChange={setTextOnChange}\r\n          >\r\n            <span className={styles.textDone}>Done</span>\r\n          </FormInput>\r\n        </div>,\r\n        portalRef,\r\n      )} */}\r\n      <div className={styles.categoryDisplayName}>Choose Font:</div>\r\n      <div className={styles.fontSelection}>\r\n        {fonts.map((_font) => (\r\n          <div\r\n            key={_font.name}\r\n            onClick={() => onFontChange(_font)}\r\n            className={cn(styles.font, _font.className, {\r\n              [styles.selected]: font.name === _font.name,\r\n            })}\r\n          >\r\n            {_font.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* <FormSelect\r\n        className={fonts.find((f) => f.url === font)?.className}\r\n        value={font}\r\n        onChange={onFontChange}\r\n      >\r\n        {fonts.map((f) => (\r\n          <option className={f.className} key={f.url} value={f.url}>\r\n            {f.name}\r\n          </option>\r\n        ))}\r\n      </FormSelect> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextSelect;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { Dispatch, MouseEventHandler, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\n\r\nimport styles from './NavText.module.scss';\r\n\r\nexport interface NavTextTextProps {\r\n  text: TextCustomiser;\r\n  className?: string;\r\n  setShowSelector?: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextText = ({ className, text, setShowSelector }: NavTextTextProps) => {\r\n  const { updateText, deleteText } = useCustomiserStore((state) => state);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const editItem = () => {\r\n    if (text.key) {\r\n      updateText(text.key, { edit: true });\r\n      setShowSelector && setShowSelector(true);\r\n    }\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    if (!text.key) return;\r\n    updateText(text.key, {\r\n      isVisible: typeof text.isVisible !== 'undefined' ? !text.isVisible : false,\r\n    });\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (text.key) {\r\n      deleteText(text.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.textItem} onClick={editItem}>\r\n      <div className={styles.textItemText}>{text.text}</div>\r\n      <NavOptionEdit\r\n        toggleVisibility={toggleVisibility}\r\n        onEdit={editItem}\r\n        onDelete={deleteItem}\r\n        isVisible={text.isVisible}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextText;\r\n","import { FC } from 'react';\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextText from './NavTextText';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\ntype NavTextsSelectionProps = {\r\n  onAddTextClicked?: () => void;\r\n  onTextSelected?: () => void;\r\n};\r\n\r\nconst NavTextsSelection: FC<NavTextsSelectionProps> = ({ onAddTextClicked, onTextSelected }) => {\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n\r\n  return (\r\n    <div className={styles.navTextsSelection}>\r\n      {/* <div className={styles.title}>\r\n        <h3 className={styles.titleText}>Your Texts</h3>\r\n\r\n        <ContainedButton onClick={onAddTextClicked}>Add Text</ContainedButton>\r\n      </div> */}\r\n\r\n      {texts.map((t) => (\r\n        <NavTextText key={t.key} text={t} setShowSelector={onTextSelected} />\r\n      ))}\r\n\r\n      {/* <NavButtons\r\n        confirmStorage='saveTextsNotification'\r\n        confirmText='You can still add more text. Save anyway?'\r\n      ></NavButtons> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextsSelection;\r\n","import type { CrystalFragment, MaterialFragment } from '@graphql/generated/graphql';\r\nimport type { Falsey } from 'lodash';\r\n// eslint-disable-next-line\r\n// @ts-ignore\r\nimport { NormalMapGenerator } from 'normalmap-online';\r\n\r\nexport function getMaterialUrl(material: MaterialFragment | undefined): string {\r\n  return material?.attributes?.images?.find((imgMap) => imgMap?.mapType === 'map')?.image.data\r\n    ?.attributes?.formats.large.url;\r\n}\r\n\r\nexport function getCrystalUrl(material: CrystalFragment | undefined): string {\r\n  return material?.attributes?.image.data?.attributes?.url || '';\r\n}\r\n\r\n// TODO - Relocate this\r\ninterface ImgToNormalMapParams {\r\n  img: HTMLImageElement | HTMLCanvasElement;\r\n  hasPuff?: boolean;\r\n  blur?: number;\r\n}\r\nconst normalMapGenerator = NormalMapGenerator.instance();\r\nasync function imgToNormalMap({ img, hasPuff, blur }: ImgToNormalMapParams) {\r\n  const blurAmount = hasPuff ? blur || 7 : 1;\r\n  return normalMapGenerator.generateFromImage(img, {\r\n    strength: 0.5,\r\n    blur: blurAmount,\r\n    level: 1,\r\n  });\r\n}\r\n\r\ninterface PreviewText {\r\n  material: HTMLImageElement | undefined;\r\n  outline: HTMLImageElement | undefined;\r\n  previewImg?: HTMLImageElement;\r\n  normalMapPatternImg?: HTMLImageElement | false;\r\n  crystalBgPatternImg?: HTMLImageElement | Falsey;\r\n  crystalBgImg?: HTMLImageElement | Falsey;\r\n}\r\n\r\nexport type PatternType = 'crystals' | 'embroidery' | Falsey;\r\n\r\ninterface CanvasTextConstructor {\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n}\r\n\r\nexport class CanvasText {\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  outlineCanvas: HTMLCanvasElement;\r\n  outlineCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapTextureCanvas: HTMLCanvasElement;\r\n  normalMapTextureCtx: CanvasRenderingContext2D;\r\n  normalMapCanvas: HTMLCanvasElement;\r\n  normalMapCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapOutlineTextureCanvas: HTMLCanvasElement;\r\n  normalMapOutlineTextureCtx: CanvasRenderingContext2D;\r\n  normalMapOutlineCanvas: HTMLCanvasElement;\r\n  normalMapOutlineCtx2: CanvasRenderingContext2D;\r\n\r\n  crystalBgPatternCanvas: HTMLCanvasElement;\r\n  crystalBgPatternCtx: CanvasRenderingContext2D;\r\n\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n  fontSize: number;\r\n  outlineWidth: number;\r\n\r\n  constructor({ hasPuff, toNormalMap, text, patternType }: CanvasTextConstructor) {\r\n    this.hasPuff = hasPuff;\r\n    this.toNormalMap = toNormalMap;\r\n    this.patternType = patternType;\r\n    this.text = text;\r\n\r\n    this.fontSize = 360;\r\n    this.canvasHeight = 400;\r\n    this.canvasWidth = 3200;\r\n    this.outlineWidth = 20;\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.height = this.canvasHeight;\r\n    this.canvas.width = this.canvasWidth;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.outlineCanvas = document.createElement('canvas');\r\n    this.outlineCanvas.height = this.canvasHeight;\r\n    this.outlineCanvas.width = this.canvasWidth;\r\n    this.outlineCtx = this.outlineCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    // Normal map section\r\n\r\n    this.normalMapTextureCanvas = document.createElement('canvas');\r\n    this.normalMapTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapTextureCtx = this.normalMapTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapCanvas = document.createElement('canvas');\r\n    this.normalMapCanvas.height = this.canvasHeight;\r\n    this.normalMapCanvas.width = this.canvasWidth;\r\n    this.normalMapCtx = this.normalMapCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineTextureCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineTextureCtx = this.normalMapOutlineTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineCtx2 = this.normalMapOutlineCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    // TODO - make a function for setting canvas height and ctx instead\r\n    this.crystalBgPatternCanvas = document.createElement('canvas');\r\n    this.crystalBgPatternCanvas.height = this.canvasHeight;\r\n    this.crystalBgPatternCanvas.width = this.canvasWidth;\r\n    this.crystalBgPatternCtx = this.crystalBgPatternCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n  }\r\n\r\n  public clear() {\r\n    this.ctx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.outlineCtx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n  public async drawImg(ctx: CanvasRenderingContext2D, src: HTMLImageElement) {\r\n    ctx.drawImage(src, 0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  public showTestCanvas(canvas: HTMLCanvasElement) {\r\n    const testPreviewDom = document.getElementById('testPreview'); // TEST ONLY, TO BE REMOVED\r\n    (testPreviewDom as unknown as HTMLElement).innerHTML = ''; // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(canvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineTextureCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.crystalBgPatternCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.outlineCanvas); // TEST ONLY, TO BE REMOVED\r\n  }\r\n\r\n  public async maskImage(ctx: CanvasRenderingContext2D, img: HTMLImageElement) {\r\n    ctx.globalCompositeOperation = 'source-in';\r\n    await this.drawImg(ctx, img);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  public drawPreviewText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n  }\r\n\r\n  public drawPreviewOutlineText() {\r\n    if (!this.text) return;\r\n\r\n    this.outlineCtx.font = `${this.fontSize}px testFont`;\r\n    this.outlineCtx.textAlign = 'center';\r\n    this.outlineCtx.lineWidth = this.outlineWidth;\r\n    this.outlineCtx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n  }\r\n\r\n  public drawPreviewOutlineOnlyText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.lineWidth = 30;\r\n    ctx.fillStyle = 'green';\r\n    ctx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n    ctx.globalCompositeOperation = 'destination-out';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  private async drawNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewText(this.normalMapTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      this.normalMapTextureCtx.fillStyle = pattern;\r\n      this.normalMapTextureCtx.fill();\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    const normalMap = this.toNormalMap\r\n      ? await imgToNormalMap({\r\n          img: this.normalMapTextureCanvas,\r\n          hasPuff: this.hasPuff,\r\n        })\r\n      : this.normalMapTextureCanvas;\r\n\r\n    this.normalMapCtx.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawOutlineNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewOutlineOnlyText(this.normalMapOutlineTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapOutlineTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapOutlineTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      if (this.patternType !== 'crystals') {\r\n        this.normalMapOutlineTextureCtx.fillStyle = pattern;\r\n      }\r\n      this.normalMapOutlineTextureCtx.fill();\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    const normalMap =\r\n      this.toNormalMap || this.patternType === 'crystals'\r\n        ? await imgToNormalMap({\r\n            img: this.normalMapOutlineTextureCanvas,\r\n            hasPuff: this.patternType === 'crystals' ? true : this.hasPuff,\r\n            blur: 4,\r\n          })\r\n        : this.normalMapOutlineTextureCanvas;\r\n    this.normalMapOutlineCtx2.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawCrystalBg(\r\n    crystalBgImg: HTMLImageElement,\r\n    crystalBgPatternImg: HTMLImageElement,\r\n  ) {\r\n    const pattern = this.crystalBgPatternCtx.createPattern(crystalBgPatternImg, 'repeat');\r\n\r\n    if (!pattern) return;\r\n\r\n    this.crystalBgPatternCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.fillStyle = pattern;\r\n    this.crystalBgPatternCtx.fill();\r\n\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-in';\r\n    this.crystalBgPatternCtx.globalAlpha = 0.9;\r\n    this.crystalBgPatternCtx.drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.drawImage(crystalBgImg, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-over';\r\n\r\n    this.outlineCtx.drawImage(this.crystalBgPatternCanvas, 0, 0);\r\n  }\r\n\r\n  private printTextMapToStrokeMap() {\r\n    this.normalMapCtx.globalCompositeOperation = 'destination-in';\r\n    this.normalMapCtx.drawImage(this.normalMapTextureCanvas, 0, 0);\r\n    this.normalMapCtx.globalCompositeOperation = 'source-over'; // reset to default\r\n    this.normalMapOutlineCtx2.drawImage(this.normalMapCanvas, 0, 0);\r\n  }\r\n\r\n  public async previewText({\r\n    material,\r\n    outline,\r\n    previewImg,\r\n    normalMapPatternImg,\r\n    crystalBgPatternImg,\r\n    crystalBgImg,\r\n  }: PreviewText) {\r\n    if (!this.text) return;\r\n\r\n    this.clear();\r\n    this.showTestCanvas(this.normalMapTextureCanvas);\r\n\r\n    await this.drawNormalMap(normalMapPatternImg);\r\n    await this.drawOutlineNormalMap(normalMapPatternImg);\r\n\r\n    this.printTextMapToStrokeMap();\r\n\r\n    if (outline) {\r\n      this.drawPreviewOutlineText();\r\n      await this.maskImage(this.outlineCtx, outline);\r\n    }\r\n\r\n    this.drawPreviewText(this.ctx);\r\n\r\n    if (material) {\r\n      await this.maskImage(this.ctx, material);\r\n    }\r\n\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n    if (previewImg) previewImg.src = this.outlineCanvas.toDataURL();\r\n\r\n    if (crystalBgImg && crystalBgPatternImg) {\r\n      this.drawCrystalBg(crystalBgImg, crystalBgPatternImg);\r\n    }\r\n  }\r\n\r\n  public mergeCanvas() {\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n  }\r\n\r\n  getOutlineCanvas() {\r\n    return this.outlineCanvas;\r\n  }\r\n  getNormalMapTextureCanvas() {\r\n    return this.normalMapTextureCanvas;\r\n  }\r\n  getNormalMapOutlineCanvas() {\r\n    return this.normalMapOutlineCanvas;\r\n  }\r\n}\r\n","import { CanvasText, PatternType, getCrystalUrl, getMaterialUrl } from '@lib/canvas';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { CanvasTexture } from 'three';\r\nimport type { NavTextSelectProps } from './NavTextSelect';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { loadImage } from '@lib/img.util';\r\nimport NavTextPreviewScene from '@components/three/CustomiserCanvas/NavTextScene';\r\nimport FormInput from '@components/ui/FormInput';\r\n\r\n// TODO - Pre load the fonts somewhere\r\nasync function loadFonts(fontUrl: string) {\r\n  const font = new FontFace('testFont', `url(${fontUrl})`);\r\n  await font.load();\r\n  document.fonts.add(font);\r\n}\r\n\r\nfunction getPatternType({\r\n  hasCrystals,\r\n  isLuxury,\r\n}: {\r\n  hasCrystals: boolean;\r\n  isLuxury: boolean;\r\n}): PatternType {\r\n  if (!hasCrystals && isLuxury) return 'embroidery';\r\n  else if (hasCrystals) return 'crystals';\r\n\r\n  return '';\r\n}\r\n\r\ninterface NavTextPreviewProps extends NavTextSelectProps {\r\n  mainTextInputRef: React.MutableRefObject<HTMLInputElement | null>;\r\n}\r\n\r\n// TODO R - Text preview UI is no longer used.\r\n// This component is only used as rendering the text to the model.\r\n// The functionality should be relocated then remove this file\r\nconst NavTextPreview = ({ editText, mainTextInputRef }: NavTextPreviewProps) => {\r\n  const previewImgRef = useRef<HTMLImageElement | null>(null);\r\n  const [fontFamily, setFontFamily] = useState<string | undefined>(editText?.font);\r\n  const [isVisiblePreview, setIsVisiblePreview] = useState(false);\r\n\r\n  const hasCrystals: boolean = editText?.crystalPrice ? true : false;\r\n  const isLuxury: boolean = editText?.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = editText?.puffPrice && !hasCrystals ? true : false; // 3D puff\r\n  const toNormalMap = hasCrystals ? false : true;\r\n  const patternType = getPatternType({ hasCrystals, isLuxury });\r\n\r\n  const { updateText, addText, isMinimizedCustomiserNav } = useCustomiserStore();\r\n\r\n  const portalRef = usePortalRef('NavHeaderAfter');\r\n\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (editText?.key) {\r\n      updateText(editText?.key, {\r\n        text: e.target.value,\r\n      });\r\n    } else {\r\n      if (e.target.value) {\r\n        addText({ text: e.target.value });\r\n      }\r\n    }\r\n    mainTextInputRef?.current?.focus();\r\n  };\r\n\r\n  /**\r\n   * Save image here\r\n   */\r\n  const materialImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.material));\r\n  }, [editText?.material]);\r\n  const outlineImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.outline));\r\n  }, [editText?.outline]);\r\n  const fabricPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/Fabric_Knitted_006_height_small.png');\r\n  }, []);\r\n  const crystalNormalMapImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-12.png');\r\n  }, []);\r\n  const crystalBgImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getCrystalUrl(editText?.crystalBackground));\r\n  }, [editText?.crystalBackground]);\r\n  const crystalBgPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-bg-pattern.png');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const previewImgDom = previewImgRef.current as HTMLImageElement;\r\n\r\n    (async () => {\r\n      const canvasText = new CanvasText({\r\n        hasPuff,\r\n        toNormalMap,\r\n        patternType,\r\n        text: editText?.text,\r\n      });\r\n\r\n      if (!editText || !editText.key || !isVisiblePreview) {\r\n        canvasText.clear();\r\n        return;\r\n      }\r\n\r\n      if (!editText.text) {\r\n        canvasText.clear();\r\n        updateText(editText.key, {\r\n          preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Adjust this once preloading fonts has been implemented\r\n      if (fontFamily !== editText?.font) {\r\n        setFontFamily(editText?.font);\r\n        await loadFonts(editText?.font as string);\r\n      }\r\n\r\n      const img = editText?.material && (await materialImgMemo);\r\n      const outlineImg = editText?.outline && (await outlineImgMemo);\r\n      const embroideryPattern = await fabricPatternImgMemo;\r\n      const crystalNormalMap = await crystalNormalMapImgMemo;\r\n      const crystalBgPatternImg = await crystalBgPatternImgMemo;\r\n      const crystalBgImg = editText?.crystalBackground && (await crystalBgImgMemo);\r\n\r\n      const shouldUsePattern = isLuxury && !hasPuff;\r\n      // const patternImg = shouldUsePattern && (hasCrystals ? crystalNormalMap : embroideryPattern);\r\n      const patternImg = hasCrystals ? crystalNormalMap : shouldUsePattern && embroideryPattern;\r\n\r\n      await canvasText.previewText({\r\n        material: img,\r\n        outline: outlineImg,\r\n        previewImg: previewImgDom,\r\n        normalMapPatternImg: patternImg,\r\n        crystalBgPatternImg,\r\n        crystalBgImg,\r\n      });\r\n\r\n      updateText(editText.key, {\r\n        preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        normalMap: new CanvasTexture(canvasText.getNormalMapOutlineCanvas()),\r\n      });\r\n    })();\r\n  }, [\r\n    editText?.text,\r\n    editText?.material,\r\n    editText?.outline,\r\n    editText?.font,\r\n    editText?.crystalBackground,\r\n    isVisiblePreview,\r\n    editText?.puffPrice,\r\n    editText?.crystalPrice,\r\n  ]);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <>\r\n      <div id='testPreview' style={{ position: 'absolute', zIndex: '100' }} />\r\n      {!isMinimizedCustomiserNav && editText?.text && (\r\n        <div className={styles.textPreview}>\r\n          <div>\r\n            {\r\n              <>\r\n                <div className={styles.textPreview__imgContainer} style={{ display: 'none' }}>\r\n                  <img\r\n                    height={80 * 5}\r\n                    width={640 * 5}\r\n                    ref={(el) => {\r\n                      previewImgRef.current = el;\r\n                      setIsVisiblePreview(!!el);\r\n                    }}\r\n                  />\r\n                </div>\r\n                {/* {previewImgRef.current?.src ? (\r\n                  <>\r\n                    <NavTextPreviewScene text={editText} />\r\n                  </>\r\n                ) \r\n                : (\r\n                  ''\r\n                )} */}\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavTextPreview;\r\n","import { FaArrowRightLong } from 'react-icons/fa6';\r\nimport styles from './Button.module.scss';\r\n\r\ninterface NextStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst NextStepButton = ({ onClick, isClickable, isVisible }: NextStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__next}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Next &nbsp;\r\n      <FaArrowRightLong />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default NextStepButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavTextNavSteps_root__Ys0fR\"};","import styles from './Button.module.scss';\r\n\r\ninterface CancelStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst CancelStepButton = ({ onClick, isClickable, isVisible }: CancelStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__cancel}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Cancel\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CancelStepButton;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface ApplyButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst ApplyButton = ({ onClick, isClickable, isVisible }: ApplyButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__next}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Save\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ApplyButton;\r\n","import NextStepButton from '@components/ui/Button/NextStepButton';\r\nimport PrevStepButton from '@components/ui/Button/PrevStepButton';\r\nimport { usePortalRef } from '@hooks';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './NavTextNavSteps.module.scss';\r\nimport CancelStepButton from '@components/ui/Button/CancelStepButton';\r\nimport ApplyButton from '@components/ui/Button/ApplyButton';\r\nimport InfoDisplay from '@components/ui/InfoButton/InfoDisplay';\r\n\r\ninterface NavTextNavStepsProps {\r\n  isClickableNext?: boolean;\r\n  isClickablePrev?: boolean;\r\n  isVisibleNext?: boolean;\r\n  isVisiblePrev?: boolean;\r\n\r\n  onClickNext?: () => void;\r\n  onClickPrev?: () => void;\r\n  onClickCancel?: () => void;\r\n  onClickSave?: () => void;\r\n}\r\n\r\nconst NavTextNavSteps = ({\r\n  isClickableNext,\r\n  isClickablePrev,\r\n  isVisibleNext,\r\n  isVisiblePrev,\r\n  onClickNext,\r\n  onClickPrev,\r\n  onClickCancel,\r\n  onClickSave,\r\n}: NavTextNavStepsProps) => {\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n\r\n  if (!portalRef || !popupContainerRef) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      {/* {ReactDOM.createPortal(\r\n        <InfoDisplay>\r\n          <h5>Click where you want the text to go</h5>\r\n        </InfoDisplay>,\r\n        popupContainerRef,\r\n      )} */}\r\n      {ReactDOM.createPortal(\r\n        <div className={styles.root}>\r\n          {isVisiblePrev !== true && (\r\n            <CancelStepButton\r\n              onClick={\r\n                onClickCancel ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {/* {(typeof isVisiblePrev === 'undefined' || isVisiblePrev) && (\r\n            <PrevStepButton\r\n              isClickable={isClickablePrev}\r\n              isVisible={isVisiblePrev}\r\n              onClick={\r\n                onClickPrev ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )} */}\r\n          {(typeof isVisibleNext === 'undefined' || isVisibleNext) && (\r\n            <NextStepButton\r\n              isClickable={isClickableNext}\r\n              isVisible={isVisibleNext}\r\n              onClick={\r\n                onClickNext ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {isVisibleNext !== true && (\r\n            <ApplyButton\r\n              onClick={\r\n                onClickSave ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        </div>,\r\n        portalRef,\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNavSteps;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport styles from './NavText.module.scss';\r\nimport { useCustomiserStore, type TextCustomiser } from '@store/customiser';\r\nimport { LegacyRef, forwardRef, useEffect, useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport inputStyles from './../../ui/FormInput/FormInput.module.scss';\r\n\r\ninterface NavTextInputProps {\r\n  editText?: TextCustomiser;\r\n  showEditText: boolean;\r\n}\r\n\r\nconst NavTextInput = forwardRef(({ editText, showEditText }: NavTextInputProps, ref) => {\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const { updateText, addText } = useCustomiserStore((state) => state);\r\n\r\n  const shouldApplyEdit = showEditText;\r\n\r\n  const inputValue = shouldApplyEdit ? (editText?.text ? editText.text : '') : text || '';\r\n\r\n  const setTextOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const rootClassName = cn(inputStyles.root, styles.textInput);\r\n\r\n  const createText = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        // font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({\r\n          text,\r\n          decalFreeze: true,\r\n          decalPosition: [-0.01989325641440387, 2.436930108198209, 1.6226380277735046],\r\n          decalOrientation: [\r\n            -0.14799034762565572,\r\n            -0.17866277612764514,\r\n            -0.026487426629834374,\r\n            'XYZ',\r\n          ],\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const doneHandler = () => {\r\n    if (text) {\r\n      createText();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!shouldApplyEdit) return;\r\n    createText();\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    if (!editText) {\r\n      setText('');\r\n    }\r\n  }, [shouldApplyEdit]);\r\n\r\n  return (\r\n    <div className={styles.textInputContainer}>\r\n      {/* <FormInput\r\n        ref={inputRef}\r\n        className={styles.textInput}\r\n        placeholder='Type text here...'\r\n        value={editText?.text}\r\n        onChange={setTextOnChange}\r\n      /> */}\r\n      <div className={rootClassName}>\r\n        <input\r\n          className={inputStyles.input}\r\n          onChange={setTextOnChange}\r\n          ref={ref as LegacyRef<HTMLInputElement> | undefined}\r\n          placeholder='Type text here...'\r\n          value={inputValue}\r\n        />\r\n        {!showEditText && (\r\n          <span onClick={doneHandler} className={styles.doneBtn}>\r\n            Done\r\n          </span>\r\n        )}\r\n        {/* <label className={inputStyles.label}>Type text here</label> */}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nNavTextInput.displayName = 'NavTextInput';\r\n\r\nexport default NavTextInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"DontShowAgain_root__zOI6r\",\"notifContainer\":\"DontShowAgain_notifContainer__adaGf\",\"notifControlContainer\":\"DontShowAgain_notifControlContainer__gVQq0\",\"btnContainer\":\"DontShowAgain_btnContainer__We3vg\"};","import React, { useState, useEffect } from 'react';\r\nimport styles from './DontShowAgain.module.scss';\r\n\r\nconst DontShowAgain = ({\r\n  children,\r\n  notifName = 'hideShowNotification',\r\n  setShowNotification,\r\n  cb,\r\n}: {\r\n  children: React.ReactNode;\r\n  notifName: string;\r\n  setShowNotification: React.Dispatch<React.SetStateAction<boolean>>;\r\n  cb?: () => void;\r\n}) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const handleDismiss = () => {\r\n    setShowNotification(false);\r\n    if (isChecked) {\r\n      localStorage.setItem(notifName, '1');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.root}>\r\n        <span className={styles.notifContainer}>\r\n          {children}\r\n          <div className={styles.notifControlContainer}>\r\n            <label>\r\n              <input type='checkbox' onChange={(e) => setIsChecked(e.target.checked)} />\r\n              Don&apos;t show again\r\n            </label>\r\n            <span className={styles.btnContainer}>\r\n              <button onClick={handleDismiss}>Cancel</button>\r\n              <button\r\n                onClick={() => {\r\n                  handleDismiss();\r\n                  cb && cb();\r\n                }}\r\n              >\r\n                Okay\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DontShowAgain;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"iInfo\":\"InfoButton_iInfo__0SLm4\",\"iInfo__bgOnclick\":\"InfoButton_iInfo__bgOnclick__3oQL8\",\"iInfo__display\":\"InfoButton_iInfo__display__nKOtb\",\"iInfo__header\":\"InfoButton_iInfo__header__IkMmc\",\"iInfo__body\":\"InfoButton_iInfo__body__6LPfY\",\"iInfo__sampleImg\":\"InfoButton_iInfo__sampleImg__bKcTE\",\"iInfo__closebtn\":\"InfoButton_iInfo__closebtn__+Dwj4\",\"iInfo__styleName\":\"InfoButton_iInfo__styleName__3bDQ2\",\"iInfo__title\":\"InfoButton_iInfo__title__SHp10\",\"infoIcon\":\"InfoButton_infoIcon__Yu7F-\",\"imgIcon\":\"InfoButton_imgIcon__oWQbZ\"};","import { ReactNode } from 'react';\r\nimport styles from './InfoButton.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\ninterface Props {\r\n  title: string | Falsey;\r\n  cb?: () => void;\r\n  children?: ReactNode;\r\n}\r\nconst InfoDisplay = ({ title, cb, children }: Props) => {\r\n  return (\r\n    <>\r\n      <div className={styles.iInfo} onClick={(e) => e.stopPropagation()}>\r\n        <div className={styles.iInfo__bgOnclick} onClick={cb} />\r\n        <div className={styles.iInfo__display}>\r\n          <div className={styles.iInfo__header}>\r\n            <span className={styles.iInfo__title}>{`${title}` || 'EXAMPLES'}</span>\r\n            <span className={styles.iInfo__closebtn} onClick={cb}>\r\n              x\r\n            </span>\r\n          </div>\r\n\r\n          <div className={styles.iInfo__body}>\r\n            {children || (\r\n              <>\r\n                <div className={styles.iInfo__styleName}>PRINTED</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119118469/names-printed.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>EMBROIDERY</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119222257/names-flat-embroidery.png'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>3D EMBROIDERY</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119313289/names-3d-embroidery.jpg'\r\n                  alt=''\r\n                />\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119344264/names-3d-embroidery-perspective.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>3D CRYSTALS</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119433059/names-3d-crystals.jpg'\r\n                  alt=''\r\n                />\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526727869947/names-3d-crystal-perspective.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>GLITTER</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119258957/names-glitter.pg.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>NAME PATCH</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119480153/name-patch-on-shorts.jpg'\r\n                  alt=''\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoDisplay;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport { LegacyRef, startTransition, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\n\r\nimport Accordion from '@components/ui/Accordion/Accordion';\r\nimport NavStepButtons from '../NavStepButtons';\r\nimport styles from './NavText.module.scss';\r\nimport navHeaderStyles from '../NavHeader/NavHeader.module.scss';\r\nimport NavTextFinish from './NavTextFinish';\r\nimport NavTextNameTypes from './NavTextNameTypes';\r\nimport NavTextOutline from './NavTextOutline';\r\nimport NavTextSelect from './NavTextSelect';\r\nimport NavTextsSelection from './NavTextsSelection';\r\nimport NavTextPreview from './NavTextPreview';\r\nimport { usePortalRef } from '@hooks';\r\nimport Button from '@components/ui/Button';\r\nimport { createPortal } from 'react-dom';\r\nimport NavTextCategories from './NavTextCategories';\r\nimport NavTextNavSteps from './NavTextNavSteps';\r\nimport { has } from 'lodash';\r\nimport FormInput from '@components/ui/FormInput';\r\nimport NavTextInput from './NavTextInput';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\nimport DontShowAgain from '@components/ui/DontShowAgain';\r\nimport InfoDisplay from '@components/ui/InfoButton/InfoDisplay';\r\nimport { FaAngleLeft, FaAngleRight } from 'react-icons/fa6';\r\nimport ImageDecalPreview from '@components/ui/ImageDecalPreview/ImageDecalPreview';\r\n\r\ninterface NavTextProps {\r\n  showEditText: boolean;\r\n  setShowEditText: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavText = ({ showEditText, setShowEditText }: NavTextProps) => {\r\n  const [step, setStep] = useState<number | undefined>(0);\r\n\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const deleteText = useCustomiserStore((state) => state.deleteText);\r\n  const updateIsMinimizedCustomiserNav = useCustomiserStore(\r\n    (state) => state.updateIsMinimizedCustomiserNav,\r\n  );\r\n  const isMinimizedCustomiserNav = useCustomiserStore((state) => state.isMinimizedCustomiserNav);\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  console.log('editText', editText);\r\n  const [isPickingOutline, setIsPickingOutline] = useState(false);\r\n  const [isPickingCrystal, setIsPickingCrystal] = useState(false);\r\n  const navHeaderRef = usePortalRef('NavHeader');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n  const navHeaderNavRef = usePortalRef('NavHeaderNav');\r\n\r\n  const mainTextInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const noOutlineSelected = step === 2 && isPickingOutline && !editText?.outline;\r\n  const noCrystalSelected = step === 3 && isPickingCrystal && !editText?.crystalBackground;\r\n  const hasFinishedAllSteps = step === 3 && (editText?.crystalBackground || !isPickingCrystal);\r\n\r\n  const hasFinishedStep1 = !!editText?.text;\r\n  const hasFinishedStep2 = !!editText?.material;\r\n  const hasFinishedStep3 = !!editText?.outline;\r\n  const hasFinishedStep4 = !!editText?.crystalBackground;\r\n\r\n  const finishedSteps = [\r\n    hasFinishedStep1,\r\n    hasFinishedStep2,\r\n    !noOutlineSelected,\r\n    !noCrystalSelected,\r\n  ];\r\n\r\n  const navCategoryNames = ['Font', 'Color', 'Outline', 'Finish', 'Transform'];\r\n  const maxStep = navCategoryNames.length;\r\n\r\n  const isVisiblePrev = step !== 0;\r\n  const isClickableNext = finishedSteps[step || 0];\r\n  const isVisibleNext = typeof step === 'number' ? step < 4 : false;\r\n\r\n  const saveAndApplyChecker = () => {\r\n    if (!hasFinishedStep1) {\r\n      alert('Please enter a text to continue');\r\n      setStep(0);\r\n      return false;\r\n    } else if (!hasFinishedStep2) {\r\n      alert('Select a text color to continue');\r\n      setStep(1);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      setShowEditText(true);\r\n    } else {\r\n      setShowEditText(false);\r\n    }\r\n  }, [editText]);\r\n\r\n  useEffect(() => {\r\n    setShowEditText(editText?.key !== undefined);\r\n    return () => {\r\n      setShowEditText(false);\r\n    };\r\n  }, []);\r\n\r\n  const addText = () => {\r\n    setShowEditText(true);\r\n  };\r\n\r\n  const setScale = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalScale: Number(event) });\r\n    });\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const placeText = () => {\r\n    if (isPickingCrystal && noCrystalSelected) {\r\n      alert('Select a crystal type');\r\n      return;\r\n    }\r\n    if (editText?.key && !editText?.decalPosition) {\r\n      updateText(editText.key, {\r\n        decalFreeze: true,\r\n        decalPosition: [-0.01989325641440387, 2.436930108198209, 1.6226380277735046],\r\n        decalOrientation: [\r\n          -0.14799034762565572,\r\n          -0.17866277612764514,\r\n          -0.026487426629834374,\r\n          'XYZ',\r\n        ],\r\n      });\r\n    }\r\n    handleNext();\r\n    // updateIsMinimizedCustomiserNav(true);\r\n  };\r\n\r\n  const applyText = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n        hasApplied: true,\r\n      });\r\n    }\r\n\r\n    setStep(0);\r\n\r\n    setShowEditText(false);\r\n  };\r\n\r\n  const localStorageConfirmCancelText = localStorage.getItem('confirmCancelText');\r\n  const shouldShowConfirmCancelText = !localStorageConfirmCancelText;\r\n\r\n  const [showConfirmCancelPopup, setShowConfirmCancelPopup] = useState(false);\r\n  const [shouldShowInfoDisplay, setShouldShowInfoDisplay] = useState(true);\r\n\r\n  const cancelText = () => {\r\n    if (editText?.key) {\r\n      if (!editText?.text || (editText?.text && !editText?.hasApplied)) {\r\n        deleteText(editText.key);\r\n      } else {\r\n        applyText();\r\n      }\r\n    }\r\n  };\r\n\r\n  const cancelTextHandler = () => {\r\n    if (editText?.text) {\r\n      setShowConfirmCancelPopup(true);\r\n    } else {\r\n      cancelText();\r\n    }\r\n  };\r\n\r\n  const handleTitleClick = (_step: number | string) => {\r\n    if (_step === step) {\r\n      setStep(undefined);\r\n    } else {\r\n      setStep(_step as number);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step < maxStep - 1) {\r\n      switch (step) {\r\n        case 0:\r\n          if (!editText?.text) {\r\n            alert('Please enter a text to continue');\r\n            return;\r\n          }\r\n          break;\r\n        case 1:\r\n          if (!editText?.selectedName) {\r\n            alert('Select a text color type');\r\n            return;\r\n          } else if (!editText?.material) {\r\n            alert('Select a color for text');\r\n            return;\r\n          }\r\n          break;\r\n        case 2:\r\n          if (isPickingOutline && !editText?.outline) {\r\n            alert('Select an outline');\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step > 0) {\r\n      setStep(step - 1);\r\n    }\r\n  };\r\n\r\n  const NavTextCategoriesItems = () => {\r\n    const handleOnClick = (index: number) => {\r\n      if (navCategoryNames[index] === 'Outline' || navCategoryNames[index] === 'Finish') {\r\n        if (!saveAndApplyChecker()) return;\r\n      }\r\n      if (!editText?.text) {\r\n        alert('Please enter a text to continue');\r\n        return;\r\n      }\r\n      handleTitleClick(index);\r\n    };\r\n\r\n    const finishedCategories = [\r\n      hasFinishedStep1,\r\n      hasFinishedStep2,\r\n      hasFinishedStep3,\r\n      hasFinishedStep4,\r\n    ];\r\n\r\n    return navCategoryNames.map((name, index) => {\r\n      const isSelectedCategory = step === index;\r\n      const categoryClassNames = `\r\n        ${isSelectedCategory ? styles.selectedCategoryItem : ''}\r\n        ${finishedCategories[index] ? styles.finishedCategoryItem : ''}\r\n      `;\r\n      return (\r\n        <div key={index} className={categoryClassNames} onClick={() => handleOnClick(index)}>\r\n          {name}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const CategoryDisplay = () => {\r\n    switch (step) {\r\n      case 0:\r\n        return <NavTextSelect editText={editText} />;\r\n      case 1:\r\n        return <NavTextNameTypes editText={editText} />;\r\n      case 2:\r\n        return <NavTextOutline editText={editText} setIsPickingOutline={setIsPickingOutline} />;\r\n      case 3:\r\n        return (\r\n          <NavTextFinish\r\n            setIsPickingCrystal={setIsPickingCrystal}\r\n            editText={editText}\r\n          ></NavTextFinish>\r\n        );\r\n      case 4:\r\n        return (\r\n          <ImageDecalPreview\r\n            scale={editText?.decalScale}\r\n            rotation={editText?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n          />\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {navCategoryNames[step || 0] !== 'Transform' && (\r\n          <NavTextInput editText={editText} showEditText={showEditText} />\r\n        )}\r\n        {showEditText ? (\r\n          <>\r\n            <div className={styles.navTextEdit}>\r\n              <NavTextPreview mainTextInputRef={mainTextInputRef} editText={editText} />\r\n              {/* <NavTextCategories>{NavTextCategoriesItems()}</NavTextCategories> */}\r\n              {CategoryDisplay()}\r\n              <NavTextNavSteps\r\n                onClickNext={handleNext}\r\n                onClickPrev={handlePrevious}\r\n                onClickCancel={cancelTextHandler}\r\n                onClickSave={applyText}\r\n                isVisiblePrev={isVisiblePrev}\r\n                isVisibleNext={isVisibleNext}\r\n                isClickableNext={isClickableNext}\r\n              />\r\n              {editText?.key &&\r\n                editText.decalPosition &&\r\n                // isMinimizedCustomiserNav &&\r\n                popupContainerRef && (\r\n                  <>\r\n                    {/* <NavDecalAdjust\r\n                      scale={editText?.decalScale}\r\n                      rotation={editText?.decalRotation}\r\n                      onScale={setScale}\r\n                      onRotate={setRotation}\r\n                    /> */}\r\n                    {shouldShowInfoDisplay &&\r\n                      step === 4 &&\r\n                      createPortal(\r\n                        <InfoDisplay\r\n                          cb={() => {\r\n                            setShouldShowInfoDisplay(false);\r\n                          }}\r\n                          title='Apply Text'\r\n                        >\r\n                          <h5>Click where you want the text to go</h5>\r\n                          <img\r\n                            style={{ maxWidth: '100%' }}\r\n                            src='examples/NavText/sample-apply-text.png'\r\n                          />\r\n                        </InfoDisplay>,\r\n                        popupContainerRef,\r\n                      )}\r\n                  </>\r\n                )}\r\n              {/* {editText &&\r\n                isMinimizedCustomiserNav &&\r\n                navHeaderRef &&\r\n                hasFinishedAllSteps &&\r\n                createPortal(\r\n                  <ContainedButton\r\n                    onClick={() => {\r\n                      if (!saveAndApplyChecker()) {\r\n                        return updateIsMinimizedCustomiserNav(false);\r\n                      }\r\n\r\n                      applyText();\r\n                      updateIsMinimizedCustomiserNav(false);\r\n                    }}\r\n                    classNames={styles.navHeaderSaveText}\r\n                  >\r\n                    SAVE\r\n                  </ContainedButton>,\r\n                  navHeaderRef,\r\n                )} */}\r\n              {/* {popupContainerRef &&\r\n                createPortal(\r\n                  <NavTextInput ref={mainTextInputRef} editText={editText} />,\r\n                  popupContainerRef,\r\n                )} */}\r\n            </div>\r\n            {popupContainerRef &&\r\n              shouldShowConfirmCancelText &&\r\n              showConfirmCancelPopup &&\r\n              createPortal(\r\n                <DontShowAgain\r\n                  cb={cancelText}\r\n                  setShowNotification={setShowConfirmCancelPopup}\r\n                  notifName={'editTextCancelText'}\r\n                >\r\n                  <span>Cancel text customization?</span>\r\n                </DontShowAgain>,\r\n                popupContainerRef,\r\n              )}\r\n            {navHeaderNavRef &&\r\n              createPortal(\r\n                <>\r\n                  <span\r\n                    className={`${navHeaderStyles.navButton} ${\r\n                      !isVisiblePrev ? navHeaderStyles.hidden : ''\r\n                    }`}\r\n                    onClick={handlePrevious}\r\n                  >\r\n                    <FaAngleLeft />\r\n                  </span>\r\n\r\n                  <div className={navHeaderStyles.title}>\r\n                    <span>{navCategoryNames[step || 0]}</span>\r\n                    <span>\r\n                      {(step || 0) + 1}/{navCategoryNames.length}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <span\r\n                    className={`${navHeaderStyles.navButton} ${\r\n                      !isVisibleNext ? navHeaderStyles.hidden : ''\r\n                    }`}\r\n                    onClick={handleNext}\r\n                  >\r\n                    <FaAngleRight />\r\n                  </span>\r\n                </>,\r\n                navHeaderNavRef,\r\n              )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <NavTextsSelection onAddTextClicked={addText}></NavTextsSelection>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavText;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CustomiserNav_root__rgnWr\",\"open\":\"CustomiserNav_open__6TgJc\",\"isFullscreen\":\"CustomiserNav_isFullscreen__xo92v\",\"minimized\":\"CustomiserNav_minimized__-4C1L\",\"actions\":\"CustomiserNav_actions__B0fm0\",\"content\":\"CustomiserNav_content__whsIx\",\"headerAfter\":\"CustomiserNav_headerAfter__bXrUD\",\"navHeaderScroll\":\"CustomiserNav_navHeaderScroll__0nzPV\",\"tab\":\"CustomiserNav_tab__El9gn\",\"finished\":\"CustomiserNav_finished__aPBu9\",\"navName\":\"CustomiserNav_navName__YLBS9\",\"selected\":\"CustomiserNav_selected__x6zsL\",\"navHeaderScroll__tabs\":\"CustomiserNav_navHeaderScroll__tabs__Kfm2J\",\"navHeaderScroll__arrow\":\"CustomiserNav_navHeaderScroll__arrow__rs-4X\",\"hasActions\":\"CustomiserNav_hasActions__xe43g\",\"closed\":\"CustomiserNav_closed__fkIqu\",\"navTabs\":\"CustomiserNav_navTabs__opEX5\",\"navTab\":\"CustomiserNav_navTab__RDrBe\",\"navTab__requiredIcon\":\"CustomiserNav_navTab__requiredIcon__V9kgy\",\"hidden\":\"CustomiserNav_hidden__XKoeq\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QuickInfo_root__3V53K\",\"root__icon\":\"QuickInfo_root__icon__+Dyye\"};","import styles from './QuickInfo.module.scss';\r\n\r\nexport interface Props {\r\n  children: React.ReactNode;\r\n}\r\nconst QuickInfo = ({ children }: Props) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      {children}\r\n      {/* A questionmark icon can be placed in here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuickInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavProduction_root__WosDO\",\"info\":\"NavProduction_info__2702c\",\"info__icon\":\"NavProduction_info__icon__+SUau\",\"productionCategories\":\"NavProduction_productionCategories__k+0vt\",\"productionCategories__category\":\"NavProduction_productionCategories__category__Kn49E\",\"productionCategories__title\":\"NavProduction_productionCategories__title__rL+FK\",\"productionCategories__infoIcon\":\"NavProduction_productionCategories__infoIcon__jlpLo\"};","import QuickInfo from '@components/ui/QuickInfo/QuickInfo';\r\nimport styles from './NavProduction.module.scss';\r\nimport { RiQuestionLine } from 'react-icons/ri';\r\nimport { useCustomiserStore } from '@store/customiser';\r\n\r\nconst NavProduction = () => {\r\n  // TODO: items will have dynamic data from the backend\r\n  const { selectedNav, setSelectedNav } = useCustomiserStore();\r\n  const clickHandler = () => {\r\n    if (selectedNav && selectedNav.index) {\r\n      setSelectedNav(selectedNav.index + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <QuickInfo>Choose how quickly you need us to work.</QuickInfo>\r\n\r\n      <div className={styles.productionCategories}>\r\n        <div className={styles.productionCategories__category} onClick={clickHandler}>\r\n          <div>\r\n            <div className={styles.productionCategories__title}>Standard Production</div>\r\n            <p>Approx 3-4 weeks production + delivery time</p>\r\n          </div>\r\n          <div className={styles.productionCategories__infoIcon}>\r\n            <RiQuestionLine />\r\n          </div>\r\n        </div>\r\n        <div className={styles.productionCategories__category} onClick={clickHandler}>\r\n          <div>\r\n            <div className={styles.productionCategories__title}>Express</div>\r\n            <p>Approx 10-12 days production + delivery time (+ £29)</p>\r\n          </div>\r\n          <span className={styles.productionCategories__infoIcon}>\r\n            <RiQuestionLine />\r\n          </span>\r\n        </div>\r\n        <div className={styles.productionCategories__category} onClick={clickHandler}>\r\n          <div>\r\n            <div className={styles.productionCategories__title}>Super Express</div>\r\n            <p>As fast as 6-8 days production + delivery time (+ £45)</p>\r\n          </div>\r\n          <span className={styles.productionCategories__infoIcon}>\r\n            <RiQuestionLine />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavProduction;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavBoxxerLogo_root__GOwtW\"};","import QuickInfo from '@components/ui/QuickInfo/QuickInfo';\r\nimport styles from './NavBoxxerLogo.module.scss';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\nconst NavBoxxerLogo = () => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <QuickInfo>\r\n        To keep our prices reasonable, all products need to include a Boxxer logo. You can drag this\r\n        to where you want it (except small waist band logos on shorts which are in set position). A\r\n        fee applies if you want all logos removed.\r\n      </QuickInfo>\r\n      <ContainedButton widthType='wide' type='hollow'>\r\n        Remove Boxxer Logo + £15\r\n      </ContainedButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBoxxerLogo;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavFitting from '../NavFitting';\r\nimport NavFlags from '../NavFlags';\r\nimport NavHeader from '../NavHeader';\r\nimport NavImages from '../NavImages';\r\nimport NavPart from '../NavPart';\r\nimport NavMinimize from '../NavMinimize';\r\nimport NavSize from '../NavSize';\r\nimport NavText from '../NavText';\r\n\r\nimport styles from './CustomiserNav.module.scss';\r\nimport NavHeaderScroll from '../NavHeader/NavHeaderScroll';\r\nimport NavProduction from '../NavProduction';\r\nimport { isFinishedNavItem } from '@lib/object';\r\nimport NavBoxxerLogo from '../NavBoxxerLogo/NavBoxxerLogo';\r\n\r\nexport interface CustomiserNavProps {\r\n  className?: string;\r\n}\r\n\r\nconst CustomiserNav = ({ className }: CustomiserNavProps) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [scrollCoordinates, setScrollCoordinates] = useState({ left: 0, top: 0 });\r\n  const [showEditText, setShowEditText] = useState(false);\r\n  const [finishedNavs, setFinishedNavs] = useState<\r\n    ({ name: string; isFinished: boolean } | undefined)[]\r\n  >([]);\r\n\r\n  const {\r\n    selectedPart,\r\n    selectedNav,\r\n    texts,\r\n    isMinimizedCustomiserNav,\r\n    updateIsMinimizedCustomiserNav,\r\n    setSelectedNav,\r\n    navTabs,\r\n    sizing,\r\n    parts,\r\n    flags,\r\n    graphics,\r\n  } = useCustomiserStore();\r\n  const scrollableRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const isFullscreen = useMemo(\r\n    () => selectedNav?.name === 'Text' && editText,\r\n    [selectedNav, editText],\r\n  );\r\n\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      // [styles.open]: isOpen,\r\n      [styles.minimized]: isMinimizedCustomiserNav,\r\n      [styles.hasActions]: selectedNav?.hasActions,\r\n      // [styles.isEdittingText]: editText?.text && showEditText,\r\n      [styles.isFullscreen]: false,\r\n    },\r\n    className,\r\n  );\r\n\r\n  const saveScrollCoordinates = () => {\r\n    if (isOpen && scrollableRef.current) {\r\n      setScrollCoordinates({\r\n        left: scrollableRef.current.scrollLeft,\r\n        top: scrollableRef.current.scrollTop,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && scrollableRef.current) {\r\n      scrollableRef.current.scrollTo({\r\n        ...scrollCoordinates,\r\n        // Typescript issue: https://github.com/Microsoft/TypeScript/issues/28755\r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const toggleOpen = () => {\r\n    saveScrollCoordinates();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedNav === null && selectedPart === null) {\r\n      setIsOpen(true);\r\n    } else {\r\n      setIsOpen(false);\r\n    }\r\n  }, [selectedPart, selectedNav]);\r\n\r\n  function navTabClickHandler(index: number) {\r\n    setSelectedNav(navTabs[index].items[0].index || 0);\r\n    updateIsMinimizedCustomiserNav(false);\r\n  }\r\n\r\n  const navTabsComponents = navTabs.map((navTab, index) => {\r\n    const isFinishedAllNavItems = navTab.items.every((navItem) =>\r\n      isFinishedNavItem({\r\n        navItem,\r\n        sizing,\r\n        parts,\r\n        texts,\r\n        flags,\r\n        images: graphics,\r\n      }),\r\n    );\r\n\r\n    const hasRequiredItems = navTab.items.some((navItem) => navItem.required);\r\n\r\n    return (\r\n      <div\r\n        key={navTab.name}\r\n        className={`${styles.navTab} ${isFinishedAllNavItems ? styles.finished : ''}`}\r\n        onClick={() => {\r\n          navTabClickHandler(index);\r\n        }}\r\n      >\r\n        {hasRequiredItems && <span className={styles.navTab__requiredIcon}>*</span>}\r\n        {navTab.name}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {\r\n        <div className={`${styles.navTabs} ${editText ? styles.hidden : ''}`}>\r\n          {navTabsComponents}\r\n        </div>\r\n      }\r\n\r\n      <motion.nav\r\n        layout='preserve-aspect'\r\n        transition={{\r\n          type: 'spring',\r\n          stiffness: 700,\r\n          damping: 40,\r\n        }}\r\n        className={rootClassName}\r\n      >\r\n        {/* {!isOpen && (\r\n        <NavMinimize\r\n          isMinimizedCustomiserNav={isMinimizedCustomiserNav}\r\n          onMinimize={() => updateIsMinimizedCustomiserNav(true)}\r\n          onMaximize={() => updateIsMinimizedCustomiserNav(false)}\r\n        />\r\n      )} */}\r\n        <NavHeader\r\n          className={styles.header}\r\n          toggle={() => toggleOpen()}\r\n          isOpen={isOpen}\r\n          onClick={() => {\r\n            if (!editText) {\r\n              updateIsMinimizedCustomiserNav(true);\r\n            }\r\n          }}\r\n          isMinimized={isMinimizedCustomiserNav}\r\n        />\r\n        <div id='NavHeaderAfter' className={styles.headerAfter}></div>\r\n        <Suspense fallback={<div style={{ background: 'white' }}>Loading...</div>}>\r\n          <AnimatePresence initial={false}>\r\n            <motion.div\r\n              id='scrollable'\r\n              className={`${styles.content} ${isOpen && styles.closed}`}\r\n              initial='collapsed'\r\n              animate='open'\r\n              exit='collapsed'\r\n              variants={{\r\n                open: { opacity: 1 },\r\n                collapsed: { opacity: 0 },\r\n              }}\r\n              ref={(el) => {\r\n                scrollableRef.current = el;\r\n              }}\r\n            >\r\n              {isOpen ? null : selectedNav?.type === 'fitting' ? (\r\n                <NavFitting finishedNavs={finishedNavs} setFinishedNavs={setFinishedNavs} />\r\n              ) : selectedNav?.type === 'names' ? (\r\n                <NavText showEditText={showEditText} setShowEditText={setShowEditText} />\r\n              ) : selectedNav?.type === 'flags' ? (\r\n                <NavFlags />\r\n              ) : selectedNav?.type === 'images' ? (\r\n                <NavImages />\r\n              ) : selectedNav?.type === 'size' ? (\r\n                <NavSize />\r\n              ) : selectedNav?.type === 'production' ? (\r\n                <NavProduction />\r\n              ) : selectedNav?.type === 'boxxer logo' ? (\r\n                <NavBoxxerLogo />\r\n              ) : selectedPart ? (\r\n                <NavPart part={selectedPart} />\r\n              ) : null}\r\n            </motion.div>\r\n          </AnimatePresence>\r\n        </Suspense>\r\n        {!isOpen && selectedNav?.hasActions && (\r\n          <div className={styles.actions}>\r\n            {selectedPart && <div id='CustomiserNavMaterial' style={{ background: 'white' }}></div>}\r\n            <div id='CustomiserNavActions'></div>\r\n          </div>\r\n        )}\r\n      </motion.nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomiserNav;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Header_root__cz6kt\",\"total\":\"Header_total__nSueF\",\"total__title\":\"Header_total__title__b6vM7\",\"total__price\":\"Header_total__price__fXB8-\",\"resetBtn\":\"Header_resetBtn__yzIQA\",\"addToBasket\":\"Header_addToBasket__T8GpW\",\"btn\":\"Header_btn__dB+Z6\"};","import Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport { useDesignStore } from '@store/design';\r\nimport styles from './Header.module.scss';\r\nimport Price from '@components/ui/Price';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\nexport interface HeaderProps {\r\n  className?: string;\r\n}\r\n\r\nconst Header = ({ className }: HeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const total = useCustomiserStore((state) => state.total());\r\n  const designComplete = useCustomiserStore((state) => state.designComplete());\r\n  const { setResetCamera, setShow } = useDesignStore();\r\n  const addingToCart = useDesignStore((state) => state.addingToCart);\r\n\r\n  console.log('designComplete', designComplete);\r\n  console.log('addingToCart', addingToCart);\r\n\r\n  const resetCustomerSelections = useCustomiserStore((state) => state.resetCustomerSelections);\r\n\r\n  const saveDesign = () => {\r\n    setResetCamera();\r\n  };\r\n\r\n  const resetPopup = () => {\r\n    if (confirm('Reset everything?')) {\r\n      resetCustomerSelections();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <ContainedButton\r\n        classNames={styles.btn}\r\n        color='white'\r\n        onClick={() => {\r\n          setShow(false);\r\n        }}\r\n      >\r\n        BACK\r\n      </ContainedButton>\r\n      {/* <div id='reset-btn-container' className={styles.resetBtn}>\r\n        <Button onClick={resetPopup}>CLEAR</Button>\r\n      </div> */}\r\n      <div className={styles.total}>\r\n        <span className={styles.total__title}>Currency</span>{' '}\r\n        <Price className={styles.total__price} priceString={total} />\r\n      </div>\r\n      <ContainedButton\r\n        classNames={`${styles.addToBasket} ${styles.btn}`}\r\n        onClick={saveDesign}\r\n        isClickable={!designComplete || addingToCart}\r\n        color='white'\r\n      >\r\n        {addingToCart ? 'Saving' : 'Add to basket'}\r\n      </ContainedButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Customiser_root__+9xV1\",\"nav\":\"Customiser_nav__xnqzP\",\"modelContainer\":\"Customiser_modelContainer__FVL2o\",\"model\":\"Customiser_model__jxaOf\",\"controls\":\"Customiser_controls__Ar93L\",\"background\":\"Customiser_background__qq7nU\",\"loading\":\"Customiser_loading__vNYyO\",\"header\":\"Customiser_header__1SFjA\",\"close\":\"Customiser_close__sH1pv\",\"leftControls\":\"Customiser_leftControls__cuTha\",\"rightControls\":\"Customiser_rightControls__CMwBS\",\"lrControls\":\"Customiser_lrControls__-0Uyv\",\"controlIcon\":\"Customiser_controlIcon__IL-VC\"};","import CustomiserNav from '@components/nav/CustomiserNav';\r\nimport Button from '@components/ui/Button';\r\nimport { useDesignStore } from '@store/design';\r\nimport cn from 'classnames';\r\nimport { lazy, Suspense, useEffect, useRef, useState } from 'react';\r\nimport Header from '../Header';\r\n\r\nconst CustomiserCanvas = lazy(() => import('@components/three/CustomiserCanvas'));\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport styles from './Customiser.module.scss';\r\nimport { Camera } from 'three';\r\nimport { Falsey } from 'lodash';\r\n\r\nimport { HiOutlineTrash } from 'react-icons/hi';\r\nimport { MdZoomInMap, MdZoomOutMap } from 'react-icons/md';\r\n\r\nexport interface CustomiserProps {\r\n  className?: string;\r\n}\r\n\r\nexport type FocusCameraOnPart = (part?: string | Falsey) => void;\r\n\r\nconst Customiser = ({ className }: CustomiserProps) => {\r\n  const { resetCustomerSelections, setCameraFocus, cameraFocus } = useCustomiserStore();\r\n\r\n  const [isZoomedIn, setIsZoomedIn] = useState<boolean>(false);\r\n  const [previousCameraFocus, setPreviousCameraFocus] = useState(cameraFocus);\r\n\r\n  useEffect(() => {\r\n    const regex = /^[-+]?\\d+(\\.\\d+)?$/;\r\n\r\n    // Check if string can be converted to number\r\n    // random number values are default\r\n    if (!regex.test(cameraFocus)) {\r\n      setPreviousCameraFocus(cameraFocus);\r\n      setIsZoomedIn(true);\r\n    }\r\n  }, [cameraFocus]);\r\n\r\n  const cameraRef = useRef<Camera | null>(null);\r\n  const handleCameraRef = (ref: Camera | null) => {\r\n    cameraRef.current = ref;\r\n  };\r\n\r\n  const rootClassName = cn(styles.root, className, {\r\n    // [styles.navOpen]: selectedNav !== null,\r\n  });\r\n\r\n  const resetPopup = () => {\r\n    if (confirm('Reset everything?')) {\r\n      resetCustomerSelections();\r\n    }\r\n  };\r\n\r\n  const zoomHandler = () => {\r\n    if (isZoomedIn) {\r\n      setCameraFocus(Math.random().toString());\r\n      setIsZoomedIn(false);\r\n      return;\r\n    }\r\n    setCameraFocus(previousCameraFocus);\r\n    setIsZoomedIn(true);\r\n  };\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div\r\n        id='popupContainer'\r\n        style={{\r\n          // re-figure out again how to put styled ID in scss\r\n          position: 'absolute',\r\n          zIndex: '201',\r\n        }}\r\n      />\r\n      <CustomiserNav className={styles.nav} />\r\n      <Header className={styles.header} />\r\n      <svg\r\n        className={styles.background}\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 114.383 97.088'\r\n      >\r\n        <defs>\r\n          <clipPath id='a'>\r\n            <path d='M0 0h114.383v97.088H0z' />\r\n          </clipPath>\r\n        </defs>\r\n        <g clipPath='url(#a)' fillRule='evenodd'>\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='M8.567 88.645v-.044c1.487-.24 2.986-.466 4.472-.716a1.278 1.278 0 0 0 .743-1.862 1.019 1.019 0 0 0-.949-.409c-2.928.338-5.845.747-8.785 1.147-.492.069-.709.447-.687 1.262.012 1.216.126 1.481.721 1.375 1.5-.243 3.008-.506 4.484-.753M23.905 77.54c-1.224.072-1.842.39-1.9 2.044a69.405 69.405 0 0 0 .011 5.312c.057 1.481.606 2.112 1.716 1.99q4.444-.488 8.888-1.012a1.851 1.851 0 0 0 1.659-1.975c.057-.853.1-1.709.1-2.562.023-.856.023-1.247 0-2.093-.068-1.6-.755-1.769-2.024-1.7Zm9.982-6.006c2.119 0 3.229 1.3 3.744 3.247a8.461 8.461 0 0 1 .32 2.222 225.099 225.099 0 0 1 0 7.896 8.3 8.3 0 0 1-.869 3.622 3.721 3.721 0 0 1-2.8 2.269c-4.072.553-8.121 1.15-12.182 1.784-1.773.306-3.145-1.253-3.523-3.993a25.755 25.755 0 0 1-.229-3.54c-.011-1.275-.006-2.556 0-3.834s.046-2.562.115-3.834c.091-1.944.606-4.015 1.887-5.128a2.565 2.565 0 0 1 1.533-.709Zm61.427 6.006v-6.006h13.325c1.682-.069 2.768 1.381 3.409 3.771a16.91 16.91 0 0 1 .538 4.281 18.216 18.216 0 0 1-.515 4.3 5.807 5.807 0 0 1-1.945 3.4c-.217.181-.469.34-.652.472.8 1.45 1.611 2.926 2.4 4.443a883.295 883.295 0 0 1 2.505 4.856c-.743-.163-1.453-.331-2.139-.472-1.041-.219-2.1-.381-3.157-.644a1.328 1.328 0 0 1-.732-.643c-.641-1.2-1.285-2.373-1.933-3.55-.633-1.148-1.292-2.3-1.91-3.431-.309-.522-.606-.819-1.041-.862a90.174 90.174 0 0 1-3.74-.481c-.366-.056-.481.116-.481.656.011 1.04.011 2.081.011 3.128v3.172c-1.235-.228-2.7-.472-3.946-.691v-12.17c3.752.156 7.526.293 11.278.4.492.013 1-.006 1.487 0 .56.016.789-.769.881-1.541.091-1.2-.149-2.053-.686-2.234a3.757 3.757 0 0 0-1.19-.16Zm-11.255 0v2.709l9.585.616v4.047l-9.631-.944v2.3l9.631 1.065v5.58c-4.838-.834-8.59-1.4-13.429-2.08v-19.3h13.431v6.006ZM37.072 90.367a232.526 232.526 0 0 1 3.775-5.125 219.554 219.554 0 0 1 3.786-4.809c-1.281-1.453-2.562-2.919-3.832-4.415s-2.439-2.915-3.709-4.484h5.5a1.331 1.331 0 0 1 .881.488c.7.84 1.322 1.559 2.02 2.375s1.407 1.625 2.116 2.431c.709-.84 1.417-1.682 2.127-2.512s1.413-1.643 2.128-2.466a.948.948 0 0 1 .652-.316h5.322c-1.224 1.384-2.475 2.827-3.7 4.237s-2.448 2.853-3.672 4.287c1.3 1.472 2.628 2.933 3.935 4.387s2.619 2.919 3.924 4.409c-1.865-.006-3.741.028-5.6.091a1.194 1.194 0 0 1-.789-.422q-1.116-1.213-2.23-2.434c-.732-.8-1.476-1.625-2.208-2.45-.755.928-1.511 1.855-2.265 2.8s-1.5 1.913-2.253 2.9c-.106.138-.274.327-.423.344-1.818.208-3.66.434-5.479.685m21.618-1.509c1.258-1.422 2.528-2.816 3.786-4.215s2.516-2.809 3.775-4.218q-1.922-2.231-3.832-4.428c-1.273-1.46-2.615-2.993-3.884-4.462h5.412a1.339 1.339 0 0 1 .881.459c.7.8 1.59 1.79 2.282 2.594s1.407 1.637 2.116 2.456c.709-.822 1.422-1.647 2.128-2.481s1.557-1.842 2.268-2.7a.959.959 0 0 1 .64-.34c1.773-.006 3.534 0 5.319.012-1.235 1.516-2.584 3.175-3.812 4.64s-2.459 2.884-3.683 4.293a234.511 234.511 0 0 1 3.935 4.959 262.195 262.195 0 0 1 3.935 5.293 296.137 296.137 0 0 0-5.6-.772 1.472 1.472 0 0 1-.8-.569c-.739-.948-1.48-1.9-2.219-2.822s-1.487-1.831-2.219-2.725q-1.132 1.247-2.253 2.49c-.749.829-1.511 1.652-2.265 2.478-.1.115-.274.26-.412.253a205.452 205.452 0 0 0-5.49-.2m-43.271-6.7a3.858 3.858 0 0 1 1.979 2.993 11.586 11.586 0 0 1-.24 5.3c-.549 1.89-1.6 3-2.962 3.29C9.494 94.797 4.8 95.888.1 97.088a.159.159 0 0 1-.1-.05V81.205c.274-.019.572-.041.881-.066 3.763-.328 7.5-.656 11.255-.981.377-.031.789 0 1.018-.622.32-.9-.034-2.037-.755-2H0V71.53h12.857a3.24 3.24 0 0 1 3.2 1.944 9.3 9.3 0 0 1 .721 4.4 8.384 8.384 0 0 1-1.361 4.277'\r\n          />\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='m75.165 48.1-6.079-9.03v.049c-.057 1.036-.095 2.076-.183 3.112a2.019 2.019 0 0 1-.3.929l-8.448 12.034c-.249.368-.854 1.239-1.255 1.374a.382.382 0 0 1-.448-.158 2.924 2.924 0 0 1-.17-1.252v-.015l.451-9.913a.888.888 0 0 1 .121-.521l6.771-9.393a1.068 1.068 0 0 0 0-1.4l-6.516-9.933a3.453 3.453 0 0 1-.372-1.536l-.564-9.434c-.136-2.082.98-1.647 2.035 0l9.86 15.392 5.074-7.607c.439-.71.756-1.16 1.67-1.2a28.863 28.863 0 0 0 6.026-.866 2.49 2.49 0 0 1 .955-.113.381.381 0 0 1 .292.365 7.753 7.753 0 0 1-1.169 2.293L74.64 33.912a.971.971 0 0 0-.011 1.253l8.1 12.066a7.386 7.386 0 0 1 1.192 2.336.379.379 0 0 1-.247.33 2.314 2.314 0 0 1-1.008-.05 43.691 43.691 0 0 0-6.495-.95c-.5-.024-.775-.421-1.012-.8m-17.2-18.084 2.675 4.223a.378.378 0 0 1-.005.42L57.97 38.64a.386.386 0 0 1-.639 0l-2.729-4a.379.379 0 0 1-.005-.426l2.719-4.206a.386.386 0 0 1 .65 0m-13.64-.628 10.716-16.367c.911-1.366 2.032-2.329 1.921 0l-.453 9.457a3.209 3.209 0 0 1-.565 1.514l-6.217 9.551c-.31.474-.372.717-.048 1.2l6.446 9.577a1.569 1.569 0 0 1 .389.861l.454 9.969v.025a3.345 3.345 0 0 1-.187 1.236.385.385 0 0 1-.494.158 4.869 4.869 0 0 1-1.172-1.361l-9.863-14.918c-.149.21-.3.418-.441.636-1.474 2.327-2.954 4.649-4.408 6.989a1.51 1.51 0 0 1-1.168.806h-.025a40.188 40.188 0 0 0-6.467 1.047 3.664 3.664 0 0 1-1.08.156.385.385 0 0 1-.325-.453 11.67 11.67 0 0 1 1.3-2.279L40.716 34.9a.978.978 0 0 0 0-1.256L32.349 21.23a8.345 8.345 0 0 1-1.185-2.257.382.382 0 0 1 .294-.383 2.706 2.706 0 0 1 .969.1c1.112.258 2.222.524 3.342.747a22.428 22.428 0 0 0 3.334.462c.711.032 1.093.653 1.429 1.19 1 1.6 2.087 3.16 3.146 4.727a3.685 3.685 0 0 1 .542 2.108ZM57.652 0 45.465 18.084a.386.386 0 0 1-.628.017c-1.5-2-2.426-3.151-5.06-3.4a68.259 68.259 0 0 1-11.375-2.346c-3.454-.947-6.874-2.013-10.321-2.979l16.621 24.707a.379.379 0 0 1 0 .426L19.854 57.187c3.235-.656 6.473-1.24 9.736-1.751 3.484-.546 6.978-1.03 10.465-1.553a6.441 6.441 0 0 0 4.394-2.608l.623-.841a.385.385 0 0 1 .633.019L57.652 68.8l11.947-18.351a.386.386 0 0 1 .633-.019l.623.841a6.442 6.442 0 0 0 4.394 2.608c3.488.523 6.982 1.007 10.465 1.553 3.263.511 6.5 1.095 9.736 1.751L80.601 34.51a.378.378 0 0 1 0-.426L97.225 9.376c-3.447.965-6.868 2.031-10.321 2.979A68.266 68.266 0 0 1 75.528 14.7c-2.635.249-3.557 1.4-5.06 3.4a.386.386 0 0 1-.628-.017Z'\r\n          />\r\n        </g>\r\n      </svg>\r\n      <div className={styles.modelContainer}>\r\n        <div id='CustomiserCanvasControls' className={styles.controls}></div>\r\n        <Suspense fallback={<div className={styles.loading}>Loading ...</div>}>\r\n          <CustomiserCanvas className={styles.model} onCameraRef={handleCameraRef} />\r\n        </Suspense>\r\n      </div>\r\n      <div className={`${styles.leftControls} ${styles.lrControls}`}>\r\n        <span className={styles.controlIcon} onClick={resetPopup}>\r\n          <HiOutlineTrash />\r\n        </span>\r\n      </div>\r\n      <div className={`${styles.rightControls} ${styles.lrControls}`}>\r\n        <span className={styles.controlIcon} onClick={zoomHandler}>\r\n          {isZoomedIn ? <MdZoomOutMap /> : <MdZoomInMap />}\r\n        </span>\r\n      </div>\r\n      {/* {selectedNav === null && (\r\n        <Button className={styles.close} onClick={() => setShow(false)}>\r\n          Close\r\n        </Button>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customiser;\r\n"],"names":["_ref","onClick","isSelected","isFinished","classNames","children","buttonClassNames","concat","styles","containedNavButton","selected","finished","_jsx","className","navItemNameDisplay","selectedNav","navItemName","name","toLowerCase","optionModelNameDisplay","_ref2","optionName","modelName","optionModelTitleDisplay","_ref3","titleDisplay","type","textTypesDisplay","_ref4","textType","display","FittingOption","_selectedModels$find","_option$models","option","selectedModels","setSelectedModel","useCustomiserStore","getSelected","find","m","optionId","id","model","_Fragment","motion","div","fittingOption","initial","opacity","animate","exit","fittingButtons","models","map","_m$model","_m$model$data","_m$model3","_m$model3$data","_m$model3$data$attrib","ContainedNavButton","data","fittingButton","_m$model2","attributes","finishedNavs","fittingOptions","state","_state$customProduct","_state$customProduct$","customProduct","options","setCameraFocus","fittingTitle","getFittingOptionByName","fittingOptionName","useEffect","navItem","length","_jsxs","root","defaultMessage","getSrcSets","formats","fff","Object","entries","f","width","url","filter","format","sort","a","b","reduce","acc","current","index","array","getSrcSet","_image$attributes4","image","sizes","rootClassName","cn","relativeHeight","useMemo","_image$attributes","_image$attributes2","height","style","srcSet","_image$attributes3","src","NavFlagsSelect","_editFlag$flag","editFlag","flags","addFlag","updateFlag","editFlagId","flag","_f$attributes","editClass","edit","flagSelected","key","decalFreeze","decalPosition","decalOrientation","Image","flagImgContainer","usePortalRef","loaded","setLoaded","useState","portalRef","useRef","document","getElementById","isClickable","isHidden","color","widthType","containedButton","clickable","hidden","onClickHandler","disabled","onApply","hasCancel","onNext","ReactDOM","ContainedButton","onEdit","onDelete","isVisible","toggleVisibility","isVisibleEye","undefined","event","stopPropagation","FaEye","FaEyeSlash","xmlns","viewBox","d","NavFlagsFlag","_flag$flag","_flag$flag$attributes","_flag$flag2","_flag$flag2$attribute","setShowSelector","setSelectModel","deleteFlag","flagItem","flagItemImage","NavOptionEdit","editItem","deleteItem","_prices$length","scale","rotation","prices","onScale","onRotate","hasImage","scaleAdjust","rotateAdjust","currentScale","setCurrentScale","currentRotate","setCurrentRotate","rootRotateClassName","marks","range","start","stop","step","Array","from","value","p","i","markKey","Number","toFixed","subtractScale","cur","FaMinus","addScale","FaPlus","rotateCounterClockwise","FaRotateLeft","rotateClockwise","FaRotateRight","onImgClick","NavDecalAdjust","NavFlags","_editFlag$flag$attrib","g","showSelector","page","setPage","hasNextPage","flagQuery","useGetFlagsQuery","graphQLClient","pagination","limit","select","_data$flags","_data$graphicPrices","graphicPrices","ImageDecalPreview","decalScale","decalRotation","setScale","price","_price$attributes","_price$attributes2","priceValues","size","basePrice","quantity","startTransition","NavEditButtons","applyFlag","nextPageHandler","customiserFlags","addBtnContainer","IoAddOutline","itemsTitle","toggle","isOpen","isMinimized","setSelectedNav","navTabs","texts","editText","navTabItemCount","getNavTabItemCount","navItemIndex","navItemArrayIndex","getNavItemArrayIndex","isFirstNavItem","isLastNavItem","isLastNavItemChecker","closeHandler","MdKeyboardBackspace","prevHandler","FaAngleLeft","required","nextHandler","FaAngleRight","NavImagesImage","_graphic$graphic","_graphic$graphic$attr","_graphic$graphic$attr2","graphic","updateGraphic","deleteGraphic","graphicItem","graphicItemImage","testUploadImageResponse","__typename","createGraphic","Math","random","toString","ext","mime","thumbnail","NavImagesUpload","setGraphic","saving","setSaving","imgToDataUrl","setImgToDataUrl","mutate","createGraphicMutation","useCreateGraphicMutation","onSuccess","_data$createGraphic","onError","_data$createGraphic3","_data$createGraphic2","_data$createGraphic2$","_data$createGraphic2$2","_data$createGraphic2$3","_data$createGraphic2$4","attrObjRef","fileUploadMutate","useUploadMultipleFilesMutation","fileIDs","multipleUpload","_f$data","customer","onDrop","useCallback","acceptedFiles","files","file","reader","FileReader","onload","_event$target","img","dataURL","target","result","readAsDataURL","getRootProps","getInputProps","isDragActive","useDropzone","accept","maxFiles","multiple","dropZone","NavImagesSelect","_currentGraphic$attri","_currentGraphic$attri2","editGraphic","currentGraphic","setCurrentGraphic","addGraphic","graphics","graphicSelected","NavImages","imageQuery","useGetImagesQuery","applyImage","addImage","uniqueMaterialTypes","uniqBy","initialState","colourGroups","materialTypes","materials","createMaterialGroup","set","get","filteredMaterials","colourGroup","selectedColourGroup","_m$attributes","_m$attributes$colourG","resetMaterialGroup","setMaterials","materialType","produce","flatMap","_d$attributes","_d$attributes$colourG","_m$attributes2","_m$attributes2$colour","_state$selectedColour","_m$attributes3","_m$attributes3$type","selectedMaterialType","uniqueMaterials","setColourGroup","_m$attributes4","_m$attributes4$colour","_state$selectedColour2","_m$attributes5","_m$attributes5$type","setMaterialType","Provider","useStore","useMaterialGroupStore","createContext","createStore","create","devtools","Material","_material$attributes","_material$attributes$","_material$attributes2","_mapImage$image","_mapImage$image$data","_mapImage$image$data$","_mapImage$image2","_mapImage$image2$data","_mapImage$image2$data2","material","onMaterialSelected","selectedMaterialId","popupPortalRef","showPopup","setShowPopup","mapImage","images","mapType","onLongPressBinder","useLongPress","handleContextMenu","preventDefault","onContextMenu","createPortal","popup","alt","materialId","async","loadImage","Promise","resolve","reject","crossOrigin","onerror","crystal","testCrystalMaterial","crystalPromise","crystalImage","setCrystalImage","then","MaterialType","hideColorGroups","hideMaterialTitle","getFilteredMaterials","filteredMaterialTypes","some","acm","mt","_m$attributes$type","_m$attributes$type$da","title","materialTypeScroll","withCrystals","_mt$attributes","materialType__title","_m$attributes2$type","_m$attributes2$type$d","MaterialCrystal","SelectedMaterialInfo","_selectedMaterial$att","_selectedMaterial$att6","selectedPart","parts","selectedMaterial","_parts$find","part","_selectedMaterial$att2","_selectedMaterial$att3","_selectedMaterial$att4","_selectedMaterial$att5","MaterialGroupLoader","_materialGroup$attrib","materialGroup","typeIds","t","useGetMaterialsQuery","filters","in","pageSize","_data$materials","quickInfo","group","_group$attributes$col","_group$attributes","background","colour","borderRadius","_group$attributes2","outline","fill","props","isOn","togglePillButton","on","CrystalSelect","crystals","onCrystalSelected","c","_c$attributes","_c$attributes$image$d","_c$attributes$image$d2","imgSrc","isSelectedCrystal","crystalsQuery","useGetCrystalsQuery","_data$crystals","_part$materialGroup","_currentPart$material","_currentPart$material2","_currentPart$material3","_currentPart$material4","_currentPart$material5","_currentPart$material6","setPart","removePart","currentPart","showOptional","setShowOptional","optional","buttonContainer","TogglePillButton","optionalOnClick","show","IoMdAdd","Suspense","fallback","MaterialGroup","CrystalGroup","placeholder","getSizeVariation","unit","weight","variations","v","_v$sku","sku","endsWith","setSizing","_state$sizing","sizing","_state$sizing2","variation","_state$sizing3","setHeightUnit","setWeightUnit","grey","sectionTitle","FormInput","onChange","e","input","unitToggle","toggleButton","toggleButtonSelected","UNIT","HEIGHT","CM","INCH","WEIGHT","KG","LB","FormSelect","selectedVariation","priceString","formattedPrice","_editText$crystalBack","_selectedName$attribu9","_selectedName$attribu10","_selectedName$attribu11","_selectedName$attribu12","setIsPickingCrystal","selectedName","crystalBackground","setCrystals","crystalPrice","puff","setPuff","puffPrice","hasPuffOption","NAME_TYPE_LUXURY_ID","updateText","addCrystals","add","_selectedName$attribu","_selectedName$attribu2","_selectedName$attribu3","_selectedName$attribu4","shopifyVariantId","addPuff","_selectedName$attribu5","_selectedName$attribu6","_selectedName$attribu7","_selectedName$attribu8","finishSelections","finishSelection","pricing","Price","Crystals","_editText$material","_selectedName$attribu14","_selectedName$attribu15","_editText$material2","_editText$material2$a","_editText$material2$a2","_editText$material3","_editText$material3$a","_editText$material3$a2","prevSelectedName","names","useGetNamesQuery","_data$names","_selectedName$attribu13","letterPrice","nameType","outlinePrice","promptMessage","categoryDisplayName","n","_n$attributes","_n$attributes2","_n$attributes2$basePr","_n$attributes3","_n$attributes3$letter","setSelectedName","_editText$outline","_editText$outline2","_editText$outline2$at","_editText$outline2$at2","_editText$outline3","_editText$outline3$at","_editText$outline3$at2","setIsPickingOutline","showOutline","setShowOutline","updateOutline","outlineGroup","fonts","arial","oswald","college","ballantines","_fonts$find","text","setText","font","setFont","addText","fontSelection","_font","onFontChange","deleteText","textItem","textItemText","onAddTextClicked","onTextSelected","navTextsSelection","NavTextText","getMaterialUrl","_material$attributes$2","_material$attributes$3","_material$attributes$4","imgMap","large","normalMapGenerator","NormalMapGenerator","instance","imgToNormalMap","hasPuff","blur","blurAmount","generateFromImage","strength","level","CanvasText","constructor","toNormalMap","patternType","canvas","ctx","outlineCanvas","outlineCtx","normalMapTextureCanvas","normalMapTextureCtx","normalMapCanvas","normalMapCtx","normalMapOutlineTextureCanvas","normalMapOutlineTextureCtx","normalMapOutlineCanvas","normalMapOutlineCtx2","crystalBgPatternCanvas","crystalBgPatternCtx","canvasHeight","canvasWidth","fontSize","outlineWidth","this","createElement","getContext","clear","_this$ctx","_this$outlineCtx","clearRect","drawImg","drawImage","showTestCanvas","innerHTML","maskImage","globalCompositeOperation","drawPreviewText","textAlign","fillText","drawPreviewOutlineText","lineWidth","strokeText","drawPreviewOutlineOnlyText","fillStyle","drawNormalMap","normalMapPatternImg","pattern","createPattern","rect","normalMap","drawOutlineNormalMap","drawCrystalBg","crystalBgImg","crystalBgPatternImg","globalAlpha","printTextMapToStrokeMap","previewText","previewImg","toDataURL","mergeCanvas","getOutlineCanvas","getNormalMapTextureCanvas","getNormalMapOutlineCanvas","_editText$selectedNam","mainTextInputRef","previewImgRef","fontFamily","setFontFamily","isVisiblePreview","setIsVisiblePreview","hasCrystals","isLuxury","getPatternType","isMinimizedCustomiserNav","materialImgMemo","outlineImgMemo","fabricPatternImgMemo","crystalNormalMapImgMemo","crystalBgImgMemo","_material$attributes3","_material$attributes4","getCrystalUrl","crystalBgPatternImgMemo","previewImgDom","canvasText","preview","CanvasTexture","fontUrl","FontFace","load","loadFonts","outlineImg","embroideryPattern","crystalNormalMap","patternImg","position","zIndex","textPreview","textPreview__imgContainer","ref","el","stepsNavButtons","stepsNavButtons__next","visible","FaArrowRightLong","stepsNavButtons__cancel","isClickableNext","isClickablePrev","isVisibleNext","isVisiblePrev","onClickNext","onClickPrev","onClickCancel","onClickSave","popupContainerRef","CancelStepButton","NextStepButton","ApplyButton","NavTextInput","forwardRef","showEditText","shouldApplyEdit","inputValue","inputStyles","textInput","createText","textInputContainer","doneHandler","doneBtn","displayName","notifName","setShowNotification","cb","isChecked","setIsChecked","handleDismiss","localStorage","setItem","checked","setShowEditText","setStep","updateIsMinimizedCustomiserNav","console","log","isPickingOutline","isPickingCrystal","navHeaderNavRef","noOutlineSelected","noCrystalSelected","hasFinishedStep1","hasFinishedStep2","finishedSteps","navCategoryNames","maxStep","setRotation","applyText","hasApplied","shouldShowConfirmCancelText","getItem","showConfirmCancelPopup","setShowConfirmCancelPopup","shouldShowInfoDisplay","setShouldShowInfoDisplay","cancelText","handleNext","alert","handlePrevious","navTextEdit","NavTextPreview","CategoryDisplay","NavTextSelect","NavTextNameTypes","NavTextOutline","NavTextFinish","NavTextNavSteps","cancelTextHandler","InfoDisplay","maxWidth","DontShowAgain","navHeaderStyles","NavTextsSelection","NavProduction","clickHandler","QuickInfo","RiQuestionLine","NavBoxxerLogo","setIsOpen","scrollCoordinates","setScrollCoordinates","left","top","setFinishedNavs","scrollableRef","minimized","hasActions","isFullscreen","scrollTo","behavior","toggleOpen","scrollLeft","scrollTop","navTabsComponents","navTab","isFinishedAllNavItems","items","every","isFinishedNavItem","hasRequiredItems","navTabClickHandler","navTab__requiredIcon","nav","layout","transition","stiffness","damping","NavHeader","header","headerAfter","AnimatePresence","content","closed","variants","open","collapsed","NavFitting","NavText","NavSize","NavPart","actions","total","designComplete","setResetCamera","setShow","useDesignStore","addingToCart","resetCustomerSelections","saveDesign","CustomiserCanvas","lazy","cameraFocus","isZoomedIn","setIsZoomedIn","previousCameraFocus","setPreviousCameraFocus","test","cameraRef","CustomiserNav","Header","clipPath","fillRule","onCameraRef","resetPopup","confirm","HiOutlineTrash","zoomHandler","MdZoomOutMap","MdZoomInMap"],"sourceRoot":""}