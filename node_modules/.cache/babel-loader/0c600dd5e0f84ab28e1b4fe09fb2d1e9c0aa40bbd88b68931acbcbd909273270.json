{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reian\\\\Desktop\\\\Work\\\\Freelance\\\\Boxxer World\\\\boxxerworld-shopify-frontend\\\\customiser\\\\src\\\\components\\\\nav\\\\CustomiserNav\\\\CustomiserNav.tsx\",\n  _s = $RefreshSig$();\nimport { useCustomiserStore } from '@store/customiser';\nimport cn from 'classnames';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\nimport NavFitting from '../NavFitting';\nimport NavFlags from '../NavFlags';\nimport NavHeader from '../NavHeader';\nimport NavImages from '../NavImages';\nimport NavPart from '../NavPart';\nimport NavSize from '../NavSize';\nimport NavText from '../NavText';\nimport styles from './CustomiserNav.module.scss';\nimport NavHeaderScroll from '../NavHeader/NavHeaderScroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomiserNav = ({\n  className,\n  focusCameraOnPart\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [scrollCoordinates, setScrollCoordinates] = useState({\n    left: 0,\n    top: 0\n  });\n  const [showSelector, setShowSelector] = useState(false);\n  const {\n    selectedPart,\n    selectedNav,\n    texts,\n    isMinimizedCustomiserNav,\n    updateIsMinimizedCustomiserNav\n  } = useCustomiserStore();\n  const scrollableRef = useRef(null);\n  const editText = useMemo(() => texts === null || texts === void 0 ? void 0 : texts.find(g => g.edit), [texts]);\n  const isFullscreen = useMemo(() => (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.name) === 'Text' && editText, [selectedNav, editText]);\n  const rootClassName = cn(styles.root, {\n    [styles.open]: isOpen,\n    [styles.minimized]: isMinimizedCustomiserNav,\n    // [styles.hasActions]: selectedNav?.hasActions,\n    [styles.isEdittingText]: showSelector,\n    [styles.isFullscreen]: false\n  }, className);\n  const saveScrollCoordinates = () => {\n    if (isOpen && scrollableRef.current) {\n      setScrollCoordinates({\n        left: scrollableRef.current.scrollLeft,\n        top: scrollableRef.current.scrollTop\n      });\n    }\n  };\n  useEffect(() => {\n    if (isOpen && scrollableRef.current) {\n      scrollableRef.current.scrollTo({\n        ...scrollCoordinates,\n        // Typescript issue: https://github.com/Microsoft/TypeScript/issues/28755\n        // eslint-disable-next-line\n        // @ts-ignore\n        behavior: 'instant'\n      });\n    }\n  }, [isOpen]);\n  const toggleOpen = () => {\n    saveScrollCoordinates();\n    setIsOpen(!isOpen);\n  };\n  useEffect(() => {\n    if (selectedNav === null && selectedPart === null) {\n      setIsOpen(true);\n    } else {\n      setIsOpen(false);\n      updateIsMinimizedCustomiserNav(false);\n    }\n  }, [selectedPart, selectedNav]);\n  return /*#__PURE__*/_jsxDEV(motion.nav, {\n    layout: \"preserve-aspect\",\n    transition: {\n      type: 'spring',\n      stiffness: 700,\n      damping: 40\n    },\n    className: rootClassName,\n    children: [/*#__PURE__*/_jsxDEV(NavHeader, {\n      className: styles.header,\n      toggle: () => toggleOpen(),\n      isOpen: isOpen,\n      onClick: () => {\n        updateIsMinimizedCustomiserNav(!isMinimizedCustomiserNav);\n      },\n      isMinimized: isMinimizedCustomiserNav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavHeaderScroll, {\n      styles: styles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"NavHeaderAfter\",\n      className: styles.headerAfter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        initial: false,\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          id: \"scrollable\",\n          className: `${styles.content} ${isOpen && styles.closed}`,\n          initial: \"collapsed\",\n          animate: \"open\",\n          exit: \"collapsed\",\n          variants: {\n            open: {\n              opacity: 1\n            },\n            collapsed: {\n              opacity: 0\n            }\n          },\n          ref: el => {\n            scrollableRef.current = el;\n          },\n          children: isOpen ? null : (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.type) === 'fitting' ? /*#__PURE__*/_jsxDEV(NavFitting, {\n            focusCameraOnPart: focusCameraOnPart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this) : (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.type) === 'names' ? /*#__PURE__*/_jsxDEV(NavText, {\n            showSelector: showSelector,\n            setShowSelector: setShowSelector\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this) : (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.type) === 'flags' ? /*#__PURE__*/_jsxDEV(NavFlags, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this) : (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.type) === 'images' ? /*#__PURE__*/_jsxDEV(NavImages, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this) : (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.type) === 'size' ? /*#__PURE__*/_jsxDEV(NavSize, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this) : selectedPart ? /*#__PURE__*/_jsxDEV(NavPart, {\n            part: selectedPart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), !isOpen && (selectedNav === null || selectedNav === void 0 ? void 0 : selectedNav.hasActions) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [selectedPart && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"CustomiserNavMaterial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"CustomiserNavActions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomiserNav, \"K50lYOMrBzp5YUmMjhdp4mc9Ebc=\", false, function () {\n  return [useCustomiserStore];\n});\n_c = CustomiserNav;\nexport default CustomiserNav;\nvar _c;\n$RefreshReg$(_c, \"CustomiserNav\");","map":{"version":3,"names":["useCustomiserStore","cn","AnimatePresence","motion","Suspense","useEffect","useMemo","useRef","useState","NavFitting","NavFlags","NavHeader","NavImages","NavPart","NavSize","NavText","styles","NavHeaderScroll","jsxDEV","_jsxDEV","CustomiserNav","className","focusCameraOnPart","_s","isOpen","setIsOpen","scrollCoordinates","setScrollCoordinates","left","top","showSelector","setShowSelector","selectedPart","selectedNav","texts","isMinimizedCustomiserNav","updateIsMinimizedCustomiserNav","scrollableRef","editText","find","g","edit","isFullscreen","name","rootClassName","root","open","minimized","isEdittingText","saveScrollCoordinates","current","scrollLeft","scrollTop","scrollTo","behavior","toggleOpen","nav","layout","transition","type","stiffness","damping","children","header","toggle","onClick","isMinimized","fileName","_jsxFileName","lineNumber","columnNumber","id","headerAfter","fallback","initial","div","content","closed","animate","exit","variants","opacity","collapsed","ref","el","part","hasActions","actions","_c","$RefreshReg$"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/CustomiserNav/CustomiserNav.tsx"],"sourcesContent":["import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavFitting from '../NavFitting';\r\nimport NavFlags from '../NavFlags';\r\nimport NavHeader from '../NavHeader';\r\nimport NavImages from '../NavImages';\r\nimport NavOptions from '../NavOptions';\r\nimport NavPart from '../NavPart';\r\nimport NavMinimize from '../NavMinimize';\r\nimport NavSize from '../NavSize';\r\nimport NavText from '../NavText';\r\n\r\nimport styles from './CustomiserNav.module.scss';\r\nimport { FocusCameraOnPart } from '@components/layout/Customiser/Customiser';\r\nimport NavHeaderScroll from '../NavHeader/NavHeaderScroll';\r\n\r\nexport interface CustomiserNavProps {\r\n  className?: string;\r\n  focusCameraOnPart?: FocusCameraOnPart;\r\n}\r\n\r\nconst CustomiserNav = ({ className, focusCameraOnPart }: CustomiserNavProps) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [scrollCoordinates, setScrollCoordinates] = useState({ left: 0, top: 0 });\r\n  const [showSelector, setShowSelector] = useState(false);\r\n\r\n  const {\r\n    selectedPart,\r\n    selectedNav,\r\n    texts,\r\n    isMinimizedCustomiserNav,\r\n    updateIsMinimizedCustomiserNav,\r\n  } = useCustomiserStore();\r\n\r\n  const scrollableRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const isFullscreen = useMemo(\r\n    () => selectedNav?.name === 'Text' && editText,\r\n    [selectedNav, editText],\r\n  );\r\n\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      [styles.open]: isOpen,\r\n      [styles.minimized]: isMinimizedCustomiserNav,\r\n      // [styles.hasActions]: selectedNav?.hasActions,\r\n      [styles.isEdittingText]: showSelector,\r\n      [styles.isFullscreen]: false,\r\n    },\r\n    className,\r\n  );\r\n\r\n  const saveScrollCoordinates = () => {\r\n    if (isOpen && scrollableRef.current) {\r\n      setScrollCoordinates({\r\n        left: scrollableRef.current.scrollLeft,\r\n        top: scrollableRef.current.scrollTop,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && scrollableRef.current) {\r\n      scrollableRef.current.scrollTo({\r\n        ...scrollCoordinates,\r\n        // Typescript issue: https://github.com/Microsoft/TypeScript/issues/28755\r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const toggleOpen = () => {\r\n    saveScrollCoordinates();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedNav === null && selectedPart === null) {\r\n      setIsOpen(true);\r\n    } else {\r\n      setIsOpen(false);\r\n      updateIsMinimizedCustomiserNav(false);\r\n    }\r\n  }, [selectedPart, selectedNav]);\r\n\r\n  return (\r\n    <motion.nav\r\n      layout='preserve-aspect'\r\n      transition={{\r\n        type: 'spring',\r\n        stiffness: 700,\r\n        damping: 40,\r\n      }}\r\n      className={rootClassName}\r\n    >\r\n      {/* {!isOpen && (\r\n        <NavMinimize\r\n          isMinimizedCustomiserNav={isMinimizedCustomiserNav}\r\n          onMinimize={() => updateIsMinimizedCustomiserNav(true)}\r\n          onMaximize={() => updateIsMinimizedCustomiserNav(false)}\r\n        />\r\n      )} */}\r\n      <NavHeader\r\n        className={styles.header}\r\n        toggle={() => toggleOpen()}\r\n        isOpen={isOpen}\r\n        onClick={() => {\r\n          updateIsMinimizedCustomiserNav(!isMinimizedCustomiserNav);\r\n        }}\r\n        isMinimized={isMinimizedCustomiserNav}\r\n      />\r\n      {<NavHeaderScroll styles={styles} />}\r\n      <div id='NavHeaderAfter' className={styles.headerAfter}></div>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <AnimatePresence initial={false}>\r\n          <motion.div\r\n            id='scrollable'\r\n            className={`${styles.content} ${isOpen && styles.closed}`}\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n              open: { opacity: 1 },\r\n              collapsed: { opacity: 0 },\r\n            }}\r\n            ref={(el) => {\r\n              scrollableRef.current = el;\r\n            }}\r\n          >\r\n            {isOpen ? null : selectedNav?.type === 'fitting' ? (\r\n              <NavFitting focusCameraOnPart={focusCameraOnPart} />\r\n            ) : selectedNav?.type === 'names' ? (\r\n              <NavText showSelector={showSelector} setShowSelector={setShowSelector} />\r\n            ) : selectedNav?.type === 'flags' ? (\r\n              <NavFlags />\r\n            ) : selectedNav?.type === 'images' ? (\r\n              <NavImages />\r\n            ) : selectedNav?.type === 'size' ? (\r\n              <NavSize />\r\n            ) : selectedPart ? (\r\n              <NavPart part={selectedPart} />\r\n            ) : null}\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </Suspense>\r\n      {!isOpen && selectedNav?.hasActions && (\r\n        <div className={styles.actions}>\r\n          {selectedPart && <div id='CustomiserNavMaterial'></div>}\r\n          <div id='CustomiserNavActions'></div>\r\n        </div>\r\n      )}\r\n    </motion.nav>\r\n  );\r\n};\r\n\r\nexport default CustomiserNav;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}