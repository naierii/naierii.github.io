{"ast":null,"code":"// eslint-disable-next-line\n// @ts-ignore\nimport{NormalMapGenerator}from'normalmap-online';export function getMaterialUrl(material){var _material$attributes,_material$attributes$,_material$attributes$2,_material$attributes$3,_material$attributes$4;return material===null||material===void 0?void 0:(_material$attributes=material.attributes)===null||_material$attributes===void 0?void 0:(_material$attributes$=_material$attributes.images)===null||_material$attributes$===void 0?void 0:(_material$attributes$2=_material$attributes$.find(imgMap=>(imgMap===null||imgMap===void 0?void 0:imgMap.mapType)==='map'))===null||_material$attributes$2===void 0?void 0:(_material$attributes$3=_material$attributes$2.image.data)===null||_material$attributes$3===void 0?void 0:(_material$attributes$4=_material$attributes$3.attributes)===null||_material$attributes$4===void 0?void 0:_material$attributes$4.formats.large.url;}// TODO - Relocate this\nconst normalMapGenerator=NormalMapGenerator.instance();async function imgToNormalMap(_ref){let{img,hasPuff,blur}=_ref;const blurAmount=hasPuff?blur||7:1;return normalMapGenerator.generateFromImage(img,{strength:0.5,blur:blurAmount,level:1});}export class CanvasText{constructor(_ref2){let{hasPuff,toNormalMap,text,patternType}=_ref2;this.canvas=void 0;this.ctx=void 0;this.outlineCanvas=void 0;this.outlineCtx=void 0;this.normalMapTextureCanvas=void 0;this.normalMapTextureCtx=void 0;this.normalMapCanvas=void 0;this.normalMapCtx=void 0;this.normalMapOutlineTextureCanvas=void 0;this.normalMapOutlineTextureCtx=void 0;this.normalMapOutlineCanvas=void 0;this.normalMapOutlineCtx2=void 0;this.crystalBgPatternCanvas=void 0;this.crystalBgPatternCtx=void 0;this.hasPuff=void 0;this.toNormalMap=void 0;this.patternType=void 0;this.text=void 0;this.canvasHeight=void 0;this.canvasWidth=void 0;this.fontSize=void 0;this.outlineWidth=void 0;this.hasPuff=hasPuff;this.toNormalMap=toNormalMap;this.patternType=patternType;this.text=text;this.fontSize=360;this.canvasHeight=400;this.canvasWidth=3200;this.outlineWidth=20;this.canvas=document.createElement('canvas');this.canvas.height=this.canvasHeight;this.canvas.width=this.canvasWidth;this.ctx=this.canvas.getContext('2d');this.outlineCanvas=document.createElement('canvas');this.outlineCanvas.height=this.canvasHeight;this.outlineCanvas.width=this.canvasWidth;this.outlineCtx=this.outlineCanvas.getContext('2d');// Normal map section\nthis.normalMapTextureCanvas=document.createElement('canvas');this.normalMapTextureCanvas.height=this.canvasHeight;this.normalMapTextureCanvas.width=this.canvasWidth;this.normalMapTextureCtx=this.normalMapTextureCanvas.getContext('2d');this.normalMapCanvas=document.createElement('canvas');this.normalMapCanvas.height=this.canvasHeight;this.normalMapCanvas.width=this.canvasWidth;this.normalMapCtx=this.normalMapCanvas.getContext('2d');this.normalMapOutlineTextureCanvas=document.createElement('canvas');this.normalMapOutlineTextureCanvas.height=this.canvasHeight;this.normalMapOutlineTextureCanvas.width=this.canvasWidth;this.normalMapOutlineTextureCtx=this.normalMapOutlineTextureCanvas.getContext('2d');this.normalMapOutlineCanvas=document.createElement('canvas');this.normalMapOutlineCanvas.height=this.canvasHeight;this.normalMapOutlineCanvas.width=this.canvasWidth;this.normalMapOutlineCtx2=this.normalMapOutlineCanvas.getContext('2d');// TODO - make a function for setting canvas height and ctx instead\nthis.crystalBgPatternCanvas=document.createElement('canvas');this.crystalBgPatternCanvas.height=this.canvasHeight;this.crystalBgPatternCanvas.width=this.canvasWidth;this.crystalBgPatternCtx=this.crystalBgPatternCanvas.getContext('2d');}clear(){var _this$ctx,_this$outlineCtx;(_this$ctx=this.ctx)===null||_this$ctx===void 0?void 0:_this$ctx.clearRect(0,0,this.canvas.width,this.canvas.height);(_this$outlineCtx=this.outlineCtx)===null||_this$outlineCtx===void 0?void 0:_this$outlineCtx.clearRect(0,0,this.canvas.width,this.canvas.height);}async drawImg(ctx,src){ctx.drawImage(src,0,0,this.canvas.width,this.canvas.height);}showTestCanvas(canvas){const testPreviewDom=document.getElementById('testPreview');// TEST ONLY, TO BE REMOVED\ntestPreviewDom.innerHTML='';// TEST ONLY, TO BE REMOVED\n// testPreviewDom?.appendChild(canvas); // TEST ONLY, TO BE REMOVED\n// testPreviewDom?.appendChild(this.normalMapCanvas); // TEST ONLY, TO BE REMOVED\n// testPreviewDom?.appendChild(this.normalMapOutlineTextureCanvas); // TEST ONLY, TO BE REMOVED\n// testPreviewDom?.appendChild(this.normalMapOutlineCanvas); // TEST ONLY, TO BE REMOVED\n// testPreviewDom?.appendChild(this.crystalBgPatternCanvas); // TEST ONLY, TO BE REMOVED\n// testPreviewDom?.appendChild(this.outlineCanvas); // TEST ONLY, TO BE REMOVED\n}async maskImage(ctx,img){ctx.globalCompositeOperation='source-in';await this.drawImg(ctx,img);ctx.globalCompositeOperation='source-over';// reset to default\n}drawPreviewText(ctx){if(!this.text)return;ctx.font=\"\".concat(this.fontSize,\"px testFont\");ctx.textAlign='center';ctx.fillText(this.text,this.canvas.width/2,this.canvas.height/2+15+this.fontSize/4);}drawPreviewOutlineText(){if(!this.text)return;this.outlineCtx.font=\"\".concat(this.fontSize,\"px testFont\");this.outlineCtx.textAlign='center';this.outlineCtx.lineWidth=this.outlineWidth;this.outlineCtx.strokeText(this.text,this.canvas.width/2,this.canvas.height/2+15+this.fontSize/4);}drawPreviewOutlineOnlyText(ctx){if(!this.text)return;ctx.font=\"\".concat(this.fontSize,\"px testFont\");ctx.textAlign='center';ctx.lineWidth=30;ctx.fillStyle='green';ctx.strokeText(this.text,this.canvas.width/2,this.canvas.height/2+15+this.fontSize/4);ctx.globalCompositeOperation='destination-out';ctx.fillText(this.text,this.canvas.width/2,this.canvas.height/2+15+this.fontSize/4);ctx.globalCompositeOperation='source-over';// reset to default\n}async drawNormalMap(normalMapPatternImg){this.drawPreviewText(this.normalMapTextureCtx);if(normalMapPatternImg){const pattern=this.normalMapTextureCtx.createPattern(normalMapPatternImg,'repeat');if(!pattern)return;this.normalMapTextureCtx.globalCompositeOperation='source-in';this.normalMapTextureCtx.rect(0,0,this.canvasWidth,this.canvasHeight);this.normalMapTextureCtx.fillStyle=pattern;this.normalMapTextureCtx.fill();this.normalMapTextureCtx.globalCompositeOperation='source-over';}console.log('toNormalMap',this.toNormalMap);const normalMap=this.toNormalMap?await imgToNormalMap({img:this.normalMapTextureCanvas,hasPuff:this.hasPuff}):this.normalMapTextureCanvas;this.normalMapCtx.drawImage(normalMap,0,0);}async drawOutlineNormalMap(normalMapPatternImg){this.drawPreviewOutlineOnlyText(this.normalMapOutlineTextureCtx);if(normalMapPatternImg){const pattern=this.normalMapOutlineTextureCtx.createPattern(normalMapPatternImg,'repeat');if(!pattern)return;this.normalMapOutlineTextureCtx.globalCompositeOperation='source-in';this.normalMapOutlineTextureCtx.rect(0,0,this.canvasWidth,this.canvasHeight);if(this.patternType!=='crystals'){this.normalMapOutlineTextureCtx.fillStyle=pattern;}this.normalMapOutlineTextureCtx.fill();this.normalMapOutlineTextureCtx.globalCompositeOperation='source-over';}const normalMap=this.toNormalMap||this.patternType==='crystals'?await imgToNormalMap({img:this.normalMapOutlineTextureCanvas,hasPuff:this.patternType==='crystals'?true:this.hasPuff,blur:4}):this.normalMapOutlineTextureCanvas;this.normalMapOutlineCtx2.drawImage(normalMap,0,0);}async drawCrystalBg(crystalBgImg,crystalBgPatternImg){const pattern=this.crystalBgPatternCtx.createPattern(crystalBgPatternImg,'repeat');if(!pattern)return;this.crystalBgPatternCtx.rect(0,0,this.canvasWidth,this.canvasHeight);this.crystalBgPatternCtx.fillStyle=pattern;this.crystalBgPatternCtx.fill();this.crystalBgPatternCtx.globalCompositeOperation='source-in';this.crystalBgPatternCtx.globalAlpha=0.9;this.crystalBgPatternCtx.drawImage(this.canvas,0,0,this.canvasWidth,this.canvasHeight);this.crystalBgPatternCtx.drawImage(crystalBgImg,0,0,this.canvasWidth,this.canvasHeight);this.crystalBgPatternCtx.globalCompositeOperation='source-over';this.outlineCtx.drawImage(this.crystalBgPatternCanvas,0,0);}printTextMapToStrokeMap(){this.normalMapCtx.globalCompositeOperation='destination-in';this.normalMapCtx.drawImage(this.normalMapTextureCanvas,0,0);this.normalMapCtx.globalCompositeOperation='source-over';// reset to default\nthis.normalMapOutlineCtx2.drawImage(this.normalMapCanvas,0,0);}async previewText(_ref3){let{material,outline,previewImg,normalMapPatternImg,crystalBgPatternImg,crystalBgImg}=_ref3;if(!this.text)return;this.clear();this.showTestCanvas(this.normalMapTextureCanvas);await this.drawNormalMap(normalMapPatternImg);await this.drawOutlineNormalMap(normalMapPatternImg);this.printTextMapToStrokeMap();if(outline){this.drawPreviewOutlineText();await this.maskImage(this.outlineCtx,outline);}this.drawPreviewText(this.ctx);if(material){await this.maskImage(this.ctx,material);}this.outlineCtx.drawImage(this.canvas,0,0);if(previewImg)previewImg.src=this.outlineCanvas.toDataURL();if(crystalBgImg&&crystalBgPatternImg){this.drawCrystalBg(crystalBgImg,crystalBgPatternImg);}}mergeCanvas(){this.outlineCtx.drawImage(this.canvas,0,0);}getOutlineCanvas(){return this.outlineCanvas;}getNormalMapTextureCanvas(){return this.normalMapTextureCanvas;}getNormalMapOutlineCanvas(){return this.normalMapOutlineCanvas;}}","map":{"version":3,"names":["NormalMapGenerator","getMaterialUrl","material","_material$attributes","_material$attributes$","_material$attributes$2","_material$attributes$3","_material$attributes$4","attributes","images","find","imgMap","mapType","image","data","formats","large","url","normalMapGenerator","instance","imgToNormalMap","_ref","img","hasPuff","blur","blurAmount","generateFromImage","strength","level","CanvasText","constructor","_ref2","toNormalMap","text","patternType","canvas","ctx","outlineCanvas","outlineCtx","normalMapTextureCanvas","normalMapTextureCtx","normalMapCanvas","normalMapCtx","normalMapOutlineTextureCanvas","normalMapOutlineTextureCtx","normalMapOutlineCanvas","normalMapOutlineCtx2","crystalBgPatternCanvas","crystalBgPatternCtx","canvasHeight","canvasWidth","fontSize","outlineWidth","document","createElement","height","width","getContext","clear","_this$ctx","_this$outlineCtx","clearRect","drawImg","src","drawImage","showTestCanvas","testPreviewDom","getElementById","innerHTML","maskImage","globalCompositeOperation","drawPreviewText","font","concat","textAlign","fillText","drawPreviewOutlineText","lineWidth","strokeText","drawPreviewOutlineOnlyText","fillStyle","drawNormalMap","normalMapPatternImg","pattern","createPattern","rect","fill","console","log","normalMap","drawOutlineNormalMap","drawCrystalBg","crystalBgImg","crystalBgPatternImg","globalAlpha","printTextMapToStrokeMap","previewText","_ref3","outline","previewImg","toDataURL","mergeCanvas","getOutlineCanvas","getNormalMapTextureCanvas","getNormalMapOutlineCanvas"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/lib/canvas.ts"],"sourcesContent":["import type { MaterialFragment } from '@graphql/generated/graphql';\r\nimport type { Falsey } from 'lodash';\r\n// eslint-disable-next-line\r\n// @ts-ignore\r\nimport { NormalMapGenerator } from 'normalmap-online';\r\n\r\nexport function getMaterialUrl(material: MaterialFragment | undefined): string {\r\n  return material?.attributes?.images?.find((imgMap) => imgMap?.mapType === 'map')?.image.data\r\n    ?.attributes?.formats.large.url;\r\n}\r\n\r\n// TODO - Relocate this\r\ninterface ImgToNormalMapParams {\r\n  img: HTMLImageElement | HTMLCanvasElement;\r\n  hasPuff?: boolean;\r\n  blur?: number;\r\n}\r\nconst normalMapGenerator = NormalMapGenerator.instance();\r\nasync function imgToNormalMap({ img, hasPuff, blur }: ImgToNormalMapParams) {\r\n  const blurAmount = hasPuff ? blur || 7 : 1;\r\n  return normalMapGenerator.generateFromImage(img, {\r\n    strength: 0.5,\r\n    blur: blurAmount,\r\n    level: 1,\r\n  });\r\n}\r\n\r\ninterface PreviewText {\r\n  material: HTMLImageElement | undefined;\r\n  outline: HTMLImageElement | undefined;\r\n  previewImg?: HTMLImageElement;\r\n  normalMapPatternImg?: HTMLImageElement | false;\r\n  crystalBgPatternImg?: HTMLImageElement | Falsey;\r\n  crystalBgImg?: HTMLImageElement | Falsey;\r\n}\r\n\r\nexport type PatternType = 'crystals' | 'embroidery' | Falsey;\r\n\r\ninterface CanvasTextConstructor {\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n}\r\n\r\nexport class CanvasText {\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  outlineCanvas: HTMLCanvasElement;\r\n  outlineCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapTextureCanvas: HTMLCanvasElement;\r\n  normalMapTextureCtx: CanvasRenderingContext2D;\r\n  normalMapCanvas: HTMLCanvasElement;\r\n  normalMapCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapOutlineTextureCanvas: HTMLCanvasElement;\r\n  normalMapOutlineTextureCtx: CanvasRenderingContext2D;\r\n  normalMapOutlineCanvas: HTMLCanvasElement;\r\n  normalMapOutlineCtx2: CanvasRenderingContext2D;\r\n\r\n  crystalBgPatternCanvas: HTMLCanvasElement;\r\n  crystalBgPatternCtx: CanvasRenderingContext2D;\r\n\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n  fontSize: number;\r\n  outlineWidth: number;\r\n\r\n  constructor({ hasPuff, toNormalMap, text, patternType }: CanvasTextConstructor) {\r\n    this.hasPuff = hasPuff;\r\n    this.toNormalMap = toNormalMap;\r\n    this.patternType = patternType;\r\n    this.text = text;\r\n\r\n    this.fontSize = 360;\r\n    this.canvasHeight = 400;\r\n    this.canvasWidth = 3200;\r\n    this.outlineWidth = 20;\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.height = this.canvasHeight;\r\n    this.canvas.width = this.canvasWidth;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.outlineCanvas = document.createElement('canvas');\r\n    this.outlineCanvas.height = this.canvasHeight;\r\n    this.outlineCanvas.width = this.canvasWidth;\r\n    this.outlineCtx = this.outlineCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    // Normal map section\r\n\r\n    this.normalMapTextureCanvas = document.createElement('canvas');\r\n    this.normalMapTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapTextureCtx = this.normalMapTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapCanvas = document.createElement('canvas');\r\n    this.normalMapCanvas.height = this.canvasHeight;\r\n    this.normalMapCanvas.width = this.canvasWidth;\r\n    this.normalMapCtx = this.normalMapCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineTextureCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineTextureCtx = this.normalMapOutlineTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineCtx2 = this.normalMapOutlineCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    // TODO - make a function for setting canvas height and ctx instead\r\n    this.crystalBgPatternCanvas = document.createElement('canvas');\r\n    this.crystalBgPatternCanvas.height = this.canvasHeight;\r\n    this.crystalBgPatternCanvas.width = this.canvasWidth;\r\n    this.crystalBgPatternCtx = this.crystalBgPatternCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n  }\r\n\r\n  public clear() {\r\n    this.ctx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.outlineCtx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n  public async drawImg(ctx: CanvasRenderingContext2D, src: HTMLImageElement) {\r\n    ctx.drawImage(src, 0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  public showTestCanvas(canvas: HTMLCanvasElement) {\r\n    const testPreviewDom = document.getElementById('testPreview'); // TEST ONLY, TO BE REMOVED\r\n    (testPreviewDom as unknown as HTMLElement).innerHTML = ''; // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(canvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineTextureCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.crystalBgPatternCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.outlineCanvas); // TEST ONLY, TO BE REMOVED\r\n  }\r\n\r\n  public async maskImage(ctx: CanvasRenderingContext2D, img: HTMLImageElement) {\r\n    ctx.globalCompositeOperation = 'source-in';\r\n    await this.drawImg(ctx, img);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  public drawPreviewText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n  }\r\n\r\n  public drawPreviewOutlineText() {\r\n    if (!this.text) return;\r\n\r\n    this.outlineCtx.font = `${this.fontSize}px testFont`;\r\n    this.outlineCtx.textAlign = 'center';\r\n    this.outlineCtx.lineWidth = this.outlineWidth;\r\n    this.outlineCtx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n  }\r\n\r\n  public drawPreviewOutlineOnlyText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.lineWidth = 30;\r\n    ctx.fillStyle = 'green';\r\n    ctx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n    ctx.globalCompositeOperation = 'destination-out';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  private async drawNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewText(this.normalMapTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      this.normalMapTextureCtx.fillStyle = pattern;\r\n      this.normalMapTextureCtx.fill();\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    console.log('toNormalMap', this.toNormalMap);\r\n    const normalMap = this.toNormalMap\r\n      ? await imgToNormalMap({\r\n          img: this.normalMapTextureCanvas,\r\n          hasPuff: this.hasPuff,\r\n        })\r\n      : this.normalMapTextureCanvas;\r\n\r\n    this.normalMapCtx.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawOutlineNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewOutlineOnlyText(this.normalMapOutlineTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapOutlineTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapOutlineTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      if (this.patternType !== 'crystals') {\r\n        this.normalMapOutlineTextureCtx.fillStyle = pattern;\r\n      }\r\n      this.normalMapOutlineTextureCtx.fill();\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    const normalMap =\r\n      this.toNormalMap || this.patternType === 'crystals'\r\n        ? await imgToNormalMap({\r\n            img: this.normalMapOutlineTextureCanvas,\r\n            hasPuff: this.patternType === 'crystals' ? true : this.hasPuff,\r\n            blur: 4,\r\n          })\r\n        : this.normalMapOutlineTextureCanvas;\r\n    this.normalMapOutlineCtx2.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawCrystalBg(\r\n    crystalBgImg: HTMLImageElement,\r\n    crystalBgPatternImg: HTMLImageElement,\r\n  ) {\r\n    const pattern = this.crystalBgPatternCtx.createPattern(crystalBgPatternImg, 'repeat');\r\n\r\n    if (!pattern) return;\r\n\r\n    this.crystalBgPatternCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.fillStyle = pattern;\r\n    this.crystalBgPatternCtx.fill();\r\n\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-in';\r\n    this.crystalBgPatternCtx.globalAlpha = 0.9;\r\n    this.crystalBgPatternCtx.drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.drawImage(crystalBgImg, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-over';\r\n\r\n    this.outlineCtx.drawImage(this.crystalBgPatternCanvas, 0, 0);\r\n  }\r\n\r\n  private printTextMapToStrokeMap() {\r\n    this.normalMapCtx.globalCompositeOperation = 'destination-in';\r\n    this.normalMapCtx.drawImage(this.normalMapTextureCanvas, 0, 0);\r\n    this.normalMapCtx.globalCompositeOperation = 'source-over'; // reset to default\r\n    this.normalMapOutlineCtx2.drawImage(this.normalMapCanvas, 0, 0);\r\n  }\r\n\r\n  public async previewText({\r\n    material,\r\n    outline,\r\n    previewImg,\r\n    normalMapPatternImg,\r\n    crystalBgPatternImg,\r\n    crystalBgImg,\r\n  }: PreviewText) {\r\n    if (!this.text) return;\r\n\r\n    this.clear();\r\n    this.showTestCanvas(this.normalMapTextureCanvas);\r\n\r\n    await this.drawNormalMap(normalMapPatternImg);\r\n    await this.drawOutlineNormalMap(normalMapPatternImg);\r\n\r\n    this.printTextMapToStrokeMap();\r\n\r\n    if (outline) {\r\n      this.drawPreviewOutlineText();\r\n      await this.maskImage(this.outlineCtx, outline);\r\n    }\r\n\r\n    this.drawPreviewText(this.ctx);\r\n\r\n    if (material) {\r\n      await this.maskImage(this.ctx, material);\r\n    }\r\n\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n    if (previewImg) previewImg.src = this.outlineCanvas.toDataURL();\r\n\r\n    if (crystalBgImg && crystalBgPatternImg) {\r\n      this.drawCrystalBg(crystalBgImg, crystalBgPatternImg);\r\n    }\r\n  }\r\n\r\n  public mergeCanvas() {\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n  }\r\n\r\n  getOutlineCanvas() {\r\n    return this.outlineCanvas;\r\n  }\r\n  getNormalMapTextureCanvas() {\r\n    return this.normalMapTextureCanvas;\r\n  }\r\n  getNormalMapOutlineCanvas() {\r\n    return this.normalMapOutlineCanvas;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}