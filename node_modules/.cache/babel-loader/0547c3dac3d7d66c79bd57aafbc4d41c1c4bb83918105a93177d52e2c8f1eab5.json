{"ast":null,"code":"import{useCustomiserStore}from'@store/customiser';import cn from'classnames';import{AnimatePresence,motion}from'framer-motion';import{Suspense,useEffect,useMemo,useRef,useState}from'react';import NavFitting from'../NavFitting';import NavFlags from'../NavFlags';import NavHeader from'../NavHeader';import NavImages from'../NavImages';import NavOptions from'../NavOptions';import NavPart from'../NavPart';import NavSize from'../NavSize';import NavText from'../NavText';import styles from'./CustomiserNav.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CustomiserNav=_ref=>{let{className}=_ref;const[isOpen,setIsOpen]=useState(false);const[isMinimized,setIsMinimized]=useState(false);const[scrollCoordinates,setScrollCoordinates]=useState({left:0,top:0});const{selectedPart,selectedNav,texts}=useCustomiserStore();const scrollableRef=useRef(null);const editText=useMemo(()=>texts===null||texts===void 0?void 0:texts.find(g=>g.edit),[texts]);const isFullscreen=useMemo(()=>(selectedNav===null||selectedNav===void 0?void 0:selectedNav.name)==='Text'&&editText,[selectedNav,editText]);const rootClassName=cn(styles.root,{[styles.open]:isOpen,[styles.minimized]:isMinimized,[styles.hasActions]:selectedNav===null||selectedNav===void 0?void 0:selectedNav.hasActions,[styles.isFullscreen]:isFullscreen},className);const saveScrollCoordinates=()=>{if(isOpen&&scrollableRef.current){setScrollCoordinates({left:scrollableRef.current.scrollLeft,top:scrollableRef.current.scrollTop});}};useEffect(()=>{if(isOpen&&scrollableRef.current){scrollableRef.current.scrollTo({...scrollCoordinates,// Typescript issue: https://github.com/Microsoft/TypeScript/issues/28755\n// eslint-disable-next-line\n// @ts-ignore\nbehavior:'instant'});}},[isOpen]);const toggleOpen=()=>{saveScrollCoordinates();setIsOpen(!isOpen);};useEffect(()=>{if(selectedNav===null&&selectedPart===null){setIsOpen(true);}else{setIsOpen(false);setIsMinimized(false);}},[selectedPart,selectedNav]);return/*#__PURE__*/_jsxs(motion.nav,{layout:\"preserve-aspect\",transition:{type:'spring',stiffness:700,damping:40},className:rootClassName,children:[/*#__PURE__*/_jsx(NavHeader,{className:styles.header,toggle:()=>toggleOpen(),isOpen:isOpen,onClick:()=>{setIsMinimized(!isMinimized);},isMinimized:isMinimized}),/*#__PURE__*/_jsx(\"div\",{id:\"NavHeaderAfter\",className:styles.headerAfter}),/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}),children:/*#__PURE__*/_jsx(AnimatePresence,{initial:false,children:/*#__PURE__*/_jsx(motion.div,{id:\"scrollable\",className:styles.content,initial:\"collapsed\",animate:\"open\",exit:\"collapsed\",variants:{open:{opacity:1},collapsed:{opacity:0}},ref:el=>{scrollableRef.current=el;},children:isOpen?/*#__PURE__*/_jsx(NavOptions,{toggle:()=>toggleOpen()}):(selectedNav===null||selectedNav===void 0?void 0:selectedNav.type)==='fitting'?/*#__PURE__*/_jsx(NavFitting,{}):(selectedNav===null||selectedNav===void 0?void 0:selectedNav.type)==='names'?/*#__PURE__*/_jsx(NavText,{}):(selectedNav===null||selectedNav===void 0?void 0:selectedNav.type)==='flags'?/*#__PURE__*/_jsx(NavFlags,{}):(selectedNav===null||selectedNav===void 0?void 0:selectedNav.type)==='images'?/*#__PURE__*/_jsx(NavImages,{}):(selectedNav===null||selectedNav===void 0?void 0:selectedNav.type)==='size'?/*#__PURE__*/_jsx(NavSize,{}):selectedPart?/*#__PURE__*/_jsx(NavPart,{part:selectedPart}):null})})}),!isOpen&&(selectedNav===null||selectedNav===void 0?void 0:selectedNav.hasActions)&&/*#__PURE__*/_jsxs(\"div\",{className:styles.actions,children:[selectedPart&&/*#__PURE__*/_jsx(\"div\",{id:\"CustomiserNavMaterial\"}),/*#__PURE__*/_jsx(\"div\",{id:\"CustomiserNavActions\"})]})]});};export default CustomiserNav;","map":{"version":3,"names":["useCustomiserStore","cn","AnimatePresence","motion","Suspense","useEffect","useMemo","useRef","useState","NavFitting","NavFlags","NavHeader","NavImages","NavOptions","NavPart","NavSize","NavText","styles","jsx","_jsx","jsxs","_jsxs","CustomiserNav","_ref","className","isOpen","setIsOpen","isMinimized","setIsMinimized","scrollCoordinates","setScrollCoordinates","left","top","selectedPart","selectedNav","texts","scrollableRef","editText","find","g","edit","isFullscreen","name","rootClassName","root","open","minimized","hasActions","saveScrollCoordinates","current","scrollLeft","scrollTop","scrollTo","behavior","toggleOpen","nav","layout","transition","type","stiffness","damping","children","header","toggle","onClick","id","headerAfter","fallback","initial","div","content","animate","exit","variants","opacity","collapsed","ref","el","part","actions"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/CustomiserNav/CustomiserNav.tsx"],"sourcesContent":["import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavFitting from '../NavFitting';\r\nimport NavFlags from '../NavFlags';\r\nimport NavHeader from '../NavHeader';\r\nimport NavImages from '../NavImages';\r\nimport NavOptions from '../NavOptions';\r\nimport NavPart from '../NavPart';\r\nimport NavMinimize from '../NavMinimize';\r\nimport NavSize from '../NavSize';\r\nimport NavText from '../NavText';\r\n\r\nimport styles from './CustomiserNav.module.scss';\r\n\r\nexport interface CustomiserNavProps {\r\n  className?: string;\r\n}\r\n\r\nconst CustomiserNav = ({ className }: CustomiserNavProps) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [scrollCoordinates, setScrollCoordinates] = useState({ left: 0, top: 0 });\r\n\r\n  const { selectedPart, selectedNav, texts } = useCustomiserStore();\r\n\r\n  const scrollableRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const isFullscreen = useMemo(\r\n    () => selectedNav?.name === 'Text' && editText,\r\n    [selectedNav, editText],\r\n  );\r\n\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      [styles.open]: isOpen,\r\n      [styles.minimized]: isMinimized,\r\n      [styles.hasActions]: selectedNav?.hasActions,\r\n      [styles.isFullscreen]: isFullscreen,\r\n    },\r\n    className,\r\n  );\r\n\r\n  const saveScrollCoordinates = () => {\r\n    if (isOpen && scrollableRef.current) {\r\n      setScrollCoordinates({\r\n        left: scrollableRef.current.scrollLeft,\r\n        top: scrollableRef.current.scrollTop,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && scrollableRef.current) {\r\n      scrollableRef.current.scrollTo({\r\n        ...scrollCoordinates,\r\n        // Typescript issue: https://github.com/Microsoft/TypeScript/issues/28755\r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const toggleOpen = () => {\r\n    saveScrollCoordinates();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedNav === null && selectedPart === null) {\r\n      setIsOpen(true);\r\n    } else {\r\n      setIsOpen(false);\r\n      setIsMinimized(false);\r\n    }\r\n  }, [selectedPart, selectedNav]);\r\n\r\n  return (\r\n    <motion.nav\r\n      layout='preserve-aspect'\r\n      transition={{\r\n        type: 'spring',\r\n        stiffness: 700,\r\n        damping: 40,\r\n      }}\r\n      className={rootClassName}\r\n    >\r\n      {/* {!isOpen && (\r\n        <NavMinimize\r\n          isMinimized={isMinimized}\r\n          onMinimize={() => setIsMinimized(true)}\r\n          onMaximize={() => setIsMinimized(false)}\r\n        />\r\n      )} */}\r\n      <NavHeader\r\n        className={styles.header}\r\n        toggle={() => toggleOpen()}\r\n        isOpen={isOpen}\r\n        onClick={() => {\r\n          setIsMinimized(!isMinimized);\r\n        }}\r\n        isMinimized={isMinimized}\r\n      />\r\n      <div id='NavHeaderAfter' className={styles.headerAfter}></div>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <AnimatePresence initial={false}>\r\n          <motion.div\r\n            id='scrollable'\r\n            className={styles.content}\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n              open: { opacity: 1 },\r\n              collapsed: { opacity: 0 },\r\n            }}\r\n            ref={(el) => {\r\n              scrollableRef.current = el;\r\n            }}\r\n          >\r\n            {isOpen ? (\r\n              <NavOptions toggle={() => toggleOpen()} />\r\n            ) : selectedNav?.type === 'fitting' ? (\r\n              <NavFitting />\r\n            ) : selectedNav?.type === 'names' ? (\r\n              <NavText />\r\n            ) : selectedNav?.type === 'flags' ? (\r\n              <NavFlags />\r\n            ) : selectedNav?.type === 'images' ? (\r\n              <NavImages />\r\n            ) : selectedNav?.type === 'size' ? (\r\n              <NavSize />\r\n            ) : selectedPart ? (\r\n              <NavPart part={selectedPart} />\r\n            ) : null}\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </Suspense>\r\n      {!isOpen && selectedNav?.hasActions && (\r\n        <div className={styles.actions}>\r\n          {selectedPart && <div id='CustomiserNavMaterial'></div>}\r\n          <div id='CustomiserNavActions'></div>\r\n        </div>\r\n      )}\r\n    </motion.nav>\r\n  );\r\n};\r\n\r\nexport default CustomiserNav;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}