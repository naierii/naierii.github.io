{"ast":null,"code":"import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../Line.js';\nimport { context } from './context.js';\nconst ray = new THREE.Ray();\nconst intersection = new THREE.Vector3();\nconst offsetMatrix = new THREE.Matrix4();\nconst PlaneSlider = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const camControls = useThree(state => state.controls);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      plane\n    };\n    onDragStart();\n    camControls && (camControls.enabled = false); // @ts-ignore\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [camControls, onDragStart]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        plane\n      } = clickInfo.current;\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      intersection.sub(clickPoint);\n      offsetMatrix.makeTranslation(intersection.x, intersection.y, intersection.z);\n      onDrag(offsetMatrix);\n    }\n  }, [onDrag, isHovered]);\n  const onPointerUp = React.useCallback(e => {\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const pos1 = fixed ? 1 / 7 : scale / 7;\n  const length = fixed ? 0.225 : scale * 0.225;\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  const points = React.useMemo(() => [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, length, 0), new THREE.Vector3(length, length, 0), new THREE.Vector3(length, 0, 0), new THREE.Vector3(0, 0, 0)], [length]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    position: [pos1 * 1.7, pos1 * 1.7, 0]\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: true,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    scale: length,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    side: THREE.DoubleSide\n  })), /*#__PURE__*/React.createElement(Line, {\n    position: [-length / 2, -length / 2, 0],\n    transparent: true,\n    depthTest: depthTest,\n    points: points,\n    lineWidth: lineWidth,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    userData: userData\n  })));\n};\nexport { PlaneSlider };","map":{"version":3,"names":["React","THREE","useThree","Line","context","ray","Ray","intersection","Vector3","offsetMatrix","Matrix4","PlaneSlider","dir1","dir2","axis","depthTest","scale","lineWidth","fixed","axisColors","hoveredColor","opacity","onDragStart","onDrag","onDragEnd","userData","useContext","camControls","state","controls","objRef","useRef","clickInfo","isHovered","setIsHovered","useState","onPointerDown","useCallback","e","stopPropagation","clickPoint","point","clone","origin","setFromMatrixPosition","current","matrixWorld","normal","setFromMatrixColumn","normalize","plane","Plane","setFromNormalAndCoplanarPoint","enabled","target","setPointerCapture","pointerId","onPointerMove","copy","intersectPlane","direction","negate","sub","makeTranslation","x","y","z","onPointerUp","releasePointerCapture","onPointerOut","matrixL","useMemo","dir1N","dir2N","makeBasis","cross","pos1","length","color","points","createElement","ref","matrix","matrixAutoUpdate","position","visible","transparent","polygonOffset","polygonOffsetFactor","side","DoubleSide"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/node_modules/@react-three/drei/core/pivotControls/PlaneSlider.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../Line.js';\nimport { context } from './context.js';\n\nconst ray = new THREE.Ray();\nconst intersection = new THREE.Vector3();\nconst offsetMatrix = new THREE.Matrix4();\nconst PlaneSlider = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const camControls = useThree(state => state.controls);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      plane\n    };\n    onDragStart();\n    camControls && (camControls.enabled = false); // @ts-ignore\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [camControls, onDragStart]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        plane\n      } = clickInfo.current;\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      intersection.sub(clickPoint);\n      offsetMatrix.makeTranslation(intersection.x, intersection.y, intersection.z);\n      onDrag(offsetMatrix);\n    }\n  }, [onDrag, isHovered]);\n  const onPointerUp = React.useCallback(e => {\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const pos1 = fixed ? 1 / 7 : scale / 7;\n  const length = fixed ? 0.225 : scale * 0.225;\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  const points = React.useMemo(() => [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, length, 0), new THREE.Vector3(length, length, 0), new THREE.Vector3(length, 0, 0), new THREE.Vector3(0, 0, 0)], [length]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    position: [pos1 * 1.7, pos1 * 1.7, 0]\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: true,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    scale: length,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    side: THREE.DoubleSide\n  })), /*#__PURE__*/React.createElement(Line, {\n    position: [-length / 2, -length / 2, 0],\n    transparent: true,\n    depthTest: depthTest,\n    points: points,\n    lineWidth: lineWidth,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    userData: userData\n  })));\n};\n\nexport { PlaneSlider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}