{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reian\\\\Desktop\\\\Work\\\\Freelance\\\\Boxxer World\\\\boxxerworld-shopify-frontend\\\\customiser\\\\src\\\\components\\\\nav\\\\NavText\\\\NavTextNavSteps.tsx\",\n  _s = $RefreshSig$();\nimport NextStepButton from '@components/ui/Button/NextStepButton';\nimport PrevStepButton from '@components/ui/Button/PrevStepButton';\nimport { usePortalRef } from '@hooks';\nimport ReactDOM from 'react-dom';\nimport styles from './NavTextNavSteps.module.scss';\nimport CancelStepButton from '@components/ui/Button/CancelStepButton';\nimport ApplyButton from '@components/ui/Button/ApplyButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavTextNavSteps = ({\n  isClickableNext,\n  isClickablePrev,\n  isVisibleNext,\n  isVisiblePrev,\n  onClickNext,\n  onClickPrev,\n  onClickCancel,\n  onClickSave\n}) => {\n  _s();\n  const portalRef = usePortalRef('CustomiserNavActions');\n  const popupContainerRef = usePortalRef('popupContainer');\n  if (!portalRef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.root,\n      children: [isVisiblePrev !== true && /*#__PURE__*/_jsxDEV(CancelStepButton, {\n        onClick: onClickCancel || (() => {\n          return;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), (typeof isVisiblePrev === 'undefined' || isVisiblePrev) && /*#__PURE__*/_jsxDEV(PrevStepButton, {\n        isClickable: isClickablePrev,\n        isVisible: isVisiblePrev,\n        onClick: onClickPrev || (() => {\n          return;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), (typeof isVisibleNext === 'undefined' || isVisibleNext) && /*#__PURE__*/_jsxDEV(NextStepButton, {\n        isClickable: isClickableNext,\n        isVisible: isVisibleNext,\n        onClick: onClickNext || (() => {\n          return;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), isVisibleNext !== true && /*#__PURE__*/_jsxDEV(ApplyButton, {\n        onClick: onClickSave || (() => {\n          return;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), portalRef)\n  }, void 0, false);\n};\n_s(NavTextNavSteps, \"1MqtZfqAldQ7kyVGvY/4tgbxYVc=\", false, function () {\n  return [usePortalRef, usePortalRef];\n});\n_c = NavTextNavSteps;\nexport default NavTextNavSteps;\nvar _c;\n$RefreshReg$(_c, \"NavTextNavSteps\");","map":{"version":3,"names":["NextStepButton","PrevStepButton","usePortalRef","ReactDOM","styles","CancelStepButton","ApplyButton","jsxDEV","_jsxDEV","Fragment","_Fragment","NavTextNavSteps","isClickableNext","isClickablePrev","isVisibleNext","isVisiblePrev","onClickNext","onClickPrev","onClickCancel","onClickSave","_s","portalRef","popupContainerRef","children","createPortal","className","root","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isClickable","isVisible","_c","$RefreshReg$"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavText/NavTextNavSteps.tsx"],"sourcesContent":["import NextStepButton from '@components/ui/Button/NextStepButton';\r\nimport PrevStepButton from '@components/ui/Button/PrevStepButton';\r\nimport { usePortalRef } from '@hooks';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './NavTextNavSteps.module.scss';\r\nimport CancelStepButton from '@components/ui/Button/CancelStepButton';\r\nimport ApplyButton from '@components/ui/Button/ApplyButton';\r\n\r\ninterface NavTextNavStepsProps {\r\n  isClickableNext?: boolean;\r\n  isClickablePrev?: boolean;\r\n  isVisibleNext?: boolean;\r\n  isVisiblePrev?: boolean;\r\n\r\n  onClickNext?: () => void;\r\n  onClickPrev?: () => void;\r\n  onClickCancel?: () => void;\r\n  onClickSave?: () => void;\r\n}\r\n\r\nconst NavTextNavSteps = ({\r\n  isClickableNext,\r\n  isClickablePrev,\r\n  isVisibleNext,\r\n  isVisiblePrev,\r\n  onClickNext,\r\n  onClickPrev,\r\n  onClickCancel,\r\n  onClickSave,\r\n}: NavTextNavStepsProps) => {\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <div className={styles.root}>\r\n          {isVisiblePrev !== true && (\r\n            <CancelStepButton\r\n              onClick={\r\n                onClickCancel ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {(typeof isVisiblePrev === 'undefined' || isVisiblePrev) && (\r\n            <PrevStepButton\r\n              isClickable={isClickablePrev}\r\n              isVisible={isVisiblePrev}\r\n              onClick={\r\n                onClickPrev ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {(typeof isVisibleNext === 'undefined' || isVisibleNext) && (\r\n            <NextStepButton\r\n              isClickable={isClickableNext}\r\n              isVisible={isVisibleNext}\r\n              onClick={\r\n                onClickNext ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {isVisibleNext !== true && (\r\n            <ApplyButton\r\n              onClick={\r\n                onClickSave ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        </div>,\r\n        portalRef,\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNavSteps;\r\n"],"mappings":";;AAAA,OAAOA,cAAc,MAAM,sCAAsC;AACjE,OAAOC,cAAc,MAAM,sCAAsC;AACjE,SAASC,YAAY,QAAQ,QAAQ;AACrC,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,gBAAgB,MAAM,wCAAwC;AACrE,OAAOC,WAAW,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAc5D,MAAMC,eAAe,GAAGA,CAAC;EACvBC,eAAe;EACfC,eAAe;EACfC,aAAa;EACbC,aAAa;EACbC,WAAW;EACXC,WAAW;EACXC,aAAa;EACbC;AACoB,CAAC,KAAK;EAAAC,EAAA;EAC1B,MAAMC,SAAS,GAAGnB,YAAY,CAAC,sBAAsB,CAAC;EACtD,MAAMoB,iBAAiB,GAAGpB,YAAY,CAAC,gBAAgB,CAAC;EAExD,IAAI,CAACmB,SAAS,EAAE;IACd,OAAO,IAAI;EACb;EACA,oBACEb,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACGpB,QAAQ,CAACqB,YAAY,eACpBhB,OAAA;MAAKiB,SAAS,EAAErB,MAAM,CAACsB,IAAK;MAAAH,QAAA,GACzBR,aAAa,KAAK,IAAI,iBACrBP,OAAA,CAACH,gBAAgB;QACfsB,OAAO,EACLT,aAAa,KACZ,MAAM;UACL;QACF,CAAC;MACF;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACF,EACA,CAAC,OAAOhB,aAAa,KAAK,WAAW,IAAIA,aAAa,kBACrDP,OAAA,CAACP,cAAc;QACb+B,WAAW,EAAEnB,eAAgB;QAC7BoB,SAAS,EAAElB,aAAc;QACzBY,OAAO,EACLV,WAAW,KACV,MAAM;UACL;QACF,CAAC;MACF;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACF,EACA,CAAC,OAAOjB,aAAa,KAAK,WAAW,IAAIA,aAAa,kBACrDN,OAAA,CAACR,cAAc;QACbgC,WAAW,EAAEpB,eAAgB;QAC7BqB,SAAS,EAAEnB,aAAc;QACzBa,OAAO,EACLX,WAAW,KACV,MAAM;UACL;QACF,CAAC;MACF;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACF,EACAjB,aAAa,KAAK,IAAI,iBACrBN,OAAA,CAACF,WAAW;QACVqB,OAAO,EACLR,WAAW,KACV,MAAM;UACL;QACF,CAAC;MACF;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACNV,SACF;EAAC,gBACD,CAAC;AAEP,CAAC;AAACD,EAAA,CArEIT,eAAe;EAAA,QAUDT,YAAY,EACJA,YAAY;AAAA;AAAAgC,EAAA,GAXlCvB,eAAe;AAuErB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}