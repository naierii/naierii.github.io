{"ast":null,"code":"import cn from'classnames';import styles from'./MaterialGroup.module.scss';import{useLongPress}from'./../../../hooks/useLongPress';import{usePortalRef}from'@hooks';import{useState}from'react';import{createPortal}from'react-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const Material=_ref=>{var _material$attributes,_material$attributes$,_material$attributes2,_mapImage$image,_mapImage$image$data,_mapImage$image$data$,_mapImage$image2,_mapImage$image2$data,_mapImage$image2$data2;let{className,material,onMaterialSelected,selectedMaterialId}=_ref;const rootClassName=cn(styles.material,className,{[styles.selected]:material.id===selectedMaterialId});const popupPortalRef=usePortalRef('popupContainer');const[showPopup,setShowPopup]=useState(false);const mapImage=material===null||material===void 0?void 0:(_material$attributes=material.attributes)===null||_material$attributes===void 0?void 0:(_material$attributes$=_material$attributes.images)===null||_material$attributes$===void 0?void 0:_material$attributes$.find(i=>(i===null||i===void 0?void 0:i.mapType)==='map');const onClick=()=>{console.log('mapImage',mapImage);if(material){onMaterialSelected(material);}};const onLongPress=useLongPress(()=>{setShowPopup(true);},onClick,{delay:1000});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:rootClassName// onTouchStart={onMaterialTouchStart}\n// onTouchEnd={onMaterialTouchEnd}\n,...onLongPress,\"data-name\":(_material$attributes2=material.attributes)===null||_material$attributes2===void 0?void 0:_material$attributes2.name,children:mapImage&&/*#__PURE__*/_jsx(\"img\",{src:mapImage===null||mapImage===void 0?void 0:(_mapImage$image=mapImage.image)===null||_mapImage$image===void 0?void 0:(_mapImage$image$data=_mapImage$image.data)===null||_mapImage$image$data===void 0?void 0:(_mapImage$image$data$=_mapImage$image$data.attributes)===null||_mapImage$image$data$===void 0?void 0:_mapImage$image$data$.formats['thumbnail'].url})}),showPopup&&popupPortalRef&&/*#__PURE__*/createPortal(/*#__PURE__*/_jsx(\"div\",{className:styles.popup,onClick:()=>{setShowPopup(false);},children:/*#__PURE__*/_jsx(\"img\",{height:\"300\",width:\"300\",src:mapImage===null||mapImage===void 0?void 0:(_mapImage$image2=mapImage.image)===null||_mapImage$image2===void 0?void 0:(_mapImage$image2$data=_mapImage$image2.data)===null||_mapImage$image2$data===void 0?void 0:(_mapImage$image2$data2=_mapImage$image2$data.attributes)===null||_mapImage$image2$data2===void 0?void 0:_mapImage$image2$data2.formats['large'].url,alt:\"\"})}),popupPortalRef)]});};","map":{"version":3,"names":["cn","styles","useLongPress","usePortalRef","useState","createPortal","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Material","_ref","_material$attributes","_material$attributes$","_material$attributes2","_mapImage$image","_mapImage$image$data","_mapImage$image$data$","_mapImage$image2","_mapImage$image2$data","_mapImage$image2$data2","className","material","onMaterialSelected","selectedMaterialId","rootClassName","selected","id","popupPortalRef","showPopup","setShowPopup","mapImage","attributes","images","find","i","mapType","onClick","console","log","onLongPress","delay","children","name","src","image","data","formats","url","popup","height","width","alt"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/MaterialGroup/Material.tsx"],"sourcesContent":["import { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { Falsey } from 'lodash';\r\nimport { useLongPress } from './../../../hooks/useLongPress';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nexport interface MaterialProps {\r\n  className?: string;\r\n  material: MaterialFragment;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const Material = ({\r\n  className,\r\n  material,\r\n  onMaterialSelected,\r\n  selectedMaterialId,\r\n}: MaterialProps) => {\r\n  const rootClassName = cn(styles.material, className, {\r\n    [styles.selected]: material.id === selectedMaterialId,\r\n  });\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const mapImage = material?.attributes?.images?.find((i) => i?.mapType === 'map');\r\n\r\n  const onClick = () => {\r\n    console.log('mapImage', mapImage);\r\n    if (material) {\r\n      onMaterialSelected(material);\r\n    }\r\n  };\r\n\r\n  const onLongPress = useLongPress(\r\n    () => {\r\n      setShowPopup(true);\r\n    },\r\n    onClick,\r\n    { delay: 1000 },\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={rootClassName}\r\n        // onTouchStart={onMaterialTouchStart}\r\n        // onTouchEnd={onMaterialTouchEnd}\r\n        {...onLongPress}\r\n        data-name={material.attributes?.name}\r\n      >\r\n        {mapImage && <img src={mapImage?.image?.data?.attributes?.formats['thumbnail'].url} />}\r\n      </button>\r\n      {showPopup &&\r\n        popupPortalRef &&\r\n        createPortal(\r\n          <div\r\n            className={styles.popup}\r\n            onClick={() => {\r\n              setShowPopup(false);\r\n            }}\r\n          >\r\n            <img\r\n              height='300'\r\n              width='300'\r\n              src={mapImage?.image?.data?.attributes?.formats['large'].url}\r\n              alt=''\r\n            />\r\n          </div>,\r\n          popupPortalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"AACA,MAAO,CAAAA,EAAE,KAAM,YAAY,CAC3B,MAAO,CAAAC,MAAM,KAAM,6BAA6B,CAEhD,OAASC,YAAY,KAAQ,+BAA+B,CAC5D,OAASC,YAAY,KAAQ,QAAQ,CACrC,OAASC,QAAQ,KAAQ,OAAO,CAChC,OAASC,YAAY,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBASzC,MAAO,MAAM,CAAAC,QAAQ,CAAGC,IAAA,EAKH,KAAAC,oBAAA,CAAAC,qBAAA,CAAAC,qBAAA,CAAAC,eAAA,CAAAC,oBAAA,CAAAC,qBAAA,CAAAC,gBAAA,CAAAC,qBAAA,CAAAC,sBAAA,IALI,CACvBC,SAAS,CACTC,QAAQ,CACRC,kBAAkB,CAClBC,kBACa,CAAC,CAAAb,IAAA,CACd,KAAM,CAAAc,aAAa,CAAG3B,EAAE,CAACC,MAAM,CAACuB,QAAQ,CAAED,SAAS,CAAE,CACnD,CAACtB,MAAM,CAAC2B,QAAQ,EAAGJ,QAAQ,CAACK,EAAE,GAAKH,kBACrC,CAAC,CAAC,CACF,KAAM,CAAAI,cAAc,CAAG3B,YAAY,CAAC,gBAAgB,CAAC,CACrD,KAAM,CAAC4B,SAAS,CAAEC,YAAY,CAAC,CAAG5B,QAAQ,CAAU,KAAK,CAAC,CAE1D,KAAM,CAAA6B,QAAQ,CAAGT,QAAQ,SAARA,QAAQ,kBAAAV,oBAAA,CAARU,QAAQ,CAAEU,UAAU,UAAApB,oBAAA,kBAAAC,qBAAA,CAApBD,oBAAA,CAAsBqB,MAAM,UAAApB,qBAAA,iBAA5BA,qBAAA,CAA8BqB,IAAI,CAAEC,CAAC,EAAK,CAAAA,CAAC,SAADA,CAAC,iBAADA,CAAC,CAAEC,OAAO,IAAK,KAAK,CAAC,CAEhF,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpBC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAER,QAAQ,CAAC,CACjC,GAAIT,QAAQ,CAAE,CACZC,kBAAkB,CAACD,QAAQ,CAAC,CAC9B,CACF,CAAC,CAED,KAAM,CAAAkB,WAAW,CAAGxC,YAAY,CAC9B,IAAM,CACJ8B,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CACDO,OAAO,CACP,CAAEI,KAAK,CAAE,IAAK,CAChB,CAAC,CAED,mBACEhC,KAAA,CAAAF,SAAA,EAAAmC,QAAA,eACErC,IAAA,WACEgB,SAAS,CAAEI,aACX;AACA;AAAA,IACIe,WAAW,CACf,aAAA1B,qBAAA,CAAWQ,QAAQ,CAACU,UAAU,UAAAlB,qBAAA,iBAAnBA,qBAAA,CAAqB6B,IAAK,CAAAD,QAAA,CAEpCX,QAAQ,eAAI1B,IAAA,QAAKuC,GAAG,CAAEb,QAAQ,SAARA,QAAQ,kBAAAhB,eAAA,CAARgB,QAAQ,CAAEc,KAAK,UAAA9B,eAAA,kBAAAC,oBAAA,CAAfD,eAAA,CAAiB+B,IAAI,UAAA9B,oBAAA,kBAAAC,qBAAA,CAArBD,oBAAA,CAAuBgB,UAAU,UAAAf,qBAAA,iBAAjCA,qBAAA,CAAmC8B,OAAO,CAAC,WAAW,CAAC,CAACC,GAAI,CAAE,CAAC,CAChF,CAAC,CACRnB,SAAS,EACRD,cAAc,eACdzB,YAAY,cACVE,IAAA,QACEgB,SAAS,CAAEtB,MAAM,CAACkD,KAAM,CACxBZ,OAAO,CAAEA,CAAA,GAAM,CACbP,YAAY,CAAC,KAAK,CAAC,CACrB,CAAE,CAAAY,QAAA,cAEFrC,IAAA,QACE6C,MAAM,CAAC,KAAK,CACZC,KAAK,CAAC,KAAK,CACXP,GAAG,CAAEb,QAAQ,SAARA,QAAQ,kBAAAb,gBAAA,CAARa,QAAQ,CAAEc,KAAK,UAAA3B,gBAAA,kBAAAC,qBAAA,CAAfD,gBAAA,CAAiB4B,IAAI,UAAA3B,qBAAA,kBAAAC,sBAAA,CAArBD,qBAAA,CAAuBa,UAAU,UAAAZ,sBAAA,iBAAjCA,sBAAA,CAAmC2B,OAAO,CAAC,OAAO,CAAC,CAACC,GAAI,CAC7DI,GAAG,CAAC,EAAE,CACP,CAAC,CACC,CAAC,CACNxB,cACF,CAAC,EACH,CAAC,CAEP,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}