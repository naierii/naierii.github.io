{"ast":null,"code":"import{useCustomiserStore}from'@store/customiser';import{startTransition,useEffect,useMemo,useRef,useState}from'react';import NavDecalAdjust from'../NavDecalAdjust';import styles from'./NavText.module.scss';import NavTextFinish from'./NavTextFinish';import NavTextNameTypes from'./NavTextNameTypes';import NavTextOutline from'./NavTextOutline';import NavTextSelect from'./NavTextSelect';import NavTextsSelection from'./NavTextsSelection';import NavTextPreview from'./NavTextPreview';import{usePortalRef}from'@hooks';import{createPortal}from'react-dom';import NavTextCategories from'./NavTextCategories';import NavTextNavSteps from'./NavTextNavSteps';import NavTextInput from'./NavTextInput';import ContainedButton from'@components/ui/Button/ContainedButton';import DontShowAgain from'@components/ui/DontShowAgain';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const NavText=_ref=>{let{showEditText,setShowEditText}=_ref;const[step,setStep]=useState(0);const texts=useCustomiserStore(state=>state.texts);const updateText=useCustomiserStore(state=>state.updateText);const deleteText=useCustomiserStore(state=>state.deleteText);const updateIsMinimizedCustomiserNav=useCustomiserStore(state=>state.updateIsMinimizedCustomiserNav);const isMinimizedCustomiserNav=useCustomiserStore(state=>state.isMinimizedCustomiserNav);const editText=useMemo(()=>texts===null||texts===void 0?void 0:texts.find(g=>g.edit),[texts]);const[isPickingOutline,setIsPickingOutline]=useState(false);const[isPickingCrystal,setIsPickingCrystal]=useState(false);const navHeaderRef=usePortalRef('NavHeader');const popupContainerRef=usePortalRef('popupContainer');const mainTextInputRef=useRef(null);const noOutlineSelected=step===2&&isPickingOutline&&!(editText!==null&&editText!==void 0&&editText.outline);const noCrystalSelected=step===3&&isPickingCrystal&&!(editText!==null&&editText!==void 0&&editText.crystalBackground);const hasFinishedAllSteps=step===3&&((editText===null||editText===void 0?void 0:editText.crystalBackground)||!isPickingCrystal);const hasFinishedStep1=!!(editText!==null&&editText!==void 0&&editText.text);const hasFinishedStep2=!!(editText!==null&&editText!==void 0&&editText.material);const hasFinishedStep3=!!(editText!==null&&editText!==void 0&&editText.outline);const hasFinishedStep4=!!(editText!==null&&editText!==void 0&&editText.crystalBackground);const finishedSteps=[hasFinishedStep1,hasFinishedStep2,!noOutlineSelected,!noCrystalSelected];const isVisiblePrev=step!==0;const isClickableNext=finishedSteps[step||0];const isVisibleNext=typeof step==='number'?step<3:false;console.log('isVisibleNext',isVisibleNext);console.log('step',step);const saveAndApplyChecker=()=>{if(!hasFinishedStep1){alert('Please enter a text to continue');setStep(0);return false;}else if(!hasFinishedStep2){alert('Select a text color to continue');setStep(1);return false;}return true;};useEffect(()=>{if(editText!==null&&editText!==void 0&&editText.key){setShowEditText(true);}else{setShowEditText(false);}},[editText]);useEffect(()=>{setShowEditText((editText===null||editText===void 0?void 0:editText.key)!==undefined);return()=>{setShowEditText(false);};},[]);const addText=()=>{setShowEditText(true);};const setScale=event=>{startTransition(()=>{if(editText!==null&&editText!==void 0&&editText.key)updateText(editText.key,{decalScale:Number(event)});});};const setRotation=event=>{startTransition(()=>{if(editText!==null&&editText!==void 0&&editText.key)updateText(editText.key,{decalRotation:Number(event)});});};const placeText=()=>{if(isPickingCrystal&&noCrystalSelected){alert('Select a crystal type');return;}if(editText!==null&&editText!==void 0&&editText.key&&!(editText!==null&&editText!==void 0&&editText.decalPosition)){updateText(editText.key,{decalFreeze:true,decalPosition:[-0.01989325641440387,2.436930108198209,1.6226380277735046],decalOrientation:[-0.14799034762565572,-0.17866277612764514,-0.026487426629834374,'XYZ']});}updateIsMinimizedCustomiserNav(true);};const applyText=()=>{if(editText!==null&&editText!==void 0&&editText.key){updateText(editText.key,{decalFreeze:false,edit:false,hasApplied:true});}setStep(0);setShowEditText(false);};const localStorageConfirmCancelText=localStorage.getItem('confirmCancelText');const shouldShowConfirmCancelText=!localStorageConfirmCancelText;const[showConfirmCancelPopup,setShowConfirmCancelPopup]=useState(false);const cancelText=()=>{if(editText!==null&&editText!==void 0&&editText.key){applyText();if(editText!==null&&editText!==void 0&&editText.text&&!(editText!==null&&editText!==void 0&&editText.hasApplied)){deleteText(editText.key);}}};const cancelTextHandler=()=>{if(editText!==null&&editText!==void 0&&editText.text){setShowConfirmCancelPopup(true);}else{cancelText();}};const handleTitleClick=_step=>{if(_step===step){setStep(undefined);}else{setStep(_step);}};const maxStep=4;const handleNext=()=>{if(step===undefined){setStep(0);}else if(step<maxStep-1){switch(step){case 0:if(!(editText!==null&&editText!==void 0&&editText.text)){alert('Please enter a text to continue');return;}break;case 1:if(!(editText!==null&&editText!==void 0&&editText.selectedName)){alert('Select a text color type');return;}else if(!(editText!==null&&editText!==void 0&&editText.material)){alert('Select a color for text');return;}break;case 2:if(isPickingOutline&&!(editText!==null&&editText!==void 0&&editText.outline)){alert('Select an outline');return;}break;default:break;}console.log('editText',editText);setStep(step+1);}};const handlePrevious=()=>{if(step===undefined){setStep(0);}else if(step>0){setStep(step-1);}};const navCategoryNames=['Font','Color','Outline','Finish'];const NavTextCategoriesItems=()=>{const handleOnClick=index=>{if(navCategoryNames[index]==='Outline'||navCategoryNames[index]==='Finish'){if(!saveAndApplyChecker())return;}if(!(editText!==null&&editText!==void 0&&editText.text)){alert('Please enter a text to continue');return;}handleTitleClick(index);};const finishedCategories=[hasFinishedStep1,hasFinishedStep2,hasFinishedStep3,hasFinishedStep4];return navCategoryNames.map((name,index)=>{const isSelectedCategory=step===index;const categoryClassNames=\"\\n        \".concat(isSelectedCategory?styles.selectedCategoryItem:'',\"\\n        \").concat(finishedCategories[index]?styles.finishedCategoryItem:'',\"\\n      \");return/*#__PURE__*/_jsx(\"div\",{className:categoryClassNames,onClick:()=>handleOnClick(index),children:name},index);});};const CategoryDisplay=()=>{switch(step){case 0:return/*#__PURE__*/_jsx(NavTextSelect,{editText:editText});case 1:return/*#__PURE__*/_jsx(NavTextNameTypes,{editText:editText});case 2:return/*#__PURE__*/_jsx(NavTextOutline,{editText:editText,setIsPickingOutline:setIsPickingOutline});case 3:return/*#__PURE__*/_jsx(NavTextFinish,{setIsPickingCrystal:setIsPickingCrystal,editText:editText});default:break;}};return/*#__PURE__*/_jsx(_Fragment,{children:showEditText?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.navTextEdit,children:[/*#__PURE__*/_jsx(NavTextPreview,{mainTextInputRef:mainTextInputRef,editText:editText}),/*#__PURE__*/_jsx(NavTextCategories,{children:NavTextCategoriesItems()}),CategoryDisplay(),/*#__PURE__*/_jsx(NavTextNavSteps,{onClickNext:handleNext,onClickPrev:handlePrevious,onClickCancel:cancelTextHandler,onClickSave:placeText,isVisiblePrev:isVisiblePrev,isVisibleNext:isVisibleNext,isClickableNext:isClickableNext}),(editText===null||editText===void 0?void 0:editText.key)&&editText.decalPosition&&/*#__PURE__*/_jsx(NavDecalAdjust,{scale:editText===null||editText===void 0?void 0:editText.decalScale,rotation:editText===null||editText===void 0?void 0:editText.decalRotation,onScale:setScale,onRotate:setRotation}),editText&&isMinimizedCustomiserNav&&navHeaderRef&&hasFinishedAllSteps&&/*#__PURE__*/createPortal(/*#__PURE__*/_jsx(ContainedButton,{onClick:()=>{if(!saveAndApplyChecker()){return updateIsMinimizedCustomiserNav(false);}applyText();updateIsMinimizedCustomiserNav(false);},classNames:styles.navHeaderSaveText,children:\"SAVE\"}),navHeaderRef),popupContainerRef&&/*#__PURE__*/createPortal(/*#__PURE__*/_jsx(NavTextInput,{ref:mainTextInputRef,editText:editText}),popupContainerRef)]}),popupContainerRef&&shouldShowConfirmCancelText&&showConfirmCancelPopup&&/*#__PURE__*/createPortal(/*#__PURE__*/_jsx(DontShowAgain,{cb:cancelText,setShowNotification:setShowConfirmCancelPopup,notifName:'editTextCancelText',children:/*#__PURE__*/_jsx(\"span\",{children:\"Cancel text customization?\"})}),popupContainerRef)]}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(NavTextsSelection,{onAddTextClicked:addText})})});};export default NavText;","map":{"version":3,"names":["useCustomiserStore","startTransition","useEffect","useMemo","useRef","useState","NavDecalAdjust","styles","NavTextFinish","NavTextNameTypes","NavTextOutline","NavTextSelect","NavTextsSelection","NavTextPreview","usePortalRef","createPortal","NavTextCategories","NavTextNavSteps","NavTextInput","ContainedButton","DontShowAgain","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NavText","_ref","showEditText","setShowEditText","step","setStep","texts","state","updateText","deleteText","updateIsMinimizedCustomiserNav","isMinimizedCustomiserNav","editText","find","g","edit","isPickingOutline","setIsPickingOutline","isPickingCrystal","setIsPickingCrystal","navHeaderRef","popupContainerRef","mainTextInputRef","noOutlineSelected","outline","noCrystalSelected","crystalBackground","hasFinishedAllSteps","hasFinishedStep1","text","hasFinishedStep2","material","hasFinishedStep3","hasFinishedStep4","finishedSteps","isVisiblePrev","isClickableNext","isVisibleNext","console","log","saveAndApplyChecker","alert","key","undefined","addText","setScale","event","decalScale","Number","setRotation","decalRotation","placeText","decalPosition","decalFreeze","decalOrientation","applyText","hasApplied","localStorageConfirmCancelText","localStorage","getItem","shouldShowConfirmCancelText","showConfirmCancelPopup","setShowConfirmCancelPopup","cancelText","cancelTextHandler","handleTitleClick","_step","maxStep","handleNext","selectedName","handlePrevious","navCategoryNames","NavTextCategoriesItems","handleOnClick","index","finishedCategories","map","name","isSelectedCategory","categoryClassNames","concat","selectedCategoryItem","finishedCategoryItem","className","onClick","children","CategoryDisplay","navTextEdit","onClickNext","onClickPrev","onClickCancel","onClickSave","scale","rotation","onScale","onRotate","classNames","navHeaderSaveText","ref","cb","setShowNotification","notifName","onAddTextClicked"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavText/NavText.tsx"],"sourcesContent":["import { useCustomiserStore } from '@store/customiser';\r\nimport { LegacyRef, startTransition, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\n\r\nimport Accordion from '@components/ui/Accordion/Accordion';\r\nimport NavStepButtons from '../NavStepButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextFinish from './NavTextFinish';\r\nimport NavTextNameTypes from './NavTextNameTypes';\r\nimport NavTextOutline from './NavTextOutline';\r\nimport NavTextSelect from './NavTextSelect';\r\nimport NavTextsSelection from './NavTextsSelection';\r\nimport NavTextPreview from './NavTextPreview';\r\nimport { usePortalRef } from '@hooks';\r\nimport Button from '@components/ui/Button';\r\nimport { createPortal } from 'react-dom';\r\nimport NavTextCategories from './NavTextCategories';\r\nimport NavTextNavSteps from './NavTextNavSteps';\r\nimport { has } from 'lodash';\r\nimport FormInput from '@components/ui/FormInput';\r\nimport NavTextInput from './NavTextInput';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\nimport DontShowAgain from '@components/ui/DontShowAgain';\r\n\r\ninterface NavTextProps {\r\n  showEditText: boolean;\r\n  setShowEditText: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavText = ({ showEditText, setShowEditText }: NavTextProps) => {\r\n  const [step, setStep] = useState<number | undefined>(0);\r\n\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const deleteText = useCustomiserStore((state) => state.deleteText);\r\n  const updateIsMinimizedCustomiserNav = useCustomiserStore(\r\n    (state) => state.updateIsMinimizedCustomiserNav,\r\n  );\r\n  const isMinimizedCustomiserNav = useCustomiserStore((state) => state.isMinimizedCustomiserNav);\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const [isPickingOutline, setIsPickingOutline] = useState(false);\r\n  const [isPickingCrystal, setIsPickingCrystal] = useState(false);\r\n  const navHeaderRef = usePortalRef('NavHeader');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n\r\n  const mainTextInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const noOutlineSelected = step === 2 && isPickingOutline && !editText?.outline;\r\n  const noCrystalSelected = step === 3 && isPickingCrystal && !editText?.crystalBackground;\r\n  const hasFinishedAllSteps = step === 3 && (editText?.crystalBackground || !isPickingCrystal);\r\n\r\n  const hasFinishedStep1 = !!editText?.text;\r\n  const hasFinishedStep2 = !!editText?.material;\r\n  const hasFinishedStep3 = !!editText?.outline;\r\n  const hasFinishedStep4 = !!editText?.crystalBackground;\r\n\r\n  const finishedSteps = [\r\n    hasFinishedStep1,\r\n    hasFinishedStep2,\r\n    !noOutlineSelected,\r\n    !noCrystalSelected,\r\n  ];\r\n\r\n  const isVisiblePrev = step !== 0;\r\n  const isClickableNext = finishedSteps[step || 0];\r\n  const isVisibleNext = typeof step === 'number' ? step < 3 : false;\r\n  console.log('isVisibleNext', isVisibleNext);\r\n  console.log('step', step);\r\n\r\n  const saveAndApplyChecker = () => {\r\n    if (!hasFinishedStep1) {\r\n      alert('Please enter a text to continue');\r\n      setStep(0);\r\n      return false;\r\n    } else if (!hasFinishedStep2) {\r\n      alert('Select a text color to continue');\r\n      setStep(1);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      setShowEditText(true);\r\n    } else {\r\n      setShowEditText(false);\r\n    }\r\n  }, [editText]);\r\n\r\n  useEffect(() => {\r\n    setShowEditText(editText?.key !== undefined);\r\n    return () => {\r\n      setShowEditText(false);\r\n    };\r\n  }, []);\r\n\r\n  const addText = () => {\r\n    setShowEditText(true);\r\n  };\r\n\r\n  const setScale = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalScale: Number(event) });\r\n    });\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const placeText = () => {\r\n    if (isPickingCrystal && noCrystalSelected) {\r\n      alert('Select a crystal type');\r\n      return;\r\n    }\r\n    if (editText?.key && !editText?.decalPosition) {\r\n      updateText(editText.key, {\r\n        decalFreeze: true,\r\n        decalPosition: [-0.01989325641440387, 2.436930108198209, 1.6226380277735046],\r\n        decalOrientation: [\r\n          -0.14799034762565572,\r\n          -0.17866277612764514,\r\n          -0.026487426629834374,\r\n          'XYZ',\r\n        ],\r\n      });\r\n    }\r\n    updateIsMinimizedCustomiserNav(true);\r\n  };\r\n\r\n  const applyText = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n        hasApplied: true,\r\n      });\r\n    }\r\n\r\n    setStep(0);\r\n\r\n    setShowEditText(false);\r\n  };\r\n\r\n  const localStorageConfirmCancelText = localStorage.getItem('confirmCancelText');\r\n  const shouldShowConfirmCancelText = !localStorageConfirmCancelText;\r\n\r\n  const [showConfirmCancelPopup, setShowConfirmCancelPopup] = useState(false);\r\n\r\n  const cancelText = () => {\r\n    if (editText?.key) {\r\n      applyText();\r\n      if (editText?.text && !editText?.hasApplied) {\r\n        deleteText(editText.key);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cancelTextHandler = () => {\r\n    if (editText?.text) {\r\n      setShowConfirmCancelPopup(true);\r\n    } else {\r\n      cancelText();\r\n    }\r\n  };\r\n\r\n  const handleTitleClick = (_step: number | string) => {\r\n    if (_step === step) {\r\n      setStep(undefined);\r\n    } else {\r\n      setStep(_step as number);\r\n    }\r\n  };\r\n\r\n  const maxStep = 4;\r\n\r\n  const handleNext = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step < maxStep - 1) {\r\n      switch (step) {\r\n        case 0:\r\n          if (!editText?.text) {\r\n            alert('Please enter a text to continue');\r\n            return;\r\n          }\r\n          break;\r\n        case 1:\r\n          if (!editText?.selectedName) {\r\n            alert('Select a text color type');\r\n            return;\r\n          } else if (!editText?.material) {\r\n            alert('Select a color for text');\r\n            return;\r\n          }\r\n          break;\r\n        case 2:\r\n          if (isPickingOutline && !editText?.outline) {\r\n            alert('Select an outline');\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      console.log('editText', editText);\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step > 0) {\r\n      setStep(step - 1);\r\n    }\r\n  };\r\n\r\n  const navCategoryNames = ['Font', 'Color', 'Outline', 'Finish'];\r\n  const NavTextCategoriesItems = () => {\r\n    const handleOnClick = (index: number) => {\r\n      if (navCategoryNames[index] === 'Outline' || navCategoryNames[index] === 'Finish') {\r\n        if (!saveAndApplyChecker()) return;\r\n      }\r\n      if (!editText?.text) {\r\n        alert('Please enter a text to continue');\r\n        return;\r\n      }\r\n      handleTitleClick(index);\r\n    };\r\n\r\n    const finishedCategories = [\r\n      hasFinishedStep1,\r\n      hasFinishedStep2,\r\n      hasFinishedStep3,\r\n      hasFinishedStep4,\r\n    ];\r\n\r\n    return navCategoryNames.map((name, index) => {\r\n      const isSelectedCategory = step === index;\r\n      const categoryClassNames = `\r\n        ${isSelectedCategory ? styles.selectedCategoryItem : ''}\r\n        ${finishedCategories[index] ? styles.finishedCategoryItem : ''}\r\n      `;\r\n      return (\r\n        <div key={index} className={categoryClassNames} onClick={() => handleOnClick(index)}>\r\n          {name}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const CategoryDisplay = () => {\r\n    switch (step) {\r\n      case 0:\r\n        return <NavTextSelect editText={editText} />;\r\n      case 1:\r\n        return <NavTextNameTypes editText={editText} />;\r\n      case 2:\r\n        return <NavTextOutline editText={editText} setIsPickingOutline={setIsPickingOutline} />;\r\n      case 3:\r\n        return (\r\n          <NavTextFinish\r\n            setIsPickingCrystal={setIsPickingCrystal}\r\n            editText={editText}\r\n          ></NavTextFinish>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showEditText ? (\r\n        <>\r\n          <div className={styles.navTextEdit}>\r\n            <NavTextPreview mainTextInputRef={mainTextInputRef} editText={editText} />\r\n            <NavTextCategories>{NavTextCategoriesItems()}</NavTextCategories>\r\n            {CategoryDisplay()}\r\n            <NavTextNavSteps\r\n              onClickNext={handleNext}\r\n              onClickPrev={handlePrevious}\r\n              onClickCancel={cancelTextHandler}\r\n              onClickSave={placeText}\r\n              isVisiblePrev={isVisiblePrev}\r\n              isVisibleNext={isVisibleNext}\r\n              isClickableNext={isClickableNext}\r\n            />\r\n            {editText?.key && editText.decalPosition && (\r\n              <NavDecalAdjust\r\n                scale={editText?.decalScale}\r\n                rotation={editText?.decalRotation}\r\n                onScale={setScale}\r\n                onRotate={setRotation}\r\n              />\r\n            )}\r\n            {editText &&\r\n              isMinimizedCustomiserNav &&\r\n              navHeaderRef &&\r\n              hasFinishedAllSteps &&\r\n              createPortal(\r\n                <ContainedButton\r\n                  onClick={() => {\r\n                    if (!saveAndApplyChecker()) {\r\n                      return updateIsMinimizedCustomiserNav(false);\r\n                    }\r\n\r\n                    applyText();\r\n                    updateIsMinimizedCustomiserNav(false);\r\n                  }}\r\n                  classNames={styles.navHeaderSaveText}\r\n                >\r\n                  SAVE\r\n                </ContainedButton>,\r\n                navHeaderRef,\r\n              )}\r\n            {popupContainerRef &&\r\n              createPortal(\r\n                <NavTextInput ref={mainTextInputRef} editText={editText} />,\r\n                popupContainerRef,\r\n              )}\r\n          </div>\r\n          {popupContainerRef &&\r\n            shouldShowConfirmCancelText &&\r\n            showConfirmCancelPopup &&\r\n            createPortal(\r\n              <DontShowAgain\r\n                cb={cancelText}\r\n                setShowNotification={setShowConfirmCancelPopup}\r\n                notifName={'editTextCancelText'}\r\n              >\r\n                <span>Cancel text customization?</span>\r\n              </DontShowAgain>,\r\n              popupContainerRef,\r\n            )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <NavTextsSelection onAddTextClicked={addText}></NavTextsSelection>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavText;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}