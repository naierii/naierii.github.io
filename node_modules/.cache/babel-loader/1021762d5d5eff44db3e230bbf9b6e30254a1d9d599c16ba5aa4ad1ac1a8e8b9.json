{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reian\\\\Desktop\\\\Work\\\\Freelance\\\\Boxxer World\\\\boxxerworld-shopify-frontend\\\\customiser\\\\src\\\\components\\\\nav\\\\NavText\\\\NavTextInput.tsx\",\n  _s = $RefreshSig$();\nimport FormInput from '@components/ui/FormInput';\nimport styles from './NavText.module.scss';\nimport { useCustomiserStore } from '@store/customiser';\nimport { forwardRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavTextInput = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(({\n  editText,\n  inputRef\n}) => {\n  _s();\n  const [text, setText] = useState(editText === null || editText === void 0 ? void 0 : editText.text);\n  const {\n    updateText,\n    addText\n  } = useCustomiserStore(state => state);\n  const setTextOnChange = e => {\n    setText(e.target.value);\n  };\n  useEffect(() => {\n    if (editText !== null && editText !== void 0 && editText.key) {\n      updateText(editText.key, {\n        text,\n        // font: font.url,\n        edit: true\n      });\n    } else {\n      if (text) {\n        addText({\n          text\n        });\n      }\n    }\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.textInputContainer,\n    children: /*#__PURE__*/_jsxDEV(FormInput, {\n      ref: inputRef,\n      className: styles.textInput,\n      placeholder: \"Type text here...\",\n      value: editText === null || editText === void 0 ? void 0 : editText.text,\n      onChange: setTextOnChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}, \"vKJ7PiDM16MREOGLMKgrQy+COpc=\", false, function () {\n  return [useCustomiserStore];\n})), \"vKJ7PiDM16MREOGLMKgrQy+COpc=\", false, function () {\n  return [useCustomiserStore];\n});\n_c2 = NavTextInput;\nNavTextInput.displayName = 'NavTextInput';\nexport default NavTextInput;\nvar _c, _c2;\n$RefreshReg$(_c, \"NavTextInput$forwardRef\");\n$RefreshReg$(_c2, \"NavTextInput\");","map":{"version":3,"names":["FormInput","styles","useCustomiserStore","forwardRef","useEffect","useState","jsxDEV","_jsxDEV","NavTextInput","_s","_c","editText","inputRef","text","setText","updateText","addText","state","setTextOnChange","e","target","value","key","edit","className","textInputContainer","children","ref","textInput","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c2","displayName","$RefreshReg$"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavText/NavTextInput.tsx"],"sourcesContent":["import FormInput from '@components/ui/FormInput';\r\nimport styles from './NavText.module.scss';\r\nimport { useCustomiserStore, type TextCustomiser } from '@store/customiser';\r\nimport { forwardRef, useEffect, useState } from 'react';\r\n\r\ninterface NavTextInputProps {\r\n  editText?: TextCustomiser;\r\n  inputRef?: React.RefObject<HTMLInputElement>;\r\n}\r\n\r\nconst NavTextInput = forwardRef(({ editText, inputRef }: NavTextInputProps) => {\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const { updateText, addText } = useCustomiserStore((state) => state);\r\n\r\n  const setTextOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        // font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text });\r\n      }\r\n    }\r\n  }, [text]);\r\n\r\n  return (\r\n    <div className={styles.textInputContainer}>\r\n      <FormInput\r\n        ref={inputRef}\r\n        className={styles.textInput}\r\n        placeholder='Type text here...'\r\n        value={editText?.text}\r\n        onChange={setTextOnChange}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nNavTextInput.displayName = 'NavTextInput';\r\n\r\nexport default NavTextInput;\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,0BAA0B;AAChD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,kBAAkB,QAA6B,mBAAmB;AAC3E,SAASC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxD,MAAMC,YAAY,gBAAAC,EAAA,eAAGN,UAAU,CAAAO,EAAA,GAAAD,EAAA,CAAC,CAAC;EAAEE,QAAQ;EAAEC;AAA4B,CAAC,KAAK;EAAAH,EAAA;EAC7E,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAqBM,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI,CAAC;EACpE,MAAM;IAAEE,UAAU;IAAEC;EAAQ,CAAC,GAAGd,kBAAkB,CAAEe,KAAK,IAAKA,KAAK,CAAC;EAEpE,MAAMC,eAAe,GAAIC,CAAsC,IAAK;IAClEL,OAAO,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEW,GAAG,EAAE;MACjBP,UAAU,CAACJ,QAAQ,CAACW,GAAG,EAAE;QACvBT,IAAI;QACJ;QACAU,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAIV,IAAI,EAAE;QACRG,OAAO,CAAC;UAAEH;QAAK,CAAC,CAAC;MACnB;IACF;EACF,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBACEN,OAAA;IAAKiB,SAAS,EAAEvB,MAAM,CAACwB,kBAAmB;IAAAC,QAAA,eACxCnB,OAAA,CAACP,SAAS;MACR2B,GAAG,EAAEf,QAAS;MACdY,SAAS,EAAEvB,MAAM,CAAC2B,SAAU;MAC5BC,WAAW,EAAC,mBAAmB;MAC/BR,KAAK,EAAEV,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAK;MACtBiB,QAAQ,EAAEZ;IAAgB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;EAAA,QA/BiChC,kBAAkB;AAAA,EA+BnD,CAAC;EAAA,QA/BgCA,kBAAkB;AAAA,EA+BlD;AAACiC,GAAA,GAjCG3B,YAAY;AAmClBA,YAAY,CAAC4B,WAAW,GAAG,cAAc;AAEzC,eAAe5B,YAAY;AAAC,IAAAE,EAAA,EAAAyB,GAAA;AAAAE,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}