{"version":3,"file":"static/js/988.aa76434a.chunk.js","mappings":"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","sources":["webpack://boxxerworld-customiser/./src/components/ui/OptionButton/OptionButton.module.scss?2035","components/ui/OptionButton/OptionButton.tsx","hooks/useHydration/useHydration.ts","hooks/usePortalRef/usePortalRef.ts","webpack://boxxerworld-customiser/./src/components/nav/NavButtons/NavButtons.module.scss?b4ae","components/nav/NavButtons/NavButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFitting/NavFitting.module.scss?96df","components/nav/NavFitting/NavFitting.tsx","components/ui/Image/getSrcSets.ts","webpack://boxxerworld-customiser/./src/components/ui/Image/Image.module.scss?e41e","components/ui/Image/Image.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFlags/NavFlags.module.scss?2098","components/nav/NavFlags/NavFlagsSelect.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavDecalAdjust/NavDecalAdjust.module.scss?c425","components/nav/NavDecalAdjust/NavDecalAdjust.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavEditButtons/NavEditButtons.module.scss?6ae0","components/nav/NavEditButtons/NavEditButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavOptionEdit/NavOptionEdit.module.scss?d15e","components/nav/NavOptionEdit/NavOptionEdit.tsx","components/nav/NavFlags/NavFlagsFlag.tsx","components/nav/NavFlags/NavFlags.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavHeader/NavHeader.module.scss?a403","webpack://boxxerworld-customiser/./src/components/ui/InfoButton/InfoButton.module.scss?0cd7","components/ui/InfoButton/InfoDisplay.tsx","components/ui/InfoButton/InfoButton.tsx","components/nav/NavHeader/NavHeader.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavImages/NavImages.module.scss?0415","components/nav/NavImages/NavImagesImage.tsx","components/nav/NavImages/NavImagesUpload.tsx","components/nav/NavImages/NavImagesSelect.tsx","components/nav/NavImages/NavImages.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavOptions/NavOptions.module.scss?6b01","components/nav/NavOptions/NavOptions.tsx","webpack://boxxerworld-customiser/./src/components/ui/PillButton/PillButton.module.scss?5c47","components/ui/PillButton/PillButton.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/MaterialGroup.module.scss?bec8","components/nav/MaterialGroup/MaterialGroupState.ts","components/nav/MaterialGroup/Material.tsx","components/nav/MaterialGroup/MaterialType.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/SelectedMaterialInfo.module.scss?ad46","components/nav/MaterialGroup/SelectedMaterialInfo.tsx","components/nav/MaterialGroup/MaterialGroup.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavPart/NavPart.module.scss?e3f3","components/nav/NavPart/NavPart.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormInput/FormInput.module.scss?a3cb","components/ui/FormInput/FormInput.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormSelect/FormSelect.module.scss?5df1","components/ui/FormSelect/FormSelect.tsx","services/size.ts","webpack://boxxerworld-customiser/./src/components/nav/NavSize/NavSize.module.scss?68ae","components/nav/NavSize/NavSize.tsx","webpack://boxxerworld-customiser/./src/components/ui/Accordion/Accordion.module.scss?bd05","components/ui/Accordion/Accordion.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavStepButtons/NavStepButtons.module.scss?5fac","components/nav/NavStepButtons/NavStepButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavText.module.scss?7ead","components/ui/Price/Price.module.scss","components/ui/Price/Price.tsx","components/nav/NavText/NavTextFinish.tsx","components/nav/NavText/NavTextNameTypes.tsx","components/nav/NavText/NavTextOutline.tsx","components/nav/NavText/NavTextPlaceTextGuide.tsx","components/nav/NavText/NavTextSelect.tsx","components/nav/NavText/NavTextText.tsx","components/nav/NavText/NavTextsSelection.tsx","lib/canvas.ts","lib/img.util.ts","webpack://boxxerworld-customiser/./src/components/three/CustomiserCanvas/NavTextScene.module.scss?f04f","components/three/CustomiserCanvas/NavTextScene.tsx","components/nav/NavText/NavTextPreview.tsx","components/nav/NavText/NavText.tsx","webpack://boxxerworld-customiser/./src/components/nav/CustomiserNav/CustomiserNav.module.scss?394a","components/nav/CustomiserNav/CustomiserNav.tsx","webpack://boxxerworld-customiser/./src/components/layout/Header/Header.module.scss?47aa","components/layout/Header/Header.tsx","webpack://boxxerworld-customiser/./src/components/layout/Customiser/Customiser.module.scss?e94f","components/layout/Customiser/Customiser.tsx","components/three/Lights/Lights.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OptionButton_root__M63xT\",\"selected\":\"OptionButton_selected__Mea42\"};","import cn from 'classnames';\r\nimport { ButtonHTMLAttributes } from 'react';\r\n\r\nimport styles from './OptionButton.module.scss';\r\n\r\nexport interface OptionButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  className?: string;\r\n  selected?: boolean;\r\n}\r\n\r\nconst OptionButton = ({ className, selected, children, ...rest }: OptionButtonProps) => {\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      [styles.selected]: selected,\r\n    },\r\n    className,\r\n  );\r\n  return (\r\n    <button className={rootClassName} {...rest}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default OptionButton;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const useHydration = () => {\r\n  const [hydrated, setHydrated] = useState(useCustomiserStore.persist.hasHydrated);\r\n\r\n  useEffect(() => {\r\n    const unsubHydrate = useCustomiserStore.persist.onHydrate(() => setHydrated(false)); // Note: this is just in case you want to take into account manual rehydrations. You can remove this if you don't need it/don't want it.\r\n    const unsubFinishHydration = useCustomiserStore.persist.onFinishHydration(() =>\r\n      setHydrated(true),\r\n    );\r\n\r\n    setHydrated(useCustomiserStore.persist.hasHydrated());\r\n\r\n    return () => {\r\n      unsubHydrate();\r\n      unsubFinishHydration();\r\n    };\r\n  }, []);\r\n\r\n  return hydrated;\r\n};\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nexport const usePortalRef = (id: string) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const portalRef = useRef<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) {\r\n      portalRef.current = document.getElementById(id);\r\n      if (portalRef.current) {\r\n        setLoaded(true);\r\n      }\r\n    }\r\n  }, [id, loaded]);\r\n\r\n  return loaded ? portalRef.current : null;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavButtons_root__ON-jJ\"};","import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavButtons.module.scss';\r\n\r\nexport interface NavButtonsProps {\r\n  className?: string;\r\n}\r\n\r\nconst NavButtons = ({ className }: NavButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const cancelPartChange = useCustomiserStore((state) => state.cancelPartChange);\r\n  const resetNav = useCustomiserStore((state) => state.resetNav);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={rootClassName}>\r\n      <Button onClick={() => cancelPartChange()}>Cancel</Button>\r\n      <Button colour='red' onClick={() => resetNav()}>\r\n        Save\r\n      </Button>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"fittingOption\":\"NavFitting_fittingOption__XQUUG\",\"fittingButtons\":\"NavFitting_fittingButtons__Y1hdd\"};","import OptionButton from '@components/ui/OptionButton';\r\nimport { CustomProductOptionFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { motion } from 'framer-motion';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavFitting.module.scss';\r\n\r\nexport interface FittingOptionProps {\r\n  option: CustomProductOptionFragment;\r\n}\r\n\r\nconst FittingOption = ({ option }: FittingOptionProps) => {\r\n  const selectedModels = useCustomiserStore((state) => state.selectedModels);\r\n  const setSelectedModel = useCustomiserStore((state) => state.setSelectedModel);\r\n\r\n  if (!option) {\r\n    return null;\r\n  }\r\n\r\n  const getSelected = selectedModels.find((m) => m.optionId === option.id)?.model;\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={styles.fittingOption}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <h3>{option.name}</h3>\r\n        <div className={styles.fittingButtons}>\r\n          {option.models?.map((m) => (\r\n            <OptionButton\r\n              key={m?.id}\r\n              selected={getSelected?.id === m?.model?.data?.id}\r\n              onClick={() => setSelectedModel(option.id, m?.model?.data)}\r\n            >\r\n              {m?.model?.data?.attributes?.name}\r\n            </OptionButton>\r\n          ))}\r\n        </div>\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NavFitting = () => {\r\n  const fittingOptions = useCustomiserStore(\r\n    (state) => state.customProduct?.attributes?.options,\r\n  ) as Array<CustomProductOptionFragment>;\r\n\r\n  return (\r\n    <>\r\n      {fittingOptions?.map((o) => (\r\n        <FittingOption key={o?.id} option={o} />\r\n      ))}\r\n      <NavButtons />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavFitting;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Formats } from './types';\r\n\r\nfunction getSrcSet(formats: Formats): string | null {\r\n  if (!formats) return null;\r\n\r\n  const fff = Object.entries(formats)\r\n    .map((f) => {\r\n      return f[1]\r\n        ? {\r\n            width: f[1].width,\r\n            url: f[1].url,\r\n          }\r\n        : null;\r\n    })\r\n    .filter((format) => format);\r\n\r\n  return !fff.length\r\n    ? null\r\n    : fff\r\n        .sort((a, b) => {\r\n          if (a?.width && b?.width && a.width < b.width) return -1;\r\n          if (a?.width && b?.width && a.width > b.width) return 1;\r\n          return 0;\r\n        })\r\n        .reduce((acc: any, current: any, index: number, array: any) => {\r\n          return acc + `${current.url} ${current.width}w${index < array.length - 1 ? ', ' : ''}`;\r\n        }, '');\r\n}\r\n\r\nexport default function getSrcSets(formats: Formats): string | null {\r\n  return getSrcSet(formats);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Image_root__u7aDb\"};","import { ImageFragment, Maybe } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { CSSProperties, useMemo } from 'react';\r\nimport getSrcSets from './getSrcSets';\r\n\r\nimport styles from './Image.module.scss';\r\n\r\nexport interface ImageProps {\r\n  className?: string;\r\n  image?: Maybe<ImageFragment>;\r\n  sizes?: string;\r\n}\r\n\r\nconst Image = ({ className, image, sizes }: ImageProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  if (!image) {\r\n    return null;\r\n  }\r\n\r\n  const relativeHeight = useMemo(() => {\r\n    if (image.attributes?.height && image.attributes?.width) {\r\n      return (image.attributes.height / image.attributes.width) * 100;\r\n    }\r\n    return 100;\r\n  }, [image]);\r\n\r\n  const style = { '--image-padding-top': `${relativeHeight}%` } as CSSProperties;\r\n\r\n  const srcSet = useMemo(() => getSrcSets(image.attributes?.formats), [image]);\r\n\r\n  return (\r\n    <div className={rootClassName} style={style}>\r\n      {srcSet && (\r\n        <img src={image.attributes?.url} srcSet={srcSet} sizes={sizes ? sizes : '100vw'} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"flags\":\"NavFlags_flags__S52CT\",\"flag\":\"NavFlags_flag__gtrVs\",\"flagItem\":\"NavFlags_flagItem__rI7sv\",\"flagItemImage\":\"NavFlags_flagItemImage__6ov2x\"};","import Image from '@components/ui/Image';\r\nimport { FlagFragment } from '@graphql/generated/graphql';\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\n\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsSelectProps {\r\n  editFlag?: FlagCustomiser;\r\n  flags: FlagFragment[];\r\n}\r\n\r\nexport const NavFlagsSelect = ({ editFlag, flags }: NavFlagsSelectProps) => {\r\n  const { addFlag, updateFlag } = useCustomiserStore((state) => state);\r\n\r\n  const flagSelected = (flag: FlagFragment) => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        flag: flag,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addFlag({\r\n        flag: flag,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flags}>\r\n      {flags?.map((f) => (\r\n        <div className={styles.flag} key={f.id} onClick={() => flagSelected(f)}>\r\n          <Image image={f.attributes?.image.data} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavDecalAdjust_root__t6vBt\",\"root__rotate\":\"NavDecalAdjust_root__rotate__jXeZv\",\"root__scale\":\"NavDecalAdjust_root__scale__eAAaC\",\"rotate\":\"NavDecalAdjust_rotate__adO98\",\"scale\":\"NavDecalAdjust_scale__gq4ry\"};","/* eslint-disable react/prop-types */\r\nimport { GraphicPriceEntity, GraphicPriceFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport ReactSlider from 'react-slider';\r\nimport styles from './NavDecalAdjust.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\nexport interface NavDecalAdjustProps {\r\n  className?: string;\r\n  prices?: GraphicPriceFragment[];\r\n  scale?: number;\r\n  rotation?: number;\r\n  onScale?: (event: number, price?: GraphicPriceEntity) => void;\r\n  onRotate?: (event: number) => void;\r\n}\r\n\r\nconst range = (start: number, stop: number, step: number) =>\r\n  Array.from({ length: (stop - start) / step + 1 }, (value, index) => start + index * step);\r\n\r\nconst NavDecalAdjust = ({\r\n  className,\r\n  scale = 1,\r\n  rotation = 0,\r\n  prices,\r\n  onScale,\r\n  onRotate,\r\n}: NavDecalAdjustProps) => {\r\n  const portalRef = usePortalRef('CustomiserCanvasControls');\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  const rootRotateClassName = cn(styles.root, className, styles.root__rotate);\r\n  const rootSizeClassName = cn(styles.root, className, styles.root__scale);\r\n  const min = 1;\r\n  const max = 2;\r\n  const numberOfSteps = prices?.length ?? 10;\r\n  const step = (max - min) / (numberOfSteps - 1);\r\n  const marks = range(min, max, step);\r\n\r\n  const formattedPrices = prices?.map((p, i) => ({\r\n    ...p,\r\n    markKey: Number(marks[i].toFixed(5)),\r\n  }));\r\n\r\n  const onChange = (value: number) => {\r\n    const price = formattedPrices?.find((p) => p.markKey === value);\r\n    if (onScale) onScale(value, price);\r\n  };\r\n\r\n  return createPortal(\r\n    <>\r\n      <div className={rootRotateClassName}>\r\n        <ReactSlider\r\n          className={styles.rotate}\r\n          thumbClassName={styles.thumb}\r\n          trackClassName={styles.track}\r\n          markClassName={styles.mark}\r\n          min={0}\r\n          max={360}\r\n          defaultValue={0}\r\n          value={rotation}\r\n          onChange={onRotate}\r\n          renderMark={(props) => {\r\n            // eslint-disable-next-line react/prop-types\r\n            if (props.key && props.key < scale) {\r\n              props.className = 'mark mark-before';\r\n              // eslint-disable-next-line react/prop-types\r\n            } else if (props.key && props.key === scale) {\r\n              props.className = 'mark mark-active';\r\n            }\r\n            return <span {...props} />;\r\n          }}\r\n        />\r\n        <h4>Rotate</h4>\r\n      </div>\r\n      <div className={rootSizeClassName}>\r\n        <h4>Size</h4>\r\n        <ReactSlider\r\n          className={styles.scale}\r\n          thumbClassName={styles.thumb}\r\n          trackClassName={styles.track}\r\n          markClassName={styles.mark}\r\n          marks={marks}\r\n          step={step}\r\n          min={min}\r\n          max={max}\r\n          defaultValue={min}\r\n          value={scale}\r\n          orientation='vertical'\r\n          invert={true}\r\n          onChange={onChange}\r\n          renderMark={(props) => {\r\n            if (props.key && props.key < scale) {\r\n              props.className = 'mark mark-before';\r\n            } else if (props.key && props.key === scale) {\r\n              props.className = 'mark mark-active';\r\n            }\r\n            return <span {...props} />;\r\n          }}\r\n        />\r\n      </div>\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavDecalAdjust;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavEditButtons_root__43Hm3\"};","import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavEditButtons.module.scss';\r\n\r\nexport interface NavEditButtonsProps {\r\n  className?: string;\r\n  onApply?: () => void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst NavEditButtons = ({ className, disabled, onApply }: NavEditButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={rootClassName}>\r\n      <Button onClick={onApply}>Cancel</Button>\r\n      <Button colour='red' onClick={onApply} disabled={disabled}>\r\n        Save\r\n      </Button>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavEditButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavOptionEdit_root__q-pp0\"};","import cn from 'classnames';\r\n\r\nimport styles from './NavOptionEdit.module.scss';\r\n\r\nexport interface NavOptionEditProps {\r\n  className?: string;\r\n  onEdit?: () => void;\r\n  onDelete?: () => void;\r\n}\r\n\r\nconst NavOptionEdit = ({ className, onEdit, onDelete }: NavOptionEditProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <button onClick={onEdit}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24.785 24.788'>\r\n          <path d='M24.785 6.739 18.046 0 0 18.049v6.739h6.739Zm-6.738-3.218 3.218 3.218-1.351 1.352-3.217-3.218Zm-3.112 3.112 3.218 3.218L7.467 20.538l-3.218-3.22ZM2.489 22.298v-3.219l3.218 3.218Z' />\r\n        </svg>\r\n      </button>\r\n      <button onClick={onDelete}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.601 23.219'>\r\n          <path d='m14.601 11.609-1.489-1.489L2.992 0 .001 2.978l8.631 8.631-8.631 8.632 2.991 2.978L13.112 13.1Z' />\r\n          <path d='m9 11.609 1.489 1.489 10.12 10.12L23.6 20.24l-8.631-8.631L23.6 2.977 20.609-.001l-10.12 10.119Z' />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavOptionEdit;\r\n","import Image from '@components/ui/Image';\r\n\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsFlagProps {\r\n  flag: FlagCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavFlagsFlag = ({ flag, setShowSelector: setSelectModel }: NavFlagsFlagProps) => {\r\n  const { updateFlag, deleteFlag } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (flag.key) {\r\n      updateFlag(flag.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (flag.key) {\r\n      deleteFlag(flag.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flagItem}>\r\n      <div className={styles.flagItemImage}>\r\n        <Image image={flag.flag?.attributes?.image.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import { startTransition, useState } from 'react';\r\nimport { NavFlagsSelect } from './NavFlagsSelect';\r\n\r\nimport Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\nimport styles from './NavFlags.module.scss';\r\nimport { NavFlagsFlag } from './NavFlagsFlag';\r\nimport { GraphicPriceEntity, useGetFlagsQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nconst NavFlags = () => {\r\n  const flags = useCustomiserStore((state) => state.flags);\r\n  const updateFlag = useCustomiserStore((state) => state.updateFlag);\r\n  const editFlag = flags?.find((g) => g.edit);\r\n\r\n  const [showSelector, setShowSelector] = useState(false);\r\n\r\n  const { data: flagQuery } = useGetFlagsQuery(\r\n    graphQLClient,\r\n    {\r\n      pagination: { limit: 500 },\r\n    },\r\n    {\r\n      select: (data) => ({ flags: data.flags?.data, prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addFlag = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editFlag?.key) updateFlag(editFlag.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyFlag = () => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editFlag?.decalScale}\r\n            rotation={editFlag?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={flagQuery?.prices}\r\n          />\r\n          {flagQuery?.flags && <NavFlagsSelect editFlag={editFlag} flags={flagQuery.flags} />}\r\n          <NavEditButtons disabled={!editFlag} onApply={applyFlag} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Flags</h3>\r\n            {flags?.map((flag) => (\r\n              <NavFlagsFlag key={flag.key} flag={flag} setShowSelector={setShowSelector} />\r\n            ))}\r\n            <Button colour='red' onClick={addFlag}>\r\n              Add Flag\r\n            </Button>\r\n          </div>\r\n          <NavButtons />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavFlags;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavHeader_root__jnadG\",\"menu\":\"NavHeader_menu__Mmpjx\",\"nav\":\"NavHeader_nav__mJbli\",\"title\":\"NavHeader_title__tOyZd\",\"minimizeIcon\":\"NavHeader_minimizeIcon__GKC2n\",\"minimized\":\"NavHeader_minimized__04mp3\",\"navIcon\":\"NavHeader_navIcon__6iUBm\"};","// extracted by mini-css-extract-plugin\nexport default {\"iInfo\":\"InfoButton_iInfo__0SLm4\",\"iInfo__bgOnclick\":\"InfoButton_iInfo__bgOnclick__3oQL8\",\"iInfo__display\":\"InfoButton_iInfo__display__nKOtb\",\"iInfo__header\":\"InfoButton_iInfo__header__IkMmc\",\"iInfo__body\":\"InfoButton_iInfo__body__6LPfY\",\"iInfo__sampleImg\":\"InfoButton_iInfo__sampleImg__bKcTE\",\"iInfo__closebtn\":\"InfoButton_iInfo__closebtn__+Dwj4\",\"iInfo__styleName\":\"InfoButton_iInfo__styleName__3bDQ2\",\"iInfo__title\":\"InfoButton_iInfo__title__SHp10\",\"infoIcon\":\"InfoButton_infoIcon__Yu7F-\",\"imgIcon\":\"InfoButton_imgIcon__oWQbZ\"};","import { ReactNode } from 'react';\r\nimport styles from './InfoButton.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\ninterface Props {\r\n  title: string | Falsey;\r\n  cb?: () => void;\r\n  children?: ReactNode;\r\n}\r\nconst InfoDisplay = ({ title, cb, children }: Props) => {\r\n  return (\r\n    <>\r\n      <div className={styles.iInfo} onClick={(e) => e.stopPropagation()}>\r\n        <div className={styles.iInfo__bgOnclick} onClick={cb} />\r\n        <div className={styles.iInfo__display}>\r\n          <div className={styles.iInfo__header}>\r\n            <span className={styles.iInfo__title}>{`${title}` || 'EXAMPLES'}</span>\r\n            <span className={styles.iInfo__closebtn} onClick={cb}>\r\n              x\r\n            </span>\r\n          </div>\r\n\r\n          <div className={styles.iInfo__body}>\r\n            {children || (\r\n              <>\r\n                <div className={styles.iInfo__styleName}>PRINTED</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119118469/names-printed.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>EMBROIDERY</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119222257/names-flat-embroidery.png'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>3D EMBROIDERY</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119313289/names-3d-embroidery.jpg'\r\n                  alt=''\r\n                />\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119344264/names-3d-embroidery-perspective.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>3D CRYSTALS</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119433059/names-3d-crystals.jpg'\r\n                  alt=''\r\n                />\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526727869947/names-3d-crystal-perspective.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>GLITTER</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119258957/names-glitter.pg.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>NAME PATCH</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119480153/name-patch-on-shorts.jpg'\r\n                  alt=''\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoDisplay;\r\n","import { usePortalRef } from '@hooks';\r\nimport styles from './InfoButton.module.scss';\r\nimport { createPortal } from 'react-dom';\r\nimport { ReactNode, useState } from 'react';\r\nimport { Falsey } from 'lodash';\r\nimport InfoDisplay from './InfoDisplay';\r\n\r\ninterface Props {\r\n  title: string | Falsey;\r\n  propStyles?: {\r\n    [key: string]: string;\r\n  };\r\n  children?: ReactNode;\r\n}\r\n\r\nconst InfoButton = ({ title, propStyles, children }: Props) => {\r\n  const portalRef = usePortalRef('popupContainer');\r\n  const [shouldShow, setShouldShow] = useState<boolean>(false);\r\n\r\n  if (!portalRef) return null;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={styles.infoIcon}\r\n        onClick={(e) => {\r\n          setShouldShow(true);\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <img\r\n          src='/icons/info-icon.png'\r\n          alt='info icon'\r\n          className={`${styles.imgIcon} ${propStyles?.imgIcon}`}\r\n        />\r\n      </div>\r\n      {shouldShow &&\r\n        createPortal(\r\n          <>\r\n            <InfoDisplay\r\n              title={title}\r\n              cb={() => {\r\n                setShouldShow(false);\r\n              }}\r\n            >\r\n              {children}\r\n            </InfoDisplay>\r\n          </>,\r\n          portalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoButton;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport styles from './NavHeader.module.scss';\r\nimport InfoButton from '@components/ui/InfoButton';\r\n\r\nexport interface NavHeaderProps {\r\n  className?: string;\r\n  toggle: () => void;\r\n  isOpen: boolean;\r\n  isMinimized?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst NavHeader = ({ className, toggle, isOpen, isMinimized = false, onClick }: NavHeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedNav = useCustomiserStore((state) => state.selectedNav);\r\n\r\n  if (isOpen) {\r\n    return null;\r\n  }\r\n\r\n  const minimizeIconClassname = cn(styles.minimizeIcon, {\r\n    [styles.minimized]: isMinimized,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={rootClassName} onClick={onClick}>\r\n        <div className={styles.nav}>\r\n          <div className={styles.title}>{selectedNav?.name}</div>\r\n          <div className={minimizeIconClassname}>\r\n            <svg viewBox='0 0 330 330'>\r\n              <path\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                id='XMLID_224_'\r\n                d='M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394  l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393  C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z'\r\n              />\r\n            </svg>\r\n          </div>\r\n          <InfoButton title={selectedNav?.name} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavHeader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dropZone\":\"NavImages_dropZone__4YMrM\",\"image\":\"NavImages_image__svpqZ\",\"graphicItem\":\"NavImages_graphicItem__XenKS\",\"graphicItemImage\":\"NavImages_graphicItemImage__8GS2T\"};","import Image from '@components/ui/Image';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesImageProps {\r\n  graphic: GraphicCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavImagesImage = ({\r\n  graphic,\r\n  setShowSelector: setSelectModel,\r\n}: NavImagesImageProps) => {\r\n  const { updateGraphic, deleteGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (graphic.key) {\r\n      updateGraphic(graphic.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (graphic.key) {\r\n      deleteGraphic(graphic.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphicItem}>\r\n      <div className={styles.graphicItemImage}>\r\n        <Image image={graphic.graphic?.attributes?.image?.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  GraphicFragment,\r\n  useCreateGraphicMutation,\r\n  useUploadMultipleFilesMutation,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { Dispatch, SetStateAction, useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesUploadProps {\r\n  setGraphic: (graphic: GraphicFragment) => void;\r\n}\r\n\r\nexport const NavImagesUpload = ({ setGraphic }: NavImagesUploadProps) => {\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const { mutate: createGraphicMutation } = useCreateGraphicMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const graphic = data.createGraphic?.data;\r\n      setSaving(false);\r\n      if (graphic) setGraphic(graphic);\r\n    },\r\n  });\r\n\r\n  const { mutate: fileUploadMutate } = useUploadMultipleFilesMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const fileIDs = data.multipleUpload.map((f) => f?.data?.id) as string[];\r\n      createGraphicMutation({ data: { image: fileIDs[0], customer: true, name: fileIDs[0] } });\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback((acceptedFiles: File[]) => {\r\n    setSaving(true);\r\n    fileUploadMutate({ files: acceptedFiles });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'image/jpeg': [],\r\n      'image/png': [],\r\n    },\r\n    maxFiles: 1,\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h5>Upload an image</h5>\r\n      <div className={styles.dropZone} {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <div>\r\n          <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.219 29.191'>\r\n            <g>\r\n              <path d='M11.609 0 10.12 1.489 0 11.609 2.978 14.6l8.631-8.631 8.632 8.631 2.978-2.991L13.1 1.489Z' />\r\n              <path d='M14.356 29.191h-5v-26h5Z' />\r\n            </g>\r\n          </svg>\r\n          {saving ? (\r\n            <h5>Please wait...</h5>\r\n          ) : isDragActive ? (\r\n            <h5>Drop images here ...</h5>\r\n          ) : (\r\n            <h5>Click or drag images here to upload</h5>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { GraphicFragment } from '@graphql/generated/graphql';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState } from 'react';\r\nimport Image from '@components/ui/Image';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesUpload } from './NavImagesUpload';\r\nimport Button from '@components/ui/Button';\r\n\r\nexport interface NavImagesSelectProps {\r\n  editGraphic?: GraphicCustomiser;\r\n  graphic?: GraphicFragment;\r\n}\r\n\r\nexport const NavImagesSelect = ({ editGraphic, graphic }: NavImagesSelectProps) => {\r\n  const [currentGraphic, setCurrentGraphic] = useState<GraphicFragment | undefined>(graphic);\r\n  const { addGraphic, updateGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const graphicSelected = (graphic: GraphicFragment) => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        graphic,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addGraphic({\r\n        graphic,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setGraphic = (graphic: GraphicFragment) => {\r\n    setCurrentGraphic(graphic);\r\n    graphicSelected(graphic);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphics}>\r\n      {currentGraphic ? (\r\n        <>\r\n          <Image className={styles.image} image={currentGraphic.attributes?.image?.data} />\r\n          <Button onClick={() => setCurrentGraphic(undefined)}>Change Image</Button>\r\n        </>\r\n      ) : (\r\n        <NavImagesUpload setGraphic={setGraphic} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import Button from '@components/ui/Button';\r\nimport { GraphicPriceEntity, useGetImagesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { startTransition, useState } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesImage } from './NavImagesImage';\r\nimport { NavImagesSelect } from './NavImagesSelect';\r\n\r\nconst NavImages = () => {\r\n  const [showSelector, setShowSelector] = useState(false);\r\n  const graphics = useCustomiserStore((state) => state.graphics);\r\n  const updateGraphic = useCustomiserStore((state) => state.updateGraphic);\r\n  const editGraphic = graphics?.find((g) => g.edit);\r\n\r\n  const { data: imageQuery } = useGetImagesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => ({ prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addImage = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editGraphic?.key) updateGraphic(editGraphic.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyImage = () => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editGraphic?.decalScale}\r\n            rotation={editGraphic?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={imageQuery?.prices}\r\n          />\r\n          <NavImagesSelect editGraphic={editGraphic} graphic={editGraphic?.graphic} />\r\n          <NavEditButtons disabled={!editGraphic} onApply={applyImage} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Images</h3>\r\n            {graphics?.map((graphic) => (\r\n              <NavImagesImage\r\n                key={graphic.key}\r\n                graphic={graphic}\r\n                setShowSelector={setShowSelector}\r\n              />\r\n            ))}\r\n            <Button colour='red' onClick={addImage}>\r\n              Add Image\r\n            </Button>\r\n          </div>\r\n          <NavButtons />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavImages;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavOptions_root__Gotx6\",\"option\":\"NavOptions_option__GpS8E\",\"optionTitle\":\"NavOptions_optionTitle__m6iQF\",\"required\":\"NavOptions_required__Wy+GM\",\"icon\":\"NavOptions_icon__KPrLI\",\"iconSelected\":\"NavOptions_iconSelected__ZnEvu\"};","import { NavItem, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport styles from './NavOptions.module.scss';\r\n\r\nexport interface NavOptionsProps {\r\n  toggle: () => void;\r\n}\r\n\r\nconst NavOptions = ({ toggle }: NavOptionsProps) => {\r\n  const navItems = useCustomiserStore((state) => state.navItems);\r\n  const sizingVariation = useCustomiserStore((state) => state.sizing?.variation);\r\n  const parts = useCustomiserStore((state) => state.savedParts);\r\n  const flags = useCustomiserStore((state) => state.flags);\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n  const setSelectedNav = useCustomiserStore((state) => state.setSelectedNav);\r\n\r\n  const handleClick = (index: number) => {\r\n    toggle();\r\n    setSelectedNav(index);\r\n  };\r\n\r\n  const isSelected = (item: NavItem) => {\r\n    if (item.type === 'fitting') return true;\r\n    if (item.type === 'size' && sizingVariation) return true;\r\n    if (item.type === 'part' && parts.find((p) => p.part.id === item.id)) return true;\r\n    if (item.type === 'flags' && flags.length) return true;\r\n    if (item.type === 'names' && texts.length) return true;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {navItems.map((item) => (\r\n        <button\r\n          className={styles.option}\r\n          key={item.index}\r\n          onClick={() => handleClick(item.index ? item.index : 0)}\r\n        >\r\n          <div className={styles.optionTitle}>\r\n            <h3>{item.name}</h3>\r\n            {item.required && <span className={styles.required}>Required</span>}\r\n          </div>\r\n          <svg\r\n            className={cn(styles.icon, { [styles.iconSelected]: isSelected(item) })}\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            viewBox='0 0 26.223 20.854'\r\n          >\r\n            <path d='m.854 11.955 2.604-3.11L9.952 14.3 21.736.248l3.102 2.614-14.39 17.22Z' />\r\n          </svg>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavOptions;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pillButton\":\"PillButton_pillButton__SdZPI\",\"pillButtonSelected\":\"PillButton_pillButtonSelected__qUXX-\",\"darkGrey\":\"PillButton_darkGrey__Awkzq\",\"black\":\"PillButton_black__SrGWm\"};","import cn from 'classnames';\r\nimport { ButtonHTMLAttributes } from 'react';\r\n\r\nimport styles from './PillButton.module.scss';\r\n\r\nexport interface PillButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  className?: string;\r\n  selected?: boolean;\r\n  color?: 'red' | 'black' | 'darkGrey';\r\n}\r\n\r\nconst PillButton = ({\r\n  className,\r\n  children,\r\n  selected = false,\r\n  color = 'red',\r\n  ...rest\r\n}: PillButtonProps) => {\r\n  const rootClassName = cn(\r\n    styles.pillButton,\r\n    { [styles.pillButtonSelected]: selected, [styles[color]]: color },\r\n    className,\r\n  );\r\n  return (\r\n    <button className={rootClassName} {...rest}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PillButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MaterialGroup_root__M5bHl\",\"colourGroups\":\"MaterialGroup_colourGroups__G3KSo\",\"materialType\":\"MaterialGroup_materialType__X63YP\",\"materialType__title\":\"MaterialGroup_materialType__title__nQjVb\",\"materials\":\"MaterialGroup_materials__iAoDB\"};","import { create, StateCreator, StoreApi } from 'zustand';\r\nimport createContext from 'zustand/context';\r\nimport produce from 'immer';\r\nimport { devtools } from 'zustand/middleware';\r\nimport {\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n} from '@graphql/generated/graphql';\r\nimport { uniqBy } from 'lodash';\r\n\r\nconst uniqueColourGroups = (array: MaterialColourGroupEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterialTypes = (array: MaterialTypeEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterials = (array: MaterialEntity[]) => uniqBy(array, 'id');\r\ninterface MaterialGroupInitialState {\r\n  colourGroups: MaterialColourGroupEntity[];\r\n  materialTypes: MaterialTypeEntity[];\r\n  materials: MaterialEntity[];\r\n  selectedColourGroup?: MaterialColourGroupEntity;\r\n  selectedMaterialType?: MaterialTypeEntity;\r\n}\r\nexport interface MaterialGroupState extends MaterialGroupInitialState {\r\n  resetMaterialGroup: () => void;\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => void;\r\n  filteredMaterials: () => MaterialEntity[];\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => void;\r\n  setMaterialType: (materialType: MaterialTypeEntity) => void;\r\n}\r\n\r\nconst initialState: MaterialGroupInitialState = {\r\n  colourGroups: [],\r\n  materialTypes: [],\r\n  materials: [],\r\n};\r\n\r\nconst createMaterialGroup: StateCreator<MaterialGroupState, [['zustand/devtools', never]], []> = (\r\n  set,\r\n  get,\r\n) => ({\r\n  ...initialState,\r\n  filteredMaterials: () => {\r\n    const materials = get().materials;\r\n    const colourGroup = get().selectedColourGroup;\r\n    const filteredMaterials = materials.filter((m) =>\r\n      m.attributes?.colourGroups?.data.find((g) => g.id === colourGroup?.id),\r\n    );\r\n    return filteredMaterials;\r\n  },\r\n  resetMaterialGroup: () => set(initialState),\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        const colourGroups = materials.flatMap(\r\n          (d) => d.attributes?.colourGroups?.data,\r\n        ) as MaterialColourGroupEntity[];\r\n        state.colourGroups = uniqueColourGroups(colourGroups);\r\n        if (colourGroup) {\r\n          state.selectedColourGroup = colourGroup;\r\n        } else {\r\n          state.selectedColourGroup = state.colourGroups[0];\r\n        }\r\n\r\n        const materialTypes = materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n\r\n        if (materialType) {\r\n          state.selectedMaterialType = materialType;\r\n        } else {\r\n          state.selectedMaterialType = state.materialTypes[0];\r\n        }\r\n\r\n        state.materials = uniqueMaterials(materials);\r\n      }),\r\n    );\r\n  },\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedColourGroup = colourGroup;\r\n        const materialTypes = state.materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n      }),\r\n    );\r\n  },\r\n  setMaterialType: (materialType: MaterialTypeEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedMaterialType = materialType;\r\n      }),\r\n    );\r\n  },\r\n});\r\n\r\nexport const { Provider, useStore: useMaterialGroupStore } =\r\n  createContext<StoreApi<MaterialGroupState>>();\r\n\r\nexport const createStore = () => create<MaterialGroupState>()(devtools(createMaterialGroup));\r\n","import { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport styles from './MaterialGroup.module.scss';\r\n\r\nexport interface MaterialProps {\r\n  className?: string;\r\n  material: MaterialFragment;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n}\r\n\r\nexport const Material = ({ className, material, onMaterialSelected }: MaterialProps) => {\r\n  const rootClassName = cn(styles.material, className);\r\n\r\n  const mapImage = material?.attributes?.images?.find((i) => i?.mapType === 'map');\r\n\r\n  const onClick = () => {\r\n    if (material) {\r\n      onMaterialSelected(material);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className={rootClassName} onClick={onClick} data-name={material.attributes?.name}>\r\n      {mapImage && <img src={mapImage?.image?.data?.attributes?.formats['thumbnail'].url} />}\r\n    </button>\r\n  );\r\n};\r\n","import PillButton from '@components/ui/PillButton';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { Material } from './Material';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { useMaterialGroupStore } from './MaterialGroupState';\r\n\r\nexport interface MaterialTypeProps {\r\n  className?: string;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n}\r\n\r\nexport const MaterialType = ({\r\n  className,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n}: MaterialTypeProps) => {\r\n  const rootClassName = cn(styles.materialType, className);\r\n\r\n  const {\r\n    materialTypes,\r\n    filteredMaterials: getFilteredMaterials,\r\n    materials,\r\n  } = useMaterialGroupStore();\r\n\r\n  const filteredMaterials = hideColorGroups ? materials : getFilteredMaterials();\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && <h5>Texture</h5>}\r\n      {materialTypes.map((mt) => (\r\n        <div key={mt.id} className={styles.materialType}>\r\n          <h6 className={styles.materialType__title}>{mt.attributes?.name}</h6>\r\n          <div className={styles.materials}>\r\n            {filteredMaterials\r\n              .filter((m) => m.attributes?.type?.data?.id === mt.id)\r\n              .map((m) => (\r\n                <Material key={m.id} material={m} onMaterialSelected={onMaterialSelected} />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SelectedMaterialInfo_root__kIp+x\",\"root__noMaterial\":\"SelectedMaterialInfo_root__noMaterial__dtWKf\",\"materialName\":\"SelectedMaterialInfo_materialName__vha4F\"};","import { FC, useMemo } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport styles from './SelectedMaterialInfo.module.scss';\r\n\r\nconst SelectedMaterialInfo: FC = () => {\r\n  const portalRef = usePortalRef('CustomiserNavMaterial');\r\n  const { selectedPart, parts } = useCustomiserStore();\r\n\r\n  const selectedMaterial = useMemo(\r\n    () => parts.find((part) => part.part.id === selectedPart?.id)?.material,\r\n    [selectedPart, parts],\r\n  );\r\n\r\n  if (!portalRef) return null;\r\n\r\n  if (!selectedMaterial) {\r\n    return ReactDOM.createPortal(\r\n      <div className={cn(styles.root, styles.root__noMaterial)}>No material selected.</div>,\r\n      portalRef,\r\n    );\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={styles.root}>\r\n      <div className={styles.materialName}>{selectedMaterial.attributes?.name}</div>\r\n      {/* TODO: Add currency */}\r\n      <div>${selectedMaterial.attributes?.price?.data?.attributes?.price}</div>\r\n      <small>\r\n        <i>TODO: Add currency</i>\r\n      </small>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default SelectedMaterialInfo;\r\n","import {\r\n  InputMaybe,\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialFragment,\r\n  MaterialGroupEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n  useGetMaterialsQuery,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nimport cn from 'classnames';\r\nimport { useEffect } from 'react';\r\n\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { createStore, Provider, useMaterialGroupStore } from './MaterialGroupState';\r\nimport { MaterialType } from './MaterialType';\r\nimport SelectedMaterialInfo from './SelectedMaterialInfo';\r\n\r\nexport interface MaterialGroupProps {\r\n  className?: string;\r\n  materialGroup?: Maybe<MaterialGroupEntity>;\r\n  materialType?: Maybe<MaterialTypeEntity>;\r\n  colourGroup?: Maybe<MaterialColourGroupEntity>;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n}\r\n\r\nconst MaterialGroupLoader = ({\r\n  className,\r\n  materialGroup,\r\n  materialType,\r\n  colourGroup,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n}: MaterialGroupProps) => {\r\n  const colourGroups = useMaterialGroupStore((state) => state.colourGroups);\r\n  const selectedColourGroup = useMaterialGroupStore((state) => state.selectedColourGroup);\r\n  const setMaterials = useMaterialGroupStore((state) => state.setMaterials);\r\n  const setColourGroup = useMaterialGroupStore((state) => state.setColourGroup);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const typeIds = materialGroup?.attributes?.materialTypes\r\n    ? (materialGroup.attributes.materialTypes.data.map((t) => t.id) as InputMaybe<string>[])\r\n    : [];\r\n\r\n  const { data: materials } = useGetMaterialsQuery(\r\n    graphQLClient,\r\n    { filters: { type: { id: { in: typeIds } } }, pagination: { pageSize: 200 } },\r\n    {\r\n      select: (data) => data.materials?.data as MaterialEntity[],\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (materials?.length) {\r\n      // // TODO - remove: temporary for testing rainbow\r\n      // if (!materials.find((a) => a.id === '999')) {\r\n      //   // eslint-disable-next-line\r\n      //   // @ts-ignore\r\n      //   materials.push(testMaterial);\r\n      // }\r\n      // console.log('materials', materials);\r\n      setMaterials(materials, materialType, colourGroup);\r\n    }\r\n  }, [materials]);\r\n\r\n  if (!materialGroup) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && (\r\n        <>\r\n          <h5>Colour</h5>\r\n          <div className={styles.colourGroups}>\r\n            {colourGroups.map((group) => (\r\n              <button key={group.id} onClick={() => setColourGroup(group)}>\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  viewBox='0 0 42 42'\r\n                  strokeWidth={4}\r\n                  stroke={\r\n                    selectedColourGroup?.id === group.id\r\n                      ? '#000'\r\n                      : group.attributes?.colour ?? '#000'\r\n                  }\r\n                  fill={group.attributes?.colour ?? '#000'}\r\n                >\r\n                  <rect width='100%' height='100%' />\r\n                </svg>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n      <MaterialType hideColorGroups={hideColorGroups} onMaterialSelected={onMaterialSelected} />\r\n      <SelectedMaterialInfo />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MaterialGroup = (props: MaterialGroupProps) => {\r\n  return (\r\n    <Provider createStore={createStore}>\r\n      <MaterialGroupLoader {...props} />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default MaterialGroup;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"showOptional\":\"NavPart_showOptional__s6PPL\"};","import PillButton from '@components/ui/PillButton';\r\nimport { CustomProductPartFragment, MaterialFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport NavButtons from '../NavButtons';\r\n\r\nimport styles from './NavPart.module.scss';\r\n\r\nexport interface NavPartProps {\r\n  className?: string;\r\n  part: CustomProductPartFragment;\r\n}\r\n\r\nconst NavPart = ({ className, part }: NavPartProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedPart = useCustomiserStore((state) => state.selectedPart);\r\n  const setPart = useCustomiserStore((state) => state.setPart);\r\n  const removePart = useCustomiserStore((state) => state.removePart);\r\n  const parts = useCustomiserStore((state) => state.parts);\r\n  const currentPart = useMemo(() => parts.find((p) => p.part.id === part?.id), [part]);\r\n  const [showOptional, setShowOptional] = useState(false);\r\n\r\n  if (!part?.materialGroup?.data) {\r\n    return null;\r\n  }\r\n\r\n  const onMaterialSelected = (material: MaterialFragment) => {\r\n    if (selectedPart && material) {\r\n      setPart(selectedPart, material);\r\n    }\r\n  };\r\n\r\n  const optionalOnClick = (show: boolean) => {\r\n    setShowOptional(show);\r\n    if (!show) {\r\n      removePart(part);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (part.optional && !showOptional && currentPart) {\r\n      setShowOptional(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        key={part.id}\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        {part.optional && (\r\n          <PillButton\r\n            className={styles.showOptional}\r\n            selected={showOptional}\r\n            onClick={() => optionalOnClick(!showOptional)}\r\n          >\r\n            {showOptional ? 'Remove' : 'Add'} {part.name}\r\n          </PillButton>\r\n        )}\r\n        {(!part.optional || (part.optional && showOptional)) && (\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <MaterialGroup\r\n              materialGroup={part.materialGroup.data}\r\n              materialType={currentPart?.material.attributes?.type?.data}\r\n              colourGroup={currentPart?.material.attributes?.colourGroups?.data[0]}\r\n              onMaterialSelected={onMaterialSelected}\r\n            />\r\n          </Suspense>\r\n        )}\r\n      </motion.div>\r\n      <NavButtons />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavPart;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormInput_root__cf10F\",\"input\":\"FormInput_input__gRXur\",\"label\":\"FormInput_label__9L2lb\"};","import cn from 'classnames';\r\nimport { InputHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormInput.module.scss';\r\n\r\nexport interface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormInput = ({ className, placeholder, children, ...props }: FormInputProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <input className={styles.input} {...props} placeholder=' ' />\r\n      <label className={styles.label}>{placeholder}</label>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormSelect_root__li+Rt\",\"select\":\"FormSelect_select__ftYcv\",\"icon\":\"FormSelect_icon__juFw+\"};","import cn from 'classnames';\r\nimport { SelectHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormSelect.module.scss';\r\n\r\nexport interface FormSelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormSelect = ({ className, children, ...props }: FormSelectProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <select className={styles.select} {...props}>\r\n        {children}\r\n      </select>\r\n      <svg xmlns='http://www.w3.org/2000/svg' className={styles.icon} viewBox='0 0 18.108 30.546'>\r\n        <path d='m2.835 30.545-2.836-2.836 12.387-12.436L0 2.835 2.836-.001l15.272 15.274Z' />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSelect;\r\n","import { ShopifyProductVariantFragment } from '@graphql/generated/graphql-shopify';\r\n\r\nconst getSizeVariation = (\r\n  unit: string,\r\n  weight: number,\r\n  variations: Array<ShopifyProductVariantFragment>,\r\n) => {\r\n  let size = '';\r\n  if (unit === 'KGS') {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 10:\r\n        size = 'BABY';\r\n        break;\r\n      case 10 <= weight && weight < 16:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 16 <= weight && weight < 22:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 22 <= weight && weight < 30:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 30 <= weight && weight < 40:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 40 <= weight && weight < 50:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 50 <= weight && weight < 59:\r\n        size = 'XS';\r\n        break;\r\n      case 59 <= weight && weight < 69:\r\n        size = 'S';\r\n        break;\r\n      case 69 <= weight && weight < 79:\r\n        size = 'M';\r\n        break;\r\n      case 79 <= weight && weight < 90:\r\n        size = 'L';\r\n        break;\r\n      case 90 <= weight && weight < 101:\r\n        size = 'XL';\r\n        break;\r\n      case 101 <= weight && weight < 111:\r\n        size = '2XL';\r\n        break;\r\n      case 111 <= weight && weight < 120:\r\n        size = '3XL';\r\n        break;\r\n      case 120 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  } else {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 22:\r\n        size = 'BABY';\r\n        break;\r\n      case 22 <= weight && weight < 35.3:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 35.3 <= weight && weight < 48.5:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 48.5 <= weight && weight < 66.1:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 66.1 <= weight && weight < 88.2:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 88.2 <= weight && weight < 110.2:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 110.2 <= weight && weight < 130:\r\n        size = 'XS';\r\n        break;\r\n      case 130 <= weight && weight < 152.1:\r\n        size = 'S';\r\n        break;\r\n      case 152.1 <= weight && weight < 174.2:\r\n        size = 'M';\r\n        break;\r\n      case 174.2 <= weight && weight < 198.4:\r\n        size = 'L';\r\n        break;\r\n      case 198.4 <= weight && weight < 222.7:\r\n        size = 'XL';\r\n        break;\r\n      case 222.7 <= weight && weight < 244.7:\r\n        size = '2XL';\r\n        break;\r\n      case 244.7 <= weight && weight < 264.6:\r\n        size = '3XL';\r\n        break;\r\n      case 264.6 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  }\r\n\r\n  return variations.find((v) => v.sku?.endsWith(size));\r\n};\r\n\r\nexport default getSizeVariation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"variations\":\"NavSize_variations__cMdjc\",\"unitToggle\":\"NavSize_unitToggle__LqIuI\",\"toggleButton\":\"NavSize_toggleButton__5PZDI\",\"toggleButtonSelected\":\"NavSize_toggleButtonSelected__au+Rx\"};","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport getSizeVariation from '@services/size';\r\nimport { UNIT } from '@store/constants';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { ChangeEvent, useEffect } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavSize.module.scss';\r\n\r\nexport interface NavSizeProps {\r\n  className?: string;\r\n}\r\n\r\nconst NavSize = ({ className }: NavSizeProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const variations = useCustomiserStore((state) => state.variations);\r\n  const setSizing = useCustomiserStore((state) => state.setSizing);\r\n  const weight = useCustomiserStore((state) => state.sizing?.weight);\r\n  const height = useCustomiserStore((state) => state.sizing?.height);\r\n  const variation = useCustomiserStore((state) => state.sizing?.variation);\r\n\r\n  useEffect(() => {\r\n    if (weight?.value && weight.unit) {\r\n      const variation = getSizeVariation(weight.unit, weight.value, variations);\r\n      setSizing(undefined, undefined, variation);\r\n    }\r\n  }, [weight, variations]);\r\n\r\n  const onHeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing({ value: Number(e.target.value), unit: 'CM' });\r\n  };\r\n\r\n  const onWeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing(undefined, { value: Number(e.target.value), unit: 'KGS' });\r\n  };\r\n\r\n  const onVariationChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const id = e.target.value;\r\n    const selectedVariation = variations.find((v) => v.id === id);\r\n    setSizing(undefined, undefined, selectedVariation);\r\n  };\r\n\r\n  const setHeightUnit = (unit: string) => {\r\n    setSizing({ value: height?.value, unit });\r\n  };\r\n\r\n  const setWeightUnit = (unit: string) => {\r\n    setSizing(undefined, { value: weight?.value, unit });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <h3>Size Details</h3>\r\n        <p>\r\n          To help us make sure the size you’ve selected is correct, enter your height and weight\r\n          below.\r\n        </p>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Height'\r\n          step='0.1'\r\n          required\r\n          value={height?.value ? height.value : ''}\r\n          onChange={onHeightChange}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.CM,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.CM)}\r\n            >\r\n              {UNIT.HEIGHT.CM}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.INCH,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.INCH)}\r\n            >\r\n              {UNIT.HEIGHT.INCH}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Weight'\r\n          step='0.1'\r\n          required\r\n          value={weight?.value ? weight.value : ''}\r\n          onChange={onWeightChange}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.KG,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.KG)}\r\n            >\r\n              {UNIT.WEIGHT.KG}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.LB,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.LB)}\r\n            >\r\n              {UNIT.WEIGHT.LB}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <h3>Suggested Size</h3>\r\n        <FormSelect value={variation?.id} onChange={onVariationChange}>\r\n          {variations.map((v) => (\r\n            <option key={v.id} value={v.id}>\r\n              {v.title}\r\n            </option>\r\n          ))}\r\n        </FormSelect>\r\n      </motion.div>\r\n      <NavButtons />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavSize;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"titleContainer\":\"Accordion_titleContainer__4Sz8F\",\"titleStep\":\"Accordion_titleStep__zM9JM\",\"active\":\"Accordion_active__ceAJO\",\"titleButton\":\"Accordion_titleButton__vj8Pw\",\"content\":\"Accordion_content__FiW6c\",\"imgIcon\":\"Accordion_imgIcon__bRbYE\"};","import cn from 'classnames';\r\nimport { FC, ReactNode, useRef } from 'react';\r\nimport Button from '../Button';\r\nimport { current } from 'immer';\r\n\r\nimport styles from './Accordion.module.scss';\r\nimport InfoButton from '../InfoButton';\r\n\r\nexport type AccordionProps = {\r\n  className?: string;\r\n\r\n  step: string | number;\r\n  currentStep: string | number;\r\n  onTitleClick?: (step: string | number) => void;\r\n\r\n  title: ReactNode;\r\n  children?: ReactNode;\r\n};\r\n\r\nconst Accordion: FC<AccordionProps> = ({\r\n  className,\r\n  children,\r\n  title,\r\n  currentStep,\r\n  step,\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  onTitleClick = () => {},\r\n}) => {\r\n  // TODO - Improve this\r\n  const titlesWithInfo = ['TEXT COLOR'];\r\n  const shouldShowInfoButton =\r\n    title && typeof title === 'string' && titlesWithInfo.includes(title.toUpperCase());\r\n\r\n  const handleTitleClick = () => {\r\n    // console.log('key click', keyRef.current);\r\n\r\n    onTitleClick(step);\r\n  };\r\n\r\n  const titleClassName = cn(styles.titleContainer, { [styles.active]: step === currentStep });\r\n\r\n  return (\r\n    <div className={cn(className)}>\r\n      <div className={titleClassName} onClick={handleTitleClick}>\r\n        {typeof step === 'number' && (\r\n          <Button className={styles.titleStep} colour='red'>\r\n            Step {step + 1}\r\n          </Button>\r\n        )}\r\n        <Button className={styles.titleButton}>\r\n          {title}\r\n          {shouldShowInfoButton && <InfoButton title='TEXT COLOR' propStyles={styles} />}\r\n        </Button>\r\n      </div>\r\n      {step === currentStep && <div className={styles.content}>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavStepButtons_root__6pgaM\"};","import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavStepButtons.module.scss';\r\n\r\nexport interface NavStepButtonsProps {\r\n  className?: string;\r\n  step?: number;\r\n  maxStep: number;\r\n  onNext?: () => void;\r\n  onPrevious?: () => void;\r\n  onApply?: () => void;\r\n}\r\n\r\nconst NavStepButtons = ({\r\n  className,\r\n  step,\r\n  maxStep,\r\n  onApply,\r\n  onNext,\r\n  onPrevious,\r\n}: NavStepButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={rootClassName}>\r\n      {step === 0 ? (\r\n        <Button colour='darkGrey' onClick={onApply}>\r\n          Cancel\r\n        </Button>\r\n      ) : (\r\n        <Button onClick={onPrevious} disabled={step === 0}>\r\n          Prev Step\r\n        </Button>\r\n      )}\r\n\r\n      {/* <Button>View Model</Button> */}\r\n\r\n      {step === maxStep ? (\r\n        <Button colour='red' onClick={onApply}>\r\n          Save\r\n        </Button>\r\n      ) : (\r\n        <Button colour='yellow' onClick={onNext}>\r\n          Next Step\r\n        </Button>\r\n      )}\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavStepButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"arial\":\"NavText_arial__de7L4\",\"oswald\":\"NavText_oswald__siLdE\",\"college\":\"NavText_college__YR6iT\",\"ballantines\":\"NavText_ballantines__1B1LU\",\"navTextEdit\":\"NavText_navTextEdit__8WUIS\",\"textItem\":\"NavText_textItem__nQrv4\",\"textItemText\":\"NavText_textItemText__op7hZ\",\"finishSelections\":\"NavText_finishSelections__fH4yd\",\"disabled\":\"NavText_disabled__M-nHo\",\"showOutline\":\"NavText_showOutline__T7KEv\",\"fontSelection\":\"NavText_fontSelection__AH-QM\",\"font\":\"NavText_font__v43yE\",\"finishSelection\":\"NavText_finishSelection__CfQ+O\",\"selected\":\"NavText_selected__SIXSo\",\"pricing\":\"NavText_pricing__qUsci\",\"materialGroup\":\"NavText_materialGroup__j+DTa\",\"navTextsSelection\":\"NavText_navTextsSelection__gJNy+\",\"title\":\"NavText_title__u+YKh\",\"titleText\":\"NavText_titleText__lFoUP\",\"textPreview\":\"NavText_textPreview__CfhSo\",\"noText\":\"NavText_noText__Parmv\",\"textPreview__imgContainer\":\"NavText_textPreview__imgContainer__6SJ9b\",\"promptMessage\":\"NavText_promptMessage__iKeIZ\",\"applyTextBtnContainer\":\"NavText_applyTextBtnContainer__I8nfd\"};","// extracted by mini-css-extract-plugin\nexport default {};","import cn from 'classnames';\r\n\r\nimport styles from './Price.module.scss';\r\n\r\nexport interface PriceProps {\r\n  className?: string;\r\n  price?: number;\r\n  priceString?: string;\r\n}\r\n\r\nconst Price = ({ className, price, priceString }: PriceProps) => {\r\n  const rootClassName = cn('price-item', styles.root, className);\r\n  // TODO - Make currency change depending on selected currency.\r\n  const currency = '£';\r\n\r\n  const formattedPrice =\r\n    price !== undefined ? `${currency}${price.toFixed(2)}` : `${currency}${priceString}`;\r\n\r\n  if (!formattedPrice) {\r\n    return null;\r\n  }\r\n\r\n  return <span className={rootClassName}>{formattedPrice}</span>;\r\n};\r\n\r\nexport default Price;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useMemo, useState } from 'react';\r\n\r\nimport Price from '@components/ui/Price';\r\nimport { NAME_TYPE_LUXURY_ID } from '@store/constants';\r\nimport cn from 'classnames';\r\nimport styles from './NavText.module.scss';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\n\r\nexport interface NavTextFinishProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextFinish: FC<NavTextFinishProps> = ({ editText = {} }) => {\r\n  const { selectedName } = editText;\r\n\r\n  const [crystals, setCrystals] = useState<boolean>(editText?.crystalPrice ? true : false);\r\n  const [puff, setPuff] = useState<boolean>(editText?.puffPrice ? true : false);\r\n  const [hasBackground, setHasBackground] = useState<boolean>(false);\r\n\r\n  const hasPuffOption = useMemo(() => selectedName?.id === NAME_TYPE_LUXURY_ID, [selectedName]);\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  useEffect(() => {\r\n    setPuff(editText.puffPrice ? true : false);\r\n  }, [editText.puffPrice]);\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setCrystalBackground = (crystalBackground: MaterialFragment | undefined) => {\r\n    if (editText?.key) {\r\n      console.log('crystalBackground', crystalBackground);\r\n      updateText(editText.key, {\r\n        crystalBackground,\r\n      });\r\n    }\r\n  };\r\n\r\n  const addCrystals = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setCrystals(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          crystalPrice: {\r\n            price: selectedName.attributes?.crystalPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.crystalPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          crystalPrice: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const addPuff = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setPuff(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          puffPrice: {\r\n            price: selectedName.attributes?.puffPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.puffPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          puffPrice: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.finishSelections}>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: !crystals,\r\n          })}\r\n          onClick={() => addCrystals(false)}\r\n        >\r\n          No Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: crystals,\r\n          })}\r\n          onClick={() => addCrystals(true)}\r\n        >\r\n          Add Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.crystalPrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {crystals && (\r\n        <div className={styles.finishSelections}>\r\n          <div\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: !hasBackground,\r\n            })}\r\n            onClick={() => {\r\n              setCrystalBackground(undefined);\r\n              setHasBackground(false);\r\n            }}\r\n          >\r\n            No Crystals Background\r\n            {/* <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div> */}\r\n          </div>\r\n          <div\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: hasBackground,\r\n            })}\r\n            onClick={() => setHasBackground(true)}\r\n          >\r\n            Add Crystals Background\r\n            {/* <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.crystalPrice?.price} />\r\n          </div> */}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!crystals && (\r\n        <div className={styles.finishSelections}>\r\n          <div\r\n            className={cn(styles.finishSelection, { [styles.selected]: !puff })}\r\n            onClick={() => addPuff(false)}\r\n          >\r\n            Flat\r\n            <div className={styles.pricing}>\r\n              {' +'}\r\n              <Price price={0} />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: puff,\r\n              [styles.disabled]: !hasPuffOption,\r\n            })}\r\n            onClick={() => addPuff(true)}\r\n          >\r\n            Add 3D Puff\r\n            {hasPuffOption ? (\r\n              <div className={styles.pricing}>\r\n                {' +'}\r\n                <Price price={selectedName.attributes?.puffPrice?.price} />\r\n              </div>\r\n            ) : (\r\n              <div className={styles.pricing}>(Only available for luxury colors)</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {hasBackground && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName.attributes?.materialGroup?.data}\r\n          materialType={editText.material?.attributes?.type?.data}\r\n          colourGroup={editText.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setCrystalBackground}\r\n          className={styles.materialGroup}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextFinish;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment, NameEntity, useGetNamesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextNameTypesProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextNameTypes = ({ editText = {} }: NavTextNameTypesProps) => {\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n\r\n  const { selectedName } = editText;\r\n  const prevSelectedName = useRef(selectedName);\r\n\r\n  const { data: names } = useGetNamesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => data.names?.data,\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (editText?.key && selectedName && prevSelectedName.current !== selectedName) {\r\n      prevSelectedName.current = selectedName;\r\n\r\n      updateText(editText.key, {\r\n        basePrice: {\r\n          price: selectedName.attributes?.basePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.basePrice?.shopifyVariantId,\r\n        },\r\n        letterPrice: {\r\n          price: selectedName.attributes?.letterPrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.letterPrice?.shopifyVariantId,\r\n        },\r\n        nameType: {\r\n          id: selectedName.id,\r\n          name: selectedName.attributes?.name,\r\n        },\r\n        /**\r\n         * Reset material when selectedName changes.\r\n         *\r\n         * Different name types would have different\r\n         * material groups.\r\n         */\r\n        material: undefined,\r\n        ...(editText.outline\r\n          ? {\r\n              outlinePrice: {\r\n                price: selectedName.attributes?.outlinePrice?.price,\r\n                quantity: 1,\r\n                shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n              },\r\n            }\r\n          : {}),\r\n\r\n        puffPrice: undefined,\r\n      });\r\n    }\r\n  }, [selectedName]);\r\n\r\n  const setMaterial = (material: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        material,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setSelectedName = (name: NameEntity) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        selectedName: name,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!selectedName && <i className={styles.promptMessage}>Select a text color type</i>}\r\n      <div className={styles.finishSelections}>\r\n        {names?.map((n) => (\r\n          <div\r\n            key={n.id}\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: selectedName && n.id === selectedName.id,\r\n            })}\r\n            onClick={() => setSelectedName(n)}\r\n          >\r\n            {n.attributes?.name}\r\n            <div className={styles.pricing}>\r\n              <Price price={n.attributes?.basePrice?.price} />\r\n              {' + '}\r\n              <Price price={n.attributes?.letterPrice?.price} /> per letter\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedName && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName?.attributes?.materialGroup?.data}\r\n          materialType={editText?.material?.attributes?.type?.data}\r\n          colourGroup={editText?.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setMaterial}\r\n          className={styles.materialGroup}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNameTypes;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useState } from 'react';\r\n\r\nimport PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextOutlineProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextOutline: FC<NavTextOutlineProps> = ({ editText = {} }) => {\r\n  const [showOutline, setShowOutline] = useState<boolean>(editText?.outline ? true : false);\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  const { selectedName } = editText;\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setOutline = (outline: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        outline,\r\n        outlinePrice: {\r\n          price: selectedName.attributes?.outlinePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateOutline = (show: boolean) => {\r\n    setShowOutline(show);\r\n    if (!show && editText?.key) {\r\n      updateText(editText.key, {\r\n        outline: undefined,\r\n        outlinePrice: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={cn(styles.showOutline, styles.finishSelections)}>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: !showOutline })}\r\n          onClick={() => updateOutline(false)}\r\n        >\r\n          No Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: showOutline })}\r\n          onClick={() => updateOutline(true)}\r\n        >\r\n          Add Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.outlinePrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showOutline && (\r\n        <>\r\n          <MaterialGroup\r\n            hideColorGroups\r\n            materialGroup={selectedName?.attributes?.outlineGroup?.data}\r\n            materialType={editText?.outline?.attributes?.type?.data}\r\n            colourGroup={editText?.outline?.attributes?.colourGroups?.data[0]}\r\n            onMaterialSelected={setOutline}\r\n            className={styles.materialGroup}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextOutline;\r\n","import Button from '@components/ui/Button';\r\nimport InfoDisplay from '@components/ui/InfoButton/InfoDisplay';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface Props {\r\n  onClick: () => void;\r\n}\r\n\r\nconst NavTextApplyText = ({ onClick }: Props) => {\r\n  const portalRef = usePortalRef('popupContainer');\r\n  const [shouldShow, setShouldShow] = useState(false);\r\n\r\n  const applyTextHandler = () => {\r\n    onClick();\r\n    setShouldShow(true);\r\n  };\r\n\r\n  if (!portalRef) return null;\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={applyTextHandler} colour='red'>\r\n        APPLY TEXT\r\n      </Button>\r\n      {shouldShow &&\r\n        createPortal(\r\n          <InfoDisplay\r\n            cb={() => {\r\n              setShouldShow(false);\r\n            }}\r\n            title='Apply Text'\r\n          >\r\n            <h5>Click on the model to apply text at a location</h5>\r\n            <img style={{ maxWidth: '100%' }} src='examples/NavText/sample-apply-text.png' />\r\n          </InfoDisplay>,\r\n          portalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextApplyText;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport Button from '@components/ui/Button';\r\nimport NavTextApplyText from './NavTextPlaceTextGuide';\r\n\r\nexport interface NavTextSelectProps {\r\n  className?: string;\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst fonts = [\r\n  {\r\n    name: 'Arial',\r\n    className: styles.arial,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/arial-bold-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Oswald',\r\n    className: styles.oswald,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/oswald-semibold.woff',\r\n  },\r\n  {\r\n    name: 'College',\r\n    className: styles.college,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/college_block-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Ballantines',\r\n    className: styles.ballantines,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/ballantines-bold-webfont.woff',\r\n  },\r\n];\r\n\r\nconst NavTextSelect = ({ className, editText }: NavTextSelectProps) => {\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const [font, setFont] = useState<(typeof fonts)[number]>(\r\n    fonts.find((f) => editText?.font === f.url) ?? fonts[0],\r\n  );\r\n  const { addText, updateText, updateIsMinimizedCustomiserNav } = useCustomiserStore(\r\n    (state) => state,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text, font: font.url });\r\n      }\r\n    }\r\n  }, [text, font]);\r\n\r\n  const setTextOnChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onFontChange = (font: (typeof fonts)[number]) => {\r\n    setFont(font);\r\n  };\r\n\r\n  const applyText = () => {\r\n    if (editText?.key && !editText?.decalPosition) {\r\n      updateText(editText.key, {\r\n        decalFreeze: true,\r\n        decalPosition: [-0.01989325641440387, 2.436930108198209, 1.6226380277735046],\r\n        decalOrientation: [\r\n          -0.14799034762565572,\r\n          -0.17866277612764514,\r\n          -0.026487426629834374,\r\n          'XYZ',\r\n        ],\r\n      });\r\n    }\r\n    updateIsMinimizedCustomiserNav(true);\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <FormInput placeholder='Enter text' value={text} onChange={setTextOnChange} />\r\n      <div className={styles.fontSelection}>\r\n        {fonts.map((_font) => (\r\n          <div\r\n            key={_font.name}\r\n            onClick={() => onFontChange(_font)}\r\n            className={cn(styles.font, _font.className, {\r\n              [styles.selected]: font.name === _font.name,\r\n            })}\r\n          >\r\n            {_font.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={styles.applyTextBtnContainer}>\r\n        <NavTextApplyText onClick={applyText} />\r\n      </div>\r\n      {/* <FormSelect\r\n        className={fonts.find((f) => f.url === font)?.className}\r\n        value={font}\r\n        onChange={onFontChange}\r\n      >\r\n        {fonts.map((f) => (\r\n          <option className={f.className} key={f.url} value={f.url}>\r\n            {f.name}\r\n          </option>\r\n        ))}\r\n      </FormSelect> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextSelect;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\n\r\nimport styles from './NavText.module.scss';\r\n\r\nexport interface NavTextTextProps {\r\n  text: TextCustomiser;\r\n  className?: string;\r\n  setShowSelector?: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextText = ({ className, text, setShowSelector }: NavTextTextProps) => {\r\n  const { updateText, deleteText } = useCustomiserStore((state) => state);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const editItem = () => {\r\n    if (text.key) {\r\n      updateText(text.key, { edit: true });\r\n      setShowSelector && setShowSelector(true);\r\n    }\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (text.key) {\r\n      deleteText(text.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.textItem} onClick={editItem}>\r\n      <div className={styles.textItemText}>{text.text}</div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextText;\r\n","import { FC } from 'react';\r\n\r\nimport Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextText from './NavTextText';\r\n\r\ntype NavTextsSelectionProps = {\r\n  onAddTextClicked?: () => void;\r\n  onTextSelected?: () => void;\r\n};\r\n\r\nconst NavTextsSelection: FC<NavTextsSelectionProps> = ({ onAddTextClicked, onTextSelected }) => {\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n\r\n  return (\r\n    <div className={styles.navTextsSelection}>\r\n      <div className={styles.title}>\r\n        <h3 className={styles.titleText}>Your Texts</h3>\r\n\r\n        <Button colour='red' onClick={onAddTextClicked}>\r\n          Add Text\r\n        </Button>\r\n      </div>\r\n\r\n      {texts.map((t) => (\r\n        <NavTextText key={t.key} text={t} setShowSelector={onTextSelected} />\r\n      ))}\r\n\r\n      <NavButtons></NavButtons>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextsSelection;\r\n","import type { MaterialFragment } from '@graphql/generated/graphql';\r\nimport type { Falsey } from 'lodash';\r\n// eslint-disable-next-line\r\n// @ts-ignore\r\nimport { NormalMapGenerator } from 'normalmap-online';\r\n\r\nexport function getMaterialUrl(material: MaterialFragment | undefined): string {\r\n  return material?.attributes?.images?.find((imgMap) => imgMap?.mapType === 'map')?.image.data\r\n    ?.attributes?.formats.large.url;\r\n}\r\n\r\n// TODO - Relocate this\r\ninterface ImgToNormalMapParams {\r\n  img: HTMLImageElement | HTMLCanvasElement;\r\n  hasPuff?: boolean;\r\n  blur?: number;\r\n}\r\nconst normalMapGenerator = NormalMapGenerator.instance();\r\nasync function imgToNormalMap({ img, hasPuff, blur }: ImgToNormalMapParams) {\r\n  const blurAmount = hasPuff ? blur || 7 : 1;\r\n  return normalMapGenerator.generateFromImage(img, {\r\n    strength: 0.5,\r\n    blur: blurAmount,\r\n    level: 1,\r\n  });\r\n}\r\n\r\ninterface PreviewText {\r\n  material: HTMLImageElement | undefined;\r\n  outline: HTMLImageElement | undefined;\r\n  previewImg?: HTMLImageElement;\r\n  normalMapPatternImg?: HTMLImageElement | false;\r\n  crystalBgPatternImg?: HTMLImageElement | Falsey;\r\n  crystalBgImg?: HTMLImageElement | Falsey;\r\n}\r\n\r\nexport type PatternType = 'crystals' | 'embroidery' | Falsey;\r\n\r\ninterface CanvasTextConstructor {\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n}\r\n\r\nexport class CanvasText {\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  outlineCanvas: HTMLCanvasElement;\r\n  outlineCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapTextureCanvas: HTMLCanvasElement;\r\n  normalMapTextureCtx: CanvasRenderingContext2D;\r\n  normalMapCanvas: HTMLCanvasElement;\r\n  normalMapCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapOutlineTextureCanvas: HTMLCanvasElement;\r\n  normalMapOutlineTextureCtx: CanvasRenderingContext2D;\r\n  normalMapOutlineCanvas: HTMLCanvasElement;\r\n  normalMapOutlineCtx2: CanvasRenderingContext2D;\r\n\r\n  crystalBgPatternCanvas: HTMLCanvasElement;\r\n  crystalBgPatternCtx: CanvasRenderingContext2D;\r\n\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n  fontSize: number;\r\n  outlineWidth: number;\r\n\r\n  constructor({ hasPuff, toNormalMap, text, patternType }: CanvasTextConstructor) {\r\n    this.hasPuff = hasPuff;\r\n    this.toNormalMap = toNormalMap;\r\n    this.patternType = patternType;\r\n    this.text = text;\r\n\r\n    this.fontSize = 360;\r\n    this.canvasHeight = 400;\r\n    this.canvasWidth = 3200;\r\n    this.outlineWidth = 20;\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.height = this.canvasHeight;\r\n    this.canvas.width = this.canvasWidth;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.outlineCanvas = document.createElement('canvas');\r\n    this.outlineCanvas.height = this.canvasHeight;\r\n    this.outlineCanvas.width = this.canvasWidth;\r\n    this.outlineCtx = this.outlineCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    // Normal map section\r\n\r\n    this.normalMapTextureCanvas = document.createElement('canvas');\r\n    this.normalMapTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapTextureCtx = this.normalMapTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapCanvas = document.createElement('canvas');\r\n    this.normalMapCanvas.height = this.canvasHeight;\r\n    this.normalMapCanvas.width = this.canvasWidth;\r\n    this.normalMapCtx = this.normalMapCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineTextureCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineTextureCtx = this.normalMapOutlineTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineCtx2 = this.normalMapOutlineCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    // TODO - make a function for setting canvas height and ctx instead\r\n    this.crystalBgPatternCanvas = document.createElement('canvas');\r\n    this.crystalBgPatternCanvas.height = this.canvasHeight;\r\n    this.crystalBgPatternCanvas.width = this.canvasWidth;\r\n    this.crystalBgPatternCtx = this.crystalBgPatternCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n  }\r\n\r\n  public clear() {\r\n    this.ctx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.outlineCtx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n  public async drawImg(ctx: CanvasRenderingContext2D, src: HTMLImageElement) {\r\n    ctx.drawImage(src, 0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  public showTestCanvas(canvas: HTMLCanvasElement) {\r\n    const testPreviewDom = document.getElementById('testPreview'); // TEST ONLY, TO BE REMOVED\r\n    (testPreviewDom as unknown as HTMLElement).innerHTML = ''; // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(canvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineTextureCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.crystalBgPatternCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.outlineCanvas); // TEST ONLY, TO BE REMOVED\r\n  }\r\n\r\n  public async maskImage(ctx: CanvasRenderingContext2D, img: HTMLImageElement) {\r\n    ctx.globalCompositeOperation = 'source-in';\r\n    await this.drawImg(ctx, img);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  public drawPreviewText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n  }\r\n\r\n  public drawPreviewOutlineText() {\r\n    if (!this.text) return;\r\n\r\n    this.outlineCtx.font = `${this.fontSize}px testFont`;\r\n    this.outlineCtx.textAlign = 'center';\r\n    this.outlineCtx.lineWidth = this.outlineWidth;\r\n    this.outlineCtx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n  }\r\n\r\n  public drawPreviewOutlineOnlyText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.lineWidth = 30;\r\n    ctx.fillStyle = 'green';\r\n    ctx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n    ctx.globalCompositeOperation = 'destination-out';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  private async drawNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewText(this.normalMapTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      this.normalMapTextureCtx.fillStyle = pattern;\r\n      this.normalMapTextureCtx.fill();\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    console.log('toNormalMap', this.toNormalMap);\r\n    const normalMap = this.toNormalMap\r\n      ? await imgToNormalMap({\r\n          img: this.normalMapTextureCanvas,\r\n          hasPuff: this.hasPuff,\r\n        })\r\n      : this.normalMapTextureCanvas;\r\n\r\n    this.normalMapCtx.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawOutlineNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewOutlineOnlyText(this.normalMapOutlineTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapOutlineTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapOutlineTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      if (this.patternType !== 'crystals') {\r\n        this.normalMapOutlineTextureCtx.fillStyle = pattern;\r\n      }\r\n      this.normalMapOutlineTextureCtx.fill();\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    const normalMap =\r\n      this.toNormalMap || this.patternType === 'crystals'\r\n        ? await imgToNormalMap({\r\n            img: this.normalMapOutlineTextureCanvas,\r\n            hasPuff: this.patternType === 'crystals' ? true : this.hasPuff,\r\n            blur: 4,\r\n          })\r\n        : this.normalMapOutlineTextureCanvas;\r\n    this.normalMapOutlineCtx2.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawCrystalBg(\r\n    crystalBgImg: HTMLImageElement,\r\n    crystalBgPatternImg: HTMLImageElement,\r\n  ) {\r\n    const pattern = this.crystalBgPatternCtx.createPattern(crystalBgPatternImg, 'repeat');\r\n\r\n    if (!pattern) return;\r\n\r\n    this.crystalBgPatternCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.fillStyle = pattern;\r\n    this.crystalBgPatternCtx.fill();\r\n\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-in';\r\n    this.crystalBgPatternCtx.globalAlpha = 0.9;\r\n    this.crystalBgPatternCtx.drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.drawImage(crystalBgImg, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-over';\r\n\r\n    this.outlineCtx.drawImage(this.crystalBgPatternCanvas, 0, 0);\r\n  }\r\n\r\n  private printTextMapToStrokeMap() {\r\n    this.normalMapCtx.globalCompositeOperation = 'destination-in';\r\n    this.normalMapCtx.drawImage(this.normalMapTextureCanvas, 0, 0);\r\n    this.normalMapCtx.globalCompositeOperation = 'source-over'; // reset to default\r\n    this.normalMapOutlineCtx2.drawImage(this.normalMapCanvas, 0, 0);\r\n  }\r\n\r\n  public async previewText({\r\n    material,\r\n    outline,\r\n    previewImg,\r\n    normalMapPatternImg,\r\n    crystalBgPatternImg,\r\n    crystalBgImg,\r\n  }: PreviewText) {\r\n    if (!this.text) return;\r\n\r\n    this.clear();\r\n    this.showTestCanvas(this.normalMapTextureCanvas);\r\n\r\n    await this.drawNormalMap(normalMapPatternImg);\r\n    await this.drawOutlineNormalMap(normalMapPatternImg);\r\n\r\n    this.printTextMapToStrokeMap();\r\n\r\n    if (outline) {\r\n      this.drawPreviewOutlineText();\r\n      await this.maskImage(this.outlineCtx, outline);\r\n    }\r\n\r\n    this.drawPreviewText(this.ctx);\r\n\r\n    if (material) {\r\n      await this.maskImage(this.ctx, material);\r\n    }\r\n\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n    if (previewImg) previewImg.src = this.outlineCanvas.toDataURL();\r\n\r\n    if (crystalBgImg && crystalBgPatternImg) {\r\n      this.drawCrystalBg(crystalBgImg, crystalBgPatternImg);\r\n    }\r\n  }\r\n\r\n  public mergeCanvas() {\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n  }\r\n\r\n  getOutlineCanvas() {\r\n    return this.outlineCanvas;\r\n  }\r\n  getNormalMapTextureCanvas() {\r\n    return this.normalMapTextureCanvas;\r\n  }\r\n  getNormalMapOutlineCanvas() {\r\n    return this.normalMapOutlineCanvas;\r\n  }\r\n}\r\n","export async function loadImage(src: string): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    if (!src) resolve(img);\r\n    img.crossOrigin = 'anonymous';\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n    img.src = src;\r\n  });\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"canvasClickableCover\":\"NavTextScene_canvasClickableCover__ZoAVe\",\"canvasClickableCover__imgContainer\":\"NavTextScene_canvasClickableCover__imgContainer__qCzZl\",\"navTextSceneFullscreen\":\"NavTextScene_navTextSceneFullscreen__-hgDQ\",\"navTextSceneFullscreen__imgContainer\":\"NavTextScene_navTextSceneFullscreen__imgContainer__kyglX\",\"navTextSceneFullscreen__closeBtn\":\"NavTextScene_navTextSceneFullscreen__closeBtn__jtMmR\",\"navTextSceneFullscreen__zoomContainer\":\"NavTextScene_navTextSceneFullscreen__zoomContainer__struE\"};","import { Decal } from '@react-three/drei';\r\nimport { TextCustomiser } from '@store/customiser';\r\nimport { Texture, Vector2, Vector3 } from 'three';\r\nimport Lights from '../Lights';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport styles from './NavTextScene.module.scss';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { usePortalRef } from '@hooks';\r\n\r\ninterface NavTextPreviewSceneInterface {\r\n  text: TextCustomiser;\r\n}\r\n\r\nconst NavTextPreviewScene = ({ text }: NavTextPreviewSceneInterface) => {\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n  const [shouldShow, setShouldShow] = useState<boolean>(false);\r\n  const [zoom, setZoom] = useState<number>(1);\r\n  const [dataUrl, setDataUrl] = useState<string>('');\r\n\r\n  const portalRef = usePortalRef('popupContainer');\r\n\r\n  const scale = 10;\r\n  const scaleModifier = new Vector3(3.2 * scale, 0.4 * scale, 4);\r\n\r\n  const isLuxury: boolean = text.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = text.puffPrice ? true : false;\r\n  const hasCrystals: boolean = text.crystalPrice ? true : false;\r\n\r\n  const shouldNormalMap =\r\n    text.normalMap instanceof Texture && text.selectedName?.attributes?.name === 'Luxury';\r\n  const normalMap = shouldNormalMap ? text.normalMap : null;\r\n\r\n  let normalScale = 1;\r\n  if (hasCrystals) {\r\n    normalScale = 4;\r\n  } else if (isLuxury && !hasPuff) {\r\n    normalScale = 0.5;\r\n  } else if (isLuxury && hasPuff) {\r\n    normalScale = 3;\r\n  }\r\n\r\n  if (!portalRef) return null;\r\n\r\n  function addZoom() {\r\n    setZoom((cur) => {\r\n      if (cur >= 10) return cur;\r\n      return (cur += 0.1);\r\n    });\r\n  }\r\n  function subtractZoom() {\r\n    setZoom((cur) => {\r\n      if (cur <= 0.1) return cur;\r\n      return (cur -= 0.1);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        ref={(el) => {\r\n          canvasRef.current = el;\r\n        }}\r\n        gl={{\r\n          preserveDrawingBuffer: true,\r\n        }}\r\n      >\r\n        <Lights />\r\n        <mesh>\r\n          <planeBufferGeometry args={[20, 5]} />\r\n          <meshNormalMaterial visible={false} />\r\n          <Decal position={[0, 0, 0]} rotation={[0, 0, 0]} scale={scaleModifier}>\r\n            <meshStandardMaterial\r\n              map={text.preview instanceof Texture ? text.preview : null}\r\n              transparent\r\n              roughness={isLuxury && !hasCrystals ? 0.75 : 0}\r\n              depthTest\r\n              depthWrite={false}\r\n              normalMap={normalMap}\r\n              normalScale={new Vector2(normalScale, normalScale)}\r\n            />\r\n          </Decal>\r\n        </mesh>\r\n      </Canvas>\r\n      <div\r\n        className={styles.canvasClickableCover}\r\n        onClick={() => {\r\n          setShouldShow(true);\r\n          setDataUrl(canvasRef.current?.toDataURL() || '');\r\n        }}\r\n      >\r\n        <span className={styles.canvasClickableCover__imgContainer}>\r\n          <img height={32} width={32} src='/icons/click-icon.png' />\r\n        </span>\r\n      </div>\r\n      {shouldShow &&\r\n        canvasRef &&\r\n        dataUrl &&\r\n        createPortal(\r\n          <>\r\n            <div className={styles.navTextSceneFullscreen}>\r\n              <span\r\n                onClick={() => setShouldShow(false)}\r\n                className={styles.navTextSceneFullscreen__closeBtn}\r\n              >\r\n                x\r\n              </span>\r\n              <span className={styles.navTextSceneFullscreen__imgContainer}>\r\n                <img style={{ zoom }} src={dataUrl} alt='Text Preview' />\r\n              </span>\r\n              <span className={styles.navTextSceneFullscreen__zoomContainer}>\r\n                <img\r\n                  onClick={addZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-in-icon.png'\r\n                  alt='zoom in'\r\n                />\r\n                <img\r\n                  onClick={subtractZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-out-icon.png'\r\n                  alt='zoom out'\r\n                />\r\n              </span>\r\n            </div>\r\n          </>,\r\n          portalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextPreviewScene;\r\n","import { CanvasText, PatternType, getMaterialUrl } from '@lib/canvas';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { CanvasTexture } from 'three';\r\nimport type { NavTextSelectProps } from './NavTextSelect';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { loadImage } from '@lib/img.util';\r\nimport NavTextPreviewScene from '@components/three/CustomiserCanvas/NavTextScene';\r\n\r\n// TODO - Pre load the fonts somewhere\r\nasync function loadFonts(fontUrl: string) {\r\n  const font = new FontFace('testFont', `url(${fontUrl})`);\r\n  await font.load();\r\n  document.fonts.add(font);\r\n}\r\n\r\nfunction getPatternType({\r\n  hasCrystals,\r\n  isLuxury,\r\n}: {\r\n  hasCrystals: boolean;\r\n  isLuxury: boolean;\r\n}): PatternType {\r\n  if (!hasCrystals && isLuxury) return 'embroidery';\r\n  else if (hasCrystals) return 'crystals';\r\n\r\n  return '';\r\n}\r\n\r\nconst NavTextPreview = ({ editText }: NavTextSelectProps) => {\r\n  const previewImgRef = useRef<HTMLImageElement | null>(null);\r\n  const [fontFamily, setFontFamily] = useState<string | undefined>(editText?.font);\r\n  const [isVisiblePreview, setIsVisiblePreview] = useState(false);\r\n\r\n  const hasCrystals: boolean = editText?.crystalPrice ? true : false;\r\n  const isLuxury: boolean = editText?.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = editText?.puffPrice && !hasCrystals ? true : false; // 3D puff\r\n  const toNormalMap = hasCrystals ? false : true;\r\n  const patternType = getPatternType({ hasCrystals, isLuxury });\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  const portalRef = usePortalRef('NavHeaderAfter');\r\n\r\n  /**\r\n   * Save image here\r\n   */\r\n  const materialImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.material));\r\n  }, [editText?.material]);\r\n  const outlineImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.outline));\r\n  }, [editText?.outline]);\r\n  const fabricPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/Fabric_Knitted_006_height_small.png');\r\n  }, []);\r\n  const crystalNormalMapImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-12.png');\r\n  }, []);\r\n  const crystalBgImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.crystalBackground));\r\n  }, [editText?.crystalBackground]);\r\n  const crystalBgPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-bg-pattern.png');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const previewImgDom = previewImgRef.current as HTMLImageElement;\r\n\r\n    (async () => {\r\n      const canvasText = new CanvasText({\r\n        hasPuff,\r\n        toNormalMap,\r\n        patternType,\r\n        text: editText?.text,\r\n      });\r\n\r\n      if (!editText || !editText.key || !isVisiblePreview) {\r\n        canvasText.clear();\r\n        return;\r\n      }\r\n\r\n      if (!editText.text) {\r\n        canvasText.clear();\r\n        updateText(editText.key, {\r\n          preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Adjust this once preloading fonts has been implemented\r\n      if (fontFamily !== editText?.font) {\r\n        setFontFamily(editText?.font);\r\n        await loadFonts(editText?.font as string);\r\n      }\r\n\r\n      const img = editText?.material && (await materialImgMemo);\r\n      const outlineImg = editText?.outline && (await outlineImgMemo);\r\n      const embroideryPattern = await fabricPatternImgMemo;\r\n      const crystalNormalMap = await crystalNormalMapImgMemo;\r\n      const crystalBgPatternImg = await crystalBgPatternImgMemo;\r\n      const crystalBgImg = editText?.crystalBackground && (await crystalBgImgMemo);\r\n\r\n      const shouldUsePattern = isLuxury && !hasPuff;\r\n      const patternImg = shouldUsePattern && (hasCrystals ? crystalNormalMap : embroideryPattern);\r\n\r\n      await canvasText.previewText({\r\n        material: img,\r\n        outline: outlineImg,\r\n        previewImg: previewImgDom,\r\n        normalMapPatternImg: patternImg,\r\n        crystalBgPatternImg,\r\n        crystalBgImg,\r\n      });\r\n\r\n      updateText(editText.key, {\r\n        preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        normalMap: new CanvasTexture(canvasText.getNormalMapOutlineCanvas()),\r\n      });\r\n    })();\r\n  }, [\r\n    editText?.text,\r\n    editText?.material,\r\n    editText?.outline,\r\n    editText?.font,\r\n    editText?.crystalBackground,\r\n    isVisiblePreview,\r\n    editText?.puffPrice,\r\n    editText?.crystalPrice,\r\n  ]);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <>\r\n      <div id='testPreview' style={{ position: 'absolute', zIndex: '100' }} />\r\n      <div className={styles.textPreview}>\r\n        {!editText?.text ? (\r\n          <div className={styles.noText}>Enter text to show preview</div>\r\n        ) : (\r\n          <>\r\n            {/* Image is no longer needed, remove this */}\r\n            <div className={styles.textPreview__imgContainer} style={{ display: 'none' }}>\r\n              <img\r\n                height={80}\r\n                width={640}\r\n                ref={(el) => {\r\n                  previewImgRef.current = el;\r\n                  setIsVisiblePreview(!!el);\r\n                }}\r\n              />\r\n            </div>\r\n            {previewImgRef.current?.src ? (\r\n              <>\r\n                <NavTextPreviewScene text={editText} />\r\n              </>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavTextPreview;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport { startTransition, useEffect, useMemo, useState } from 'react';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\n\r\nimport Accordion from '@components/ui/Accordion/Accordion';\r\nimport NavStepButtons from '../NavStepButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextFinish from './NavTextFinish';\r\nimport NavTextNameTypes from './NavTextNameTypes';\r\nimport NavTextOutline from './NavTextOutline';\r\nimport NavTextSelect from './NavTextSelect';\r\nimport NavTextsSelection from './NavTextsSelection';\r\nimport NavTextPreview from './NavTextPreview';\r\n\r\n// export interface NavTextProps {\r\n\r\n// }\r\n\r\nconst NavText = () => {\r\n  const [step, setStep] = useState<number | undefined>(0);\r\n\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const [showSelector, setShowSelector] = useState(editText?.key !== undefined);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      setShowSelector(true);\r\n    } else {\r\n      setShowSelector(false);\r\n    }\r\n  }, [editText]);\r\n\r\n  const addText = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalScale: Number(event) });\r\n    });\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyText = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setStep(0);\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  const handleTitleClick = (_step: number | string) => {\r\n    if (_step === step) {\r\n      setStep(undefined);\r\n    } else {\r\n      setStep(_step as number);\r\n    }\r\n  };\r\n\r\n  const maxStep = 4;\r\n\r\n  const handleNext = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step < maxStep - 1) {\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step > 0) {\r\n      setStep(step - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <div className={styles.navTextEdit}>\r\n          <NavTextPreview editText={editText} />\r\n          <Accordion\r\n            step={0}\r\n            title='Text and Font'\r\n            currentStep={step ?? -1}\r\n            onTitleClick={handleTitleClick}\r\n          >\r\n            <NavTextSelect editText={editText} />\r\n          </Accordion>\r\n          <Accordion\r\n            step={1}\r\n            title='Text Color'\r\n            currentStep={step ?? -1}\r\n            onTitleClick={handleTitleClick}\r\n          >\r\n            <NavTextNameTypes editText={editText} />\r\n          </Accordion>\r\n          <Accordion\r\n            step={2}\r\n            title='Outline'\r\n            currentStep={step ?? -1}\r\n            onTitleClick={handleTitleClick}\r\n          >\r\n            <NavTextOutline editText={editText} />\r\n          </Accordion>\r\n          <Accordion\r\n            step={3}\r\n            title='Finish'\r\n            currentStep={step ?? -1}\r\n            onTitleClick={handleTitleClick}\r\n          >\r\n            <NavTextFinish editText={editText}></NavTextFinish>\r\n          </Accordion>\r\n\r\n          <NavStepButtons\r\n            step={step}\r\n            maxStep={maxStep - 1}\r\n            onNext={handleNext}\r\n            onPrevious={handlePrevious}\r\n            onApply={applyText}\r\n          />\r\n\r\n          <NavDecalAdjust\r\n            scale={editText?.decalScale}\r\n            rotation={editText?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <NavTextsSelection onAddTextClicked={addText}></NavTextsSelection>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavText;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CustomiserNav_root__rgnWr\",\"open\":\"CustomiserNav_open__6TgJc\",\"isFullscreen\":\"CustomiserNav_isFullscreen__xo92v\",\"minimized\":\"CustomiserNav_minimized__-4C1L\",\"actions\":\"CustomiserNav_actions__B0fm0\",\"content\":\"CustomiserNav_content__whsIx\",\"headerAfter\":\"CustomiserNav_headerAfter__bXrUD\",\"hasActions\":\"CustomiserNav_hasActions__xe43g\"};","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavFitting from '../NavFitting';\r\nimport NavFlags from '../NavFlags';\r\nimport NavHeader from '../NavHeader';\r\nimport NavImages from '../NavImages';\r\nimport NavOptions from '../NavOptions';\r\nimport NavPart from '../NavPart';\r\nimport NavMinimize from '../NavMinimize';\r\nimport NavSize from '../NavSize';\r\nimport NavText from '../NavText';\r\n\r\nimport styles from './CustomiserNav.module.scss';\r\n\r\nexport interface CustomiserNavProps {\r\n  className?: string;\r\n}\r\n\r\nconst CustomiserNav = ({ className }: CustomiserNavProps) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [scrollCoordinates, setScrollCoordinates] = useState({ left: 0, top: 0 });\r\n\r\n  const {\r\n    selectedPart,\r\n    selectedNav,\r\n    texts,\r\n    isMinimizedCustomiserNav,\r\n    updateIsMinimizedCustomiserNav,\r\n  } = useCustomiserStore();\r\n\r\n  const scrollableRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const isFullscreen = useMemo(\r\n    () => selectedNav?.name === 'Text' && editText,\r\n    [selectedNav, editText],\r\n  );\r\n\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      [styles.open]: isOpen,\r\n      [styles.minimized]: isMinimizedCustomiserNav,\r\n      [styles.hasActions]: selectedNav?.hasActions,\r\n      [styles.isFullscreen]: isFullscreen,\r\n    },\r\n    className,\r\n  );\r\n\r\n  const saveScrollCoordinates = () => {\r\n    if (isOpen && scrollableRef.current) {\r\n      setScrollCoordinates({\r\n        left: scrollableRef.current.scrollLeft,\r\n        top: scrollableRef.current.scrollTop,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && scrollableRef.current) {\r\n      scrollableRef.current.scrollTo({\r\n        ...scrollCoordinates,\r\n        // Typescript issue: https://github.com/Microsoft/TypeScript/issues/28755\r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const toggleOpen = () => {\r\n    saveScrollCoordinates();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedNav === null && selectedPart === null) {\r\n      setIsOpen(true);\r\n    } else {\r\n      setIsOpen(false);\r\n      updateIsMinimizedCustomiserNav(false);\r\n    }\r\n  }, [selectedPart, selectedNav]);\r\n\r\n  return (\r\n    <motion.nav\r\n      layout='preserve-aspect'\r\n      transition={{\r\n        type: 'spring',\r\n        stiffness: 700,\r\n        damping: 40,\r\n      }}\r\n      className={rootClassName}\r\n    >\r\n      {/* {!isOpen && (\r\n        <NavMinimize\r\n          isMinimizedCustomiserNav={isMinimizedCustomiserNav}\r\n          onMinimize={() => updateIsMinimizedCustomiserNav(true)}\r\n          onMaximize={() => updateIsMinimizedCustomiserNav(false)}\r\n        />\r\n      )} */}\r\n      <NavHeader\r\n        className={styles.header}\r\n        toggle={() => toggleOpen()}\r\n        isOpen={isOpen}\r\n        onClick={() => {\r\n          updateIsMinimizedCustomiserNav(!isMinimizedCustomiserNav);\r\n        }}\r\n        isMinimized={isMinimizedCustomiserNav}\r\n      />\r\n      <div id='NavHeaderAfter' className={styles.headerAfter}></div>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <AnimatePresence initial={false}>\r\n          <motion.div\r\n            id='scrollable'\r\n            className={styles.content}\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n              open: { opacity: 1 },\r\n              collapsed: { opacity: 0 },\r\n            }}\r\n            ref={(el) => {\r\n              scrollableRef.current = el;\r\n            }}\r\n          >\r\n            {isOpen ? (\r\n              <NavOptions toggle={() => toggleOpen()} />\r\n            ) : selectedNav?.type === 'fitting' ? (\r\n              <NavFitting />\r\n            ) : selectedNav?.type === 'names' ? (\r\n              <NavText />\r\n            ) : selectedNav?.type === 'flags' ? (\r\n              <NavFlags />\r\n            ) : selectedNav?.type === 'images' ? (\r\n              <NavImages />\r\n            ) : selectedNav?.type === 'size' ? (\r\n              <NavSize />\r\n            ) : selectedPart ? (\r\n              <NavPart part={selectedPart} />\r\n            ) : null}\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </Suspense>\r\n      {!isOpen && selectedNav?.hasActions && (\r\n        <div className={styles.actions}>\r\n          {selectedPart && <div id='CustomiserNavMaterial'></div>}\r\n          <div id='CustomiserNavActions'></div>\r\n        </div>\r\n      )}\r\n    </motion.nav>\r\n  );\r\n};\r\n\r\nexport default CustomiserNav;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Header_root__cz6kt\",\"total\":\"Header_total__nSueF\",\"price\":\"Header_price__GikHZ\",\"resetBtn\":\"Header_resetBtn__yzIQA\",\"addToBasket\":\"Header_addToBasket__T8GpW\"};","import Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport { useDesignStore } from '@store/design';\r\nimport styles from './Header.module.scss';\r\nimport Price from '@components/ui/Price';\r\n\r\nexport interface HeaderProps {\r\n  className?: string;\r\n}\r\n\r\nconst Header = ({ className }: HeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const total = useCustomiserStore((state) => state.total());\r\n  const designComplete = useCustomiserStore((state) => state.designComplete());\r\n  const setResetCamera = useDesignStore((state) => state.setResetCamera);\r\n  const addingToCart = useDesignStore((state) => state.addingToCart);\r\n\r\n  const resetCustomerSelections = useCustomiserStore((state) => state.resetCustomerSelections);\r\n\r\n  const saveDesign = () => {\r\n    setResetCamera();\r\n  };\r\n\r\n  const resetPopup = () => {\r\n    if (confirm('Reset everything?')) {\r\n      resetCustomerSelections();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div id='reset-btn-container' className={styles.resetBtn}>\r\n        <Button onClick={resetPopup}>CLEAR</Button>\r\n      </div>\r\n      <div className={styles.total}>\r\n        Current <Price className={styles.price} priceString={total} />\r\n      </div>\r\n      <Button\r\n        className={styles.addToBasket}\r\n        onClick={saveDesign}\r\n        disabled={!designComplete || addingToCart}\r\n      >\r\n        {addingToCart ? 'Saving' : 'Add to basket'}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Customiser_root__+9xV1\",\"nav\":\"Customiser_nav__xnqzP\",\"model\":\"Customiser_model__jxaOf\",\"controls\":\"Customiser_controls__Ar93L\",\"background\":\"Customiser_background__qq7nU\",\"loading\":\"Customiser_loading__vNYyO\",\"header\":\"Customiser_header__1SFjA\",\"close\":\"Customiser_close__sH1pv\"};","import CustomiserNav from '@components/nav/CustomiserNav';\r\nimport Button from '@components/ui/Button';\r\nimport { useDesignStore } from '@store/design';\r\nimport cn from 'classnames';\r\nimport { lazy, Suspense } from 'react';\r\nimport Header from '../Header';\r\n\r\nconst CustomiserCanvas = lazy(() => import('@components/three/CustomiserCanvas'));\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport styles from './Customiser.module.scss';\r\n\r\nexport interface CustomiserProps {\r\n  className?: string;\r\n}\r\n\r\nconst Customiser = ({ className }: CustomiserProps) => {\r\n  const setShow = useDesignStore((state) => state.setShow);\r\n  const { selectedNav } = useCustomiserStore();\r\n\r\n  const rootClassName = cn(styles.root, className, {\r\n    // [styles.navOpen]: selectedNav !== null,\r\n  });\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div\r\n        id='popupContainer'\r\n        style={{\r\n          // re-figure out again how to put styled ID in scss\r\n          position: 'absolute',\r\n          zIndex: '201',\r\n        }}\r\n      />\r\n      <CustomiserNav className={styles.nav} />\r\n      <Header className={styles.header} />\r\n      <svg\r\n        className={styles.background}\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 114.383 97.088'\r\n      >\r\n        <defs>\r\n          <clipPath id='a'>\r\n            <path d='M0 0h114.383v97.088H0z' />\r\n          </clipPath>\r\n        </defs>\r\n        <g clipPath='url(#a)' fillRule='evenodd'>\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='M8.567 88.645v-.044c1.487-.24 2.986-.466 4.472-.716a1.278 1.278 0 0 0 .743-1.862 1.019 1.019 0 0 0-.949-.409c-2.928.338-5.845.747-8.785 1.147-.492.069-.709.447-.687 1.262.012 1.216.126 1.481.721 1.375 1.5-.243 3.008-.506 4.484-.753M23.905 77.54c-1.224.072-1.842.39-1.9 2.044a69.405 69.405 0 0 0 .011 5.312c.057 1.481.606 2.112 1.716 1.99q4.444-.488 8.888-1.012a1.851 1.851 0 0 0 1.659-1.975c.057-.853.1-1.709.1-2.562.023-.856.023-1.247 0-2.093-.068-1.6-.755-1.769-2.024-1.7Zm9.982-6.006c2.119 0 3.229 1.3 3.744 3.247a8.461 8.461 0 0 1 .32 2.222 225.099 225.099 0 0 1 0 7.896 8.3 8.3 0 0 1-.869 3.622 3.721 3.721 0 0 1-2.8 2.269c-4.072.553-8.121 1.15-12.182 1.784-1.773.306-3.145-1.253-3.523-3.993a25.755 25.755 0 0 1-.229-3.54c-.011-1.275-.006-2.556 0-3.834s.046-2.562.115-3.834c.091-1.944.606-4.015 1.887-5.128a2.565 2.565 0 0 1 1.533-.709Zm61.427 6.006v-6.006h13.325c1.682-.069 2.768 1.381 3.409 3.771a16.91 16.91 0 0 1 .538 4.281 18.216 18.216 0 0 1-.515 4.3 5.807 5.807 0 0 1-1.945 3.4c-.217.181-.469.34-.652.472.8 1.45 1.611 2.926 2.4 4.443a883.295 883.295 0 0 1 2.505 4.856c-.743-.163-1.453-.331-2.139-.472-1.041-.219-2.1-.381-3.157-.644a1.328 1.328 0 0 1-.732-.643c-.641-1.2-1.285-2.373-1.933-3.55-.633-1.148-1.292-2.3-1.91-3.431-.309-.522-.606-.819-1.041-.862a90.174 90.174 0 0 1-3.74-.481c-.366-.056-.481.116-.481.656.011 1.04.011 2.081.011 3.128v3.172c-1.235-.228-2.7-.472-3.946-.691v-12.17c3.752.156 7.526.293 11.278.4.492.013 1-.006 1.487 0 .56.016.789-.769.881-1.541.091-1.2-.149-2.053-.686-2.234a3.757 3.757 0 0 0-1.19-.16Zm-11.255 0v2.709l9.585.616v4.047l-9.631-.944v2.3l9.631 1.065v5.58c-4.838-.834-8.59-1.4-13.429-2.08v-19.3h13.431v6.006ZM37.072 90.367a232.526 232.526 0 0 1 3.775-5.125 219.554 219.554 0 0 1 3.786-4.809c-1.281-1.453-2.562-2.919-3.832-4.415s-2.439-2.915-3.709-4.484h5.5a1.331 1.331 0 0 1 .881.488c.7.84 1.322 1.559 2.02 2.375s1.407 1.625 2.116 2.431c.709-.84 1.417-1.682 2.127-2.512s1.413-1.643 2.128-2.466a.948.948 0 0 1 .652-.316h5.322c-1.224 1.384-2.475 2.827-3.7 4.237s-2.448 2.853-3.672 4.287c1.3 1.472 2.628 2.933 3.935 4.387s2.619 2.919 3.924 4.409c-1.865-.006-3.741.028-5.6.091a1.194 1.194 0 0 1-.789-.422q-1.116-1.213-2.23-2.434c-.732-.8-1.476-1.625-2.208-2.45-.755.928-1.511 1.855-2.265 2.8s-1.5 1.913-2.253 2.9c-.106.138-.274.327-.423.344-1.818.208-3.66.434-5.479.685m21.618-1.509c1.258-1.422 2.528-2.816 3.786-4.215s2.516-2.809 3.775-4.218q-1.922-2.231-3.832-4.428c-1.273-1.46-2.615-2.993-3.884-4.462h5.412a1.339 1.339 0 0 1 .881.459c.7.8 1.59 1.79 2.282 2.594s1.407 1.637 2.116 2.456c.709-.822 1.422-1.647 2.128-2.481s1.557-1.842 2.268-2.7a.959.959 0 0 1 .64-.34c1.773-.006 3.534 0 5.319.012-1.235 1.516-2.584 3.175-3.812 4.64s-2.459 2.884-3.683 4.293a234.511 234.511 0 0 1 3.935 4.959 262.195 262.195 0 0 1 3.935 5.293 296.137 296.137 0 0 0-5.6-.772 1.472 1.472 0 0 1-.8-.569c-.739-.948-1.48-1.9-2.219-2.822s-1.487-1.831-2.219-2.725q-1.132 1.247-2.253 2.49c-.749.829-1.511 1.652-2.265 2.478-.1.115-.274.26-.412.253a205.452 205.452 0 0 0-5.49-.2m-43.271-6.7a3.858 3.858 0 0 1 1.979 2.993 11.586 11.586 0 0 1-.24 5.3c-.549 1.89-1.6 3-2.962 3.29C9.494 94.797 4.8 95.888.1 97.088a.159.159 0 0 1-.1-.05V81.205c.274-.019.572-.041.881-.066 3.763-.328 7.5-.656 11.255-.981.377-.031.789 0 1.018-.622.32-.9-.034-2.037-.755-2H0V71.53h12.857a3.24 3.24 0 0 1 3.2 1.944 9.3 9.3 0 0 1 .721 4.4 8.384 8.384 0 0 1-1.361 4.277'\r\n          />\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='m75.165 48.1-6.079-9.03v.049c-.057 1.036-.095 2.076-.183 3.112a2.019 2.019 0 0 1-.3.929l-8.448 12.034c-.249.368-.854 1.239-1.255 1.374a.382.382 0 0 1-.448-.158 2.924 2.924 0 0 1-.17-1.252v-.015l.451-9.913a.888.888 0 0 1 .121-.521l6.771-9.393a1.068 1.068 0 0 0 0-1.4l-6.516-9.933a3.453 3.453 0 0 1-.372-1.536l-.564-9.434c-.136-2.082.98-1.647 2.035 0l9.86 15.392 5.074-7.607c.439-.71.756-1.16 1.67-1.2a28.863 28.863 0 0 0 6.026-.866 2.49 2.49 0 0 1 .955-.113.381.381 0 0 1 .292.365 7.753 7.753 0 0 1-1.169 2.293L74.64 33.912a.971.971 0 0 0-.011 1.253l8.1 12.066a7.386 7.386 0 0 1 1.192 2.336.379.379 0 0 1-.247.33 2.314 2.314 0 0 1-1.008-.05 43.691 43.691 0 0 0-6.495-.95c-.5-.024-.775-.421-1.012-.8m-17.2-18.084 2.675 4.223a.378.378 0 0 1-.005.42L57.97 38.64a.386.386 0 0 1-.639 0l-2.729-4a.379.379 0 0 1-.005-.426l2.719-4.206a.386.386 0 0 1 .65 0m-13.64-.628 10.716-16.367c.911-1.366 2.032-2.329 1.921 0l-.453 9.457a3.209 3.209 0 0 1-.565 1.514l-6.217 9.551c-.31.474-.372.717-.048 1.2l6.446 9.577a1.569 1.569 0 0 1 .389.861l.454 9.969v.025a3.345 3.345 0 0 1-.187 1.236.385.385 0 0 1-.494.158 4.869 4.869 0 0 1-1.172-1.361l-9.863-14.918c-.149.21-.3.418-.441.636-1.474 2.327-2.954 4.649-4.408 6.989a1.51 1.51 0 0 1-1.168.806h-.025a40.188 40.188 0 0 0-6.467 1.047 3.664 3.664 0 0 1-1.08.156.385.385 0 0 1-.325-.453 11.67 11.67 0 0 1 1.3-2.279L40.716 34.9a.978.978 0 0 0 0-1.256L32.349 21.23a8.345 8.345 0 0 1-1.185-2.257.382.382 0 0 1 .294-.383 2.706 2.706 0 0 1 .969.1c1.112.258 2.222.524 3.342.747a22.428 22.428 0 0 0 3.334.462c.711.032 1.093.653 1.429 1.19 1 1.6 2.087 3.16 3.146 4.727a3.685 3.685 0 0 1 .542 2.108ZM57.652 0 45.465 18.084a.386.386 0 0 1-.628.017c-1.5-2-2.426-3.151-5.06-3.4a68.259 68.259 0 0 1-11.375-2.346c-3.454-.947-6.874-2.013-10.321-2.979l16.621 24.707a.379.379 0 0 1 0 .426L19.854 57.187c3.235-.656 6.473-1.24 9.736-1.751 3.484-.546 6.978-1.03 10.465-1.553a6.441 6.441 0 0 0 4.394-2.608l.623-.841a.385.385 0 0 1 .633.019L57.652 68.8l11.947-18.351a.386.386 0 0 1 .633-.019l.623.841a6.442 6.442 0 0 0 4.394 2.608c3.488.523 6.982 1.007 10.465 1.553 3.263.511 6.5 1.095 9.736 1.751L80.601 34.51a.378.378 0 0 1 0-.426L97.225 9.376c-3.447.965-6.868 2.031-10.321 2.979A68.266 68.266 0 0 1 75.528 14.7c-2.635.249-3.557 1.4-5.06 3.4a.386.386 0 0 1-.628-.017Z'\r\n          />\r\n        </g>\r\n      </svg>\r\n      <div id='CustomiserCanvasControls' className={styles.controls}></div>\r\n      <Suspense fallback={<div className={styles.loading}>Loading ...</div>}>\r\n        <CustomiserCanvas className={styles.model} />\r\n      </Suspense>\r\n      {selectedNav === null && (\r\n        <Button className={styles.close} onClick={() => setShow(false)}>\r\n          Close\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customiser;\r\n","import { SpotLight, useHelper } from '@react-three/drei';\r\nimport { useRef } from 'react';\r\nimport { SpotLightHelper, Vector3, SpotLight as SpotLightRef } from 'three';\r\nconst config = {\r\n  ambientLight: {\r\n    // color: 16777215,\r\n    // groundColor: 4473924,\r\n    intensity: 0.1,\r\n  },\r\n  directionalLights: [\r\n    {\r\n      color: 16777215,\r\n      intensity: 0.3,\r\n      position: new Vector3(0, 6, -200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 16759931,\r\n      intensity: 0.2,\r\n      position: new Vector3(-150, 0, 200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 10213119,\r\n      intensity: 0.2,\r\n      position: new Vector3(100, 0, 200),\r\n    },\r\n  ],\r\n};\r\n\r\nconst Lights = () => {\r\n  const light = useRef<SpotLightRef>(null);\r\n  // useHelper(light.current, SpotLightHelper, 'cyan');\r\n  return (\r\n    <group>\r\n      <hemisphereLight {...config.ambientLight}></hemisphereLight>\r\n      <pointLight position={[-800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[-800, 0, 1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[800, 0, 1000]} intensity={0.5} decay={120} power={7} castShadow />\r\n      <pointLight position={[800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Lights;\r\n"],"names":["_ref","className","selected","children","rest","rootClassName","cn","styles","_jsx","usePortalRef","id","loaded","setLoaded","useState","portalRef","useRef","useEffect","current","document","getElementById","cancelPartChange","useCustomiserStore","state","resetNav","ReactDOM","_jsxs","Button","onClick","colour","FittingOption","_selectedModels$find","_option$models","option","selectedModels","setSelectedModel","getSelected","find","m","optionId","model","_Fragment","motion","div","initial","opacity","animate","exit","name","models","map","_m$model","_m$model$data","_m$model3","_m$model3$data","_m$model3$data$attrib","OptionButton","data","_m$model2","attributes","NavFitting","fittingOptions","_state$customProduct","_state$customProduct$","customProduct","options","o","NavButtons","getSrcSets","formats","fff","Object","entries","f","width","url","filter","format","length","sort","a","b","reduce","acc","index","array","concat","getSrcSet","_image$attributes4","image","sizes","relativeHeight","useMemo","_image$attributes","_image$attributes2","height","style","srcSet","_image$attributes3","src","NavFlagsSelect","editFlag","flags","addFlag","updateFlag","_f$attributes","flag","flagSelected","key","edit","Image","_prices$length","scale","rotation","prices","onScale","onRotate","rootRotateClassName","root","root__rotate","rootSizeClassName","root__scale","step","marks","range","start","stop","Array","from","value","formattedPrices","p","i","markKey","Number","toFixed","createPortal","ReactSlider","rotate","thumbClassName","thumb","trackClassName","track","markClassName","mark","min","max","defaultValue","onChange","renderMark","props","orientation","invert","price","disabled","onApply","onEdit","onDelete","xmlns","viewBox","d","NavFlagsFlag","_flag$flag","_flag$flag$attributes","setShowSelector","setSelectModel","deleteFlag","flagItem","flagItemImage","NavOptionEdit","editItem","deleteItem","NavFlags","g","showSelector","flagQuery","useGetFlagsQuery","graphQLClient","pagination","limit","select","_data$flags","_data$graphicPrices","graphicPrices","NavDecalAdjust","decalScale","decalRotation","setScale","event","_price$attributes","_price$attributes2","priceValues","size","basePrice","quantity","startTransition","NavEditButtons","applyFlag","decalFreeze","customiserFlags","title","cb","e","stopPropagation","alt","propStyles","shouldShow","setShouldShow","imgIcon","InfoDisplay","toggle","isOpen","isMinimized","selectedNav","minimizeIconClassname","InfoButton","NavImagesImage","_graphic$graphic","_graphic$graphic$attr","_graphic$graphic$attr2","graphic","updateGraphic","deleteGraphic","graphicItem","graphicItemImage","NavImagesUpload","setGraphic","saving","setSaving","mutate","createGraphicMutation","useCreateGraphicMutation","onSuccess","_data$createGraphic","createGraphic","fileUploadMutate","useUploadMultipleFilesMutation","fileIDs","multipleUpload","_f$data","customer","onDrop","useCallback","acceptedFiles","files","getRootProps","getInputProps","isDragActive","useDropzone","accept","maxFiles","multiple","dropZone","NavImagesSelect","_currentGraphic$attri","_currentGraphic$attri2","editGraphic","currentGraphic","setCurrentGraphic","addGraphic","graphics","undefined","graphicSelected","NavImages","imageQuery","useGetImagesQuery","applyImage","addImage","navItems","sizingVariation","_state$sizing","sizing","variation","parts","savedParts","texts","setSelectedNav","isSelected","item","type","part","handleClick","required","color","pillButton","pillButtonSelected","uniqueMaterialTypes","uniqBy","initialState","colourGroups","materialTypes","materials","createMaterialGroup","set","get","filteredMaterials","colourGroup","selectedColourGroup","_m$attributes","_m$attributes$colourG","resetMaterialGroup","setMaterials","materialType","produce","flatMap","_d$attributes","_d$attributes$colourG","_m$attributes2","_m$attributes2$colour","_state$selectedColour","_m$attributes3","_m$attributes3$type","selectedMaterialType","uniqueMaterials","setColourGroup","_m$attributes4","_m$attributes4$colour","_state$selectedColour2","_m$attributes5","_m$attributes5$type","setMaterialType","Provider","useStore","useMaterialGroupStore","createContext","createStore","create","devtools","Material","_material$attributes","_material$attributes$","_material$attributes2","_mapImage$image","_mapImage$image$data","_mapImage$image$data$","material","onMaterialSelected","mapImage","images","mapType","MaterialType","hideColorGroups","getFilteredMaterials","mt","_mt$attributes","materialType__title","_m$attributes$type","_m$attributes$type$da","SelectedMaterialInfo","_selectedMaterial$att","_selectedMaterial$att2","_selectedMaterial$att3","_selectedMaterial$att4","_selectedMaterial$att5","selectedPart","selectedMaterial","_parts$find","MaterialGroupLoader","_materialGroup$attrib","materialGroup","typeIds","t","useGetMaterialsQuery","filters","in","pageSize","_data$materials","group","_group$attributes$col","_group$attributes","_group$attributes$col2","_group$attributes2","strokeWidth","stroke","fill","_part$materialGroup","_currentPart$material","_currentPart$material2","_currentPart$material3","_currentPart$material4","setPart","removePart","currentPart","showOptional","setShowOptional","optional","PillButton","optionalOnClick","show","Suspense","fallback","MaterialGroup","placeholder","getSizeVariation","unit","weight","variations","v","_v$sku","sku","endsWith","setSizing","_state$sizing2","_state$sizing3","setHeightUnit","setWeightUnit","FormInput","target","unitToggle","toggleButton","toggleButtonSelected","UNIT","HEIGHT","CM","INCH","WEIGHT","KG","LB","FormSelect","selectedVariation","currentStep","onTitleClick","shouldShowInfoButton","includes","toUpperCase","titleClassName","titleContainer","active","handleTitleClick","titleStep","titleButton","content","maxStep","onNext","onPrevious","priceString","formattedPrice","_selectedName$attribu9","_selectedName$attribu10","_selectedName$attribu11","_selectedName$attribu12","_selectedName$attribu13","_selectedName$attribu14","_editText$material","_editText$material$at","_editText$material$at2","_editText$material2","_editText$material2$a","_editText$material2$a2","editText","selectedName","crystals","setCrystals","crystalPrice","puff","setPuff","puffPrice","hasBackground","setHasBackground","hasPuffOption","NAME_TYPE_LUXURY_ID","updateText","setCrystalBackground","crystalBackground","console","log","addCrystals","add","_selectedName$attribu","_selectedName$attribu2","_selectedName$attribu3","_selectedName$attribu4","shopifyVariantId","addPuff","_selectedName$attribu5","_selectedName$attribu6","_selectedName$attribu7","_selectedName$attribu8","finishSelections","finishSelection","pricing","Price","_selectedName$attribu15","prevSelectedName","names","useGetNamesQuery","_data$names","letterPrice","nameType","outline","outlinePrice","promptMessage","n","_n$attributes","_n$attributes2","_n$attributes2$basePr","_n$attributes3","_n$attributes3$letter","setSelectedName","_editText$outline","_editText$outline$att","_editText$outline$att2","_editText$outline2","_editText$outline2$at","_editText$outline2$at2","showOutline","setShowOutline","updateOutline","outlineGroup","applyTextHandler","maxWidth","fonts","arial","oswald","college","ballantines","_fonts$find","text","setText","font","setFont","addText","updateIsMinimizedCustomiserNav","fontSelection","_font","onFontChange","applyTextBtnContainer","NavTextApplyText","applyText","decalPosition","decalOrientation","deleteText","textItem","textItemText","onAddTextClicked","onTextSelected","navTextsSelection","titleText","NavTextText","getMaterialUrl","_material$attributes$2","_material$attributes$3","_material$attributes$4","imgMap","large","normalMapGenerator","NormalMapGenerator","instance","async","imgToNormalMap","img","hasPuff","blur","blurAmount","generateFromImage","strength","level","CanvasText","constructor","_ref2","toNormalMap","patternType","canvas","ctx","outlineCanvas","outlineCtx","normalMapTextureCanvas","normalMapTextureCtx","normalMapCanvas","normalMapCtx","normalMapOutlineTextureCanvas","normalMapOutlineTextureCtx","normalMapOutlineCanvas","normalMapOutlineCtx2","crystalBgPatternCanvas","crystalBgPatternCtx","canvasHeight","canvasWidth","fontSize","outlineWidth","this","createElement","getContext","clear","_this$ctx","_this$outlineCtx","clearRect","drawImg","drawImage","showTestCanvas","innerHTML","maskImage","globalCompositeOperation","drawPreviewText","textAlign","fillText","drawPreviewOutlineText","lineWidth","strokeText","drawPreviewOutlineOnlyText","fillStyle","drawNormalMap","normalMapPatternImg","pattern","createPattern","rect","normalMap","drawOutlineNormalMap","drawCrystalBg","crystalBgImg","crystalBgPatternImg","globalAlpha","printTextMapToStrokeMap","previewText","_ref3","previewImg","toDataURL","mergeCanvas","getOutlineCanvas","getNormalMapTextureCanvas","getNormalMapOutlineCanvas","loadImage","Promise","resolve","reject","crossOrigin","onload","onerror","_text$selectedName","_text$selectedName2","_text$selectedName2$a","canvasRef","zoom","setZoom","dataUrl","setDataUrl","scaleModifier","Vector3","isLuxury","hasCrystals","Texture","normalScale","Canvas","ref","el","gl","preserveDrawingBuffer","Lights","args","visible","Decal","position","preview","transparent","roughness","depthTest","depthWrite","Vector2","_canvasRef$current","cur","_editText$selectedNam","_previewImgRef$curren","previewImgRef","fontFamily","setFontFamily","isVisiblePreview","setIsVisiblePreview","getPatternType","materialImgMemo","outlineImgMemo","fabricPatternImgMemo","crystalNormalMapImgMemo","crystalBgImgMemo","crystalBgPatternImgMemo","previewImgDom","canvasText","CanvasTexture","fontUrl","FontFace","load","loadFonts","outlineImg","embroideryPattern","crystalNormalMap","patternImg","zIndex","textPreview","textPreview__imgContainer","display","NavTextPreviewScene","noText","NavText","setStep","_step","navTextEdit","NavTextPreview","Accordion","NavTextSelect","NavTextNameTypes","NavTextOutline","NavTextFinish","NavStepButtons","handleNext","handlePrevious","NavTextsSelection","setIsOpen","scrollCoordinates","setScrollCoordinates","left","top","isMinimizedCustomiserNav","scrollableRef","isFullscreen","open","minimized","hasActions","scrollTo","behavior","toggleOpen","scrollLeft","scrollTop","nav","layout","transition","stiffness","damping","NavHeader","header","headerAfter","AnimatePresence","variants","collapsed","NavOptions","NavSize","NavPart","actions","total","designComplete","setResetCamera","useDesignStore","addingToCart","resetCustomerSelections","resetPopup","confirm","saveDesign","CustomiserCanvas","lazy","setShow","CustomiserNav","Header","clipPath","fillRule","config","intensity","decay","power","castShadow"],"sourceRoot":""}