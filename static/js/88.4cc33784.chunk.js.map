{"version":3,"file":"static/js/88.4cc33784.chunk.js","mappings":"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","sources":["hooks/useHydration/useHydration.ts","hooks/usePortalRef/usePortalRef.ts","webpack://boxxerworld-customiser/./src/components/nav/NavButtons/NavButtons.module.scss?b4ae","webpack://boxxerworld-customiser/./src/components/ui/DontShowAgain/DontShowAgain.module.scss?2c56","components/ui/DontShowAgain/DontShowAgain.tsx","components/ui/Button/ContainedButton.tsx","components/nav/NavButtons/NavButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFitting/NavFitting.module.scss?96df","components/ui/Button/CapsuleNavButton.tsx","components/ui/Button/ContainedNavButton.tsx","components/nav/NavFitting/NavFitting.tsx","components/ui/Image/getSrcSets.ts","webpack://boxxerworld-customiser/./src/components/ui/Image/Image.module.scss?e41e","components/ui/Image/Image.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFlags/NavFlags.module.scss?2098","components/nav/NavFlags/NavFlagsSelect.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavDecalAdjust/NavDecalAdjust.module.scss?c425","components/nav/NavDecalAdjust/NavDecalAdjust.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavEditButtons/NavEditButtons.module.scss?6ae0","components/nav/NavEditButtons/NavEditButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavOptionEdit/NavOptionEdit.module.scss?d15e","components/nav/NavOptionEdit/NavOptionEdit.tsx","components/nav/NavFlags/NavFlagsFlag.tsx","components/nav/NavFlags/NavFlags.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavHeader/NavHeader.module.scss?a403","components/nav/NavHeader/NavHeader.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavImages/NavImages.module.scss?0415","components/nav/NavImages/NavImagesImage.tsx","components/nav/NavImages/NavImagesUpload.tsx","components/nav/NavImages/NavImagesSelect.tsx","components/nav/NavImages/NavImages.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/MaterialGroup.module.scss?bec8","components/nav/MaterialGroup/MaterialGroupState.ts","hooks/useLongPress/useLongPress.ts","components/nav/MaterialGroup/Material.tsx","components/nav/MaterialGroup/MaterialType.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/SelectedMaterialInfo.module.scss?ad46","components/nav/MaterialGroup/SelectedMaterialInfo.tsx","components/nav/MaterialGroup/MaterialGroup.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavPart/NavPart.module.scss?e3f3","components/ui/Button/TogglePillButton.tsx","components/nav/NavPart/NavPart.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormInput/FormInput.module.scss?a3cb","components/ui/FormInput/FormInput.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormSelect/FormSelect.module.scss?5df1","components/ui/FormSelect/FormSelect.tsx","services/size.ts","webpack://boxxerworld-customiser/./src/components/nav/NavSize/NavSize.module.scss?68ae","components/nav/NavSize/NavSize.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavText.module.scss?7ead","components/ui/Price/Price.module.scss","components/ui/Price/Price.tsx","components/nav/NavText/NavTextFinish.tsx","components/nav/NavText/NavTextNameTypes.tsx","components/nav/NavText/NavTextOutline.tsx","components/nav/NavText/NavTextSelect.tsx","components/nav/NavText/NavTextText.tsx","components/nav/NavText/NavTextsSelection.tsx","lib/canvas.ts","lib/img.util.ts","webpack://boxxerworld-customiser/./src/components/three/CustomiserCanvas/NavTextScene.module.scss?f04f","components/three/CustomiserCanvas/NavTextScene.tsx","components/nav/NavText/NavTextPreview.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavTextCategories.module.scss?c8c9","components/nav/NavText/NavTextCategories.tsx","components/ui/Button/NextStepButton.tsx","components/ui/Button/PrevStepButton.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavTextNavSteps.module.scss?13e7","components/ui/Button/CancelStepButton.tsx","components/ui/Button/ApplyButton.tsx","components/nav/NavText/NavTextNavSteps.tsx","components/nav/NavText/NavTextInput.tsx","components/nav/NavText/NavText.tsx","webpack://boxxerworld-customiser/./src/components/nav/CustomiserNav/CustomiserNav.module.scss?394a","components/nav/NavHeader/NavHeaderScroll.tsx","components/nav/CustomiserNav/CustomiserNav.tsx","webpack://boxxerworld-customiser/./src/components/layout/Header/Header.module.scss?47aa","components/layout/Header/Header.tsx","webpack://boxxerworld-customiser/./src/components/layout/Customiser/Customiser.module.scss?e94f","components/layout/Customiser/Customiser.tsx","lib/shopify.ts","components/three/Loadable/Loadable.tsx","components/three/MouseHelper/MouseHelper.tsx","webpack://boxxerworld-customiser/./src/components/three/CustomiserCanvas/CustomiserCanvas.module.scss?7972","components/three/CustomiserCanvas/CustomiserCanvas.tsx","components/three/Lights/Lights.tsx"],"sourcesContent":["import { useCustomiserStore } from '@store/customiser';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const useHydration = () => {\r\n  const [hydrated, setHydrated] = useState(useCustomiserStore.persist.hasHydrated);\r\n\r\n  useEffect(() => {\r\n    const unsubHydrate = useCustomiserStore.persist.onHydrate(() => setHydrated(false)); // Note: this is just in case you want to take into account manual rehydrations. You can remove this if you don't need it/don't want it.\r\n    const unsubFinishHydration = useCustomiserStore.persist.onFinishHydration(() =>\r\n      setHydrated(true),\r\n    );\r\n\r\n    setHydrated(useCustomiserStore.persist.hasHydrated());\r\n\r\n    return () => {\r\n      unsubHydrate();\r\n      unsubFinishHydration();\r\n    };\r\n  }, []);\r\n\r\n  return hydrated;\r\n};\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nexport const usePortalRef = (id: string) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const portalRef = useRef<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) {\r\n      portalRef.current = document.getElementById(id);\r\n      if (portalRef.current) {\r\n        setLoaded(true);\r\n      }\r\n    }\r\n  }, [id, loaded]);\r\n\r\n  return loaded ? portalRef.current : null;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavButtons_root__ON-jJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"DontShowAgain_root__zOI6r\",\"notifContainer\":\"DontShowAgain_notifContainer__adaGf\",\"notifControlContainer\":\"DontShowAgain_notifControlContainer__gVQq0\",\"btnContainer\":\"DontShowAgain_btnContainer__We3vg\"};","import React, { useState, useEffect } from 'react';\r\nimport styles from './DontShowAgain.module.scss';\r\n\r\nconst DontShowAgain = ({\r\n  children,\r\n  notifName = 'hideShowNotification',\r\n  setShowNotification,\r\n  cb,\r\n}: {\r\n  children: React.ReactNode;\r\n  notifName: string;\r\n  setShowNotification: React.Dispatch<React.SetStateAction<boolean>>;\r\n  cb?: () => void;\r\n}) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const handleDismiss = () => {\r\n    setShowNotification(false);\r\n    if (isChecked) {\r\n      localStorage.setItem(notifName, '1');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.root}>\r\n        <span className={styles.notifContainer}>\r\n          {children}\r\n          <div className={styles.notifControlContainer}>\r\n            <label>\r\n              <input type='checkbox' onChange={(e) => setIsChecked(e.target.checked)} />\r\n              Don&apos;t show again\r\n            </label>\r\n            <span className={styles.btnContainer}>\r\n              <button onClick={handleDismiss}>Cancel</button>\r\n              <button\r\n                onClick={() => {\r\n                  handleDismiss();\r\n                  cb && cb();\r\n                }}\r\n              >\r\n                Okay\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DontShowAgain;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface ContainedButtonProps {\r\n  onClick?: () => void;\r\n  isClickable?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n\r\n  isSelected?: boolean;\r\n}\r\n\r\nconst ContainedButton = ({ onClick, isClickable, classNames, children }: ContainedButtonProps) => {\r\n  const buttonClassNames = `\r\n      ${styles.containedButton}\r\n      ${classNames}\r\n      ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    `;\r\n  return (\r\n    <button className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ContainedButton;\r\n","import { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavButtons.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\nimport DontShowAgain from '../../ui/DontShowAgain';\r\nimport { useState } from 'react';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\nimport { finished } from 'stream';\r\n\r\nexport interface NavButtonsProps {\r\n  className?: string;\r\n  confirmText?: string | Falsey;\r\n  confirmStorage?: string;\r\n  onNext?: (() => void) | Falsey;\r\n}\r\n\r\nconst NavButtons = ({ className, confirmText, confirmStorage, onNext }: NavButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const {\r\n    navItems,\r\n    selectedNav,\r\n    parts,\r\n    sizing,\r\n\r\n    cancelPartChange,\r\n    resetNav,\r\n    setSelectedNav,\r\n  } = useCustomiserStore();\r\n\r\n  const navIndex = navItems.findIndex((nav) => nav.name === selectedNav?.name);\r\n\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const notifTitle = confirmStorage;\r\n  const localStorageItem = localStorage.getItem(notifTitle || '');\r\n  const shouldShowNotification = !localStorageItem;\r\n\r\n  const finishedNavs = parts.map((part) => {\r\n    const partName = part.part.name;\r\n    if (!partName) return;\r\n    const isFinishedPart = !!navItems.find((navItem) => {\r\n      return navItem.name === partName;\r\n    });\r\n    return {\r\n      name: partName,\r\n      isFinished: isFinishedPart,\r\n    };\r\n  });\r\n\r\n  let isFinishedCurrentNav = !!(\r\n    selectedNav && finishedNavs.find((nav) => nav?.name === selectedNav.name)?.isFinished\r\n  );\r\n  let isRequired = selectedNav?.required;\r\n  if (selectedNav?.name === 'Fitting') {\r\n    isRequired = false;\r\n  } else if (selectedNav?.name === 'Size') {\r\n    isFinishedCurrentNav = !!(sizing?.height?.value && sizing?.weight?.value);\r\n  }\r\n\r\n  const saveHandler = () => {\r\n    if (navIndex !== -1 && isFinishedCurrentNav) {\r\n      setSelectedNav(navIndex + 1);\r\n    }\r\n\r\n    // if (!confirmText) {\r\n    //   resetNav();\r\n    // } else {\r\n    //   if (shouldShowNotification) {\r\n    //     setShowPopup(true);\r\n    //   } else {\r\n    //     resetNav();\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  if (!portalRef || !popupPortalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className={rootClassName}>\r\n        <ContainedButton onClick={() => cancelPartChange()}>Cancel</ContainedButton>\r\n        {!onNext ? (\r\n          <ContainedButton isClickable={!isRequired || isFinishedCurrentNav} onClick={saveHandler}>\r\n            Save\r\n          </ContainedButton>\r\n        ) : (\r\n          <ContainedButton onClick={onNext}>Next</ContainedButton>\r\n        )}\r\n      </div>\r\n      {confirmText &&\r\n        showPopup &&\r\n        shouldShowNotification &&\r\n        notifTitle &&\r\n        ReactDOM.createPortal(\r\n          <DontShowAgain cb={resetNav} setShowNotification={setShowPopup} notifName={notifTitle}>\r\n            <span>{confirmText}</span>\r\n          </DontShowAgain>,\r\n          popupPortalRef,\r\n        )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"fittingOption\":\"NavFitting_fittingOption__XQUUG\",\"fittingButtons\":\"NavFitting_fittingButtons__Y1hdd\",\"fittingButton\":\"NavFitting_fittingButton__djmDJ\",\"navButtonContainer\":\"NavFitting_navButtonContainer__K9a4D\"};","import styles from './Button.module.scss';\r\n\r\ninterface CapsuleButtonProps {\r\n  onClick?: () => void;\r\n  isClickable?: boolean;\r\n  isSelected?: boolean;\r\n  isFinished?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst CapsuleNavButton = ({\r\n  onClick,\r\n  isClickable,\r\n  isSelected,\r\n  isFinished,\r\n  classNames,\r\n  children,\r\n}: CapsuleButtonProps) => {\r\n  const buttonClassNames = `\r\n    ${styles.capsuleNavButton}\r\n    ${classNames}\r\n    ${isSelected ? styles.selected : ''}\r\n    ${isFinished ? styles.finished : ''}\r\n    `;\r\n  return (\r\n    <span className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default CapsuleNavButton;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface CapsuleButtonProps {\r\n  onClick?: () => void;\r\n  isSelected?: boolean;\r\n  isFinished?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ContainedNavButton = ({\r\n  onClick,\r\n  isSelected,\r\n  isFinished,\r\n  classNames,\r\n  children,\r\n}: CapsuleButtonProps) => {\r\n  const buttonClassNames = `\r\n    ${styles.containedNavButton}\r\n    ${classNames}\r\n    ${isSelected ? styles.selected : ''}\r\n    ${isFinished ? styles.finished : ''}\r\n    `;\r\n  return (\r\n    <span className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ContainedNavButton;\r\n","import OptionButton from '@components/ui/OptionButton';\r\nimport { CustomProductOptionFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { motion } from 'framer-motion';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavFitting.module.scss';\r\nimport { FocusCameraOnPart } from '@components/layout/Customiser/Customiser';\r\nimport CapsuleButton from '@components/ui/Button/CapsuleNavButton';\r\nimport { useEffect, useState } from 'react';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\nimport ContainedNavButton from '@components/ui/Button/ContainedNavButton';\r\n\r\nexport interface FittingOptionProps {\r\n  option: CustomProductOptionFragment;\r\n  focusCameraOnPart?: FocusCameraOnPart;\r\n}\r\n\r\nconst FittingOption = ({ option, focusCameraOnPart }: FittingOptionProps) => {\r\n  const selectedModels = useCustomiserStore((state) => state.selectedModels);\r\n  const setSelectedModel = useCustomiserStore((state) => state.setSelectedModel);\r\n\r\n  if (!option) {\r\n    return null;\r\n  }\r\n\r\n  const getSelected = selectedModels.find((m) => m.optionId === option.id)?.model;\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={styles.fittingOption}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <div className={styles.fittingButtons}>\r\n          {option.models?.map((m) => (\r\n            <ContainedNavButton\r\n              key={m?.id}\r\n              isSelected={getSelected?.id === m?.model?.data?.id}\r\n              classNames={styles.fittingButton}\r\n              onClick={() => {\r\n                setSelectedModel(option.id, m?.model?.data);\r\n                focusCameraOnPart && focusCameraOnPart(option.name);\r\n              }}\r\n            >\r\n              {m?.model?.data?.attributes?.name}\r\n            </ContainedNavButton>\r\n          ))}\r\n        </div>\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface NavFittingProps {\r\n  focusCameraOnPart?: FocusCameraOnPart;\r\n  additionalFinishedNavs?: {\r\n    name: string;\r\n    isFinished: boolean;\r\n  }[];\r\n  setAdditionalFinishedNavs?: React.Dispatch<\r\n    React.SetStateAction<{ name: string; isFinished: boolean }[]>\r\n  >;\r\n  finishedNavs: ({ name: string; isFinished: boolean } | undefined)[];\r\n  setFinishedNavs: React.Dispatch<\r\n    React.SetStateAction<({ name: string; isFinished: boolean } | undefined)[]>\r\n  >;\r\n}\r\nconst NavFitting = ({ focusCameraOnPart, finishedNavs, setFinishedNavs }: NavFittingProps) => {\r\n  const fittingOptions = useCustomiserStore(\r\n    (state) => state.customProduct?.attributes?.options,\r\n  ) as Array<CustomProductOptionFragment>;\r\n\r\n  const fittingOptionsTitles = fittingOptions?.map((o) => o.name);\r\n\r\n  const initialStep = finishedNavs?.find(\r\n    (navItem) => navItem?.name === 'Fitting' && navItem.isFinished === true,\r\n  )\r\n    ? fittingOptions.length - 1\r\n    : 0;\r\n  const [navStep, setNavStep] = useState(initialStep);\r\n  const hasNextStep = navStep < fittingOptions.length - 1;\r\n\r\n  useEffect(() => {\r\n    if (!hasNextStep) {\r\n      setFinishedNavs &&\r\n        setFinishedNavs((prev) => {\r\n          const iFitting = prev.findIndex((navItem) => navItem?.name === 'Fitting');\r\n          if (iFitting !== -1) {\r\n            prev[iFitting] = {\r\n              name: 'Fitting',\r\n              isFinished: true,\r\n            };\r\n            return prev;\r\n          }\r\n          return [\r\n            ...prev,\r\n            {\r\n              name: 'Fitting',\r\n              isFinished: true,\r\n            },\r\n          ];\r\n        });\r\n    }\r\n  }, [navStep]);\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className={styles.navButtonContainer}>\r\n        {fittingOptionsTitles.map((title, i) => {\r\n          return (\r\n            <CapsuleButton\r\n              isFinished={navStep > i}\r\n              isSelected={navStep === i}\r\n              onClick={() => setNavStep(i)}\r\n              key={i}\r\n            >\r\n              {title}\r\n            </CapsuleButton>\r\n          );\r\n        })}\r\n      </div>\r\n      <div>\r\n        <b>Select {fittingOptionsTitles[navStep]}:</b>\r\n      </div>\r\n      <br />\r\n      {\r\n        <FittingOption\r\n          focusCameraOnPart={focusCameraOnPart}\r\n          key={fittingOptions[navStep]?.id}\r\n          option={fittingOptions[navStep]}\r\n        />\r\n      }\r\n      <NavButtons\r\n        onNext={\r\n          hasNextStep &&\r\n          (() => {\r\n            setNavStep((cur) => cur + 1);\r\n          })\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavFitting;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Formats } from './types';\r\n\r\nfunction getSrcSet(formats: Formats): string | null {\r\n  if (!formats) return null;\r\n\r\n  const fff = Object.entries(formats)\r\n    .map((f) => {\r\n      return f[1]\r\n        ? {\r\n            width: f[1].width,\r\n            url: f[1].url,\r\n          }\r\n        : null;\r\n    })\r\n    .filter((format) => format);\r\n\r\n  return !fff.length\r\n    ? null\r\n    : fff\r\n        .sort((a, b) => {\r\n          if (a?.width && b?.width && a.width < b.width) return -1;\r\n          if (a?.width && b?.width && a.width > b.width) return 1;\r\n          return 0;\r\n        })\r\n        .reduce((acc: any, current: any, index: number, array: any) => {\r\n          return acc + `${current.url} ${current.width}w${index < array.length - 1 ? ', ' : ''}`;\r\n        }, '');\r\n}\r\n\r\nexport default function getSrcSets(formats: Formats): string | null {\r\n  return getSrcSet(formats);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Image_root__u7aDb\"};","import { ImageFragment, Maybe } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { CSSProperties, useMemo } from 'react';\r\nimport getSrcSets from './getSrcSets';\r\n\r\nimport styles from './Image.module.scss';\r\n\r\nexport interface ImageProps {\r\n  className?: string;\r\n  image?: Maybe<ImageFragment>;\r\n  sizes?: string;\r\n}\r\n\r\nconst Image = ({ className, image, sizes }: ImageProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  if (!image) {\r\n    return null;\r\n  }\r\n\r\n  const relativeHeight = useMemo(() => {\r\n    if (image.attributes?.height && image.attributes?.width) {\r\n      return (image.attributes.height / image.attributes.width) * 100;\r\n    }\r\n    return 100;\r\n  }, [image]);\r\n\r\n  const style = { '--image-padding-top': `${relativeHeight}%` } as CSSProperties;\r\n\r\n  const srcSet = useMemo(() => getSrcSets(image.attributes?.formats), [image]);\r\n\r\n  return (\r\n    <div className={rootClassName} style={style}>\r\n      {srcSet && (\r\n        <img src={image.attributes?.url} srcSet={srcSet} sizes={sizes ? sizes : '100vw'} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"flags\":\"NavFlags_flags__S52CT\",\"flag\":\"NavFlags_flag__gtrVs\",\"flagItem\":\"NavFlags_flagItem__rI7sv\",\"flagItemImage\":\"NavFlags_flagItemImage__6ov2x\"};","import Image from '@components/ui/Image';\r\nimport { FlagFragment } from '@graphql/generated/graphql';\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\n\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsSelectProps {\r\n  editFlag?: FlagCustomiser;\r\n  flags: FlagFragment[];\r\n}\r\n\r\nexport const NavFlagsSelect = ({ editFlag, flags }: NavFlagsSelectProps) => {\r\n  const { addFlag, updateFlag } = useCustomiserStore((state) => state);\r\n\r\n  const flagSelected = (flag: FlagFragment) => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        flag: flag,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addFlag({\r\n        flag: flag,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flags}>\r\n      {flags?.map((f) => (\r\n        <div className={styles.flag} key={f.id} onClick={() => flagSelected(f)}>\r\n          <Image image={f.attributes?.image.data} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavDecalAdjust_root__t6vBt\",\"root__rotate\":\"NavDecalAdjust_root__rotate__jXeZv\",\"rotate\":\"NavDecalAdjust_rotate__adO98\",\"scale\":\"NavDecalAdjust_scale__gq4ry\",\"iconContainer\":\"NavDecalAdjust_iconContainer__nW-8U\",\"rotateIcon\":\"NavDecalAdjust_rotateIcon__fOqK4\",\"adjustControls\":\"NavDecalAdjust_adjustControls__ioLx3\"};","/* eslint-disable react/prop-types */\r\nimport { GraphicPriceEntity, GraphicPriceFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport ReactSlider from 'react-slider';\r\nimport styles from './NavDecalAdjust.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\nimport { FaCircleMinus, FaCirclePlus } from 'react-icons/fa6';\r\nimport { useState } from 'react';\r\n\r\nimport { GiClockwiseRotation, GiAnticlockwiseRotation } from 'react-icons/gi';\r\n\r\nexport interface NavDecalAdjustProps {\r\n  className?: string;\r\n  prices?: GraphicPriceFragment[];\r\n  scale?: number;\r\n  rotation?: number;\r\n  onScale?: (event: number, price?: GraphicPriceEntity) => void;\r\n  onRotate?: (event: number) => void;\r\n}\r\n\r\nconst range = (start: number, stop: number, step: number) =>\r\n  Array.from({ length: (stop - start) / step + 1 }, (value, index) => start + index * step);\r\n\r\nconst NavDecalAdjust = ({\r\n  className,\r\n  scale = 1,\r\n  rotation = 0,\r\n  prices,\r\n  onScale,\r\n  onRotate,\r\n}: NavDecalAdjustProps) => {\r\n  const scaleAdjust = 0.15;\r\n  const rotateAdjust = 7.5;\r\n  const portalRef = usePortalRef('CustomiserCanvasControls');\r\n\r\n  const [currentScale, setCurrentScale] = useState(scale);\r\n  const [currentRotate, setCurrentRotate] = useState(rotation);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  const rootRotateClassName = cn(styles.root, className, styles.root__rotate);\r\n  const min = 1;\r\n  const max = 2;\r\n  const numberOfSteps = prices?.length ?? 10;\r\n  const step = (max - min) / (numberOfSteps - 1);\r\n  const marks = range(min, max, step);\r\n\r\n  const formattedPrices = prices?.map((p, i) => ({\r\n    ...p,\r\n    markKey: Number(marks[i].toFixed(5)),\r\n  }));\r\n\r\n  const onChange = (value: number) => {\r\n    const price = formattedPrices?.find((p) => p.markKey === value);\r\n    if (onScale) onScale(value, price);\r\n  };\r\n\r\n  const addScale = () => {\r\n    setCurrentScale((cur) => {\r\n      onScale && onScale(cur + scaleAdjust);\r\n      return cur + scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const subtractScale = () => {\r\n    setCurrentScale((cur) => {\r\n      if (cur - scaleAdjust <= 0) return cur;\r\n      onScale && onScale(cur - scaleAdjust);\r\n      return cur - scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur - rotateAdjust);\r\n      return cur - rotateAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateCounterClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur + rotateAdjust);\r\n      return cur + rotateAdjust;\r\n    });\r\n  };\r\n\r\n  return createPortal(\r\n    <>\r\n      <div className={rootRotateClassName}>\r\n        <span>\r\n          <h4>Size</h4>\r\n          <span className={styles.iconContainer}>\r\n            <span onClick={subtractScale}>\r\n              <FaCircleMinus />\r\n            </span>\r\n            <span onClick={addScale}>\r\n              <FaCirclePlus />\r\n            </span>\r\n          </span>\r\n        </span>\r\n        <span>\r\n          <h4>Rotate</h4>\r\n          <span className={styles.iconContainer}>\r\n            <span className={styles.rotateIcon} onClick={rotateCounterClockwise}>\r\n              <GiAnticlockwiseRotation />\r\n            </span>\r\n            <span className={styles.rotateIcon} onClick={rotateClockwise}>\r\n              <GiClockwiseRotation />\r\n            </span>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavDecalAdjust;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavEditButtons_root__43Hm3\"};","import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavEditButtons.module.scss';\r\n\r\nexport interface NavEditButtonsProps {\r\n  className?: string;\r\n  onApply?: () => void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst NavEditButtons = ({ className, disabled, onApply }: NavEditButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={rootClassName}>\r\n      <Button onClick={onApply}>Canacel</Button>\r\n      <Button colour='red' onClick={onApply} disabled={disabled}>\r\n        Save\r\n      </Button>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavEditButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavOptionEdit_root__q-pp0\",\"eyeIcon\":\"NavOptionEdit_eyeIcon__v85fP\"};","import cn from 'classnames';\r\n\r\nimport styles from './NavOptionEdit.module.scss';\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa6';\r\nimport { MouseEventHandler } from 'react';\r\n\r\nexport interface NavOptionEditProps {\r\n  className?: string;\r\n  onEdit?: () => void;\r\n  onDelete?: () => void;\r\n  isVisible?: boolean;\r\n  toggleVisibility?: () => void;\r\n}\r\n\r\nconst NavOptionEdit = ({\r\n  className,\r\n  onEdit,\r\n  onDelete,\r\n  isVisible = true,\r\n  toggleVisibility,\r\n}: NavOptionEditProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const isVisibleEye = typeof isVisible === undefined ? true : isVisible;\r\n\r\n  const handleIsVisible: MouseEventHandler<HTMLSpanElement> = (event) => {\r\n    event.stopPropagation();\r\n    toggleVisibility && toggleVisibility();\r\n  };\r\n  return (\r\n    <div className={rootClassName}>\r\n      <span onClick={handleIsVisible} className={styles.eyeIcon}>\r\n        {isVisibleEye ? <FaEye /> : <FaEyeSlash />}\r\n      </span>\r\n      <button onClick={onEdit}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24.785 24.788'>\r\n          <path d='M24.785 6.739 18.046 0 0 18.049v6.739h6.739Zm-6.738-3.218 3.218 3.218-1.351 1.352-3.217-3.218Zm-3.112 3.112 3.218 3.218L7.467 20.538l-3.218-3.22ZM2.489 22.298v-3.219l3.218 3.218Z' />\r\n        </svg>\r\n      </button>\r\n      <button onClick={onDelete}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.601 23.219'>\r\n          <path d='m14.601 11.609-1.489-1.489L2.992 0 .001 2.978l8.631 8.631-8.631 8.632 2.991 2.978L13.112 13.1Z' />\r\n          <path d='m9 11.609 1.489 1.489 10.12 10.12L23.6 20.24l-8.631-8.631L23.6 2.977 20.609-.001l-10.12 10.119Z' />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavOptionEdit;\r\n","import Image from '@components/ui/Image';\r\n\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsFlagProps {\r\n  flag: FlagCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavFlagsFlag = ({ flag, setShowSelector: setSelectModel }: NavFlagsFlagProps) => {\r\n  const { updateFlag, deleteFlag } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (flag.key) {\r\n      updateFlag(flag.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (flag.key) {\r\n      deleteFlag(flag.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flagItem}>\r\n      <div className={styles.flagItemImage}>\r\n        <Image image={flag.flag?.attributes?.image.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import { startTransition, useState } from 'react';\r\nimport { NavFlagsSelect } from './NavFlagsSelect';\r\n\r\nimport Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\nimport styles from './NavFlags.module.scss';\r\nimport { NavFlagsFlag } from './NavFlagsFlag';\r\nimport { GraphicPriceEntity, useGetFlagsQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nconst NavFlags = () => {\r\n  const flags = useCustomiserStore((state) => state.flags);\r\n  const updateFlag = useCustomiserStore((state) => state.updateFlag);\r\n  const editFlag = flags?.find((g) => g.edit);\r\n\r\n  const [showSelector, setShowSelector] = useState(false);\r\n\r\n  const { data: flagQuery } = useGetFlagsQuery(\r\n    graphQLClient,\r\n    {\r\n      pagination: { limit: 500 },\r\n    },\r\n    {\r\n      select: (data) => ({ flags: data.flags?.data, prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addFlag = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editFlag?.key) updateFlag(editFlag.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyFlag = () => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editFlag?.decalScale}\r\n            rotation={editFlag?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={flagQuery?.prices}\r\n          />\r\n          {flagQuery?.flags && <NavFlagsSelect editFlag={editFlag} flags={flagQuery.flags} />}\r\n          <NavEditButtons disabled={!editFlag} onApply={applyFlag} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Flags</h3>\r\n            {flags?.map((flag) => (\r\n              <NavFlagsFlag key={flag.key} flag={flag} setShowSelector={setShowSelector} />\r\n            ))}\r\n            <Button colour='red' onClick={addFlag}>\r\n              Add Flag\r\n            </Button>\r\n          </div>\r\n          <NavButtons />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavFlags;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavHeader_root__jnadG\",\"menu\":\"NavHeader_menu__Mmpjx\",\"nav\":\"NavHeader_nav__mJbli\",\"title\":\"NavHeader_title__tOyZd\",\"minimizeIcon\":\"NavHeader_minimizeIcon__GKC2n\",\"minimized\":\"NavHeader_minimized__04mp3\",\"navIcon\":\"NavHeader_navIcon__6iUBm\"};","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport styles from './NavHeader.module.scss';\r\nimport InfoButton from '@components/ui/InfoButton';\r\n\r\nexport interface NavHeaderProps {\r\n  className?: string;\r\n  toggle: () => void;\r\n  isOpen: boolean;\r\n  isMinimized?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst NavHeader = ({ className, toggle, isOpen, isMinimized = false, onClick }: NavHeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedNav = useCustomiserStore((state) => state.selectedNav);\r\n\r\n  if (isOpen) {\r\n    return null;\r\n  }\r\n\r\n  const minimizeIconClassname = cn(styles.minimizeIcon, {\r\n    [styles.minimized]: isMinimized,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div id='NavHeader' className={rootClassName}>\r\n        <div className={styles.nav}>\r\n          {/* <div className={styles.title}>{selectedNav?.name}</div> */}\r\n          <div className={minimizeIconClassname} onClick={onClick}>\r\n            <svg viewBox='0 0 330 330'>\r\n              <path\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                id='XMLID_224_'\r\n                d='M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394  l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393  C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z'\r\n              />\r\n            </svg>\r\n          </div>\r\n          {/* <InfoButton title={selectedNav?.name} /> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavHeader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dropZone\":\"NavImages_dropZone__4YMrM\",\"image\":\"NavImages_image__svpqZ\",\"graphicItem\":\"NavImages_graphicItem__XenKS\",\"graphicItemImage\":\"NavImages_graphicItemImage__8GS2T\"};","import Image from '@components/ui/Image';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesImageProps {\r\n  graphic: GraphicCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavImagesImage = ({\r\n  graphic,\r\n  setShowSelector: setSelectModel,\r\n}: NavImagesImageProps) => {\r\n  const { updateGraphic, deleteGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (graphic.key) {\r\n      updateGraphic(graphic.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (graphic.key) {\r\n      deleteGraphic(graphic.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphicItem}>\r\n      <div className={styles.graphicItemImage}>\r\n        <Image image={graphic.graphic?.attributes?.image?.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  GraphicFragment,\r\n  useCreateGraphicMutation,\r\n  useUploadMultipleFilesMutation,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { Dispatch, SetStateAction, useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesUploadProps {\r\n  setGraphic: (graphic: GraphicFragment) => void;\r\n}\r\n\r\nexport const NavImagesUpload = ({ setGraphic }: NavImagesUploadProps) => {\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const { mutate: createGraphicMutation } = useCreateGraphicMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const graphic = data.createGraphic?.data;\r\n      setSaving(false);\r\n      if (graphic) setGraphic(graphic);\r\n    },\r\n  });\r\n\r\n  const { mutate: fileUploadMutate } = useUploadMultipleFilesMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const fileIDs = data.multipleUpload.map((f) => f?.data?.id) as string[];\r\n      createGraphicMutation({ data: { image: fileIDs[0], customer: true, name: fileIDs[0] } });\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback((acceptedFiles: File[]) => {\r\n    setSaving(true);\r\n    fileUploadMutate({ files: acceptedFiles });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'image/jpeg': [],\r\n      'image/png': [],\r\n    },\r\n    maxFiles: 1,\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h5>Upload an image</h5>\r\n      <div className={styles.dropZone} {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <div>\r\n          <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.219 29.191'>\r\n            <g>\r\n              <path d='M11.609 0 10.12 1.489 0 11.609 2.978 14.6l8.631-8.631 8.632 8.631 2.978-2.991L13.1 1.489Z' />\r\n              <path d='M14.356 29.191h-5v-26h5Z' />\r\n            </g>\r\n          </svg>\r\n          {saving ? (\r\n            <h5>Please wait...</h5>\r\n          ) : isDragActive ? (\r\n            <h5>Drop images here ...</h5>\r\n          ) : (\r\n            <h5>Click or drag images here to upload</h5>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { GraphicFragment } from '@graphql/generated/graphql';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState } from 'react';\r\nimport Image from '@components/ui/Image';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesUpload } from './NavImagesUpload';\r\nimport Button from '@components/ui/Button';\r\n\r\nexport interface NavImagesSelectProps {\r\n  editGraphic?: GraphicCustomiser;\r\n  graphic?: GraphicFragment;\r\n}\r\n\r\nexport const NavImagesSelect = ({ editGraphic, graphic }: NavImagesSelectProps) => {\r\n  const [currentGraphic, setCurrentGraphic] = useState<GraphicFragment | undefined>(graphic);\r\n  const { addGraphic, updateGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const graphicSelected = (graphic: GraphicFragment) => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        graphic,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addGraphic({\r\n        graphic,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setGraphic = (graphic: GraphicFragment) => {\r\n    setCurrentGraphic(graphic);\r\n    graphicSelected(graphic);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphics}>\r\n      {currentGraphic ? (\r\n        <>\r\n          <Image className={styles.image} image={currentGraphic.attributes?.image?.data} />\r\n          <Button onClick={() => setCurrentGraphic(undefined)}>Change Image</Button>\r\n        </>\r\n      ) : (\r\n        <NavImagesUpload setGraphic={setGraphic} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import Button from '@components/ui/Button';\r\nimport { GraphicPriceEntity, useGetImagesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { startTransition, useState } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesImage } from './NavImagesImage';\r\nimport { NavImagesSelect } from './NavImagesSelect';\r\n\r\nconst NavImages = () => {\r\n  const [showSelector, setShowSelector] = useState(false);\r\n  const graphics = useCustomiserStore((state) => state.graphics);\r\n  const updateGraphic = useCustomiserStore((state) => state.updateGraphic);\r\n  const editGraphic = graphics?.find((g) => g.edit);\r\n\r\n  const { data: imageQuery } = useGetImagesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => ({ prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addImage = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editGraphic?.key) updateGraphic(editGraphic.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyImage = () => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editGraphic?.decalScale}\r\n            rotation={editGraphic?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={imageQuery?.prices}\r\n          />\r\n          <NavImagesSelect editGraphic={editGraphic} graphic={editGraphic?.graphic} />\r\n          <NavEditButtons disabled={!editGraphic} onApply={applyImage} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Images</h3>\r\n            {graphics?.map((graphic) => (\r\n              <NavImagesImage\r\n                key={graphic.key}\r\n                graphic={graphic}\r\n                setShowSelector={setShowSelector}\r\n              />\r\n            ))}\r\n            <Button colour='red' onClick={addImage}>\r\n              Add Image\r\n            </Button>\r\n          </div>\r\n          <NavButtons />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavImages;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MaterialGroup_root__M5bHl\",\"colourGroups\":\"MaterialGroup_colourGroups__G3KSo\",\"materialType\":\"MaterialGroup_materialType__X63YP\",\"materialType__title\":\"MaterialGroup_materialType__title__nQjVb\",\"materials\":\"MaterialGroup_materials__iAoDB\",\"selected\":\"MaterialGroup_selected__YMvLv\",\"popup\":\"MaterialGroup_popup__4J8xn\"};","import { create, StateCreator, StoreApi } from 'zustand';\r\nimport createContext from 'zustand/context';\r\nimport produce from 'immer';\r\nimport { devtools } from 'zustand/middleware';\r\nimport {\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n} from '@graphql/generated/graphql';\r\nimport { uniqBy } from 'lodash';\r\n\r\nconst uniqueColourGroups = (array: MaterialColourGroupEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterialTypes = (array: MaterialTypeEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterials = (array: MaterialEntity[]) => uniqBy(array, 'id');\r\ninterface MaterialGroupInitialState {\r\n  colourGroups: MaterialColourGroupEntity[];\r\n  materialTypes: MaterialTypeEntity[];\r\n  materials: MaterialEntity[];\r\n  selectedColourGroup?: MaterialColourGroupEntity;\r\n  selectedMaterialType?: MaterialTypeEntity;\r\n}\r\nexport interface MaterialGroupState extends MaterialGroupInitialState {\r\n  resetMaterialGroup: () => void;\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => void;\r\n  filteredMaterials: () => MaterialEntity[];\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => void;\r\n  setMaterialType: (materialType: MaterialTypeEntity) => void;\r\n}\r\n\r\nconst initialState: MaterialGroupInitialState = {\r\n  colourGroups: [],\r\n  materialTypes: [],\r\n  materials: [],\r\n};\r\n\r\nconst createMaterialGroup: StateCreator<MaterialGroupState, [['zustand/devtools', never]], []> = (\r\n  set,\r\n  get,\r\n) => ({\r\n  ...initialState,\r\n  filteredMaterials: () => {\r\n    const materials = get().materials;\r\n    const colourGroup = get().selectedColourGroup;\r\n    const filteredMaterials = materials.filter((m) =>\r\n      m.attributes?.colourGroups?.data.find((g) => g.id === colourGroup?.id),\r\n    );\r\n    return filteredMaterials;\r\n  },\r\n  resetMaterialGroup: () => set(initialState),\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        const colourGroups = materials.flatMap(\r\n          (d) => d.attributes?.colourGroups?.data,\r\n        ) as MaterialColourGroupEntity[];\r\n        state.colourGroups = uniqueColourGroups(colourGroups);\r\n        if (colourGroup) {\r\n          state.selectedColourGroup = colourGroup;\r\n        } else {\r\n          state.selectedColourGroup = state.colourGroups[0];\r\n        }\r\n\r\n        const materialTypes = materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n\r\n        if (materialType) {\r\n          state.selectedMaterialType = materialType;\r\n        } else {\r\n          state.selectedMaterialType = state.materialTypes[0];\r\n        }\r\n\r\n        state.materials = uniqueMaterials(materials);\r\n      }),\r\n    );\r\n  },\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedColourGroup = colourGroup;\r\n        const materialTypes = state.materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n      }),\r\n    );\r\n  },\r\n  setMaterialType: (materialType: MaterialTypeEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedMaterialType = materialType;\r\n      }),\r\n    );\r\n  },\r\n});\r\n\r\nexport const { Provider, useStore: useMaterialGroupStore } =\r\n  createContext<StoreApi<MaterialGroupState>>();\r\n\r\nexport const createStore = () => create<MaterialGroupState>()(devtools(createMaterialGroup));\r\n","// eslint-disable-next-line\r\n// @ts-nocheck\r\n\r\nimport { useCallback, useRef, useState, MouseEvent, TouchEvent } from 'react';\r\n\r\ninterface LongPressOptions {\r\n  shouldPreventDefault?: boolean;\r\n  delay?: number;\r\n}\r\n\r\nexport const useLongPress = (\r\n  onLongPress: (event: MouseEvent<HTMLElement> | TouchEvent<HTMLElement>) => void,\r\n  onClick: () => void,\r\n  { shouldPreventDefault = true, delay = 300 }: LongPressOptions = {},\r\n) => {\r\n  const [longPressTriggered, setLongPressTriggered] = useState<boolean>(false);\r\n  const timeout = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const target = useRef<HTMLElement | null>(null);\r\n\r\n  const start = useCallback(\r\n    (event: MouseEvent<HTMLElement> | TouchEvent<HTMLElement>) => {\r\n      if (shouldPreventDefault && event.target) {\r\n        (event.target as HTMLElement).addEventListener('touchend', preventDefault, {\r\n          passive: false,\r\n        });\r\n        target.current = event.target as HTMLElement;\r\n      }\r\n      timeout.current = setTimeout(() => {\r\n        onLongPress(event);\r\n        setLongPressTriggered(true);\r\n      }, delay);\r\n    },\r\n    [onLongPress, delay, shouldPreventDefault],\r\n  );\r\n\r\n  const clear = useCallback(\r\n    (event: MouseEvent<HTMLElement> | TouchEvent<HTMLElement>, shouldTriggerClick = true) => {\r\n      if (timeout.current) {\r\n        clearTimeout(timeout.current);\r\n      }\r\n      if (shouldTriggerClick && !longPressTriggered && onClick) {\r\n        onClick();\r\n      }\r\n      setLongPressTriggered(false);\r\n      if (shouldPreventDefault && target.current) {\r\n        target.current.removeEventListener('touchend', preventDefault);\r\n      }\r\n    },\r\n    [shouldPreventDefault, onClick, longPressTriggered],\r\n  );\r\n\r\n  return {\r\n    onMouseDown: (e: MouseEvent<HTMLElement>) => start(e),\r\n    onTouchStart: (e: TouchEvent<HTMLElement>) => start(e),\r\n    onMouseUp: (e: MouseEvent<HTMLElement>) => clear(e),\r\n    onMouseLeave: (e: MouseEvent<HTMLElement>) => clear(e, false),\r\n    onTouchEnd: (e: TouchEvent<HTMLElement>) => clear(e),\r\n  };\r\n};\r\n\r\nconst isTouchEvent = (event: MouseEvent | TouchEvent): event is TouchEvent => {\r\n  return 'touches' in event;\r\n};\r\n\r\nconst preventDefault = (event: TouchEvent<HTMLElement>) => {\r\n  if (!isTouchEvent(event)) return;\r\n\r\n  if (event.touches.length < 2 && event.preventDefault) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n","import { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { Falsey } from 'lodash';\r\nimport { useLongPress } from './../../../hooks/useLongPress';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nexport interface MaterialProps {\r\n  className?: string;\r\n  material: MaterialFragment;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const Material = ({\r\n  className,\r\n  material,\r\n  onMaterialSelected,\r\n  selectedMaterialId,\r\n}: MaterialProps) => {\r\n  const rootClassName = cn(styles.material, className, {\r\n    [styles.selected]: material.id === selectedMaterialId,\r\n  });\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const mapImage = material?.attributes?.images?.find((i) => i?.mapType === 'map');\r\n\r\n  const onClick = () => {\r\n    console.log('mapImage', mapImage);\r\n    if (material) {\r\n      onMaterialSelected(material);\r\n    }\r\n  };\r\n\r\n  const onLongPress = useLongPress(\r\n    () => {\r\n      setShowPopup(true);\r\n    },\r\n    onClick,\r\n    { delay: 1000 },\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={rootClassName}\r\n        // onTouchStart={onMaterialTouchStart}\r\n        // onTouchEnd={onMaterialTouchEnd}\r\n        {...onLongPress}\r\n        data-name={material.attributes?.name}\r\n      >\r\n        {mapImage && <img src={mapImage?.image?.data?.attributes?.formats['thumbnail'].url} />}\r\n      </button>\r\n      {showPopup &&\r\n        popupPortalRef &&\r\n        createPortal(\r\n          <div\r\n            className={styles.popup}\r\n            onClick={() => {\r\n              setShowPopup(false);\r\n            }}\r\n          >\r\n            <img\r\n              height='300'\r\n              width='300'\r\n              src={mapImage?.image?.data?.attributes?.formats['large'].url}\r\n              alt=''\r\n            />\r\n          </div>,\r\n          popupPortalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n","import PillButton from '@components/ui/PillButton';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { Material } from './Material';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { useMaterialGroupStore } from './MaterialGroupState';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialTypeProps {\r\n  className?: string;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const MaterialType = ({\r\n  className,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  selectedMaterialId,\r\n}: MaterialTypeProps) => {\r\n  const rootClassName = cn(styles.materialType, className);\r\n\r\n  const {\r\n    materialTypes,\r\n    filteredMaterials: getFilteredMaterials,\r\n    materials,\r\n  } = useMaterialGroupStore();\r\n\r\n  const filteredMaterials = hideColorGroups ? materials : getFilteredMaterials();\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && <h5>Texture</h5>}\r\n      {materialTypes.map((mt) => (\r\n        <div key={mt.id} className={styles.materialType}>\r\n          <h6 className={styles.materialType__title}>{mt.attributes?.name}</h6>\r\n          <div className={styles.materials}>\r\n            {filteredMaterials\r\n              .filter((m) => m.attributes?.type?.data?.id === mt.id)\r\n              .map((m) => (\r\n                <Material\r\n                  key={m.id}\r\n                  material={m}\r\n                  onMaterialSelected={onMaterialSelected}\r\n                  selectedMaterialId={selectedMaterialId}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SelectedMaterialInfo_root__kIp+x\",\"root__noMaterial\":\"SelectedMaterialInfo_root__noMaterial__dtWKf\",\"currencyContainer\":\"SelectedMaterialInfo_currencyContainer__s15RH\",\"materialName\":\"SelectedMaterialInfo_materialName__vha4F\"};","import { FC, useMemo } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport styles from './SelectedMaterialInfo.module.scss';\r\n\r\nconst SelectedMaterialInfo: FC = () => {\r\n  const portalRef = usePortalRef('CustomiserNavMaterial');\r\n  const { selectedPart, parts } = useCustomiserStore();\r\n\r\n  const selectedMaterial = useMemo(\r\n    () => parts.find((part) => part.part.id === selectedPart?.id)?.material,\r\n    [selectedPart, parts],\r\n  );\r\n\r\n  if (!portalRef) return null;\r\n\r\n  if (!selectedMaterial) {\r\n    return ReactDOM.createPortal(\r\n      <div className={cn(styles.root, styles.root__noMaterial)}>No material selected.</div>,\r\n      portalRef,\r\n    );\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={styles.root}>\r\n      <span>\r\n        <div className={styles.materialName}>{selectedMaterial.attributes?.name}</div>\r\n        <small>\r\n          <i>TODO: Add currency</i>\r\n        </small>\r\n      </span>\r\n      {/* TODO: Add currency */}\r\n      <div className={styles.currencyContainer}>\r\n        ${selectedMaterial.attributes?.price?.data?.attributes?.price}\r\n      </div>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default SelectedMaterialInfo;\r\n","import {\r\n  InputMaybe,\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialFragment,\r\n  MaterialGroupEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n  useGetMaterialsQuery,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nimport cn from 'classnames';\r\nimport { useEffect } from 'react';\r\n\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { createStore, Provider, useMaterialGroupStore } from './MaterialGroupState';\r\nimport { MaterialType } from './MaterialType';\r\nimport SelectedMaterialInfo from './SelectedMaterialInfo';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialGroupProps {\r\n  className?: string;\r\n  materialGroup?: Maybe<MaterialGroupEntity>;\r\n  materialType?: Maybe<MaterialTypeEntity>;\r\n  colourGroup?: Maybe<MaterialColourGroupEntity>;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nconst MaterialGroupLoader = ({\r\n  className,\r\n  materialGroup,\r\n  materialType,\r\n  colourGroup,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  selectedMaterialId,\r\n}: MaterialGroupProps) => {\r\n  const colourGroups = useMaterialGroupStore((state) => state.colourGroups);\r\n  const selectedColourGroup = useMaterialGroupStore((state) => state.selectedColourGroup);\r\n  const setMaterials = useMaterialGroupStore((state) => state.setMaterials);\r\n  const setColourGroup = useMaterialGroupStore((state) => state.setColourGroup);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const typeIds = materialGroup?.attributes?.materialTypes\r\n    ? (materialGroup.attributes.materialTypes.data.map((t) => t.id) as InputMaybe<string>[])\r\n    : [];\r\n\r\n  const { data: materials } = useGetMaterialsQuery(\r\n    graphQLClient,\r\n    { filters: { type: { id: { in: typeIds } } }, pagination: { pageSize: 200 } },\r\n    {\r\n      select: (data) => data.materials?.data as MaterialEntity[],\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (materials?.length) {\r\n      // // TODO - remove: temporary for testing rainbow\r\n      // if (!materials.find((a) => a.id === '999')) {\r\n      //   // eslint-disable-next-line\r\n      //   // @ts-ignore\r\n      //   materials.push(testMaterial);\r\n      // }\r\n      // console.log('materials', materials);\r\n      setMaterials(materials, materialType, colourGroup);\r\n    }\r\n  }, [materials]);\r\n\r\n  if (!materialGroup) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && (\r\n        <>\r\n          <h5>Colour</h5>\r\n          <div className={styles.colourGroups}>\r\n            {colourGroups.map((group) => {\r\n              const styles: React.CSSProperties | undefined = {\r\n                background: group.attributes?.colour ?? '#000',\r\n              };\r\n              if (selectedColourGroup?.id === group.id) {\r\n                styles.outline = `4px solid ${group.attributes?.colour}`;\r\n              }\r\n\r\n              return (\r\n                <button key={group.id} onClick={() => setColourGroup(group)}>\r\n                  <svg\r\n                    style={styles}\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    viewBox='0 0 42 42'\r\n                    // strokeWidth={4}\r\n                    // stroke={\r\n                    //   selectedColourGroup?.id === group.id\r\n                    //     ? '#000'\r\n                    //     : group.attributes?.colour ?? '#000'\r\n                    // }\r\n                    fill={'transparent'}\r\n                  >\r\n                    <rect width='100%' height='100%' />\r\n                  </svg>\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n      <MaterialType\r\n        hideColorGroups={hideColorGroups}\r\n        onMaterialSelected={onMaterialSelected}\r\n        selectedMaterialId={selectedMaterialId}\r\n      />\r\n      <SelectedMaterialInfo />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MaterialGroup = (props: MaterialGroupProps) => {\r\n  return (\r\n    <Provider createStore={createStore}>\r\n      <MaterialGroupLoader {...props} />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default MaterialGroup;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"NavPart_buttonContainer__3whqC\",\"showOptional\":\"NavPart_showOptional__s6PPL\"};","import styles from './Button.module.scss';\r\n\r\ninterface TogglePillButtonProps {\r\n  onClick?: () => void;\r\n  children: React.ReactNode;\r\n  isOn?: boolean;\r\n\r\n  className?: string;\r\n}\r\n\r\nconst TogglePillButton = ({ onClick, children, isOn, className }: TogglePillButtonProps) => {\r\n  console.log('isOn', isOn);\r\n  const buttonClassNames = `\r\n    ${styles.togglePillButton}\r\n    ${className}\r\n    ${isOn ? styles.on : ''}\r\n  `;\r\n  return (\r\n    <button className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TogglePillButton;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport { CustomProductPartFragment, MaterialFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport NavButtons from '../NavButtons';\r\n\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { FaMinus } from 'react-icons/fa';\r\n\r\nimport styles from './NavPart.module.scss';\r\nimport TogglePillButton from '@components/ui/Button/TogglePillButton';\r\n\r\nexport interface NavPartProps {\r\n  className?: string;\r\n  part: CustomProductPartFragment;\r\n}\r\n\r\nconst NavPart = ({ className, part }: NavPartProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedPart = useCustomiserStore((state) => state.selectedPart);\r\n  const setPart = useCustomiserStore((state) => state.setPart);\r\n  const removePart = useCustomiserStore((state) => state.removePart);\r\n  const parts = useCustomiserStore((state) => state.parts);\r\n  const currentPart = useMemo(() => parts.find((p) => p.part.id === part?.id), [part]);\r\n  const [showOptional, setShowOptional] = useState(false);\r\n\r\n  let selectedMaterialId = parts.find((part) => part.part.name === selectedPart?.name)?.material.id;\r\n  const confirmText = !selectedMaterialId\r\n    ? 'Are you sure you want to continue with the default color?'\r\n    : null;\r\n\r\n  if (!part?.materialGroup?.data) {\r\n    return null;\r\n  }\r\n\r\n  const onMaterialSelected = (material: MaterialFragment) => {\r\n    if (selectedPart && material) {\r\n      selectedMaterialId = material.id;\r\n      setPart(selectedPart, material);\r\n    }\r\n  };\r\n\r\n  const optionalOnClick = (show: boolean) => {\r\n    setShowOptional(show);\r\n    if (!show) {\r\n      removePart(part);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (part.optional && !showOptional && currentPart) {\r\n      setShowOptional(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        key={part.id}\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <div className={styles.buttonContainer}>\r\n          {part.optional && (\r\n            <TogglePillButton\r\n              className={styles.showOptional}\r\n              isOn={showOptional}\r\n              onClick={() => optionalOnClick(!showOptional)}\r\n            >\r\n              {showOptional ? (\r\n                <>\r\n                  <FaMinus />\r\n                  &ensp;Remove\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <IoMdAdd />\r\n                  &ensp;Add\r\n                </>\r\n              )}{' '}\r\n              {part.name}\r\n            </TogglePillButton>\r\n          )}\r\n        </div>\r\n        {(!part.optional || (part.optional && showOptional)) && (\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <MaterialGroup\r\n              materialGroup={part.materialGroup.data}\r\n              materialType={currentPart?.material.attributes?.type?.data}\r\n              colourGroup={currentPart?.material.attributes?.colourGroups?.data[0]}\r\n              onMaterialSelected={onMaterialSelected}\r\n              selectedMaterialId={selectedMaterialId}\r\n            />\r\n          </Suspense>\r\n        )}\r\n      </motion.div>\r\n      <NavButtons confirmStorage='partsMaterial' confirmText={confirmText} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavPart;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormInput_root__cf10F\",\"input\":\"FormInput_input__gRXur\",\"label\":\"FormInput_label__9L2lb\"};","import cn from 'classnames';\r\nimport { InputHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormInput.module.scss';\r\n\r\nexport interface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormInput = ({ className, placeholder, children, ...props }: FormInputProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <input className={styles.input} {...props} placeholder=' ' />\r\n      <label className={styles.label}>{placeholder}</label>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormSelect_root__li+Rt\",\"select\":\"FormSelect_select__ftYcv\",\"icon\":\"FormSelect_icon__juFw+\"};","import cn from 'classnames';\r\nimport { SelectHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormSelect.module.scss';\r\n\r\nexport interface FormSelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormSelect = ({ className, children, ...props }: FormSelectProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <select className={styles.select} {...props}>\r\n        {children}\r\n      </select>\r\n      <svg xmlns='http://www.w3.org/2000/svg' className={styles.icon} viewBox='0 0 18.108 30.546'>\r\n        <path d='m2.835 30.545-2.836-2.836 12.387-12.436L0 2.835 2.836-.001l15.272 15.274Z' />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSelect;\r\n","import { ShopifyProductVariantFragment } from '@graphql/generated/graphql-shopify';\r\n\r\nconst getSizeVariation = (\r\n  unit: string,\r\n  weight: number,\r\n  variations: Array<ShopifyProductVariantFragment>,\r\n) => {\r\n  let size = '';\r\n  if (unit === 'KGS') {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 10:\r\n        size = 'BABY';\r\n        break;\r\n      case 10 <= weight && weight < 16:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 16 <= weight && weight < 22:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 22 <= weight && weight < 30:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 30 <= weight && weight < 40:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 40 <= weight && weight < 50:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 50 <= weight && weight < 59:\r\n        size = 'XS';\r\n        break;\r\n      case 59 <= weight && weight < 69:\r\n        size = 'S';\r\n        break;\r\n      case 69 <= weight && weight < 79:\r\n        size = 'M';\r\n        break;\r\n      case 79 <= weight && weight < 90:\r\n        size = 'L';\r\n        break;\r\n      case 90 <= weight && weight < 101:\r\n        size = 'XL';\r\n        break;\r\n      case 101 <= weight && weight < 111:\r\n        size = '2XL';\r\n        break;\r\n      case 111 <= weight && weight < 120:\r\n        size = '3XL';\r\n        break;\r\n      case 120 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  } else {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 22:\r\n        size = 'BABY';\r\n        break;\r\n      case 22 <= weight && weight < 35.3:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 35.3 <= weight && weight < 48.5:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 48.5 <= weight && weight < 66.1:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 66.1 <= weight && weight < 88.2:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 88.2 <= weight && weight < 110.2:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 110.2 <= weight && weight < 130:\r\n        size = 'XS';\r\n        break;\r\n      case 130 <= weight && weight < 152.1:\r\n        size = 'S';\r\n        break;\r\n      case 152.1 <= weight && weight < 174.2:\r\n        size = 'M';\r\n        break;\r\n      case 174.2 <= weight && weight < 198.4:\r\n        size = 'L';\r\n        break;\r\n      case 198.4 <= weight && weight < 222.7:\r\n        size = 'XL';\r\n        break;\r\n      case 222.7 <= weight && weight < 244.7:\r\n        size = '2XL';\r\n        break;\r\n      case 244.7 <= weight && weight < 264.6:\r\n        size = '3XL';\r\n        break;\r\n      case 264.6 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  }\r\n\r\n  return variations.find((v) => v.sku?.endsWith(size));\r\n};\r\n\r\nexport default getSizeVariation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"variations\":\"NavSize_variations__cMdjc\",\"unitToggle\":\"NavSize_unitToggle__LqIuI\",\"toggleButton\":\"NavSize_toggleButton__5PZDI\",\"toggleButtonSelected\":\"NavSize_toggleButtonSelected__au+Rx\"};","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport getSizeVariation from '@services/size';\r\nimport { UNIT } from '@store/constants';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { ChangeEvent, useEffect } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavSize.module.scss';\r\n\r\nexport interface NavSizeProps {\r\n  className?: string;\r\n}\r\n\r\nconst NavSize = ({ className }: NavSizeProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const variations = useCustomiserStore((state) => state.variations);\r\n  const setSizing = useCustomiserStore((state) => state.setSizing);\r\n  const weight = useCustomiserStore((state) => state.sizing?.weight);\r\n  const height = useCustomiserStore((state) => state.sizing?.height);\r\n  const variation = useCustomiserStore((state) => state.sizing?.variation);\r\n\r\n  useEffect(() => {\r\n    if (weight?.value && weight.unit) {\r\n      const variation = getSizeVariation(weight.unit, weight.value, variations);\r\n      setSizing(undefined, undefined, variation);\r\n    }\r\n  }, [weight, variations]);\r\n\r\n  const onHeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing({ value: Number(e.target.value), unit: 'CM' });\r\n  };\r\n\r\n  const onWeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing(undefined, { value: Number(e.target.value), unit: 'KGS' });\r\n  };\r\n\r\n  const onVariationChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const id = e.target.value;\r\n    const selectedVariation = variations.find((v) => v.id === id);\r\n    setSizing(undefined, undefined, selectedVariation);\r\n  };\r\n\r\n  const setHeightUnit = (unit: string) => {\r\n    setSizing({ value: height?.value, unit });\r\n  };\r\n\r\n  const setWeightUnit = (unit: string) => {\r\n    setSizing(undefined, { value: weight?.value, unit });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <h3>Size Details</h3>\r\n        <p>\r\n          To help us make sure the size you’ve selected is correct, enter your height and weight\r\n          below.\r\n        </p>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Height'\r\n          step='0.1'\r\n          required\r\n          value={height?.value ? height.value : ''}\r\n          onChange={onHeightChange}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.CM,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.CM)}\r\n            >\r\n              {UNIT.HEIGHT.CM}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.INCH,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.INCH)}\r\n            >\r\n              {UNIT.HEIGHT.INCH}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Weight'\r\n          step='0.1'\r\n          required\r\n          value={weight?.value ? weight.value : ''}\r\n          onChange={onWeightChange}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.KG,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.KG)}\r\n            >\r\n              {UNIT.WEIGHT.KG}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.LB,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.LB)}\r\n            >\r\n              {UNIT.WEIGHT.LB}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <h3>Suggested Size</h3>\r\n        <FormSelect value={variation?.id} onChange={onVariationChange}>\r\n          {variations.map((v) => (\r\n            <option key={v.id} value={v.id}>\r\n              {v.title}\r\n            </option>\r\n          ))}\r\n        </FormSelect>\r\n      </motion.div>\r\n      <NavButtons />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavSize;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"arial\":\"NavText_arial__de7L4\",\"oswald\":\"NavText_oswald__siLdE\",\"college\":\"NavText_college__YR6iT\",\"ballantines\":\"NavText_ballantines__1B1LU\",\"navTextEdit\":\"NavText_navTextEdit__8WUIS\",\"textItem\":\"NavText_textItem__nQrv4\",\"textItemText\":\"NavText_textItemText__op7hZ\",\"finishSelections\":\"NavText_finishSelections__fH4yd\",\"disabled\":\"NavText_disabled__M-nHo\",\"showOutline\":\"NavText_showOutline__T7KEv\",\"fontSelection\":\"NavText_fontSelection__AH-QM\",\"font\":\"NavText_font__v43yE\",\"finishSelection\":\"NavText_finishSelection__CfQ+O\",\"selected\":\"NavText_selected__SIXSo\",\"pricing\":\"NavText_pricing__qUsci\",\"materialGroup\":\"NavText_materialGroup__j+DTa\",\"navTextsSelection\":\"NavText_navTextsSelection__gJNy+\",\"title\":\"NavText_title__u+YKh\",\"titleText\":\"NavText_titleText__lFoUP\",\"textPreview\":\"NavText_textPreview__CfhSo\",\"noText\":\"NavText_noText__Parmv\",\"textPreview__imgContainer\":\"NavText_textPreview__imgContainer__6SJ9b\",\"promptMessage\":\"NavText_promptMessage__iKeIZ\",\"applyTextBtnContainer\":\"NavText_applyTextBtnContainer__I8nfd\",\"navHeaderSaveText\":\"NavText_navHeaderSaveText__h8PoA\",\"selectedCategoryItem\":\"NavText_selectedCategoryItem__jjmwJ\",\"finishedCategoryItem\":\"NavText_finishedCategoryItem__AC3wU\",\"categoryDisplayName\":\"NavText_categoryDisplayName__pATtN\",\"textInputContainer\":\"NavText_textInputContainer__KQMDX\",\"textInput\":\"NavText_textInput__Z49KW\",\"textDone\":\"NavText_textDone__rPeDE\",\"textPreviewTextInput\":\"NavText_textPreviewTextInput__lQXU8\"};","// extracted by mini-css-extract-plugin\nexport default {};","import cn from 'classnames';\r\n\r\nimport styles from './Price.module.scss';\r\n\r\nexport interface PriceProps {\r\n  className?: string;\r\n  price?: number;\r\n  priceString?: string;\r\n}\r\n\r\nconst Price = ({ className, price, priceString }: PriceProps) => {\r\n  const rootClassName = cn('price-item', styles.root, className);\r\n  // TODO - Make currency change depending on selected currency.\r\n  const currency = '£';\r\n\r\n  const formattedPrice =\r\n    price !== undefined ? `${currency}${price.toFixed(2)}` : `${currency}${priceString}`;\r\n\r\n  if (!formattedPrice) {\r\n    return null;\r\n  }\r\n\r\n  return <span className={rootClassName}>{formattedPrice}</span>;\r\n};\r\n\r\nexport default Price;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useMemo, useState } from 'react';\r\n\r\nimport Price from '@components/ui/Price';\r\nimport { NAME_TYPE_LUXURY_ID } from '@store/constants';\r\nimport cn from 'classnames';\r\nimport styles from './NavText.module.scss';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\n\r\nexport interface NavTextFinishProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingCrystal?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextFinish: FC<NavTextFinishProps> = ({ editText = {}, setIsPickingCrystal }) => {\r\n  const { selectedName } = editText;\r\n  const selectedMaterialId = editText?.crystalBackground?.id;\r\n\r\n  const [crystals, setCrystals] = useState<boolean>(editText?.crystalPrice ? true : false);\r\n  const [puff, setPuff] = useState<boolean>(editText?.puffPrice ? true : false);\r\n\r\n  const hasPuffOption = useMemo(() => selectedName?.id === NAME_TYPE_LUXURY_ID, [selectedName]);\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  useEffect(() => {\r\n    setPuff(editText.puffPrice ? true : false);\r\n  }, [editText.puffPrice]);\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setCrystalBackground = (crystalBackground: MaterialFragment | undefined) => {\r\n    if (editText?.key) {\r\n      console.log('crystalBackground', crystalBackground);\r\n      updateText(editText.key, {\r\n        crystalBackground,\r\n      });\r\n    }\r\n  };\r\n\r\n  const addCrystals = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setCrystals(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          crystalPrice: {\r\n            price: selectedName.attributes?.crystalPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.crystalPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          crystalPrice: undefined,\r\n          crystalBackground: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const addPuff = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setPuff(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          puffPrice: {\r\n            price: selectedName.attributes?.puffPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.puffPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          puffPrice: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.finishSelections}>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: !crystals,\r\n          })}\r\n          onClick={() => {\r\n            setIsPickingCrystal && setIsPickingCrystal(false);\r\n            addCrystals(false);\r\n          }}\r\n        >\r\n          No Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: crystals,\r\n          })}\r\n          onClick={() => {\r\n            addCrystals(true);\r\n            setIsPickingCrystal && setIsPickingCrystal(true);\r\n          }}\r\n        >\r\n          Add Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.crystalPrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {!crystals && (\r\n        <div className={styles.finishSelections}>\r\n          <div\r\n            className={cn(styles.finishSelection, { [styles.selected]: !puff })}\r\n            onClick={() => addPuff(false)}\r\n          >\r\n            Flat\r\n            <div className={styles.pricing}>\r\n              {' +'}\r\n              <Price price={0} />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: puff,\r\n              [styles.disabled]: !hasPuffOption,\r\n            })}\r\n            onClick={() => addPuff(true)}\r\n          >\r\n            Add 3D Puff\r\n            {hasPuffOption ? (\r\n              <div className={styles.pricing}>\r\n                {' +'}\r\n                <Price price={selectedName.attributes?.puffPrice?.price} />\r\n              </div>\r\n            ) : (\r\n              <div className={styles.pricing}>(Only available for luxury colors)</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {crystals && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName.attributes?.materialGroup?.data}\r\n          materialType={editText.material?.attributes?.type?.data}\r\n          colourGroup={editText.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setCrystalBackground}\r\n          className={styles.materialGroup}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextFinish;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment, NameEntity, useGetNamesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextNameTypesProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextNameTypes = ({ editText = {} }: NavTextNameTypesProps) => {\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const selectedMaterialId = editText?.material?.id;\r\n\r\n  const { selectedName } = editText;\r\n  const prevSelectedName = useRef(selectedName);\r\n\r\n  const { data: names } = useGetNamesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => data.names?.data,\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (editText?.key && selectedName && prevSelectedName.current !== selectedName) {\r\n      prevSelectedName.current = selectedName;\r\n\r\n      updateText(editText.key, {\r\n        basePrice: {\r\n          price: selectedName.attributes?.basePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.basePrice?.shopifyVariantId,\r\n        },\r\n        letterPrice: {\r\n          price: selectedName.attributes?.letterPrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.letterPrice?.shopifyVariantId,\r\n        },\r\n        nameType: {\r\n          id: selectedName.id,\r\n          name: selectedName.attributes?.name,\r\n        },\r\n        /**\r\n         * Reset material when selectedName changes.\r\n         *\r\n         * Different name types would have different\r\n         * material groups.\r\n         */\r\n        material: undefined,\r\n        ...(editText.outline\r\n          ? {\r\n              outlinePrice: {\r\n                price: selectedName.attributes?.outlinePrice?.price,\r\n                quantity: 1,\r\n                shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n              },\r\n            }\r\n          : {}),\r\n\r\n        puffPrice: undefined,\r\n      });\r\n    }\r\n  }, [selectedName]);\r\n\r\n  const setMaterial = (material: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        material,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setSelectedName = (name: NameEntity) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        selectedName: name,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!selectedName && <i className={styles.promptMessage}>Select a text color type</i>}\r\n      <div className={styles.categoryDisplayName}>Choose Color:</div>\r\n      <div className={styles.finishSelections}>\r\n        {names?.map((n) => (\r\n          <div\r\n            key={n.id}\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: selectedName && n.id === selectedName.id,\r\n            })}\r\n            onClick={() => setSelectedName(n)}\r\n          >\r\n            {n.attributes?.name}\r\n            <div className={styles.pricing}>\r\n              <Price price={n.attributes?.basePrice?.price} />\r\n              {' + '}\r\n              <Price price={n.attributes?.letterPrice?.price} /> per letter\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedName && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName?.attributes?.materialGroup?.data}\r\n          materialType={editText?.material?.attributes?.type?.data}\r\n          colourGroup={editText?.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setMaterial}\r\n          className={styles.materialGroup}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNameTypes;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useState } from 'react';\r\n\r\nimport PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextOutlineProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingOutline?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextOutline: FC<NavTextOutlineProps> = ({ editText = {}, setIsPickingOutline }) => {\r\n  const [showOutline, setShowOutline] = useState<boolean>(editText?.outline ? true : false);\r\n  const selectedMaterialId = editText?.outline?.id;\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  const { selectedName } = editText;\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setOutline = (outline: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        outline,\r\n        outlinePrice: {\r\n          price: selectedName.attributes?.outlinePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateOutline = (show: boolean) => {\r\n    setShowOutline(show);\r\n    if (!show && editText?.key) {\r\n      updateText(editText.key, {\r\n        outline: undefined,\r\n        outlinePrice: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={cn(styles.showOutline, styles.finishSelections)}>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: !showOutline })}\r\n          onClick={() => {\r\n            updateOutline(false);\r\n            setIsPickingOutline && setIsPickingOutline(false);\r\n          }}\r\n        >\r\n          No Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: showOutline })}\r\n          onClick={() => {\r\n            updateOutline(true);\r\n            setIsPickingOutline && setIsPickingOutline(true);\r\n          }}\r\n        >\r\n          Add Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.outlinePrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showOutline && (\r\n        <>\r\n          <MaterialGroup\r\n            hideColorGroups\r\n            materialGroup={selectedName?.attributes?.outlineGroup?.data}\r\n            materialType={editText?.outline?.attributes?.type?.data}\r\n            colourGroup={editText?.outline?.attributes?.colourGroups?.data[0]}\r\n            onMaterialSelected={setOutline}\r\n            className={styles.materialGroup}\r\n            selectedMaterialId={selectedMaterialId}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextOutline;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport interface NavTextSelectProps {\r\n  className?: string;\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst fonts = [\r\n  {\r\n    name: 'Arial',\r\n    className: styles.arial,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/arial-bold-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Oswald',\r\n    className: styles.oswald,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/oswald-semibold.woff',\r\n  },\r\n  {\r\n    name: 'College',\r\n    className: styles.college,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/college_block-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Ballantines',\r\n    className: styles.ballantines,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/ballantines-bold-webfont.woff',\r\n  },\r\n];\r\n\r\nconst NavTextSelect = ({ className, editText }: NavTextSelectProps) => {\r\n  const portalRef = usePortalRef('popupContainer');\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const [font, setFont] = useState<(typeof fonts)[number]>(\r\n    fonts.find((f) => editText?.font === f.url) ?? fonts[0],\r\n  );\r\n  const { addText, updateText } = useCustomiserStore((state) => state);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text, font: font.url });\r\n      }\r\n    }\r\n  }, [text, font]);\r\n\r\n  const setTextOnChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onFontChange = (font: (typeof fonts)[number]) => {\r\n    setFont(font);\r\n  };\r\n\r\n  if (!portalRef) return null;\r\n\r\n  return (\r\n    <div className={className}>\r\n      {/* {ReactDOM.createPortal(\r\n        <div className={styles.textInputContainer}>\r\n          <FormInput\r\n            className={styles.textInput}\r\n            placeholder='Type text here...'\r\n            value={text}\r\n            onChange={setTextOnChange}\r\n          >\r\n            <span className={styles.textDone}>Done</span>\r\n          </FormInput>\r\n        </div>,\r\n        portalRef,\r\n      )} */}\r\n      <div className={styles.categoryDisplayName}>Choose Font:</div>\r\n      <div className={styles.fontSelection}>\r\n        {fonts.map((_font) => (\r\n          <div\r\n            key={_font.name}\r\n            onClick={() => onFontChange(_font)}\r\n            className={cn(styles.font, _font.className, {\r\n              [styles.selected]: font.name === _font.name,\r\n            })}\r\n          >\r\n            {_font.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* <FormSelect\r\n        className={fonts.find((f) => f.url === font)?.className}\r\n        value={font}\r\n        onChange={onFontChange}\r\n      >\r\n        {fonts.map((f) => (\r\n          <option className={f.className} key={f.url} value={f.url}>\r\n            {f.name}\r\n          </option>\r\n        ))}\r\n      </FormSelect> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextSelect;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { Dispatch, MouseEventHandler, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\n\r\nimport styles from './NavText.module.scss';\r\n\r\nexport interface NavTextTextProps {\r\n  text: TextCustomiser;\r\n  className?: string;\r\n  setShowSelector?: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextText = ({ className, text, setShowSelector }: NavTextTextProps) => {\r\n  const { updateText, deleteText } = useCustomiserStore((state) => state);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const editItem = () => {\r\n    if (text.key) {\r\n      updateText(text.key, { edit: true });\r\n      setShowSelector && setShowSelector(true);\r\n    }\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    if (!text.key) return;\r\n    updateText(text.key, {\r\n      isVisible: typeof text.isVisible !== 'undefined' ? !text.isVisible : false,\r\n    });\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (text.key) {\r\n      deleteText(text.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.textItem} onClick={editItem}>\r\n      <div className={styles.textItemText}>{text.text}</div>\r\n      <NavOptionEdit\r\n        toggleVisibility={toggleVisibility}\r\n        onEdit={editItem}\r\n        onDelete={deleteItem}\r\n        isVisible={text.isVisible}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextText;\r\n","import { FC } from 'react';\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextText from './NavTextText';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\ntype NavTextsSelectionProps = {\r\n  onAddTextClicked?: () => void;\r\n  onTextSelected?: () => void;\r\n};\r\n\r\nconst NavTextsSelection: FC<NavTextsSelectionProps> = ({ onAddTextClicked, onTextSelected }) => {\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n\r\n  return (\r\n    <div className={styles.navTextsSelection}>\r\n      <div className={styles.title}>\r\n        <h3 className={styles.titleText}>Your Texts</h3>\r\n\r\n        <ContainedButton onClick={onAddTextClicked}>Add Text</ContainedButton>\r\n      </div>\r\n\r\n      {texts.map((t) => (\r\n        <NavTextText key={t.key} text={t} setShowSelector={onTextSelected} />\r\n      ))}\r\n\r\n      <NavButtons\r\n        confirmStorage='saveTextsNotification'\r\n        confirmText='You can still add more text. Save anyway?'\r\n      ></NavButtons>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextsSelection;\r\n","import type { MaterialFragment } from '@graphql/generated/graphql';\r\nimport type { Falsey } from 'lodash';\r\n// eslint-disable-next-line\r\n// @ts-ignore\r\nimport { NormalMapGenerator } from 'normalmap-online';\r\n\r\nexport function getMaterialUrl(material: MaterialFragment | undefined): string {\r\n  return material?.attributes?.images?.find((imgMap) => imgMap?.mapType === 'map')?.image.data\r\n    ?.attributes?.formats.large.url;\r\n}\r\n\r\n// TODO - Relocate this\r\ninterface ImgToNormalMapParams {\r\n  img: HTMLImageElement | HTMLCanvasElement;\r\n  hasPuff?: boolean;\r\n  blur?: number;\r\n}\r\nconst normalMapGenerator = NormalMapGenerator.instance();\r\nasync function imgToNormalMap({ img, hasPuff, blur }: ImgToNormalMapParams) {\r\n  const blurAmount = hasPuff ? blur || 7 : 1;\r\n  return normalMapGenerator.generateFromImage(img, {\r\n    strength: 0.5,\r\n    blur: blurAmount,\r\n    level: 1,\r\n  });\r\n}\r\n\r\ninterface PreviewText {\r\n  material: HTMLImageElement | undefined;\r\n  outline: HTMLImageElement | undefined;\r\n  previewImg?: HTMLImageElement;\r\n  normalMapPatternImg?: HTMLImageElement | false;\r\n  crystalBgPatternImg?: HTMLImageElement | Falsey;\r\n  crystalBgImg?: HTMLImageElement | Falsey;\r\n}\r\n\r\nexport type PatternType = 'crystals' | 'embroidery' | Falsey;\r\n\r\ninterface CanvasTextConstructor {\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n}\r\n\r\nexport class CanvasText {\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  outlineCanvas: HTMLCanvasElement;\r\n  outlineCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapTextureCanvas: HTMLCanvasElement;\r\n  normalMapTextureCtx: CanvasRenderingContext2D;\r\n  normalMapCanvas: HTMLCanvasElement;\r\n  normalMapCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapOutlineTextureCanvas: HTMLCanvasElement;\r\n  normalMapOutlineTextureCtx: CanvasRenderingContext2D;\r\n  normalMapOutlineCanvas: HTMLCanvasElement;\r\n  normalMapOutlineCtx2: CanvasRenderingContext2D;\r\n\r\n  crystalBgPatternCanvas: HTMLCanvasElement;\r\n  crystalBgPatternCtx: CanvasRenderingContext2D;\r\n\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n  fontSize: number;\r\n  outlineWidth: number;\r\n\r\n  constructor({ hasPuff, toNormalMap, text, patternType }: CanvasTextConstructor) {\r\n    this.hasPuff = hasPuff;\r\n    this.toNormalMap = toNormalMap;\r\n    this.patternType = patternType;\r\n    this.text = text;\r\n\r\n    this.fontSize = 360;\r\n    this.canvasHeight = 400;\r\n    this.canvasWidth = 3200;\r\n    this.outlineWidth = 20;\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.height = this.canvasHeight;\r\n    this.canvas.width = this.canvasWidth;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.outlineCanvas = document.createElement('canvas');\r\n    this.outlineCanvas.height = this.canvasHeight;\r\n    this.outlineCanvas.width = this.canvasWidth;\r\n    this.outlineCtx = this.outlineCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    // Normal map section\r\n\r\n    this.normalMapTextureCanvas = document.createElement('canvas');\r\n    this.normalMapTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapTextureCtx = this.normalMapTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapCanvas = document.createElement('canvas');\r\n    this.normalMapCanvas.height = this.canvasHeight;\r\n    this.normalMapCanvas.width = this.canvasWidth;\r\n    this.normalMapCtx = this.normalMapCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineTextureCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineTextureCtx = this.normalMapOutlineTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineCtx2 = this.normalMapOutlineCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    // TODO - make a function for setting canvas height and ctx instead\r\n    this.crystalBgPatternCanvas = document.createElement('canvas');\r\n    this.crystalBgPatternCanvas.height = this.canvasHeight;\r\n    this.crystalBgPatternCanvas.width = this.canvasWidth;\r\n    this.crystalBgPatternCtx = this.crystalBgPatternCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n  }\r\n\r\n  public clear() {\r\n    this.ctx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.outlineCtx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n  public async drawImg(ctx: CanvasRenderingContext2D, src: HTMLImageElement) {\r\n    ctx.drawImage(src, 0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  public showTestCanvas(canvas: HTMLCanvasElement) {\r\n    const testPreviewDom = document.getElementById('testPreview'); // TEST ONLY, TO BE REMOVED\r\n    (testPreviewDom as unknown as HTMLElement).innerHTML = ''; // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(canvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineTextureCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.crystalBgPatternCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.outlineCanvas); // TEST ONLY, TO BE REMOVED\r\n  }\r\n\r\n  public async maskImage(ctx: CanvasRenderingContext2D, img: HTMLImageElement) {\r\n    ctx.globalCompositeOperation = 'source-in';\r\n    await this.drawImg(ctx, img);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  public drawPreviewText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n  }\r\n\r\n  public drawPreviewOutlineText() {\r\n    if (!this.text) return;\r\n\r\n    this.outlineCtx.font = `${this.fontSize}px testFont`;\r\n    this.outlineCtx.textAlign = 'center';\r\n    this.outlineCtx.lineWidth = this.outlineWidth;\r\n    this.outlineCtx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n  }\r\n\r\n  public drawPreviewOutlineOnlyText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.lineWidth = 30;\r\n    ctx.fillStyle = 'green';\r\n    ctx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n    ctx.globalCompositeOperation = 'destination-out';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  private async drawNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewText(this.normalMapTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      this.normalMapTextureCtx.fillStyle = pattern;\r\n      this.normalMapTextureCtx.fill();\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    console.log('toNormalMap', this.toNormalMap);\r\n    const normalMap = this.toNormalMap\r\n      ? await imgToNormalMap({\r\n          img: this.normalMapTextureCanvas,\r\n          hasPuff: this.hasPuff,\r\n        })\r\n      : this.normalMapTextureCanvas;\r\n\r\n    this.normalMapCtx.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawOutlineNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewOutlineOnlyText(this.normalMapOutlineTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapOutlineTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapOutlineTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      if (this.patternType !== 'crystals') {\r\n        this.normalMapOutlineTextureCtx.fillStyle = pattern;\r\n      }\r\n      this.normalMapOutlineTextureCtx.fill();\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    const normalMap =\r\n      this.toNormalMap || this.patternType === 'crystals'\r\n        ? await imgToNormalMap({\r\n            img: this.normalMapOutlineTextureCanvas,\r\n            hasPuff: this.patternType === 'crystals' ? true : this.hasPuff,\r\n            blur: 4,\r\n          })\r\n        : this.normalMapOutlineTextureCanvas;\r\n    this.normalMapOutlineCtx2.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawCrystalBg(\r\n    crystalBgImg: HTMLImageElement,\r\n    crystalBgPatternImg: HTMLImageElement,\r\n  ) {\r\n    const pattern = this.crystalBgPatternCtx.createPattern(crystalBgPatternImg, 'repeat');\r\n\r\n    if (!pattern) return;\r\n\r\n    this.crystalBgPatternCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.fillStyle = pattern;\r\n    this.crystalBgPatternCtx.fill();\r\n\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-in';\r\n    this.crystalBgPatternCtx.globalAlpha = 0.9;\r\n    this.crystalBgPatternCtx.drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.drawImage(crystalBgImg, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-over';\r\n\r\n    this.outlineCtx.drawImage(this.crystalBgPatternCanvas, 0, 0);\r\n  }\r\n\r\n  private printTextMapToStrokeMap() {\r\n    this.normalMapCtx.globalCompositeOperation = 'destination-in';\r\n    this.normalMapCtx.drawImage(this.normalMapTextureCanvas, 0, 0);\r\n    this.normalMapCtx.globalCompositeOperation = 'source-over'; // reset to default\r\n    this.normalMapOutlineCtx2.drawImage(this.normalMapCanvas, 0, 0);\r\n  }\r\n\r\n  public async previewText({\r\n    material,\r\n    outline,\r\n    previewImg,\r\n    normalMapPatternImg,\r\n    crystalBgPatternImg,\r\n    crystalBgImg,\r\n  }: PreviewText) {\r\n    if (!this.text) return;\r\n\r\n    this.clear();\r\n    this.showTestCanvas(this.normalMapTextureCanvas);\r\n\r\n    await this.drawNormalMap(normalMapPatternImg);\r\n    await this.drawOutlineNormalMap(normalMapPatternImg);\r\n\r\n    this.printTextMapToStrokeMap();\r\n\r\n    if (outline) {\r\n      this.drawPreviewOutlineText();\r\n      await this.maskImage(this.outlineCtx, outline);\r\n    }\r\n\r\n    this.drawPreviewText(this.ctx);\r\n\r\n    if (material) {\r\n      await this.maskImage(this.ctx, material);\r\n    }\r\n\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n    if (previewImg) previewImg.src = this.outlineCanvas.toDataURL();\r\n\r\n    if (crystalBgImg && crystalBgPatternImg) {\r\n      this.drawCrystalBg(crystalBgImg, crystalBgPatternImg);\r\n    }\r\n  }\r\n\r\n  public mergeCanvas() {\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n  }\r\n\r\n  getOutlineCanvas() {\r\n    return this.outlineCanvas;\r\n  }\r\n  getNormalMapTextureCanvas() {\r\n    return this.normalMapTextureCanvas;\r\n  }\r\n  getNormalMapOutlineCanvas() {\r\n    return this.normalMapOutlineCanvas;\r\n  }\r\n}\r\n","export async function loadImage(src: string): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    if (!src) resolve(img);\r\n    img.crossOrigin = 'anonymous';\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n    img.src = src;\r\n  });\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"canvasClickableCover\":\"NavTextScene_canvasClickableCover__ZoAVe\",\"canvasClickableCover__imgContainer\":\"NavTextScene_canvasClickableCover__imgContainer__qCzZl\",\"navTextSceneFullscreen\":\"NavTextScene_navTextSceneFullscreen__-hgDQ\",\"navTextSceneFullscreen__imgContainer\":\"NavTextScene_navTextSceneFullscreen__imgContainer__kyglX\",\"navTextSceneFullscreen__closeBtn\":\"NavTextScene_navTextSceneFullscreen__closeBtn__jtMmR\",\"navTextSceneFullscreen__zoomContainer\":\"NavTextScene_navTextSceneFullscreen__zoomContainer__struE\"};","import { Decal } from '@react-three/drei';\r\nimport { TextCustomiser } from '@store/customiser';\r\nimport { Texture, Vector2, Vector3 } from 'three';\r\nimport Lights from '../Lights';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport styles from './NavTextScene.module.scss';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { usePortalRef } from '@hooks';\r\n\r\ninterface NavTextPreviewSceneInterface {\r\n  text: TextCustomiser;\r\n}\r\n\r\nconst NavTextPreviewScene = ({ text }: NavTextPreviewSceneInterface) => {\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n  const [shouldShow, setShouldShow] = useState<boolean>(false);\r\n  const [zoom, setZoom] = useState<number>(1);\r\n  const [dataUrl, setDataUrl] = useState<string>('');\r\n\r\n  const portalRef = usePortalRef('popupContainer');\r\n\r\n  const scale = 10;\r\n  const scaleModifier = new Vector3(3.2 * scale, 0.4 * scale, 4);\r\n\r\n  const isLuxury: boolean = text.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = text.puffPrice ? true : false;\r\n  const hasCrystals: boolean = text.crystalPrice ? true : false;\r\n\r\n  const shouldNormalMap =\r\n    text.normalMap instanceof Texture && text.selectedName?.attributes?.name === 'Luxury';\r\n  const normalMap = shouldNormalMap ? text.normalMap : null;\r\n\r\n  let normalScale = 1;\r\n  if (hasCrystals) {\r\n    normalScale = 4;\r\n  } else if (isLuxury && !hasPuff) {\r\n    normalScale = 0.5;\r\n  } else if (isLuxury && hasPuff) {\r\n    normalScale = 3;\r\n  }\r\n\r\n  if (!portalRef) return null;\r\n\r\n  function addZoom() {\r\n    setZoom((cur) => {\r\n      if (cur >= 10) return cur;\r\n      return (cur += 0.1);\r\n    });\r\n  }\r\n  function subtractZoom() {\r\n    setZoom((cur) => {\r\n      if (cur <= 0.1) return cur;\r\n      return (cur -= 0.1);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        ref={(el) => {\r\n          canvasRef.current = el;\r\n        }}\r\n        gl={{\r\n          preserveDrawingBuffer: true,\r\n        }}\r\n      >\r\n        <Lights />\r\n        <mesh>\r\n          <planeBufferGeometry args={[20, 5]} />\r\n          <meshNormalMaterial visible={false} />\r\n          <Decal position={[0, 0, 0]} rotation={[0, 0, 0]} scale={scaleModifier}>\r\n            <meshStandardMaterial\r\n              map={text.preview instanceof Texture ? text.preview : null}\r\n              transparent\r\n              roughness={isLuxury && !hasCrystals ? 0.75 : 0}\r\n              depthTest\r\n              depthWrite={false}\r\n              normalMap={normalMap}\r\n              normalScale={new Vector2(normalScale, normalScale)}\r\n            />\r\n          </Decal>\r\n        </mesh>\r\n      </Canvas>\r\n      <div\r\n        className={styles.canvasClickableCover}\r\n        onClick={() => {\r\n          setShouldShow(true);\r\n          setDataUrl(canvasRef.current?.toDataURL() || '');\r\n        }}\r\n      >\r\n        <span className={styles.canvasClickableCover__imgContainer}>\r\n          <img height={32} width={32} src='/icons/click-icon.png' />\r\n        </span>\r\n      </div>\r\n      {shouldShow &&\r\n        canvasRef &&\r\n        dataUrl &&\r\n        createPortal(\r\n          <>\r\n            <div className={styles.navTextSceneFullscreen}>\r\n              <span\r\n                onClick={() => setShouldShow(false)}\r\n                className={styles.navTextSceneFullscreen__closeBtn}\r\n              >\r\n                x\r\n              </span>\r\n              <span className={styles.navTextSceneFullscreen__imgContainer}>\r\n                <img style={{ zoom }} src={dataUrl} alt='Text Preview' />\r\n              </span>\r\n              <span className={styles.navTextSceneFullscreen__zoomContainer}>\r\n                <img\r\n                  onClick={addZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-in-icon.png'\r\n                  alt='zoom in'\r\n                />\r\n                <img\r\n                  onClick={subtractZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-out-icon.png'\r\n                  alt='zoom out'\r\n                />\r\n              </span>\r\n            </div>\r\n          </>,\r\n          portalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextPreviewScene;\r\n","import { CanvasText, PatternType, getMaterialUrl } from '@lib/canvas';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { CanvasTexture } from 'three';\r\nimport type { NavTextSelectProps } from './NavTextSelect';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { loadImage } from '@lib/img.util';\r\nimport NavTextPreviewScene from '@components/three/CustomiserCanvas/NavTextScene';\r\nimport FormInput from '@components/ui/FormInput';\r\n\r\n// TODO - Pre load the fonts somewhere\r\nasync function loadFonts(fontUrl: string) {\r\n  const font = new FontFace('testFont', `url(${fontUrl})`);\r\n  await font.load();\r\n  document.fonts.add(font);\r\n}\r\n\r\nfunction getPatternType({\r\n  hasCrystals,\r\n  isLuxury,\r\n}: {\r\n  hasCrystals: boolean;\r\n  isLuxury: boolean;\r\n}): PatternType {\r\n  if (!hasCrystals && isLuxury) return 'embroidery';\r\n  else if (hasCrystals) return 'crystals';\r\n\r\n  return '';\r\n}\r\n\r\ninterface NavTextPreviewProps extends NavTextSelectProps {\r\n  mainTextInputRef: React.MutableRefObject<HTMLInputElement | null>;\r\n}\r\n\r\nconst NavTextPreview = ({ editText, mainTextInputRef }: NavTextPreviewProps) => {\r\n  const previewImgRef = useRef<HTMLImageElement | null>(null);\r\n  const [fontFamily, setFontFamily] = useState<string | undefined>(editText?.font);\r\n  const [isVisiblePreview, setIsVisiblePreview] = useState(false);\r\n\r\n  const hasCrystals: boolean = editText?.crystalPrice ? true : false;\r\n  const isLuxury: boolean = editText?.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = editText?.puffPrice && !hasCrystals ? true : false; // 3D puff\r\n  const toNormalMap = hasCrystals ? false : true;\r\n  const patternType = getPatternType({ hasCrystals, isLuxury });\r\n\r\n  const { updateText, addText, isMinimizedCustomiserNav } = useCustomiserStore();\r\n\r\n  const portalRef = usePortalRef('NavHeaderAfter');\r\n\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (editText?.key) {\r\n      updateText(editText?.key, {\r\n        text: e.target.value,\r\n      });\r\n    } else {\r\n      if (e.target.value) {\r\n        addText({ text: e.target.value });\r\n      }\r\n    }\r\n    mainTextInputRef?.current?.focus();\r\n  };\r\n\r\n  /**\r\n   * Save image here\r\n   */\r\n  const materialImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.material));\r\n  }, [editText?.material]);\r\n  const outlineImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.outline));\r\n  }, [editText?.outline]);\r\n  const fabricPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/Fabric_Knitted_006_height_small.png');\r\n  }, []);\r\n  const crystalNormalMapImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-12.png');\r\n  }, []);\r\n  const crystalBgImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.crystalBackground));\r\n  }, [editText?.crystalBackground]);\r\n  const crystalBgPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-bg-pattern.png');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const previewImgDom = previewImgRef.current as HTMLImageElement;\r\n\r\n    (async () => {\r\n      const canvasText = new CanvasText({\r\n        hasPuff,\r\n        toNormalMap,\r\n        patternType,\r\n        text: editText?.text,\r\n      });\r\n\r\n      if (!editText || !editText.key || !isVisiblePreview) {\r\n        canvasText.clear();\r\n        return;\r\n      }\r\n\r\n      if (!editText.text) {\r\n        canvasText.clear();\r\n        updateText(editText.key, {\r\n          preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Adjust this once preloading fonts has been implemented\r\n      if (fontFamily !== editText?.font) {\r\n        setFontFamily(editText?.font);\r\n        await loadFonts(editText?.font as string);\r\n      }\r\n\r\n      const img = editText?.material && (await materialImgMemo);\r\n      const outlineImg = editText?.outline && (await outlineImgMemo);\r\n      const embroideryPattern = await fabricPatternImgMemo;\r\n      const crystalNormalMap = await crystalNormalMapImgMemo;\r\n      const crystalBgPatternImg = await crystalBgPatternImgMemo;\r\n      const crystalBgImg = editText?.crystalBackground && (await crystalBgImgMemo);\r\n\r\n      const shouldUsePattern = isLuxury && !hasPuff;\r\n      const patternImg = shouldUsePattern && (hasCrystals ? crystalNormalMap : embroideryPattern);\r\n\r\n      await canvasText.previewText({\r\n        material: img,\r\n        outline: outlineImg,\r\n        previewImg: previewImgDom,\r\n        normalMapPatternImg: patternImg,\r\n        crystalBgPatternImg,\r\n        crystalBgImg,\r\n      });\r\n\r\n      updateText(editText.key, {\r\n        preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        normalMap: new CanvasTexture(canvasText.getNormalMapOutlineCanvas()),\r\n      });\r\n    })();\r\n  }, [\r\n    editText?.text,\r\n    editText?.material,\r\n    editText?.outline,\r\n    editText?.font,\r\n    editText?.crystalBackground,\r\n    isVisiblePreview,\r\n    editText?.puffPrice,\r\n    editText?.crystalPrice,\r\n  ]);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <>\r\n      <div id='testPreview' style={{ position: 'absolute', zIndex: '100' }} />\r\n      {!isMinimizedCustomiserNav && editText?.text && (\r\n        <div className={styles.textPreview}>\r\n          <div>\r\n            {\r\n              <>\r\n                {/* Image is no longer needed, remove this */}\r\n                <div className={styles.textPreview__imgContainer} style={{ display: 'none' }}>\r\n                  <img\r\n                    height={80}\r\n                    width={640}\r\n                    ref={(el) => {\r\n                      previewImgRef.current = el;\r\n                      setIsVisiblePreview(!!el);\r\n                    }}\r\n                  />\r\n                </div>\r\n                {previewImgRef.current?.src ? (\r\n                  <>\r\n                    <NavTextPreviewScene text={editText} />\r\n                  </>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavTextPreview;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"NavTextCategories_main__aV8kW\",\"selected\":\"NavTextCategories_selected__NTJgj\"};","import styles from './NavTextCategories.module.scss';\r\n\r\ninterface NavTextCategoriesProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst NavTextCategories = ({ children }: NavTextCategoriesProps) => {\r\n  return <div className={styles.main}>{children}</div>;\r\n};\r\n\r\nexport default NavTextCategories;\r\n","import { FaArrowRightLong } from 'react-icons/fa6';\r\nimport styles from './Button.module.scss';\r\n\r\ninterface NextStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst NextStepButton = ({ onClick, isClickable, isVisible }: NextStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__next}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Next Step &nbsp;\r\n      <FaArrowRightLong />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default NextStepButton;\r\n","import { FaArrowLeftLong } from 'react-icons/fa6';\r\nimport styles from './Button.module.scss';\r\n\r\ninterface PrevStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst PrevStepButton = ({ onClick, isClickable, isVisible }: PrevStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__prev}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      <FaArrowLeftLong /> &nbsp; Previous\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PrevStepButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavTextNavSteps_root__Ys0fR\"};","import styles from './Button.module.scss';\r\n\r\ninterface CancelStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst CancelStepButton = ({ onClick, isClickable, isVisible }: CancelStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__cancel}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Cancel\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CancelStepButton;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface ApplyButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst ApplyButton = ({ onClick, isClickable, isVisible }: ApplyButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__next}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Apply Text\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ApplyButton;\r\n","import NextStepButton from '@components/ui/Button/NextStepButton';\r\nimport PrevStepButton from '@components/ui/Button/PrevStepButton';\r\nimport { usePortalRef } from '@hooks';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './NavTextNavSteps.module.scss';\r\nimport CancelStepButton from '@components/ui/Button/CancelStepButton';\r\nimport ApplyButton from '@components/ui/Button/ApplyButton';\r\nimport InfoDisplay from '@components/ui/InfoButton/InfoDisplay';\r\n\r\ninterface NavTextNavStepsProps {\r\n  isClickableNext?: boolean;\r\n  isClickablePrev?: boolean;\r\n  isVisibleNext?: boolean;\r\n  isVisiblePrev?: boolean;\r\n\r\n  onClickNext?: () => void;\r\n  onClickPrev?: () => void;\r\n  onClickCancel?: () => void;\r\n  onClickSave?: () => void;\r\n}\r\n\r\nconst NavTextNavSteps = ({\r\n  isClickableNext,\r\n  isClickablePrev,\r\n  isVisibleNext,\r\n  isVisiblePrev,\r\n  onClickNext,\r\n  onClickPrev,\r\n  onClickCancel,\r\n  onClickSave,\r\n}: NavTextNavStepsProps) => {\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n\r\n  if (!portalRef || !popupContainerRef) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      {/* {ReactDOM.createPortal(\r\n        <InfoDisplay>\r\n          <h5>Click where you want the text to go</h5>\r\n        </InfoDisplay>,\r\n        popupContainerRef,\r\n      )} */}\r\n      {ReactDOM.createPortal(\r\n        <div className={styles.root}>\r\n          {isVisiblePrev !== true && (\r\n            <CancelStepButton\r\n              onClick={\r\n                onClickCancel ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {(typeof isVisiblePrev === 'undefined' || isVisiblePrev) && (\r\n            <PrevStepButton\r\n              isClickable={isClickablePrev}\r\n              isVisible={isVisiblePrev}\r\n              onClick={\r\n                onClickPrev ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {(typeof isVisibleNext === 'undefined' || isVisibleNext) && (\r\n            <NextStepButton\r\n              isClickable={isClickableNext}\r\n              isVisible={isVisibleNext}\r\n              onClick={\r\n                onClickNext ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {isVisibleNext !== true && (\r\n            <ApplyButton\r\n              onClick={\r\n                onClickSave ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        </div>,\r\n        portalRef,\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNavSteps;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport styles from './NavText.module.scss';\r\nimport { useCustomiserStore, type TextCustomiser } from '@store/customiser';\r\nimport { LegacyRef, forwardRef, useEffect, useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport inputStyles from './../../ui/FormInput/FormInput.module.scss';\r\n\r\ninterface NavTextInputProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextInput = forwardRef(({ editText }: NavTextInputProps, ref) => {\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const { updateText, addText } = useCustomiserStore((state) => state);\r\n\r\n  const setTextOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const rootClassName = cn(inputStyles.root, styles.textInput);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        // font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text });\r\n      }\r\n    }\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    console.log('ref', ref);\r\n  }, [ref]);\r\n\r\n  return (\r\n    <div className={styles.textInputContainer}>\r\n      {/* <FormInput\r\n        ref={inputRef}\r\n        className={styles.textInput}\r\n        placeholder='Type text here...'\r\n        value={editText?.text}\r\n        onChange={setTextOnChange}\r\n      /> */}\r\n      <div className={rootClassName}>\r\n        <input\r\n          className={inputStyles.input}\r\n          onChange={setTextOnChange}\r\n          ref={ref as LegacyRef<HTMLInputElement> | undefined}\r\n          placeholder='Type text here...'\r\n          value={editText?.text}\r\n        />\r\n        {/* <label className={inputStyles.label}>Type text here</label> */}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nNavTextInput.displayName = 'NavTextInput';\r\n\r\nexport default NavTextInput;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport { LegacyRef, startTransition, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\n\r\nimport Accordion from '@components/ui/Accordion/Accordion';\r\nimport NavStepButtons from '../NavStepButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextFinish from './NavTextFinish';\r\nimport NavTextNameTypes from './NavTextNameTypes';\r\nimport NavTextOutline from './NavTextOutline';\r\nimport NavTextSelect from './NavTextSelect';\r\nimport NavTextsSelection from './NavTextsSelection';\r\nimport NavTextPreview from './NavTextPreview';\r\nimport { usePortalRef } from '@hooks';\r\nimport Button from '@components/ui/Button';\r\nimport { createPortal } from 'react-dom';\r\nimport NavTextCategories from './NavTextCategories';\r\nimport NavTextNavSteps from './NavTextNavSteps';\r\nimport { has } from 'lodash';\r\nimport FormInput from '@components/ui/FormInput';\r\nimport NavTextInput from './NavTextInput';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\nimport DontShowAgain from '@components/ui/DontShowAgain';\r\n\r\ninterface NavTextProps {\r\n  showEditText: boolean;\r\n  setShowEditText: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavText = ({ showEditText, setShowEditText }: NavTextProps) => {\r\n  const [step, setStep] = useState<number | undefined>(0);\r\n\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const deleteText = useCustomiserStore((state) => state.deleteText);\r\n  const updateIsMinimizedCustomiserNav = useCustomiserStore(\r\n    (state) => state.updateIsMinimizedCustomiserNav,\r\n  );\r\n  const isMinimizedCustomiserNav = useCustomiserStore((state) => state.isMinimizedCustomiserNav);\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const [isPickingOutline, setIsPickingOutline] = useState(false);\r\n  const [isPickingCrystal, setIsPickingCrystal] = useState(false);\r\n  const navHeaderRef = usePortalRef('NavHeader');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n\r\n  const mainTextInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const noOutlineSelected = step === 2 && isPickingOutline && !editText?.outline;\r\n  const noCrystalSelected = step === 3 && isPickingCrystal && !editText?.crystalBackground;\r\n  const hasFinishedAllSteps = step === 3 && (editText?.crystalBackground || !isPickingCrystal);\r\n\r\n  const hasFinishedStep1 = !!editText?.text;\r\n  const hasFinishedStep2 = !!editText?.material;\r\n  const hasFinishedStep3 = !!editText?.outline;\r\n  const hasFinishedStep4 = !!editText?.crystalBackground;\r\n\r\n  const finishedSteps = [\r\n    hasFinishedStep1,\r\n    hasFinishedStep2,\r\n    !noOutlineSelected,\r\n    !noCrystalSelected,\r\n  ];\r\n\r\n  const isVisiblePrev = step !== 0;\r\n  const isClickableNext = finishedSteps[step || 0];\r\n  const isVisibleNext = typeof step === 'number' ? step < 3 : false;\r\n  console.log('isVisibleNext', isVisibleNext);\r\n  console.log('step', step);\r\n\r\n  const saveAndApplyChecker = () => {\r\n    if (!hasFinishedStep1) {\r\n      alert('Please enter a text to continue');\r\n      setStep(0);\r\n      return false;\r\n    } else if (!hasFinishedStep2) {\r\n      alert('Select a text color to continue');\r\n      setStep(1);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      setShowEditText(true);\r\n    } else {\r\n      setShowEditText(false);\r\n    }\r\n  }, [editText]);\r\n\r\n  useEffect(() => {\r\n    setShowEditText(editText?.key !== undefined);\r\n    return () => {\r\n      setShowEditText(false);\r\n    };\r\n  }, []);\r\n\r\n  const addText = () => {\r\n    setShowEditText(true);\r\n  };\r\n\r\n  const setScale = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalScale: Number(event) });\r\n    });\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const placeText = () => {\r\n    if (isPickingCrystal && noCrystalSelected) {\r\n      alert('Select a crystal type');\r\n      return;\r\n    }\r\n    if (editText?.key && !editText?.decalPosition) {\r\n      updateText(editText.key, {\r\n        decalFreeze: true,\r\n        decalPosition: [-0.01989325641440387, 2.436930108198209, 1.6226380277735046],\r\n        decalOrientation: [\r\n          -0.14799034762565572,\r\n          -0.17866277612764514,\r\n          -0.026487426629834374,\r\n          'XYZ',\r\n        ],\r\n      });\r\n    }\r\n    updateIsMinimizedCustomiserNav(true);\r\n  };\r\n\r\n  const applyText = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n        hasApplied: true,\r\n      });\r\n    }\r\n\r\n    setStep(0);\r\n\r\n    setShowEditText(false);\r\n  };\r\n\r\n  const localStorageConfirmCancelText = localStorage.getItem('confirmCancelText');\r\n  const shouldShowConfirmCancelText = !localStorageConfirmCancelText;\r\n\r\n  const [showConfirmCancelPopup, setShowConfirmCancelPopup] = useState(false);\r\n\r\n  const cancelText = () => {\r\n    if (editText?.key) {\r\n      applyText();\r\n      if (editText?.text && !editText?.hasApplied) {\r\n        deleteText(editText.key);\r\n      }\r\n    }\r\n  };\r\n\r\n  const cancelTextHandler = () => {\r\n    if (editText?.text) {\r\n      setShowConfirmCancelPopup(true);\r\n    } else {\r\n      cancelText();\r\n    }\r\n  };\r\n\r\n  const handleTitleClick = (_step: number | string) => {\r\n    if (_step === step) {\r\n      setStep(undefined);\r\n    } else {\r\n      setStep(_step as number);\r\n    }\r\n  };\r\n\r\n  const maxStep = 4;\r\n\r\n  const handleNext = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step < maxStep - 1) {\r\n      switch (step) {\r\n        case 0:\r\n          if (!editText?.text) {\r\n            alert('Please enter a text to continue');\r\n            return;\r\n          }\r\n          break;\r\n        case 1:\r\n          if (!editText?.selectedName) {\r\n            alert('Select a text color type');\r\n            return;\r\n          } else if (!editText?.material) {\r\n            alert('Select a color for text');\r\n            return;\r\n          }\r\n          break;\r\n        case 2:\r\n          if (isPickingOutline && !editText?.outline) {\r\n            alert('Select an outline');\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      console.log('editText', editText);\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step > 0) {\r\n      setStep(step - 1);\r\n    }\r\n  };\r\n\r\n  const navCategoryNames = ['Font', 'Color', 'Outline', 'Finish'];\r\n  const NavTextCategoriesItems = () => {\r\n    const handleOnClick = (index: number) => {\r\n      if (navCategoryNames[index] === 'Outline' || navCategoryNames[index] === 'Finish') {\r\n        if (!saveAndApplyChecker()) return;\r\n      }\r\n      if (!editText?.text) {\r\n        alert('Please enter a text to continue');\r\n        return;\r\n      }\r\n      handleTitleClick(index);\r\n    };\r\n\r\n    const finishedCategories = [\r\n      hasFinishedStep1,\r\n      hasFinishedStep2,\r\n      hasFinishedStep3,\r\n      hasFinishedStep4,\r\n    ];\r\n\r\n    return navCategoryNames.map((name, index) => {\r\n      const isSelectedCategory = step === index;\r\n      const categoryClassNames = `\r\n        ${isSelectedCategory ? styles.selectedCategoryItem : ''}\r\n        ${finishedCategories[index] ? styles.finishedCategoryItem : ''}\r\n      `;\r\n      return (\r\n        <div key={index} className={categoryClassNames} onClick={() => handleOnClick(index)}>\r\n          {name}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const CategoryDisplay = () => {\r\n    switch (step) {\r\n      case 0:\r\n        return <NavTextSelect editText={editText} />;\r\n      case 1:\r\n        return <NavTextNameTypes editText={editText} />;\r\n      case 2:\r\n        return <NavTextOutline editText={editText} setIsPickingOutline={setIsPickingOutline} />;\r\n      case 3:\r\n        return (\r\n          <NavTextFinish\r\n            setIsPickingCrystal={setIsPickingCrystal}\r\n            editText={editText}\r\n          ></NavTextFinish>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showEditText ? (\r\n        <>\r\n          <div className={styles.navTextEdit}>\r\n            <NavTextPreview mainTextInputRef={mainTextInputRef} editText={editText} />\r\n            <NavTextCategories>{NavTextCategoriesItems()}</NavTextCategories>\r\n            {CategoryDisplay()}\r\n            <NavTextNavSteps\r\n              onClickNext={handleNext}\r\n              onClickPrev={handlePrevious}\r\n              onClickCancel={cancelTextHandler}\r\n              onClickSave={placeText}\r\n              isVisiblePrev={isVisiblePrev}\r\n              isVisibleNext={isVisibleNext}\r\n              isClickableNext={isClickableNext}\r\n            />\r\n            {editText?.key && editText.decalPosition && (\r\n              <NavDecalAdjust\r\n                scale={editText?.decalScale}\r\n                rotation={editText?.decalRotation}\r\n                onScale={setScale}\r\n                onRotate={setRotation}\r\n              />\r\n            )}\r\n            {editText &&\r\n              isMinimizedCustomiserNav &&\r\n              navHeaderRef &&\r\n              hasFinishedAllSteps &&\r\n              createPortal(\r\n                <ContainedButton\r\n                  onClick={() => {\r\n                    if (!saveAndApplyChecker()) {\r\n                      return updateIsMinimizedCustomiserNav(false);\r\n                    }\r\n\r\n                    applyText();\r\n                    updateIsMinimizedCustomiserNav(false);\r\n                  }}\r\n                  classNames={styles.navHeaderSaveText}\r\n                >\r\n                  SAVE\r\n                </ContainedButton>,\r\n                navHeaderRef,\r\n              )}\r\n            {popupContainerRef &&\r\n              createPortal(\r\n                <NavTextInput ref={mainTextInputRef} editText={editText} />,\r\n                popupContainerRef,\r\n              )}\r\n          </div>\r\n          {popupContainerRef &&\r\n            shouldShowConfirmCancelText &&\r\n            showConfirmCancelPopup &&\r\n            createPortal(\r\n              <DontShowAgain\r\n                cb={cancelText}\r\n                setShowNotification={setShowConfirmCancelPopup}\r\n                notifName={'editTextCancelText'}\r\n              >\r\n                <span>Cancel text customization?</span>\r\n              </DontShowAgain>,\r\n              popupContainerRef,\r\n            )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <NavTextsSelection onAddTextClicked={addText}></NavTextsSelection>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavText;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CustomiserNav_root__rgnWr\",\"open\":\"CustomiserNav_open__6TgJc\",\"isFullscreen\":\"CustomiserNav_isFullscreen__xo92v\",\"minimized\":\"CustomiserNav_minimized__-4C1L\",\"actions\":\"CustomiserNav_actions__B0fm0\",\"content\":\"CustomiserNav_content__whsIx\",\"headerAfter\":\"CustomiserNav_headerAfter__bXrUD\",\"navHeaderScroll\":\"CustomiserNav_navHeaderScroll__0nzPV\",\"tab\":\"CustomiserNav_tab__El9gn\",\"navName\":\"CustomiserNav_navName__YLBS9\",\"selected\":\"CustomiserNav_selected__x6zsL\",\"dot\":\"CustomiserNav_dot__FGM8D\",\"finished\":\"CustomiserNav_finished__aPBu9\",\"hasActions\":\"CustomiserNav_hasActions__xe43g\",\"isEdittingText\":\"CustomiserNav_isEdittingText__bI3ZI\",\"closed\":\"CustomiserNav_closed__fkIqu\"};","import DontShowAgain from '@components/ui/DontShowAgain';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { Falsey } from 'lodash';\r\nimport { useEffect, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface NavHeaderScrollProps {\r\n  styles?: {\r\n    readonly [key: string]: string;\r\n  };\r\n  additionalFinishedNavs?: {\r\n    name: string;\r\n    isFinished: boolean;\r\n  }[];\r\n  finishedNavs: ({ name: string; isFinished: boolean } | undefined)[];\r\n  setFinishedNavs: React.Dispatch<\r\n    React.SetStateAction<({ name: string; isFinished: boolean } | undefined)[]>\r\n  >;\r\n}\r\n\r\nconst NavHeaderScroll = ({\r\n  styles,\r\n  additionalFinishedNavs,\r\n  finishedNavs,\r\n  setFinishedNavs,\r\n}: NavHeaderScrollProps) => {\r\n  const { navItems, selectedNav, setSelectedNav, deleteText, flags, sizing } = useCustomiserStore();\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const { texts, updateText, parts } = useCustomiserStore((state) => state);\r\n  const editText = texts?.find((g) => g.edit);\r\n\r\n  const navIndex = navItems.findIndex((nav) => nav.name === selectedNav?.name);\r\n\r\n  useEffect(() => {\r\n    const partsFinishedNavs = parts.map((part) => {\r\n      const partName = part.part.name;\r\n      if (!partName) return;\r\n      const isFinishedPart = !!navItems.find((navItem) => {\r\n        return navItem.name === partName;\r\n      });\r\n      return {\r\n        name: partName,\r\n        isFinished: isFinishedPart,\r\n      };\r\n    });\r\n    setFinishedNavs((cur) => {\r\n      const newFinishedNavs = [...cur, ...partsFinishedNavs, ...(additionalFinishedNavs || [])];\r\n      if (flags.length) {\r\n        newFinishedNavs.unshift({\r\n          name: 'Flags',\r\n          isFinished: true,\r\n        });\r\n      } else {\r\n        newFinishedNavs.map((nav) => {\r\n          if (nav?.name === 'Flags') {\r\n            nav.isFinished = false;\r\n          }\r\n        });\r\n      }\r\n      if (sizing?.height?.value && sizing?.weight?.value) {\r\n        newFinishedNavs.unshift({\r\n          name: 'Size',\r\n          isFinished: true,\r\n        });\r\n      } else {\r\n        newFinishedNavs.map((nav) => {\r\n          if (nav?.name === 'Size') {\r\n            nav.isFinished = false;\r\n          }\r\n        });\r\n      }\r\n\r\n      const uniqueFinishedNavs = newFinishedNavs.filter(\r\n        (nav, index, self) => self.findIndex((t) => t?.name === nav?.name) === index,\r\n      );\r\n      return uniqueFinishedNavs;\r\n    });\r\n  }, [parts, additionalFinishedNavs, flags, sizing]);\r\n\r\n  useEffect(() => {\r\n    if (texts.length > 0) {\r\n      const iText = finishedNavs.findIndex((nav) => nav?.name === 'Text');\r\n      if (iText === -1) {\r\n        finishedNavs.push({\r\n          name: 'Text',\r\n          isFinished: true,\r\n        });\r\n      } else {\r\n        finishedNavs.map((nav) => {\r\n          if (nav?.name === 'Text') {\r\n            nav.isFinished = true;\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      finishedNavs.map((nav) => {\r\n        if (texts.length === 0 && nav?.name === 'Text') {\r\n          nav.isFinished = false;\r\n        }\r\n      });\r\n    }\r\n  }, [texts]);\r\n\r\n  const isFinishedNav = (name?: string | Falsey) => {\r\n    if (!name) return;\r\n\r\n    const finishedNav = finishedNavs.find((nav) => nav && nav.name === name);\r\n\r\n    if (!finishedNav) return;\r\n\r\n    return finishedNav.isFinished;\r\n  };\r\n\r\n  const localStorageItem = localStorage.getItem('navConfirmText');\r\n  const shouldShowConfirmCancelText = !localStorageItem;\r\n\r\n  const cancelTextEdit = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n        hasApplied: true,\r\n      });\r\n\r\n      if (!editText?.hasApplied) {\r\n        deleteText(editText?.key);\r\n      }\r\n    }\r\n    setSelectedNav(navIndex);\r\n  };\r\n\r\n  const navClickHandler = (index: number, name: string | Falsey) => {\r\n    if (index === navIndex) return;\r\n    if (editText?.text && name && name?.toLowerCase() !== 'text') {\r\n      setShowPopup(true);\r\n    } else {\r\n      setSelectedNav(index);\r\n    }\r\n  };\r\n\r\n  if (!popupPortalRef) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles?.navHeaderScroll}>\r\n        {navItems.map((item, index) => {\r\n          const classes = `\r\n            ${selectedNav?.name === item.name ? styles?.selected : ''}\r\n            ${styles?.tab}\r\n          `;\r\n          return (\r\n            <div className={classes} key={index} onClick={() => navClickHandler(index, item.name)}>\r\n              <span className={`${styles?.dot} ${isFinishedNav(item.name) && styles?.finished}`} />\r\n              <span className={styles?.navName}>{item.name}</span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {showPopup &&\r\n        shouldShowConfirmCancelText &&\r\n        createPortal(\r\n          <DontShowAgain\r\n            cb={cancelTextEdit}\r\n            setShowNotification={setShowPopup}\r\n            notifName={'navConfirmText'}\r\n          >\r\n            <span>Cancel text customization?</span>\r\n          </DontShowAgain>,\r\n          popupPortalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavHeaderScroll;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavFitting from '../NavFitting';\r\nimport NavFlags from '../NavFlags';\r\nimport NavHeader from '../NavHeader';\r\nimport NavImages from '../NavImages';\r\nimport NavPart from '../NavPart';\r\nimport NavMinimize from '../NavMinimize';\r\nimport NavSize from '../NavSize';\r\nimport NavText from '../NavText';\r\n\r\nimport styles from './CustomiserNav.module.scss';\r\nimport { FocusCameraOnPart } from '@components/layout/Customiser/Customiser';\r\nimport NavHeaderScroll from '../NavHeader/NavHeaderScroll';\r\n\r\nexport interface CustomiserNavProps {\r\n  className?: string;\r\n  focusCameraOnPart?: FocusCameraOnPart;\r\n}\r\n\r\nconst CustomiserNav = ({ className, focusCameraOnPart }: CustomiserNavProps) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [scrollCoordinates, setScrollCoordinates] = useState({ left: 0, top: 0 });\r\n  const [showEditText, setShowEditText] = useState(false);\r\n  const [additionalFinishedNavs, setAdditionalFinishedNavs] = useState<\r\n    {\r\n      name: string;\r\n      isFinished: boolean;\r\n    }[]\r\n  >([]);\r\n  const [finishedNavs, setFinishedNavs] = useState<\r\n    ({ name: string; isFinished: boolean } | undefined)[]\r\n  >([]);\r\n\r\n  const {\r\n    selectedPart,\r\n    selectedNav,\r\n    texts,\r\n    isMinimizedCustomiserNav,\r\n    updateIsMinimizedCustomiserNav,\r\n  } = useCustomiserStore();\r\n\r\n  const scrollableRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const isFullscreen = useMemo(\r\n    () => selectedNav?.name === 'Text' && editText,\r\n    [selectedNav, editText],\r\n  );\r\n\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      // [styles.open]: isOpen,\r\n      [styles.minimized]: isMinimizedCustomiserNav,\r\n      [styles.hasActions]: selectedNav?.hasActions,\r\n      [styles.isEdittingText]: editText?.text && showEditText,\r\n      [styles.isFullscreen]: false,\r\n    },\r\n    className,\r\n  );\r\n\r\n  const saveScrollCoordinates = () => {\r\n    if (isOpen && scrollableRef.current) {\r\n      setScrollCoordinates({\r\n        left: scrollableRef.current.scrollLeft,\r\n        top: scrollableRef.current.scrollTop,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && scrollableRef.current) {\r\n      scrollableRef.current.scrollTo({\r\n        ...scrollCoordinates,\r\n        // Typescript issue: https://github.com/Microsoft/TypeScript/issues/28755\r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const toggleOpen = () => {\r\n    saveScrollCoordinates();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedNav === null && selectedPart === null) {\r\n      setIsOpen(true);\r\n    } else {\r\n      setIsOpen(false);\r\n      updateIsMinimizedCustomiserNav(false);\r\n    }\r\n  }, [selectedPart, selectedNav]);\r\n\r\n  return (\r\n    <motion.nav\r\n      layout='preserve-aspect'\r\n      transition={{\r\n        type: 'spring',\r\n        stiffness: 700,\r\n        damping: 40,\r\n      }}\r\n      className={rootClassName}\r\n    >\r\n      {/* {!isOpen && (\r\n        <NavMinimize\r\n          isMinimizedCustomiserNav={isMinimizedCustomiserNav}\r\n          onMinimize={() => updateIsMinimizedCustomiserNav(true)}\r\n          onMaximize={() => updateIsMinimizedCustomiserNav(false)}\r\n        />\r\n      )} */}\r\n      <NavHeader\r\n        className={styles.header}\r\n        toggle={() => toggleOpen()}\r\n        isOpen={isOpen}\r\n        onClick={() => {\r\n          updateIsMinimizedCustomiserNav(!isMinimizedCustomiserNav);\r\n        }}\r\n        isMinimized={isMinimizedCustomiserNav}\r\n      />\r\n      {\r\n        <NavHeaderScroll\r\n          finishedNavs={finishedNavs}\r\n          setFinishedNavs={setFinishedNavs}\r\n          additionalFinishedNavs={additionalFinishedNavs}\r\n          styles={styles}\r\n        />\r\n      }\r\n      <div id='NavHeaderAfter' className={styles.headerAfter}></div>\r\n      <Suspense fallback={<div style={{ background: 'white' }}>Loading...</div>}>\r\n        <AnimatePresence initial={false}>\r\n          <motion.div\r\n            id='scrollable'\r\n            className={`${styles.content} ${isOpen && styles.closed}`}\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n              open: { opacity: 1 },\r\n              collapsed: { opacity: 0 },\r\n            }}\r\n            ref={(el) => {\r\n              scrollableRef.current = el;\r\n            }}\r\n          >\r\n            {isOpen ? null : selectedNav?.type === 'fitting' ? (\r\n              <NavFitting\r\n                finishedNavs={finishedNavs}\r\n                setFinishedNavs={setFinishedNavs}\r\n                focusCameraOnPart={focusCameraOnPart}\r\n              />\r\n            ) : selectedNav?.type === 'names' ? (\r\n              <NavText showEditText={showEditText} setShowEditText={setShowEditText} />\r\n            ) : selectedNav?.type === 'flags' ? (\r\n              <NavFlags />\r\n            ) : selectedNav?.type === 'images' ? (\r\n              <NavImages />\r\n            ) : selectedNav?.type === 'size' ? (\r\n              <NavSize />\r\n            ) : selectedPart ? (\r\n              <NavPart part={selectedPart} />\r\n            ) : null}\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </Suspense>\r\n      {!isOpen && selectedNav?.hasActions && (\r\n        <div className={styles.actions}>\r\n          {selectedPart && <div id='CustomiserNavMaterial' style={{ background: 'white' }}></div>}\r\n          <div id='CustomiserNavActions'></div>\r\n        </div>\r\n      )}\r\n    </motion.nav>\r\n  );\r\n};\r\n\r\nexport default CustomiserNav;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Header_root__cz6kt\",\"total\":\"Header_total__nSueF\",\"price\":\"Header_price__GikHZ\",\"resetBtn\":\"Header_resetBtn__yzIQA\",\"addToBasket\":\"Header_addToBasket__T8GpW\"};","import Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport { useDesignStore } from '@store/design';\r\nimport styles from './Header.module.scss';\r\nimport Price from '@components/ui/Price';\r\n\r\nexport interface HeaderProps {\r\n  className?: string;\r\n}\r\n\r\nconst Header = ({ className }: HeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const total = useCustomiserStore((state) => state.total());\r\n  const designComplete = useCustomiserStore((state) => state.designComplete());\r\n  const setResetCamera = useDesignStore((state) => state.setResetCamera);\r\n  const addingToCart = useDesignStore((state) => state.addingToCart);\r\n\r\n  const resetCustomerSelections = useCustomiserStore((state) => state.resetCustomerSelections);\r\n\r\n  const saveDesign = () => {\r\n    setResetCamera();\r\n  };\r\n\r\n  const resetPopup = () => {\r\n    if (confirm('Reset everything?')) {\r\n      resetCustomerSelections();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div id='reset-btn-container' className={styles.resetBtn}>\r\n        <Button onClick={resetPopup}>CLEAR</Button>\r\n      </div>\r\n      <div className={styles.total}>\r\n        Current <Price className={styles.price} priceString={total} />\r\n      </div>\r\n      <Button\r\n        className={styles.addToBasket}\r\n        onClick={saveDesign}\r\n        disabled={!designComplete || addingToCart}\r\n      >\r\n        {addingToCart ? 'Saving' : 'Add to basket'}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Customiser_root__+9xV1\",\"nav\":\"Customiser_nav__xnqzP\",\"modelContainer\":\"Customiser_modelContainer__FVL2o\",\"model\":\"Customiser_model__jxaOf\",\"controls\":\"Customiser_controls__Ar93L\",\"background\":\"Customiser_background__qq7nU\",\"loading\":\"Customiser_loading__vNYyO\",\"header\":\"Customiser_header__1SFjA\",\"close\":\"Customiser_close__sH1pv\"};","import CustomiserNav from '@components/nav/CustomiserNav';\r\nimport Button from '@components/ui/Button';\r\nimport { useDesignStore } from '@store/design';\r\nimport cn from 'classnames';\r\nimport { lazy, Suspense, useRef } from 'react';\r\nimport Header from '../Header';\r\n\r\nconst CustomiserCanvas = lazy(() => import('@components/three/CustomiserCanvas'));\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport styles from './Customiser.module.scss';\r\nimport { Camera } from 'three';\r\nimport { Falsey } from 'lodash';\r\nimport { cameraDefault } from '@components/three/CustomiserCanvas/CustomiserCanvas';\r\n\r\nexport interface CustomiserProps {\r\n  className?: string;\r\n}\r\n\r\nconst cameraLegCutPosition: [x: number, y: number, z: number] = [\r\n  -0.95422573319504, -0.8257934547233227, 0.48109793465966844,\r\n];\r\n\r\nexport type FocusCameraOnPart = (part?: string | Falsey) => void;\r\n\r\nconst Customiser = ({ className }: CustomiserProps) => {\r\n  const setShow = useDesignStore((state) => state.setShow);\r\n  const { selectedNav, remountTrigger } = useCustomiserStore();\r\n\r\n  const cameraRef = useRef<Camera | null>(null);\r\n  const handleCameraRef = (ref: Camera | null) => {\r\n    cameraRef.current = ref;\r\n  };\r\n\r\n  const focusCameraOnPart = (part?: string | Falsey) => {\r\n    const focusCamera = (coordinates: number[]) => {\r\n      const camera = cameraRef.current;\r\n      if (camera) {\r\n        camera.position.set(coordinates[0], coordinates[1], coordinates[2]);\r\n      }\r\n    };\r\n\r\n    switch (part && part.toLowerCase()) {\r\n      case 'leg cut':\r\n        focusCamera(cameraLegCutPosition);\r\n        break;\r\n      default:\r\n        focusCamera(cameraDefault);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const rootClassName = cn(styles.root, className, {\r\n    // [styles.navOpen]: selectedNav !== null,\r\n  });\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div\r\n        id='popupContainer'\r\n        style={{\r\n          // re-figure out again how to put styled ID in scss\r\n          position: 'absolute',\r\n          zIndex: '201',\r\n        }}\r\n      />\r\n      <CustomiserNav className={styles.nav} focusCameraOnPart={focusCameraOnPart} />\r\n      <Header className={styles.header} />\r\n      <svg\r\n        className={styles.background}\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 114.383 97.088'\r\n      >\r\n        <defs>\r\n          <clipPath id='a'>\r\n            <path d='M0 0h114.383v97.088H0z' />\r\n          </clipPath>\r\n        </defs>\r\n        <g clipPath='url(#a)' fillRule='evenodd'>\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='M8.567 88.645v-.044c1.487-.24 2.986-.466 4.472-.716a1.278 1.278 0 0 0 .743-1.862 1.019 1.019 0 0 0-.949-.409c-2.928.338-5.845.747-8.785 1.147-.492.069-.709.447-.687 1.262.012 1.216.126 1.481.721 1.375 1.5-.243 3.008-.506 4.484-.753M23.905 77.54c-1.224.072-1.842.39-1.9 2.044a69.405 69.405 0 0 0 .011 5.312c.057 1.481.606 2.112 1.716 1.99q4.444-.488 8.888-1.012a1.851 1.851 0 0 0 1.659-1.975c.057-.853.1-1.709.1-2.562.023-.856.023-1.247 0-2.093-.068-1.6-.755-1.769-2.024-1.7Zm9.982-6.006c2.119 0 3.229 1.3 3.744 3.247a8.461 8.461 0 0 1 .32 2.222 225.099 225.099 0 0 1 0 7.896 8.3 8.3 0 0 1-.869 3.622 3.721 3.721 0 0 1-2.8 2.269c-4.072.553-8.121 1.15-12.182 1.784-1.773.306-3.145-1.253-3.523-3.993a25.755 25.755 0 0 1-.229-3.54c-.011-1.275-.006-2.556 0-3.834s.046-2.562.115-3.834c.091-1.944.606-4.015 1.887-5.128a2.565 2.565 0 0 1 1.533-.709Zm61.427 6.006v-6.006h13.325c1.682-.069 2.768 1.381 3.409 3.771a16.91 16.91 0 0 1 .538 4.281 18.216 18.216 0 0 1-.515 4.3 5.807 5.807 0 0 1-1.945 3.4c-.217.181-.469.34-.652.472.8 1.45 1.611 2.926 2.4 4.443a883.295 883.295 0 0 1 2.505 4.856c-.743-.163-1.453-.331-2.139-.472-1.041-.219-2.1-.381-3.157-.644a1.328 1.328 0 0 1-.732-.643c-.641-1.2-1.285-2.373-1.933-3.55-.633-1.148-1.292-2.3-1.91-3.431-.309-.522-.606-.819-1.041-.862a90.174 90.174 0 0 1-3.74-.481c-.366-.056-.481.116-.481.656.011 1.04.011 2.081.011 3.128v3.172c-1.235-.228-2.7-.472-3.946-.691v-12.17c3.752.156 7.526.293 11.278.4.492.013 1-.006 1.487 0 .56.016.789-.769.881-1.541.091-1.2-.149-2.053-.686-2.234a3.757 3.757 0 0 0-1.19-.16Zm-11.255 0v2.709l9.585.616v4.047l-9.631-.944v2.3l9.631 1.065v5.58c-4.838-.834-8.59-1.4-13.429-2.08v-19.3h13.431v6.006ZM37.072 90.367a232.526 232.526 0 0 1 3.775-5.125 219.554 219.554 0 0 1 3.786-4.809c-1.281-1.453-2.562-2.919-3.832-4.415s-2.439-2.915-3.709-4.484h5.5a1.331 1.331 0 0 1 .881.488c.7.84 1.322 1.559 2.02 2.375s1.407 1.625 2.116 2.431c.709-.84 1.417-1.682 2.127-2.512s1.413-1.643 2.128-2.466a.948.948 0 0 1 .652-.316h5.322c-1.224 1.384-2.475 2.827-3.7 4.237s-2.448 2.853-3.672 4.287c1.3 1.472 2.628 2.933 3.935 4.387s2.619 2.919 3.924 4.409c-1.865-.006-3.741.028-5.6.091a1.194 1.194 0 0 1-.789-.422q-1.116-1.213-2.23-2.434c-.732-.8-1.476-1.625-2.208-2.45-.755.928-1.511 1.855-2.265 2.8s-1.5 1.913-2.253 2.9c-.106.138-.274.327-.423.344-1.818.208-3.66.434-5.479.685m21.618-1.509c1.258-1.422 2.528-2.816 3.786-4.215s2.516-2.809 3.775-4.218q-1.922-2.231-3.832-4.428c-1.273-1.46-2.615-2.993-3.884-4.462h5.412a1.339 1.339 0 0 1 .881.459c.7.8 1.59 1.79 2.282 2.594s1.407 1.637 2.116 2.456c.709-.822 1.422-1.647 2.128-2.481s1.557-1.842 2.268-2.7a.959.959 0 0 1 .64-.34c1.773-.006 3.534 0 5.319.012-1.235 1.516-2.584 3.175-3.812 4.64s-2.459 2.884-3.683 4.293a234.511 234.511 0 0 1 3.935 4.959 262.195 262.195 0 0 1 3.935 5.293 296.137 296.137 0 0 0-5.6-.772 1.472 1.472 0 0 1-.8-.569c-.739-.948-1.48-1.9-2.219-2.822s-1.487-1.831-2.219-2.725q-1.132 1.247-2.253 2.49c-.749.829-1.511 1.652-2.265 2.478-.1.115-.274.26-.412.253a205.452 205.452 0 0 0-5.49-.2m-43.271-6.7a3.858 3.858 0 0 1 1.979 2.993 11.586 11.586 0 0 1-.24 5.3c-.549 1.89-1.6 3-2.962 3.29C9.494 94.797 4.8 95.888.1 97.088a.159.159 0 0 1-.1-.05V81.205c.274-.019.572-.041.881-.066 3.763-.328 7.5-.656 11.255-.981.377-.031.789 0 1.018-.622.32-.9-.034-2.037-.755-2H0V71.53h12.857a3.24 3.24 0 0 1 3.2 1.944 9.3 9.3 0 0 1 .721 4.4 8.384 8.384 0 0 1-1.361 4.277'\r\n          />\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='m75.165 48.1-6.079-9.03v.049c-.057 1.036-.095 2.076-.183 3.112a2.019 2.019 0 0 1-.3.929l-8.448 12.034c-.249.368-.854 1.239-1.255 1.374a.382.382 0 0 1-.448-.158 2.924 2.924 0 0 1-.17-1.252v-.015l.451-9.913a.888.888 0 0 1 .121-.521l6.771-9.393a1.068 1.068 0 0 0 0-1.4l-6.516-9.933a3.453 3.453 0 0 1-.372-1.536l-.564-9.434c-.136-2.082.98-1.647 2.035 0l9.86 15.392 5.074-7.607c.439-.71.756-1.16 1.67-1.2a28.863 28.863 0 0 0 6.026-.866 2.49 2.49 0 0 1 .955-.113.381.381 0 0 1 .292.365 7.753 7.753 0 0 1-1.169 2.293L74.64 33.912a.971.971 0 0 0-.011 1.253l8.1 12.066a7.386 7.386 0 0 1 1.192 2.336.379.379 0 0 1-.247.33 2.314 2.314 0 0 1-1.008-.05 43.691 43.691 0 0 0-6.495-.95c-.5-.024-.775-.421-1.012-.8m-17.2-18.084 2.675 4.223a.378.378 0 0 1-.005.42L57.97 38.64a.386.386 0 0 1-.639 0l-2.729-4a.379.379 0 0 1-.005-.426l2.719-4.206a.386.386 0 0 1 .65 0m-13.64-.628 10.716-16.367c.911-1.366 2.032-2.329 1.921 0l-.453 9.457a3.209 3.209 0 0 1-.565 1.514l-6.217 9.551c-.31.474-.372.717-.048 1.2l6.446 9.577a1.569 1.569 0 0 1 .389.861l.454 9.969v.025a3.345 3.345 0 0 1-.187 1.236.385.385 0 0 1-.494.158 4.869 4.869 0 0 1-1.172-1.361l-9.863-14.918c-.149.21-.3.418-.441.636-1.474 2.327-2.954 4.649-4.408 6.989a1.51 1.51 0 0 1-1.168.806h-.025a40.188 40.188 0 0 0-6.467 1.047 3.664 3.664 0 0 1-1.08.156.385.385 0 0 1-.325-.453 11.67 11.67 0 0 1 1.3-2.279L40.716 34.9a.978.978 0 0 0 0-1.256L32.349 21.23a8.345 8.345 0 0 1-1.185-2.257.382.382 0 0 1 .294-.383 2.706 2.706 0 0 1 .969.1c1.112.258 2.222.524 3.342.747a22.428 22.428 0 0 0 3.334.462c.711.032 1.093.653 1.429 1.19 1 1.6 2.087 3.16 3.146 4.727a3.685 3.685 0 0 1 .542 2.108ZM57.652 0 45.465 18.084a.386.386 0 0 1-.628.017c-1.5-2-2.426-3.151-5.06-3.4a68.259 68.259 0 0 1-11.375-2.346c-3.454-.947-6.874-2.013-10.321-2.979l16.621 24.707a.379.379 0 0 1 0 .426L19.854 57.187c3.235-.656 6.473-1.24 9.736-1.751 3.484-.546 6.978-1.03 10.465-1.553a6.441 6.441 0 0 0 4.394-2.608l.623-.841a.385.385 0 0 1 .633.019L57.652 68.8l11.947-18.351a.386.386 0 0 1 .633-.019l.623.841a6.442 6.442 0 0 0 4.394 2.608c3.488.523 6.982 1.007 10.465 1.553 3.263.511 6.5 1.095 9.736 1.751L80.601 34.51a.378.378 0 0 1 0-.426L97.225 9.376c-3.447.965-6.868 2.031-10.321 2.979A68.266 68.266 0 0 1 75.528 14.7c-2.635.249-3.557 1.4-5.06 3.4a.386.386 0 0 1-.628-.017Z'\r\n          />\r\n        </g>\r\n      </svg>\r\n      <div className={styles.modelContainer}>\r\n        <div id='CustomiserCanvasControls' className={styles.controls}></div>\r\n        <Suspense fallback={<div className={styles.loading}>Loading ...</div>}>\r\n          <CustomiserCanvas\r\n            key={remountTrigger}\r\n            className={styles.model}\r\n            onCameraRef={handleCameraRef}\r\n          />\r\n        </Suspense>\r\n      </div>\r\n      {selectedNav === null && (\r\n        <Button className={styles.close} onClick={() => setShow(false)}>\r\n          Close\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customiser;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const addToCart = async (data: any) => {\r\n  return fetch(window.Shopify.routes.root + 'cart/add.js', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n};\r\n","/* eslint-disable react/display-name */\r\nimport { FC, Suspense, forwardRef } from 'react';\r\n\r\nexport interface LoadableProps {\r\n  className?: string;\r\n}\r\n\r\n// eslint-disable-next-line react/display-name, @typescript-eslint/no-explicit-any\r\nconst Loadable = (Component: FC<any>) =>\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  forwardRef((props: any, ref) => (\r\n    <Suspense fallback={<></>}>\r\n      <Component {...props} ref={ref} />\r\n    </Suspense>\r\n  ));\r\n\r\nexport default Loadable;\r\n","import { ThreeElements, Vector3 } from '@react-three/fiber';\r\nimport { forwardRef } from 'react';\r\nimport { Mesh } from 'three';\r\n\r\nexport interface MouseHelperProps {\r\n  position?: Vector3;\r\n}\r\n\r\nconst MouseHelper = forwardRef<Mesh, MouseHelperProps>((props, ref) => {\r\n  const BoxProps: ThreeElements['boxGeometry'] = {\r\n    args: [1, 1, 200],\r\n  };\r\n\r\n  return (\r\n    <mesh ref={ref} visible={false} scale={0.1}>\r\n      <boxGeometry {...BoxProps} />\r\n      <meshNormalMaterial />\r\n    </mesh>\r\n  );\r\n});\r\n\r\nMouseHelper.displayName = 'MouseHelper';\r\n\r\nexport default MouseHelper;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CustomiserCanvas_root__1vMOn\",\"save\":\"CustomiserCanvas_save__V9j3S\"};","import { OrbitControls } from '@react-three/drei';\r\nimport { Canvas, ThreeEvent } from '@react-three/fiber';\r\nimport cn from 'classnames';\r\nimport { CSSProperties, lazy, useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nimport {\r\n  CustomDesignEntity,\r\n  CustomDesignInput,\r\n  Maybe,\r\n  useCreateCustomDesignMutation,\r\n  useUploadMultipleFilesMutation,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { addToCart } from '@lib/shopify';\r\nimport { CustomiserState, useCustomiserStore } from '@store/customiser';\r\nimport { useDesignStore } from '@store/design';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { Camera, Euler, Group, Mesh, Vector3 } from 'three';\r\n\r\nimport Lights from '../Lights';\r\nimport Loadable from '../Loadable';\r\nimport MouseHelper from '../MouseHelper';\r\nimport { SceneProps } from '../Scene/Scene';\r\nimport styles from './CustomiserCanvas.module.scss';\r\n\r\nimport ThreeScene from '@components/three/Scene';\r\n\r\nconst Scene = Loadable(lazy(() => import('@components/three/Scene'))) as typeof ThreeScene;\r\n\r\nexport interface CustomiserCanvasProps {\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  onCameraRef: (ref: Camera | null) => void;\r\n}\r\n\r\nconst getCustomDesignData = (state: CustomiserState, files: string[]): CustomDesignInput => ({\r\n  customProduct: state.customProduct?.id,\r\n  parts: state.savedParts.map((p) => ({\r\n    name: p.part.name,\r\n    areaSize: p.part.areaSize?.data?.id,\r\n    material: p.material.id,\r\n  })),\r\n  texts: state.texts.map((t) => ({\r\n    text: t.text,\r\n    decalPosition: t.decalPosition,\r\n    decalOrientation: t.decalOrientation,\r\n    decalRotation: t.decalRotation,\r\n    decalScale: t.decalScale,\r\n    basePriceVariantId: t.basePrice?.shopifyVariantId,\r\n    letterPriceVariantId: t.letterPrice?.shopifyVariantId,\r\n    outlinePriceVariantId: t.outlinePrice?.shopifyVariantId,\r\n    puffPriceVariantId: t.puffPrice?.shopifyVariantId,\r\n    crystalPriceVariantId: t.crystalPrice?.shopifyVariantId,\r\n  })),\r\n  flags: state.flags.map((f) => ({\r\n    flag: f.flag?.id,\r\n    decalPosition: f.decalPosition,\r\n    decalOrientation: f.decalOrientation,\r\n    decalRotation: f.decalRotation,\r\n    decalScale: f.decalScale,\r\n    size: f.size,\r\n    shopifyVariantId: f.basePrice?.shopifyVariantId,\r\n  })),\r\n  graphics: state.graphics.map((g) => ({\r\n    graphic: g.graphic?.id,\r\n    decalPosition: g.decalPosition,\r\n    decalOrientation: g.decalOrientation,\r\n    decalRotation: g.decalRotation,\r\n    decalScale: g.decalScale,\r\n    size: g.size,\r\n    shopifyVariantId: g.basePrice?.shopifyVariantId,\r\n  })),\r\n  images: files,\r\n  sizing: {\r\n    shopifyVariantId: state.sizing?.variation?.id,\r\n    size: state.sizing?.size,\r\n    height: state.sizing?.height?.value?.toString(),\r\n    heightUnit: state.sizing?.height?.unit,\r\n    weight: state.sizing?.weight?.value,\r\n    weightUnit: state.sizing?.weight?.unit,\r\n  },\r\n});\r\n\r\nconst getCartVariations = (customDesignEntity?: CustomDesignEntity) => {\r\n  const customDesignId = customDesignEntity?.id;\r\n  const customDesign = customDesignEntity?.attributes;\r\n\r\n  if (!customDesign || !customDesignId) {\r\n    return [];\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const items: Array<{ id?: string; quantity: number; properties: any }> = [];\r\n  const id = (id?: Maybe<string>) => id?.replace('gid://shopify/ProductVariant/', '');\r\n  const getItem = (id?: string) => items.find((i) => i.id === id);\r\n  const addOrUpdate = (variantId: string, addQty = 1) => {\r\n    const checkItem = getItem(variantId);\r\n    if (checkItem) {\r\n      const newQuantity = checkItem.quantity + addQty;\r\n      checkItem.quantity = newQuantity;\r\n      checkItem.properties._customDesignQuantity = newQuantity;\r\n    } else {\r\n      items.push({\r\n        id: variantId,\r\n        quantity: addQty,\r\n        properties: {\r\n          _customDesignAddon: customDesignId,\r\n          _customDesignQuantity: addQty,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (customDesign.parts?.length) {\r\n    customDesign.parts.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.flags?.length) {\r\n    customDesign.flags.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.graphics?.length) {\r\n    customDesign.graphics.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.texts?.length) {\r\n    customDesign.texts.forEach((t) => {\r\n      const basePrice = id(t?.basePriceVariantId);\r\n      if (basePrice) addOrUpdate(basePrice);\r\n      const letterPrice = id(t?.letterPriceVariantId);\r\n      if (letterPrice) addOrUpdate(letterPrice, t?.text?.length);\r\n      const outlinePrice = id(t?.outlinePriceVariantId);\r\n      if (outlinePrice) addOrUpdate(outlinePrice);\r\n      const puffPrice = id(t?.puffPriceVariantId);\r\n      if (puffPrice) addOrUpdate(puffPrice);\r\n      const crystalPrice = id(t?.crystalPriceVariantId);\r\n      if (crystalPrice) addOrUpdate(crystalPrice);\r\n    });\r\n  }\r\n\r\n  if (customDesign.sizing?.shopifyVariantId) {\r\n    items.push({\r\n      id: id(customDesign.sizing.shopifyVariantId),\r\n      quantity: 1,\r\n      properties: {\r\n        _customDesign: customDesignId,\r\n      },\r\n    });\r\n  }\r\n\r\n  return items;\r\n};\r\n\r\nexport const cameraDefault: [x: number, y: number, z: number] = [\r\n  0, 2.1970893240496195e-15, 15.31024512625285,\r\n];\r\n\r\nconst CustomiserCanvas = ({\r\n  className,\r\n  style,\r\n  onCameraRef,\r\n}: CustomiserCanvasProps): JSX.Element => {\r\n  const cameraRef = useRef<Camera | null>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const images = useRef<File[]>([]);\r\n  const positionRef = useRef<Vector3>(new Vector3());\r\n  const orientationRef = useRef<Euler>(new Euler());\r\n  const groupRef = useRef<Group>(null);\r\n  const editFlag = useCustomiserStore((state) => state.flags.find((f) => f.edit));\r\n  const editText = useCustomiserStore((state) => state.texts.find((f) => f.edit));\r\n  const editGraphic = useCustomiserStore((state) => state.graphics.find((f) => f.edit));\r\n  const updateGraphic = useCustomiserStore((state) => state.updateGraphic);\r\n  const updateFlag = useCustomiserStore((state) => state.updateFlag);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const setCanvasSize = useCustomiserStore((state) => state.setCanvasSize);\r\n  const resetCamera = useDesignStore((state) => state.resetCamera);\r\n  const addingToCart = useDesignStore((state) => state.addingToCart);\r\n  const modelRotation = useDesignStore((state) => state.modelRotation);\r\n  const setAddingToCart = useDesignStore((state) => state.setAddingToCart);\r\n  const setModelRotation = useDesignStore((state) => state.setModelRotation);\r\n  const reset = useCustomiserStore((state) => state.reset);\r\n  const rootClassName = cn(styles.root, className);\r\n  const mouseHelperRef = useRef<Mesh>(null);\r\n  const state = useCustomiserStore((state) => state);\r\n\r\n  const [isPointerDown, setIsPointerDown] = useState(false);\r\n  const [isPointerMoved, setIsPointerMoved] = useState(false);\r\n\r\n  const setPosition = useCallback(\r\n    (event: ThreeEvent<MouseEvent>) => {\r\n      const p = event.point;\r\n      const n = event?.face?.normal.clone();\r\n      if (mouseHelperRef.current && n && groupRef.current) {\r\n        n.transformDirection(groupRef.current.matrixWorld);\r\n        n.multiplyScalar(10);\r\n        n.add(p);\r\n        mouseHelperRef.current.position.copy(p);\r\n        mouseHelperRef.current.lookAt(n);\r\n      }\r\n    },\r\n    [mouseHelperRef],\r\n  );\r\n\r\n  const onClick = useCallback<Required<SceneProps>['onClick']>(\r\n    (event) => {\r\n      setIsPointerDown(false);\r\n      setIsPointerMoved(false);\r\n\r\n      if (!isPointerDown || isPointerMoved) {\r\n        return;\r\n      }\r\n\r\n      if (editFlag?.key) {\r\n        event.stopPropagation();\r\n\r\n        updateFlag(editFlag.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateFlag(editFlag.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (editGraphic?.key) {\r\n        event.stopPropagation();\r\n\r\n        updateGraphic(editGraphic.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateGraphic(editGraphic.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (editText?.key) {\r\n        event.stopPropagation();\r\n        updateText(editText.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateText(editText.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n    },\r\n    [editFlag, editGraphic, editText, isPointerDown, isPointerMoved],\r\n  );\r\n\r\n  const onPointerDown = useCallback<Required<SceneProps>['onPointerDown']>(() => {\r\n    setIsPointerDown(true);\r\n  }, []);\r\n\r\n  const onPointerMove = useCallback<Required<SceneProps>['onPointerMove']>(\r\n    (e) => {\r\n      setIsPointerDown((cur) => {\r\n        if (cur) {\r\n          setIsPointerMoved(true);\r\n        }\r\n        return cur;\r\n      });\r\n    },\r\n    [isPointerDown],\r\n  );\r\n\r\n  const shopifyAddToCart = useMutation({\r\n    mutationFn: addToCart,\r\n    onSuccess: () => {\r\n      window.location.href = window.Shopify.routes.root + 'cart';\r\n      reset();\r\n    },\r\n  });\r\n\r\n  const { mutate } = useCreateCustomDesignMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      if (data.createCustomDesign?.data) {\r\n        const items = getCartVariations(data.createCustomDesign.data);\r\n        shopifyAddToCart.mutate({ items: items });\r\n      }\r\n    },\r\n  });\r\n\r\n  const { mutateAsync } = useUploadMultipleFilesMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const fileIDs = data.multipleUpload.map((f) => f?.data?.id) as string[];\r\n      mutate({ data: getCustomDesignData(state, fileIDs) });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (addingToCart && modelRotation < 360) {\r\n      setTimeout(() => {\r\n        canvasRef?.current?.toBlob((blob) => {\r\n          if (blob) {\r\n            const file = new File([blob], 'fileName.png', { type: 'image/png' });\r\n            images.current.push(file);\r\n            setModelRotation(modelRotation + 90);\r\n          }\r\n        }, 'image/png');\r\n      }, 50);\r\n    } else if (addingToCart) {\r\n      const upload = async () => {\r\n        await mutateAsync({ files: images.current });\r\n      };\r\n      upload();\r\n    }\r\n  }, [modelRotation, addingToCart, images]);\r\n\r\n  useEffect(() => {\r\n    const camera = cameraRef.current;\r\n    if (!camera) {\r\n      return;\r\n    }\r\n    if (resetCamera) {\r\n      camera.position.set(cameraDefault[0], cameraDefault[1], cameraDefault[2]);\r\n      setAddingToCart();\r\n    }\r\n  }, [resetCamera]);\r\n\r\n  useEffect(() => {\r\n    if (onCameraRef && cameraRef.current) {\r\n      onCameraRef(cameraRef.current);\r\n    }\r\n  }, [onCameraRef]);\r\n\r\n  const isEditing = editFlag || editGraphic || editText;\r\n\r\n  return (\r\n    <div className={rootClassName} style={style}>\r\n      <Canvas\r\n        linear\r\n        flat\r\n        camera={{\r\n          position: cameraDefault,\r\n          fov: 45,\r\n        }}\r\n        dpr={window.devicePixelRatio}\r\n        gl={{ preserveDrawingBuffer: true }}\r\n        ref={canvasRef}\r\n        onCreated={(state) => {\r\n          setCanvasSize(state.size.width, state.size.height);\r\n          cameraRef.current = state.camera;\r\n        }}\r\n        frameloop='demand'\r\n      >\r\n        <Scene\r\n          onClick={onClick}\r\n          onPointerDown={onPointerDown}\r\n          onPointerMove={onPointerMove}\r\n          ref={groupRef}\r\n        />\r\n        <Lights />\r\n        {isEditing && <MouseHelper ref={mouseHelperRef} />}\r\n        <OrbitControls\r\n          enableZoom={true}\r\n          maxDistance={50}\r\n          minDistance={5}\r\n          minPolarAngle={Math.PI / 3}\r\n          maxPolarAngle={Math.PI / 1.9}\r\n          enableDamping={false}\r\n        />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomiserCanvas;\r\n","import { SpotLight, useHelper } from '@react-three/drei';\r\nimport { useRef } from 'react';\r\nimport { SpotLightHelper, Vector3, SpotLight as SpotLightRef } from 'three';\r\nconst config = {\r\n  ambientLight: {\r\n    // color: 16777215,\r\n    // groundColor: 4473924,\r\n    intensity: 0.1,\r\n  },\r\n  directionalLights: [\r\n    {\r\n      color: 16777215,\r\n      intensity: 0.3,\r\n      position: new Vector3(0, 6, -200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 16759931,\r\n      intensity: 0.2,\r\n      position: new Vector3(-150, 0, 200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 10213119,\r\n      intensity: 0.2,\r\n      position: new Vector3(100, 0, 200),\r\n    },\r\n  ],\r\n};\r\n\r\nconst Lights = () => {\r\n  const light = useRef<SpotLightRef>(null);\r\n  // useHelper(light.current, SpotLightHelper, 'cyan');\r\n  return (\r\n    <group>\r\n      <hemisphereLight {...config.ambientLight}></hemisphereLight>\r\n      <pointLight position={[-800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[-800, 0, 1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[800, 0, 1000]} intensity={0.5} decay={120} power={7} castShadow />\r\n      <pointLight position={[800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Lights;\r\n"],"names":["usePortalRef","id","loaded","setLoaded","useState","portalRef","useRef","useEffect","current","document","getElementById","_ref","children","notifName","setShowNotification","cb","isChecked","setIsChecked","handleDismiss","localStorage","setItem","_jsx","_Fragment","className","styles","_jsxs","type","onChange","e","target","checked","onClick","isClickable","classNames","buttonClassNames","concat","containedButton","clickable","_finishedNavs$find","confirmText","confirmStorage","onNext","rootClassName","cn","navItems","selectedNav","parts","sizing","cancelPartChange","resetNav","setSelectedNav","useCustomiserStore","navIndex","findIndex","nav","name","popupPortalRef","showPopup","setShowPopup","notifTitle","shouldShowNotification","getItem","finishedNavs","map","part","partName","isFinishedPart","find","navItem","isFinished","isFinishedCurrentNav","isRequired","required","_sizing$height","_sizing$weight","height","value","weight","ReactDOM","ContainedButton","saveHandler","DontShowAgain","isSelected","capsuleNavButton","selected","finished","containedNavButton","FittingOption","_selectedModels$find","_option$models","option","focusCameraOnPart","selectedModels","state","setSelectedModel","getSelected","m","optionId","model","motion","div","fittingOption","initial","opacity","animate","exit","fittingButtons","models","_m$model","_m$model$data","_m$model3","_m$model3$data","_m$model3$data$attrib","ContainedNavButton","data","fittingButton","_m$model2","attributes","_ref2","_fittingOptions$navSt","setFinishedNavs","fittingOptions","_state$customProduct","_state$customProduct$","customProduct","options","fittingOptionsTitles","o","initialStep","length","navStep","setNavStep","hasNextStep","prev","iFitting","root","navButtonContainer","title","i","CapsuleButton","NavButtons","cur","getSrcSets","formats","fff","Object","entries","f","width","url","filter","format","sort","a","b","reduce","acc","index","array","getSrcSet","_image$attributes4","image","sizes","relativeHeight","useMemo","_image$attributes","_image$attributes2","style","srcSet","_image$attributes3","src","NavFlagsSelect","editFlag","flags","addFlag","updateFlag","_f$attributes","flag","flagSelected","key","edit","Image","_prices$length","scale","rotation","prices","onScale","onRotate","scaleAdjust","rotateAdjust","currentScale","setCurrentScale","currentRotate","setCurrentRotate","rootRotateClassName","marks","range","start","stop","step","Array","from","p","markKey","Number","toFixed","createPortal","subtractScale","FaCircleMinus","addScale","FaCirclePlus","rotateCounterClockwise","GiAnticlockwiseRotation","rotateClockwise","GiClockwiseRotation","disabled","onApply","Button","colour","onEdit","onDelete","isVisible","toggleVisibility","isVisibleEye","undefined","event","stopPropagation","FaEye","FaEyeSlash","xmlns","viewBox","d","NavFlagsFlag","_flag$flag","_flag$flag$attributes","setShowSelector","setSelectModel","deleteFlag","flagItem","flagItemImage","NavOptionEdit","editItem","deleteItem","NavFlags","g","showSelector","flagQuery","useGetFlagsQuery","graphQLClient","pagination","limit","select","_data$flags","_data$graphicPrices","graphicPrices","NavDecalAdjust","decalScale","decalRotation","setScale","price","_price$attributes","_price$attributes2","priceValues","size","basePrice","quantity","startTransition","NavEditButtons","applyFlag","decalFreeze","customiserFlags","toggle","isOpen","isMinimized","minimizeIconClassname","NavImagesImage","_graphic$graphic","_graphic$graphic$attr","_graphic$graphic$attr2","graphic","updateGraphic","deleteGraphic","graphicItem","graphicItemImage","NavImagesUpload","setGraphic","saving","setSaving","mutate","createGraphicMutation","useCreateGraphicMutation","onSuccess","_data$createGraphic","createGraphic","fileUploadMutate","useUploadMultipleFilesMutation","fileIDs","multipleUpload","_f$data","customer","onDrop","useCallback","acceptedFiles","files","getRootProps","getInputProps","isDragActive","useDropzone","accept","maxFiles","multiple","dropZone","NavImagesSelect","_currentGraphic$attri","_currentGraphic$attri2","editGraphic","currentGraphic","setCurrentGraphic","addGraphic","graphics","graphicSelected","NavImages","imageQuery","useGetImagesQuery","applyImage","addImage","uniqueMaterialTypes","uniqBy","initialState","colourGroups","materialTypes","materials","createMaterialGroup","set","get","filteredMaterials","colourGroup","selectedColourGroup","_m$attributes","_m$attributes$colourG","resetMaterialGroup","setMaterials","materialType","produce","flatMap","_d$attributes","_d$attributes$colourG","_m$attributes2","_m$attributes2$colour","_state$selectedColour","_m$attributes3","_m$attributes3$type","selectedMaterialType","uniqueMaterials","setColourGroup","_m$attributes4","_m$attributes4$colour","_state$selectedColour2","_m$attributes5","_m$attributes5$type","setMaterialType","Provider","useStore","useMaterialGroupStore","createContext","createStore","create","devtools","preventDefault","isTouchEvent","touches","Material","_material$attributes","_material$attributes$","_material$attributes2","_mapImage$image","_mapImage$image$data","_mapImage$image$data$","_mapImage$image2","_mapImage$image2$data","_mapImage$image2$data2","material","onMaterialSelected","selectedMaterialId","mapImage","images","mapType","onLongPress","shouldPreventDefault","delay","arguments","longPressTriggered","setLongPressTriggered","timeout","addEventListener","passive","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","useLongPress","console","log","popup","alt","MaterialType","hideColorGroups","getFilteredMaterials","mt","_mt$attributes","materialType__title","_m$attributes$type","_m$attributes$type$da","SelectedMaterialInfo","_selectedMaterial$att","_selectedMaterial$att2","_selectedMaterial$att3","_selectedMaterial$att4","_selectedMaterial$att5","selectedPart","selectedMaterial","_parts$find","MaterialGroupLoader","_materialGroup$attrib","materialGroup","typeIds","t","useGetMaterialsQuery","filters","in","pageSize","_data$materials","group","_group$attributes$col","_group$attributes","background","_group$attributes2","outline","fill","props","isOn","togglePillButton","on","_part$materialGroup","_currentPart$material","_currentPart$material2","_currentPart$material3","_currentPart$material4","setPart","removePart","currentPart","showOptional","setShowOptional","optional","buttonContainer","TogglePillButton","optionalOnClick","show","FaMinus","IoMdAdd","Suspense","fallback","MaterialGroup","placeholder","getSizeVariation","unit","variations","v","_v$sku","sku","endsWith","setSizing","_state$sizing","_state$sizing2","variation","_state$sizing3","setHeightUnit","setWeightUnit","FormInput","unitToggle","toggleButton","toggleButtonSelected","UNIT","HEIGHT","CM","INCH","WEIGHT","KG","LB","FormSelect","selectedVariation","priceString","formattedPrice","_editText$crystalBack","_selectedName$attribu9","_selectedName$attribu10","_selectedName$attribu11","_selectedName$attribu12","_selectedName$attribu13","_selectedName$attribu14","_editText$material","_editText$material$at","_editText$material$at2","_editText$material2","_editText$material2$a","_editText$material2$a2","editText","setIsPickingCrystal","selectedName","crystalBackground","crystals","setCrystals","crystalPrice","puff","setPuff","puffPrice","hasPuffOption","NAME_TYPE_LUXURY_ID","updateText","addCrystals","add","_selectedName$attribu","_selectedName$attribu2","_selectedName$attribu3","_selectedName$attribu4","shopifyVariantId","addPuff","_selectedName$attribu5","_selectedName$attribu6","_selectedName$attribu7","_selectedName$attribu8","finishSelections","finishSelection","pricing","Price","_selectedName$attribu15","_editText$material3","_editText$material3$a","_editText$material3$a2","prevSelectedName","names","useGetNamesQuery","_data$names","letterPrice","nameType","outlinePrice","promptMessage","categoryDisplayName","n","_n$attributes","_n$attributes2","_n$attributes2$basePr","_n$attributes3","_n$attributes3$letter","setSelectedName","_editText$outline","_editText$outline2","_editText$outline2$at","_editText$outline2$at2","_editText$outline3","_editText$outline3$at","_editText$outline3$at2","setIsPickingOutline","showOutline","setShowOutline","updateOutline","outlineGroup","fonts","arial","oswald","college","ballantines","_fonts$find","text","setText","font","setFont","addText","fontSelection","_font","onFontChange","deleteText","textItem","textItemText","onAddTextClicked","onTextSelected","texts","navTextsSelection","titleText","NavTextText","getMaterialUrl","_material$attributes$2","_material$attributes$3","_material$attributes$4","imgMap","large","normalMapGenerator","NormalMapGenerator","instance","async","imgToNormalMap","img","hasPuff","blur","blurAmount","generateFromImage","strength","level","CanvasText","constructor","toNormalMap","patternType","canvas","ctx","outlineCanvas","outlineCtx","normalMapTextureCanvas","normalMapTextureCtx","normalMapCanvas","normalMapCtx","normalMapOutlineTextureCanvas","normalMapOutlineTextureCtx","normalMapOutlineCanvas","normalMapOutlineCtx2","crystalBgPatternCanvas","crystalBgPatternCtx","canvasHeight","canvasWidth","fontSize","outlineWidth","this","createElement","getContext","_this$ctx","_this$outlineCtx","clearRect","drawImg","drawImage","showTestCanvas","innerHTML","maskImage","globalCompositeOperation","drawPreviewText","textAlign","fillText","drawPreviewOutlineText","lineWidth","strokeText","drawPreviewOutlineOnlyText","fillStyle","drawNormalMap","normalMapPatternImg","pattern","createPattern","rect","normalMap","drawOutlineNormalMap","drawCrystalBg","crystalBgImg","crystalBgPatternImg","globalAlpha","printTextMapToStrokeMap","previewText","_ref3","previewImg","toDataURL","mergeCanvas","getOutlineCanvas","getNormalMapTextureCanvas","getNormalMapOutlineCanvas","loadImage","Promise","resolve","reject","crossOrigin","onload","onerror","_text$selectedName","_text$selectedName2","_text$selectedName2$a","canvasRef","shouldShow","setShouldShow","zoom","setZoom","dataUrl","setDataUrl","scaleModifier","Vector3","isLuxury","hasCrystals","Texture","normalScale","Canvas","ref","el","gl","preserveDrawingBuffer","Lights","args","visible","Decal","position","preview","transparent","roughness","depthTest","depthWrite","Vector2","_canvasRef$current","_editText$selectedNam","_previewImgRef$curren","mainTextInputRef","previewImgRef","fontFamily","setFontFamily","isVisiblePreview","setIsVisiblePreview","getPatternType","isMinimizedCustomiserNav","materialImgMemo","outlineImgMemo","fabricPatternImgMemo","crystalNormalMapImgMemo","crystalBgImgMemo","crystalBgPatternImgMemo","previewImgDom","canvasText","CanvasTexture","fontUrl","FontFace","load","loadFonts","outlineImg","embroideryPattern","crystalNormalMap","patternImg","zIndex","textPreview","textPreview__imgContainer","display","NavTextPreviewScene","stepsNavButtons","stepsNavButtons__next","FaArrowRightLong","stepsNavButtons__prev","FaArrowLeftLong","stepsNavButtons__cancel","isClickableNext","isClickablePrev","isVisibleNext","isVisiblePrev","onClickNext","onClickPrev","onClickCancel","onClickSave","popupContainerRef","CancelStepButton","PrevStepButton","NextStepButton","ApplyButton","NavTextInput","forwardRef","inputStyles","textInput","textInputContainer","displayName","showEditText","setShowEditText","setStep","updateIsMinimizedCustomiserNav","isPickingOutline","isPickingCrystal","navHeaderRef","noOutlineSelected","noCrystalSelected","hasFinishedAllSteps","hasFinishedStep1","hasFinishedStep2","hasFinishedStep3","hasFinishedStep4","saveAndApplyChecker","alert","applyText","hasApplied","shouldShowConfirmCancelText","showConfirmCancelPopup","setShowConfirmCancelPopup","cancelText","navCategoryNames","navTextEdit","NavTextPreview","NavTextCategories","NavTextCategoriesItems","handleOnClick","_step","finishedCategories","categoryClassNames","selectedCategoryItem","finishedCategoryItem","CategoryDisplay","NavTextSelect","NavTextNameTypes","NavTextOutline","NavTextFinish","NavTextNavSteps","handleNext","maxStep","handlePrevious","cancelTextHandler","placeText","decalPosition","decalOrientation","navHeaderSaveText","NavTextsSelection","additionalFinishedNavs","partsFinishedNavs","newFinishedNavs","unshift","self","push","isFinishedNav","finishedNav","navHeaderScroll","item","classes","tab","navClickHandler","toLowerCase","dot","navName","cancelTextEdit","setIsOpen","scrollCoordinates","setScrollCoordinates","left","top","setAdditionalFinishedNavs","scrollableRef","minimized","hasActions","isEdittingText","isFullscreen","scrollTo","behavior","toggleOpen","scrollLeft","scrollTop","layout","transition","stiffness","damping","NavHeader","header","NavHeaderScroll","headerAfter","AnimatePresence","content","closed","variants","open","collapsed","NavFitting","NavText","NavSize","NavPart","actions","total","designComplete","setResetCamera","useDesignStore","addingToCart","resetCustomerSelections","resetPopup","confirm","saveDesign","CustomiserCanvas","lazy","cameraLegCutPosition","setShow","remountTrigger","cameraRef","CustomiserNav","focusCamera","coordinates","camera","cameraDefault","Header","clipPath","fillRule","onCameraRef","addToCart","fetch","window","Shopify","routes","method","headers","body","JSON","stringify","Component","MouseHelper","Scene","Loadable","getCustomDesignData","_state$sizing$variati","_state$sizing3$height","_state$sizing3$height2","_state$sizing4","_state$sizing4$height","_state$sizing5","_state$sizing5$weight","_state$sizing6","_state$sizing6$weight","savedParts","_p$part$areaSize","_p$part$areaSize$data","areaSize","_t$basePrice","_t$letterPrice","_t$outlinePrice","_t$puffPrice","_t$crystalPrice","basePriceVariantId","letterPriceVariantId","outlinePriceVariantId","puffPriceVariantId","crystalPriceVariantId","_f$flag","_f$basePrice","_g$graphic","_g$basePrice","toString","heightUnit","weightUnit","getCartVariations","customDesignEntity","_customDesign$parts","_customDesign$flags","_customDesign$graphic","_customDesign$texts","_customDesign$sizing","customDesignId","customDesign","items","replace","addOrUpdate","variantId","addQty","checkItem","newQuantity","properties","_customDesignQuantity","_customDesignAddon","forEach","_t$text","_customDesign","positionRef","orientationRef","Euler","groupRef","setCanvasSize","resetCamera","modelRotation","setAddingToCart","setModelRotation","reset","mouseHelperRef","isPointerDown","setIsPointerDown","isPointerMoved","setIsPointerMoved","setPosition","_event$face","point","face","normal","clone","transformDirection","matrixWorld","multiplyScalar","copy","lookAt","toArray","onPointerDown","onPointerMove","shopifyAddToCart","useMutation","mutationFn","location","href","useCreateCustomDesignMutation","_data$createCustomDes","createCustomDesign","mutateAsync","toBlob","blob","file","File","upload","isEditing","linear","flat","fov","dpr","devicePixelRatio","onCreated","frameloop","OrbitControls","enableZoom","maxDistance","minDistance","minPolarAngle","Math","PI","maxPolarAngle","enableDamping","config","intensity","decay","power","castShadow"],"sourceRoot":""}