{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reian\\\\Desktop\\\\Work\\\\Freelance\\\\Boxxer World\\\\boxxerworld-shopify-frontend\\\\customiser\\\\src\\\\components\\\\nav\\\\MaterialGroup\\\\MaterialType.tsx\",\n  _s = $RefreshSig$();\nimport cn from 'classnames';\nimport { Material } from './Material';\nimport styles from './MaterialGroup.module.scss';\nimport { useMaterialGroupStore } from './MaterialGroupState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MaterialType = ({\n  className,\n  onMaterialSelected,\n  hideColorGroups\n}) => {\n  _s();\n  const rootClassName = cn(styles.materialType, className);\n  const {\n    materialTypes,\n    filteredMaterials: getFilteredMaterials,\n    materials\n  } = useMaterialGroupStore();\n  const filteredMaterials = hideColorGroups ? materials : getFilteredMaterials();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: rootClassName,\n    children: [!hideColorGroups && /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Texture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 28\n    }, this), materialTypes.map(mt => {\n      var _mt$attributes;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.materialType,\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: styles.materialType__title,\n          children: (_mt$attributes = mt.attributes) === null || _mt$attributes === void 0 ? void 0 : _mt$attributes.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.materials,\n          children: filteredMaterials.filter(m => {\n            var _m$attributes, _m$attributes$type, _m$attributes$type$da;\n            return ((_m$attributes = m.attributes) === null || _m$attributes === void 0 ? void 0 : (_m$attributes$type = _m$attributes.type) === null || _m$attributes$type === void 0 ? void 0 : (_m$attributes$type$da = _m$attributes$type.data) === null || _m$attributes$type$da === void 0 ? void 0 : _m$attributes$type$da.id) === mt.id;\n          }).map(m => /*#__PURE__*/_jsxDEV(Material, {\n            material: m,\n            onMaterialSelected: onMaterialSelected\n          }, m.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, mt.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MaterialType, \"YKecM+dcGwNYGEzParP5SllgJmY=\", false, function () {\n  return [useMaterialGroupStore];\n});\n_c = MaterialType;\nvar _c;\n$RefreshReg$(_c, \"MaterialType\");","map":{"version":3,"names":["cn","Material","styles","useMaterialGroupStore","jsxDEV","_jsxDEV","MaterialType","className","onMaterialSelected","hideColorGroups","_s","rootClassName","materialType","materialTypes","filteredMaterials","getFilteredMaterials","materials","children","fileName","_jsxFileName","lineNumber","columnNumber","map","mt","_mt$attributes","materialType__title","attributes","name","filter","m","_m$attributes","_m$attributes$type","_m$attributes$type$da","type","data","id","material","_c","$RefreshReg$"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/MaterialGroup/MaterialType.tsx"],"sourcesContent":["import PillButton from '@components/ui/PillButton';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { Material } from './Material';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { useMaterialGroupStore } from './MaterialGroupState';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialTypeProps {\r\n  className?: string;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const MaterialType = ({\r\n  className,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n}: MaterialTypeProps) => {\r\n  const rootClassName = cn(styles.materialType, className);\r\n\r\n  const {\r\n    materialTypes,\r\n    filteredMaterials: getFilteredMaterials,\r\n    materials,\r\n  } = useMaterialGroupStore();\r\n\r\n  const filteredMaterials = hideColorGroups ? materials : getFilteredMaterials();\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && <h5>Texture</h5>}\r\n      {materialTypes.map((mt) => (\r\n        <div key={mt.id} className={styles.materialType}>\r\n          <h6 className={styles.materialType__title}>{mt.attributes?.name}</h6>\r\n          <div className={styles.materials}>\r\n            {filteredMaterials\r\n              .filter((m) => m.attributes?.type?.data?.id === mt.id)\r\n              .map((m) => (\r\n                <Material key={m.id} material={m} onMaterialSelected={onMaterialSelected} />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAEA,OAAOA,EAAE,MAAM,YAAY;AAC3B,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,MAAM,MAAM,6BAA6B;AAChD,SAASC,qBAAqB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU7D,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAC3BC,SAAS;EACTC,kBAAkB;EAClBC;AACiB,CAAC,KAAK;EAAAC,EAAA;EACvB,MAAMC,aAAa,GAAGX,EAAE,CAACE,MAAM,CAACU,YAAY,EAAEL,SAAS,CAAC;EAExD,MAAM;IACJM,aAAa;IACbC,iBAAiB,EAAEC,oBAAoB;IACvCC;EACF,CAAC,GAAGb,qBAAqB,CAAC,CAAC;EAE3B,MAAMW,iBAAiB,GAAGL,eAAe,GAAGO,SAAS,GAAGD,oBAAoB,CAAC,CAAC;EAE9E,oBACEV,OAAA;IAAKE,SAAS,EAAEI,aAAc;IAAAM,QAAA,GAC3B,CAACR,eAAe,iBAAIJ,OAAA;MAAAY,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpCR,aAAa,CAACS,GAAG,CAAEC,EAAE;MAAA,IAAAC,cAAA;MAAA,oBACpBnB,OAAA;QAAiBE,SAAS,EAAEL,MAAM,CAACU,YAAa;QAAAK,QAAA,gBAC9CZ,OAAA;UAAIE,SAAS,EAAEL,MAAM,CAACuB,mBAAoB;UAAAR,QAAA,GAAAO,cAAA,GAAED,EAAE,CAACG,UAAU,cAAAF,cAAA,uBAAbA,cAAA,CAAeG;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrEhB,OAAA;UAAKE,SAAS,EAAEL,MAAM,CAACc,SAAU;UAAAC,QAAA,EAC9BH,iBAAiB,CACfc,MAAM,CAAEC,CAAC;YAAA,IAAAC,aAAA,EAAAC,kBAAA,EAAAC,qBAAA;YAAA,OAAK,EAAAF,aAAA,GAAAD,CAAC,CAACH,UAAU,cAAAI,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcG,IAAI,cAAAF,kBAAA,wBAAAC,qBAAA,GAAlBD,kBAAA,CAAoBG,IAAI,cAAAF,qBAAA,uBAAxBA,qBAAA,CAA0BG,EAAE,MAAKZ,EAAE,CAACY,EAAE;UAAA,EAAC,CACrDb,GAAG,CAAEO,CAAC,iBACLxB,OAAA,CAACJ,QAAQ;YAAYmC,QAAQ,EAAEP,CAAE;YAACrB,kBAAkB,EAAEA;UAAmB,GAA1DqB,CAAC,CAACM,EAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAwD,CAC5E;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA,GAREE,EAAE,CAACY,EAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CAAC;IAAA,CACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACX,EAAA,CAhCWJ,YAAY;EAAA,QAWnBH,qBAAqB;AAAA;AAAAkC,EAAA,GAXd/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}