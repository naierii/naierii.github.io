{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reian\\\\Desktop\\\\Work\\\\Freelance\\\\Boxxer World\\\\boxxerworld-shopify-frontend\\\\customiser\\\\src\\\\components\\\\nav\\\\NavText\\\\NavTextSelect.tsx\",\n  _s = $RefreshSig$();\nimport FormInput from '@components/ui/FormInput';\nimport { useCustomiserStore } from '@store/customiser';\nimport cn from 'classnames';\nimport { useEffect, useState } from 'react';\nimport styles from './NavText.module.scss';\nimport Button from '@components/ui/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fonts = [{\n  name: 'Arial',\n  className: styles.arial,\n  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/arial-bold-webfont.woff'\n}, {\n  name: 'Oswald',\n  className: styles.oswald,\n  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/oswald-semibold.woff'\n}, {\n  name: 'College',\n  className: styles.college,\n  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/college_block-webfont.woff'\n}, {\n  name: 'Ballantines',\n  className: styles.ballantines,\n  url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/ballantines-bold-webfont.woff'\n}];\nconst NavTextSelect = ({\n  className,\n  editText\n}) => {\n  _s();\n  var _fonts$find;\n  const [text, setText] = useState(editText === null || editText === void 0 ? void 0 : editText.text);\n  const [font, setFont] = useState((_fonts$find = fonts.find(f => (editText === null || editText === void 0 ? void 0 : editText.font) === f.url)) !== null && _fonts$find !== void 0 ? _fonts$find : fonts[0]);\n  const {\n    addText,\n    updateText,\n    updateIsMinimizedCustomiserNav\n  } = useCustomiserStore(state => state);\n  useEffect(() => {\n    if (editText !== null && editText !== void 0 && editText.key) {\n      updateText(editText.key, {\n        text,\n        font: font.url,\n        edit: true\n      });\n    } else {\n      if (text) {\n        addText({\n          text,\n          font: font.url\n        });\n      }\n    }\n  }, [text, font]);\n  const setTextOnChange = event => {\n    setText(event.target.value);\n  };\n  const onFontChange = font => {\n    setFont(font);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(FormInput, {\n      placeholder: \"Enter text\",\n      value: text,\n      onChange: setTextOnChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.fontSelection,\n      children: fonts.map(_font => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => onFontChange(_font),\n        className: cn(styles.font, _font.className, {\n          [styles.selected]: font.name === _font.name\n        }),\n        children: _font.name\n      }, _font.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.applyTextBtnContainer,\n      onClick: () => {\n        console.log('editText', editText);\n        if (editText !== null && editText !== void 0 && editText.key) {\n          updateText(editText.key, {\n            decalPosition: [-0.060758417444321144, 2.456287269513109, 1.612290927426855],\n            decalOrientation: [0.02129147213212704, -0.3353986322829519, 0.007008939102769669, 'XYZ']\n          });\n        }\n        updateIsMinimizedCustomiserNav(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        colour: \"red\",\n        children: \"Apply Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(NavTextSelect, \"2htRUjN11pcDcGMsHl8wDdqUCEQ=\", false, function () {\n  return [useCustomiserStore];\n});\n_c = NavTextSelect;\nexport default NavTextSelect;\nvar _c;\n$RefreshReg$(_c, \"NavTextSelect\");","map":{"version":3,"names":["FormInput","useCustomiserStore","cn","useEffect","useState","styles","Button","jsxDEV","_jsxDEV","fonts","name","className","arial","url","oswald","college","ballantines","NavTextSelect","editText","_s","_fonts$find","text","setText","font","setFont","find","f","addText","updateText","updateIsMinimizedCustomiserNav","state","key","edit","setTextOnChange","event","target","value","onFontChange","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","fontSelection","map","_font","onClick","selected","applyTextBtnContainer","console","log","decalPosition","decalOrientation","colour","_c","$RefreshReg$"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavText/NavTextSelect.tsx"],"sourcesContent":["import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport Button from '@components/ui/Button';\r\n\r\nexport interface NavTextSelectProps {\r\n  className?: string;\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst fonts = [\r\n  {\r\n    name: 'Arial',\r\n    className: styles.arial,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/arial-bold-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Oswald',\r\n    className: styles.oswald,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/oswald-semibold.woff',\r\n  },\r\n  {\r\n    name: 'College',\r\n    className: styles.college,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/college_block-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Ballantines',\r\n    className: styles.ballantines,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/ballantines-bold-webfont.woff',\r\n  },\r\n];\r\n\r\nconst NavTextSelect = ({ className, editText }: NavTextSelectProps) => {\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const [font, setFont] = useState<(typeof fonts)[number]>(\r\n    fonts.find((f) => editText?.font === f.url) ?? fonts[0],\r\n  );\r\n  const { addText, updateText, updateIsMinimizedCustomiserNav } = useCustomiserStore(\r\n    (state) => state,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text, font: font.url });\r\n      }\r\n    }\r\n  }, [text, font]);\r\n\r\n  const setTextOnChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onFontChange = (font: (typeof fonts)[number]) => {\r\n    setFont(font);\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <FormInput placeholder='Enter text' value={text} onChange={setTextOnChange} />\r\n      <div className={styles.fontSelection}>\r\n        {fonts.map((_font) => (\r\n          <div\r\n            key={_font.name}\r\n            onClick={() => onFontChange(_font)}\r\n            className={cn(styles.font, _font.className, {\r\n              [styles.selected]: font.name === _font.name,\r\n            })}\r\n          >\r\n            {_font.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div\r\n        className={styles.applyTextBtnContainer}\r\n        onClick={() => {\r\n          console.log('editText', editText);\r\n          if (editText?.key) {\r\n            updateText(editText.key, {\r\n              decalPosition: [-0.060758417444321144, 2.456287269513109, 1.612290927426855],\r\n              decalOrientation: [\r\n                0.02129147213212704,\r\n                -0.3353986322829519,\r\n                0.007008939102769669,\r\n                'XYZ',\r\n              ],\r\n            });\r\n          }\r\n          updateIsMinimizedCustomiserNav(true);\r\n        }}\r\n      >\r\n        <Button colour='red'>Apply Text</Button>\r\n      </div>\r\n      {/* <FormSelect\r\n        className={fonts.find((f) => f.url === font)?.className}\r\n        value={font}\r\n        onChange={onFontChange}\r\n      >\r\n        {fonts.map((f) => (\r\n          <option className={f.className} key={f.url} value={f.url}>\r\n            {f.name}\r\n          </option>\r\n        ))}\r\n      </FormSelect> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextSelect;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}