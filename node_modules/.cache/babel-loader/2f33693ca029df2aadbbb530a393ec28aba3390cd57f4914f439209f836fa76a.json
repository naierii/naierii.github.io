{"ast":null,"code":"import FormInput from'@components/ui/FormInput';import{useCustomiserStore}from'@store/customiser';import cn from'classnames';import{useEffect,useState}from'react';import styles from'./NavText.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const fonts=[{name:'Arial',className:styles.arial,url:'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/arial-bold-webfont.woff'},{name:'Oswald',className:styles.oswald,url:'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/oswald-semibold.woff'},{name:'College',className:styles.college,url:'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/college_block-webfont.woff'},{name:'Ballantines',className:styles.ballantines,url:'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/ballantines-bold-webfont.woff'}];const NavTextSelect=_ref=>{var _fonts$find;let{className,editText}=_ref;const[text,setText]=useState(editText===null||editText===void 0?void 0:editText.text);const[font,setFont]=useState((_fonts$find=fonts.find(f=>(editText===null||editText===void 0?void 0:editText.font)===f.url))!==null&&_fonts$find!==void 0?_fonts$find:fonts[0]);const{addText,updateText}=useCustomiserStore(state=>state);useEffect(()=>{if(editText!==null&&editText!==void 0&&editText.key){updateText(editText.key,{text,font:font.url,edit:true});}else{if(text){addText({text,font:font.url});}}},[text,font]);const setTextOnChange=event=>{setText(event.target.value);};const onFontChange=font=>{setFont(font);};return/*#__PURE__*/_jsxs(\"div\",{className:className,children:[/*#__PURE__*/_jsx(FormInput,{placeholder:\"Enter text\",value:text,onChange:setTextOnChange}),/*#__PURE__*/_jsx(\"div\",{className:styles.fontSelection,children:fonts.map(_font=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>onFontChange(_font),className:cn(styles.font,_font.className,{[styles.selected]:font.name===_font.name}),children:_font.name},_font.name))})]});};export default NavTextSelect;","map":{"version":3,"names":["FormInput","useCustomiserStore","cn","useEffect","useState","styles","jsx","_jsx","jsxs","_jsxs","fonts","name","className","arial","url","oswald","college","ballantines","NavTextSelect","_ref","_fonts$find","editText","text","setText","font","setFont","find","f","addText","updateText","state","key","edit","setTextOnChange","event","target","value","onFontChange","children","placeholder","onChange","fontSelection","map","_font","onClick","selected"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavText/NavTextSelect.tsx"],"sourcesContent":["import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\n\r\nimport styles from './NavText.module.scss';\r\n\r\nexport interface NavTextSelectProps {\r\n  className?: string;\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst fonts = [\r\n  {\r\n    name: 'Arial',\r\n    className: styles.arial,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/arial-bold-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Oswald',\r\n    className: styles.oswald,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/oswald-semibold.woff',\r\n  },\r\n  {\r\n    name: 'College',\r\n    className: styles.college,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/college_block-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Ballantines',\r\n    className: styles.ballantines,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/ballantines-bold-webfont.woff',\r\n  },\r\n];\r\n\r\nconst NavTextSelect = ({ className, editText }: NavTextSelectProps) => {\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const [font, setFont] = useState<(typeof fonts)[number]>(\r\n    fonts.find((f) => editText?.font === f.url) ?? fonts[0],\r\n  );\r\n  const { addText, updateText } = useCustomiserStore((state) => state);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text, font: font.url });\r\n      }\r\n    }\r\n  }, [text, font]);\r\n\r\n  const setTextOnChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onFontChange = (font: (typeof fonts)[number]) => {\r\n    setFont(font);\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <FormInput placeholder='Enter text' value={text} onChange={setTextOnChange} />\r\n\r\n      <div className={styles.fontSelection}>\r\n        {fonts.map((_font) => (\r\n          <div\r\n            key={_font.name}\r\n            onClick={() => onFontChange(_font)}\r\n            className={cn(styles.font, _font.className, {\r\n              [styles.selected]: font.name === _font.name,\r\n            })}\r\n          >\r\n            {_font.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* <FormSelect\r\n        className={fonts.find((f) => f.url === font)?.className}\r\n        value={font}\r\n        onChange={onFontChange}\r\n      >\r\n        {fonts.map((f) => (\r\n          <option className={f.className} key={f.url} value={f.url}>\r\n            {f.name}\r\n          </option>\r\n        ))}\r\n      </FormSelect> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextSelect;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}