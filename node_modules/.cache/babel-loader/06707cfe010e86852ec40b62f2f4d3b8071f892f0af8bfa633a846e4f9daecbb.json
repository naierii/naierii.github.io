{"ast":null,"code":"import{usePortalRef}from'@hooks';import{useCustomiserStore}from'@store/customiser';import cn from'classnames';import ReactDOM from'react-dom';import styles from'./NavButtons.module.scss';import DontShowAgain from'../../ui/DontShowAgain';import{useState}from'react';import ContainedButton from'@components/ui/Button/ContainedButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const NavButtons=_ref=>{var _finishedNavs$find;let{finishedNavs:finishedNavsParam,className,confirmText,confirmStorage,onNext}=_ref;const rootClassName=cn(styles.root,className);const{navItems,selectedNav,parts,sizing,cancelPartChange,resetNav,setSelectedNav}=useCustomiserStore();const navIndex=navItems.findIndex(nav=>nav.name===(selectedNav===null||selectedNav===void 0?void 0:selectedNav.name));const portalRef=usePortalRef('CustomiserNavActions');const popupPortalRef=usePortalRef('popupContainer');const[showPopup,setShowPopup]=useState(false);const notifTitle=confirmStorage;const localStorageItem=localStorage.getItem(notifTitle||'');const shouldShowNotification=!localStorageItem;let finishedNavs=parts.map(part=>{const partName=part.part.name;if(!partName)return;const isFinishedPart=!!navItems.find(navItem=>{return navItem.name===partName;});return{name:partName,isFinished:isFinishedPart};});if(finishedNavsParam&&finishedNavsParam.length){finishedNavs=[...finishedNavs,...finishedNavsParam];}let isFinishedCurrentNav=!!(selectedNav&&(_finishedNavs$find=finishedNavs.find(nav=>(nav===null||nav===void 0?void 0:nav.name)===selectedNav.name))!==null&&_finishedNavs$find!==void 0&&_finishedNavs$find.isFinished);let isRequired=selectedNav===null||selectedNav===void 0?void 0:selectedNav.required;if((selectedNav===null||selectedNav===void 0?void 0:selectedNav.name)==='Fitting'){isRequired=false;}else if((selectedNav===null||selectedNav===void 0?void 0:selectedNav.name)==='Size'){var _sizing$height,_sizing$weight;isFinishedCurrentNav=!!(sizing!==null&&sizing!==void 0&&(_sizing$height=sizing.height)!==null&&_sizing$height!==void 0&&_sizing$height.value&&sizing!==null&&sizing!==void 0&&(_sizing$weight=sizing.weight)!==null&&_sizing$weight!==void 0&&_sizing$weight.value);}const saveHandler=()=>{if(navIndex!==-1&&isFinishedCurrentNav){setSelectedNav(navIndex+1);}// if (!confirmText) {\n//   resetNav();\n// } else {\n//   if (shouldShowNotification) {\n//     setShowPopup(true);\n//   } else {\n//     resetNav();\n//   }\n// }\n};if(!portalRef||!popupPortalRef){return null;}return/*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:rootClassName,children:[/*#__PURE__*/_jsx(ContainedButton,{onClick:()=>cancelPartChange(),children:\"Cancel\"}),!onNext?/*#__PURE__*/_jsx(ContainedButton,{isClickable:!isRequired||isFinishedCurrentNav,onClick:saveHandler,children:\"Save\"}):/*#__PURE__*/_jsx(ContainedButton,{onClick:onNext,children:\"Next\"})]}),confirmText&&showPopup&&shouldShowNotification&&notifTitle&&/*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsx(DontShowAgain,{cb:resetNav,setShowNotification:setShowPopup,notifName:notifTitle,children:/*#__PURE__*/_jsx(\"span\",{children:confirmText})}),popupPortalRef)]}),portalRef);};export default NavButtons;","map":{"version":3,"names":["usePortalRef","useCustomiserStore","cn","ReactDOM","styles","DontShowAgain","useState","ContainedButton","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NavButtons","_ref","_finishedNavs$find","finishedNavs","finishedNavsParam","className","confirmText","confirmStorage","onNext","rootClassName","root","navItems","selectedNav","parts","sizing","cancelPartChange","resetNav","setSelectedNav","navIndex","findIndex","nav","name","portalRef","popupPortalRef","showPopup","setShowPopup","notifTitle","localStorageItem","localStorage","getItem","shouldShowNotification","map","part","partName","isFinishedPart","find","navItem","isFinished","length","isFinishedCurrentNav","isRequired","required","_sizing$height","_sizing$weight","height","value","weight","saveHandler","createPortal","children","onClick","isClickable","cb","setShowNotification","notifName"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/components/nav/NavButtons/NavButtons.tsx"],"sourcesContent":["import { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavButtons.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\nimport DontShowAgain from '../../ui/DontShowAgain';\r\nimport { useState } from 'react';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\nimport { finished } from 'stream';\r\n\r\nexport interface NavButtonsProps {\r\n  className?: string;\r\n  confirmText?: string | Falsey;\r\n  confirmStorage?: string;\r\n  onNext?: (() => void) | Falsey;\r\n  finishedNavs?: (\r\n    | {\r\n        name: string;\r\n        isFinished: boolean;\r\n      }\r\n    | undefined\r\n  )[];\r\n}\r\n\r\nconst NavButtons = ({\r\n  finishedNavs: finishedNavsParam,\r\n  className,\r\n  confirmText,\r\n  confirmStorage,\r\n  onNext,\r\n}: NavButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const {\r\n    navItems,\r\n    selectedNav,\r\n    parts,\r\n    sizing,\r\n\r\n    cancelPartChange,\r\n    resetNav,\r\n    setSelectedNav,\r\n  } = useCustomiserStore();\r\n\r\n  const navIndex = navItems.findIndex((nav) => nav.name === selectedNav?.name);\r\n\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const notifTitle = confirmStorage;\r\n  const localStorageItem = localStorage.getItem(notifTitle || '');\r\n  const shouldShowNotification = !localStorageItem;\r\n\r\n  let finishedNavs = parts.map((part) => {\r\n    const partName = part.part.name;\r\n    if (!partName) return;\r\n    const isFinishedPart = !!navItems.find((navItem) => {\r\n      return navItem.name === partName;\r\n    });\r\n    return {\r\n      name: partName,\r\n      isFinished: isFinishedPart,\r\n    };\r\n  });\r\n\r\n  if (finishedNavsParam && finishedNavsParam.length) {\r\n    finishedNavs = [...finishedNavs, ...finishedNavsParam];\r\n  }\r\n\r\n  let isFinishedCurrentNav = !!(\r\n    selectedNav && finishedNavs.find((nav) => nav?.name === selectedNav.name)?.isFinished\r\n  );\r\n  let isRequired = selectedNav?.required;\r\n  if (selectedNav?.name === 'Fitting') {\r\n    isRequired = false;\r\n  } else if (selectedNav?.name === 'Size') {\r\n    isFinishedCurrentNav = !!(sizing?.height?.value && sizing?.weight?.value);\r\n  }\r\n\r\n  const saveHandler = () => {\r\n    if (navIndex !== -1 && isFinishedCurrentNav) {\r\n      setSelectedNav(navIndex + 1);\r\n    }\r\n\r\n    // if (!confirmText) {\r\n    //   resetNav();\r\n    // } else {\r\n    //   if (shouldShowNotification) {\r\n    //     setShowPopup(true);\r\n    //   } else {\r\n    //     resetNav();\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  if (!portalRef || !popupPortalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className={rootClassName}>\r\n        <ContainedButton onClick={() => cancelPartChange()}>Cancel</ContainedButton>\r\n        {!onNext ? (\r\n          <ContainedButton isClickable={!isRequired || isFinishedCurrentNav} onClick={saveHandler}>\r\n            Save\r\n          </ContainedButton>\r\n        ) : (\r\n          <ContainedButton onClick={onNext}>Next</ContainedButton>\r\n        )}\r\n      </div>\r\n      {confirmText &&\r\n        showPopup &&\r\n        shouldShowNotification &&\r\n        notifTitle &&\r\n        ReactDOM.createPortal(\r\n          <DontShowAgain cb={resetNav} setShowNotification={setShowPopup} notifName={notifTitle}>\r\n            <span>{confirmText}</span>\r\n          </DontShowAgain>,\r\n          popupPortalRef,\r\n        )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}