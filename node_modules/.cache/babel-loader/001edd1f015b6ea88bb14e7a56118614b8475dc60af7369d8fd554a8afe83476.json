{"ast":null,"code":"//* eslint-disable @typescript-eslint/no-explicit-any */\nimport produce from'immer';import{v4 as uuidv4}from'uuid';import{create}from'zustand';import{devtools,persist}from'zustand/middleware';import{UNIT}from'./constants';const defaultMaterials={roughnessMap:'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/satin_white_Roughness_31e017223f.jpg',normalMap:'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/satin_white_Normal_940f07492a.jpg',metalnessMap:'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/satin_white_Metallic_342d2f7f8a.jpg',displacementMap:'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/satin_white_Height_1fcbf95d0c.jpg',map:'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/satin_white_Base_Color_831f136312.jpg',aoMap:'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/satin_white_Ambient_Occlusion_426692f37f.jpg'};const initialState={selectedModels:[],savedModels:[],selectedPart:null,navItems:[],selectedNav:null,parts:[],savedParts:[],flags:[],graphics:[],texts:[],variations:[],sizing:{height:{unit:UNIT.HEIGHT.CM},weight:{unit:UNIT.WEIGHT.KG}},isMinimizedCustomiserNav:false};const createCustomiser=(set,get)=>({...initialState,designComplete:()=>{var _get$sizing;const navItems=get().navItems;let isComplete=true;const sizing=navItems.find(i=>i.type==='size');if(sizing&&!((_get$sizing=get().sizing)!==null&&_get$sizing!==void 0&&_get$sizing.variation))return false;const requiredParts=navItems.filter(i=>i.type==='part'&&i.required);for(const part of requiredParts){if(!get().savedParts.find(p=>p.part.id===part.id)){isComplete=false;break;}}return isComplete;},total:()=>{var _get$sizing2;let total=0;const variation=(_get$sizing2=get().sizing)===null||_get$sizing2===void 0?void 0:_get$sizing2.variation;if(variation!==null&&variation!==void 0&&variation.price.amount){total=total+Number(variation.price.amount);}get().parts.forEach(part=>{var _part$part$areaSize$d,_part$part$areaSize,_part$part$areaSize$d2,_part$part$areaSize$d3,_part$material$attrib,_part$material$attrib2,_part$material$attrib3,_part$material$attrib4,_part$material$attrib5;const priceAdjust=(_part$part$areaSize$d=(_part$part$areaSize=part.part.areaSize)===null||_part$part$areaSize===void 0?void 0:(_part$part$areaSize$d2=_part$part$areaSize.data)===null||_part$part$areaSize$d2===void 0?void 0:(_part$part$areaSize$d3=_part$part$areaSize$d2.attributes)===null||_part$part$areaSize$d3===void 0?void 0:_part$part$areaSize$d3.priceAdjust)!==null&&_part$part$areaSize$d!==void 0?_part$part$areaSize$d:1;const price=(_part$material$attrib=(_part$material$attrib2=part.material.attributes)===null||_part$material$attrib2===void 0?void 0:(_part$material$attrib3=_part$material$attrib2.price)===null||_part$material$attrib3===void 0?void 0:(_part$material$attrib4=_part$material$attrib3.data)===null||_part$material$attrib4===void 0?void 0:(_part$material$attrib5=_part$material$attrib4.attributes)===null||_part$material$attrib5===void 0?void 0:_part$material$attrib5.price)!==null&&_part$material$attrib!==void 0?_part$material$attrib:0;const sum=priceAdjust*price;total=total+sum;});get().texts.forEach(text=>{if(text.totalPrice){total=total+text.totalPrice;}});get().flags.forEach(flag=>{var _flag$basePrice;if((_flag$basePrice=flag.basePrice)!==null&&_flag$basePrice!==void 0&&_flag$basePrice.price){total=total+flag.basePrice.price;}});return total.toFixed(2);},setCustomProduct:(customProduct,shopifyProduct)=>{var _shopifyProduct$produ,_customProduct$attrib;let dataToSet={customProduct,variations:(_shopifyProduct$produ=shopifyProduct.product)===null||_shopifyProduct$produ===void 0?void 0:_shopifyProduct$produ.variants.nodes};if(!get().selectedModels.length&&(_customProduct$attrib=customProduct.attributes)!==null&&_customProduct$attrib!==void 0&&_customProduct$attrib.options){var _customProduct$attrib2,_customProduct$attrib3;const models=[];customProduct.attributes.options.forEach(option=>{var _option$models,_option$models$,_option$models$$model;if(option!==null&&option!==void 0&&(_option$models=option.models)!==null&&_option$models!==void 0&&_option$models.length&&option!==null&&option!==void 0&&(_option$models$=option.models[0])!==null&&_option$models$!==void 0&&(_option$models$$model=_option$models$.model)!==null&&_option$models$$model!==void 0&&_option$models$$model.data){var _option$models$2,_option$models$2$mode;models.push({optionId:option.id,model:option===null||option===void 0?void 0:(_option$models$2=option.models[0])===null||_option$models$2===void 0?void 0:(_option$models$2$mode=_option$models$2.model)===null||_option$models$2$mode===void 0?void 0:_option$models$2$mode.data});}});const navFitting={name:'Fitting',type:'fitting',required:true,hasActions:true};const navParts=(_customProduct$attrib2=(_customProduct$attrib3=customProduct.attributes.parts)===null||_customProduct$attrib3===void 0?void 0:_customProduct$attrib3.map(o=>{var _o$id,_o$name;return{id:(_o$id=o===null||o===void 0?void 0:o.id)!==null&&_o$id!==void 0?_o$id:'',name:(_o$name=o===null||o===void 0?void 0:o.name)!==null&&_o$name!==void 0?_o$name:'',type:'part',required:!(o!==null&&o!==void 0&&o.optional),hasActions:true};}))!==null&&_customProduct$attrib2!==void 0?_customProduct$attrib2:[];const navSize={name:'Size',type:'size',required:true,hasActions:true};const navFlags={name:'Flags',type:'flags',hasActions:true};const navImages={name:'Images',type:'images',hasActions:true};const navNames={name:'Text',type:'names',hasActions:true};const navItems=[navFitting,...navParts,navNames,navFlags,navImages,navSize].map((i,index)=>{i.index=index;return i;});dataToSet={...dataToSet,selectedModels:models,savedModels:models,navItems:navItems};}set(dataToSet);},setCanvasSize:(width,height)=>{set(produce(state=>{state.canvas={width,height};}));},setSizing:(height,weight,variation)=>{set(produce(state=>{if(height){state.sizing={...state.sizing,height};}if(weight){state.sizing={...state.sizing,weight};}if(variation){state.sizing={...state.sizing,variation,size:variation.title};}}));},setSelectedModel:(id,model)=>{set(produce(state=>{const option=state.selectedModels.find(m=>m.optionId===id);if(option){option.model=model;}}));},setPart:(part,material)=>{set(produce(state=>{const findPart=state.parts.find(p=>p.part.id===part.id);if(findPart){findPart.material=material;}else{state.parts.push({part,material});}}));},removePart:part=>{set(produce(state=>{state.parts=state.parts.filter(p=>p.part.id!==part.id);state.savedParts=state.savedParts.filter(p=>p.part.id!==part.id);}));},setSelectedPart:data=>set({selectedPart:data}),setSelectedNav:(index,save)=>set(produce(state=>{const navItem=state.navItems.find(n=>n.index===index);if(navItem){state.selectedNav=navItem;if(navItem.type==='part'){var _state$customProduct,_state$customProduct$,_state$customProduct$2;const part=(_state$customProduct=state.customProduct)===null||_state$customProduct===void 0?void 0:(_state$customProduct$=_state$customProduct.attributes)===null||_state$customProduct$===void 0?void 0:(_state$customProduct$2=_state$customProduct$.parts)===null||_state$customProduct$2===void 0?void 0:_state$customProduct$2.find(o=>(o===null||o===void 0?void 0:o.id)===navItem.id);if(part){state.selectedPart=part;}}else{state.selectedPart=null;}}state.savedParts=state.parts;state.savedModels=state.selectedModels;state.flags=state.flags.map(f=>{f.decalFreeze=false;f.edit=false;return f;});state.texts=state.texts.map(f=>{f.decalFreeze=false;f.edit=false;return f;});state.graphics=state.graphics.map(f=>{f.decalFreeze=false;f.edit=false;return f;});})),resetNav:()=>set({selectedPart:null,selectedNav:null}),cancelPartChange:()=>set(produce(state=>{state.parts=state.savedParts;state.selectedModels=state.savedModels;state.selectedPart=null;state.selectedNav=null;})),texture:nodeId=>{const parts=get().parts;let materials={};let hex='';let id;for(const p of parts){var _p$part$modelParts,_p$material,_p$material$attribute;const test=(_p$part$modelParts=p.part.modelParts)===null||_p$part$modelParts===void 0?void 0:_p$part$modelParts.data.map(mp=>{var _mp$attributes;return mp===null||mp===void 0?void 0:(_mp$attributes=mp.attributes)===null||_mp$attributes===void 0?void 0:_mp$attributes.nodeId;}).indexOf(nodeId);if(test!=-1&&p!==null&&p!==void 0&&(_p$material=p.material)!==null&&_p$material!==void 0&&(_p$material$attribute=_p$material.attributes)!==null&&_p$material$attribute!==void 0&&_p$material$attribute.images){var _p$material$attribute2,_p$material$attribute3;hex=(_p$material$attribute2=p.material.attributes.hex)!==null&&_p$material$attribute2!==void 0?_p$material$attribute2:'';id=p.material.id;(_p$material$attribute3=p.material.attributes.images)===null||_p$material$attribute3===void 0?void 0:_p$material$attribute3.forEach(image=>{var _image$image,_image$image$data,_image$image$data$att;materials={...materials,[image===null||image===void 0?void 0:image.mapType]:image===null||image===void 0?void 0:(_image$image=image.image)===null||_image$image===void 0?void 0:(_image$image$data=_image$image.data)===null||_image$image$data===void 0?void 0:(_image$image$data$att=_image$image$data.attributes)===null||_image$image$data$att===void 0?void 0:_image$image$data$att.url};});break;}}return{id,materials:{// default values\n// Possible improvement would be to get these values from the Material Group Store if that's possible\n...defaultMaterials,// custom values\n...materials},hex};},optional:nodeId=>{var _customProduct$attrib4,_customProduct$attrib5;let isOptional=false;const parts=get().parts;const customProduct=get().customProduct;if(customProduct!==null&&customProduct!==void 0&&(_customProduct$attrib4=customProduct.attributes)!==null&&_customProduct$attrib4!==void 0&&(_customProduct$attrib5=_customProduct$attrib4.parts)!==null&&_customProduct$attrib5!==void 0&&_customProduct$attrib5.length){const optionalParts=customProduct.attributes.parts.filter(p=>p===null||p===void 0?void 0:p.optional);for(const part of optionalParts){var _part$modelParts;const test=part===null||part===void 0?void 0:(_part$modelParts=part.modelParts)===null||_part$modelParts===void 0?void 0:_part$modelParts.data.map(mp=>{var _mp$attributes2;return mp===null||mp===void 0?void 0:(_mp$attributes2=mp.attributes)===null||_mp$attributes2===void 0?void 0:_mp$attributes2.nodeId;}).indexOf(nodeId);if(test!=-1){isOptional=true;break;}}}for(const p of parts){var _p$part$modelParts2;const test=(_p$part$modelParts2=p.part.modelParts)===null||_p$part$modelParts2===void 0?void 0:_p$part$modelParts2.data.map(mp=>{var _mp$attributes3;return mp===null||mp===void 0?void 0:(_mp$attributes3=mp.attributes)===null||_mp$attributes3===void 0?void 0:_mp$attributes3.nodeId;}).indexOf(nodeId);if(test!=-1){isOptional=false;break;}}return isOptional;},tassels:nodeId=>{var _customProduct$attrib6,_customProduct$attrib7;let isTassels=false;const customProduct=get().customProduct;if(customProduct!==null&&customProduct!==void 0&&(_customProduct$attrib6=customProduct.attributes)!==null&&_customProduct$attrib6!==void 0&&(_customProduct$attrib7=_customProduct$attrib6.parts)!==null&&_customProduct$attrib7!==void 0&&_customProduct$attrib7.length){const tasselParts=customProduct.attributes.parts.filter(p=>p===null||p===void 0?void 0:p.tassels);for(const part of tasselParts){var _part$modelParts2;const test=part===null||part===void 0?void 0:(_part$modelParts2=part.modelParts)===null||_part$modelParts2===void 0?void 0:_part$modelParts2.data.map(mp=>{var _mp$attributes4;return mp===null||mp===void 0?void 0:(_mp$attributes4=mp.attributes)===null||_mp$attributes4===void 0?void 0:_mp$attributes4.nodeId;}).indexOf(nodeId);if(test!=-1){isTassels=true;break;}}}return isTassels;},addFlag:flag=>{set(produce(state=>{var _flag$key;const newKey=(_flag$key=flag.key)!==null&&_flag$key!==void 0?_flag$key:uuidv4();state.flags=[...state.flags,{...flag,key:newKey,edit:true,decalFreeze:false}];}));},updateFlag:(key,flag)=>{set(produce(state=>{state.flags=[...state.flags.map(f=>{if(f.key===key){return{...f,...flag};}return f;})];}));},deleteFlag:key=>{set(produce(state=>{state.flags=[...state.flags.filter(f=>f.key!==key)];}));},addGraphic:graphic=>{set(produce(state=>{var _graphic$key;const newKey=(_graphic$key=graphic.key)!==null&&_graphic$key!==void 0?_graphic$key:uuidv4();state.graphics=[...state.graphics,{...graphic,key:newKey,edit:true,decalFreeze:false}];}));},updateGraphic:(key,graphic)=>{set(produce(state=>{state.graphics=[...state.graphics.map(f=>{if(f.key===key){return{...f,...graphic};}return f;})];}));},deleteGraphic:key=>{set(produce(state=>{state.graphics=[...state.graphics.filter(f=>f.key!==key)];}));},addText:text=>{set(produce(state=>{var _text$key;const newKey=(_text$key=text.key)!==null&&_text$key!==void 0?_text$key:uuidv4();state.texts=[...state.texts,{...text,key:newKey,edit:true,decalFreeze:false,hasApplied:false}];}));},updateIsMinimizedCustomiserNav:isMinimized=>{set(produce(state=>{state.isMinimizedCustomiserNav=isMinimized;}));},updateText:(key,text)=>{set(produce(state=>{state.texts=[...state.texts.map(f=>{if(f.key===key){var _updateText$basePrice,_updateText$basePrice2,_updateText$letterPri,_updateText$letterPri2,_updateText$outlinePr,_updateText$outlinePr2,_updateText$puffPrice,_updateText$puffPrice2,_updateText$crystalPr,_updateText$crystalPr2;const updateText={...f,...text};let letterPrice;if(updateText.letterPrice&&updateText.text){letterPrice=updateText.letterPrice;letterPrice.quantity=updateText.text.length;}const basePriceTotal=(_updateText$basePrice=updateText.basePrice)!==null&&_updateText$basePrice!==void 0&&_updateText$basePrice.price?updateText.basePrice.price*((_updateText$basePrice2=updateText.basePrice)===null||_updateText$basePrice2===void 0?void 0:_updateText$basePrice2.quantity):0;const letterPriceTotal=(_updateText$letterPri=updateText.letterPrice)!==null&&_updateText$letterPri!==void 0&&_updateText$letterPri.price?updateText.letterPrice.price*((_updateText$letterPri2=updateText.letterPrice)===null||_updateText$letterPri2===void 0?void 0:_updateText$letterPri2.quantity):0;const outlinePriceTotal=(_updateText$outlinePr=updateText.outlinePrice)!==null&&_updateText$outlinePr!==void 0&&_updateText$outlinePr.price?updateText.outlinePrice.price*((_updateText$outlinePr2=updateText.outlinePrice)===null||_updateText$outlinePr2===void 0?void 0:_updateText$outlinePr2.quantity):0;const puffPriceTotal=(_updateText$puffPrice=updateText.puffPrice)!==null&&_updateText$puffPrice!==void 0&&_updateText$puffPrice.price?updateText.puffPrice.price*((_updateText$puffPrice2=updateText.puffPrice)===null||_updateText$puffPrice2===void 0?void 0:_updateText$puffPrice2.quantity):0;const crystalPriceTotal=(_updateText$crystalPr=updateText.crystalPrice)!==null&&_updateText$crystalPr!==void 0&&_updateText$crystalPr.price?updateText.crystalPrice.price*((_updateText$crystalPr2=updateText.crystalPrice)===null||_updateText$crystalPr2===void 0?void 0:_updateText$crystalPr2.quantity):0;const totalPrice=basePriceTotal+letterPriceTotal+outlinePriceTotal+puffPriceTotal+crystalPriceTotal;return{...updateText,letterPrice,totalPrice};}return f;})];}));},deleteText:key=>{set(produce(state=>{state.texts=[...state.texts.filter(f=>f.key!==key)];}));},reset:()=>{set(state=>{useCustomiserStore.persist.clearStorage();return{...state,parts:[],savedParts:[],texts:[],flags:[],graphics:[],sizing:undefined};});},resetCustomerSelections:()=>{set(state=>{useCustomiserStore.persist.clearStorage();return{...state,parts:[],savedParts:[],texts:[],flags:[],graphics:[],sizing:undefined,selectedPart:null,selectedNav:null,selectedModels:[...get().selectedModels]};});}});export const useCustomiserStore=create()(devtools(persist(function(){return{...createCustomiser(...arguments)};},{name:'',onRehydrateStorage:()=>state=>{if(state){// if (state.selectedPart) {\n//   const partNavItem = state.navItems.find(\n//     (navItem) => navItem.id === state.selectedPart?.id,\n//   );\n//   if (partNavItem && partNavItem.index) {\n//     state.setSelectedNav(partNavItem.index);\n//   }\n// } else {\n//   state.selectedNav = null;\n// }\n}}})));","map":{"version":3,"names":["produce","v4","uuidv4","create","devtools","persist","UNIT","defaultMaterials","roughnessMap","normalMap","metalnessMap","displacementMap","map","aoMap","initialState","selectedModels","savedModels","selectedPart","navItems","selectedNav","parts","savedParts","flags","graphics","texts","variations","sizing","height","unit","HEIGHT","CM","weight","WEIGHT","KG","isMinimizedCustomiserNav","createCustomiser","set","get","designComplete","_get$sizing","isComplete","find","i","type","variation","requiredParts","filter","required","part","p","id","total","_get$sizing2","price","amount","Number","forEach","_part$part$areaSize$d","_part$part$areaSize","_part$part$areaSize$d2","_part$part$areaSize$d3","_part$material$attrib","_part$material$attrib2","_part$material$attrib3","_part$material$attrib4","_part$material$attrib5","priceAdjust","areaSize","data","attributes","material","sum","text","totalPrice","flag","_flag$basePrice","basePrice","toFixed","setCustomProduct","customProduct","shopifyProduct","_shopifyProduct$produ","_customProduct$attrib","dataToSet","product","variants","nodes","length","options","_customProduct$attrib2","_customProduct$attrib3","models","option","_option$models","_option$models$","_option$models$$model","model","_option$models$2","_option$models$2$mode","push","optionId","navFitting","name","hasActions","navParts","o","_o$id","_o$name","optional","navSize","navFlags","navImages","navNames","index","setCanvasSize","width","state","canvas","setSizing","size","title","setSelectedModel","m","setPart","findPart","removePart","setSelectedPart","setSelectedNav","save","navItem","n","_state$customProduct","_state$customProduct$","_state$customProduct$2","f","decalFreeze","edit","resetNav","cancelPartChange","texture","nodeId","materials","hex","_p$part$modelParts","_p$material","_p$material$attribute","test","modelParts","mp","_mp$attributes","indexOf","images","_p$material$attribute2","_p$material$attribute3","image","_image$image","_image$image$data","_image$image$data$att","mapType","url","_customProduct$attrib4","_customProduct$attrib5","isOptional","optionalParts","_part$modelParts","_mp$attributes2","_p$part$modelParts2","_mp$attributes3","tassels","_customProduct$attrib6","_customProduct$attrib7","isTassels","tasselParts","_part$modelParts2","_mp$attributes4","addFlag","_flag$key","newKey","key","updateFlag","deleteFlag","addGraphic","graphic","_graphic$key","updateGraphic","deleteGraphic","addText","_text$key","hasApplied","updateIsMinimizedCustomiserNav","isMinimized","updateText","_updateText$basePrice","_updateText$basePrice2","_updateText$letterPri","_updateText$letterPri2","_updateText$outlinePr","_updateText$outlinePr2","_updateText$puffPrice","_updateText$puffPrice2","_updateText$crystalPr","_updateText$crystalPr2","letterPrice","quantity","basePriceTotal","letterPriceTotal","outlinePriceTotal","outlinePrice","puffPriceTotal","puffPrice","crystalPriceTotal","crystalPrice","deleteText","reset","useCustomiserStore","clearStorage","undefined","resetCustomerSelections","arguments","onRehydrateStorage"],"sources":["C:/Users/Reian/Desktop/Work/Freelance/Boxxer World/boxxerworld-shopify-frontend/customiser/src/store/customiser.ts"],"sourcesContent":["//* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport type {\r\n  CustomProductFragment,\r\n  CustomProductPartFragment,\r\n  FlagFragment,\r\n  GraphicFragment,\r\n  MaterialFragment,\r\n  Maybe,\r\n  ModelFragment,\r\n  NameEntity,\r\n  Scalars,\r\n} from '@graphql/generated/graphql';\r\nimport {\r\n  ShopifyProductVariantFragment,\r\n  ShopifyShopifyGetProductByIdQuery,\r\n} from '@graphql/generated/graphql-shopify';\r\nimport { MaterialTextureModel } from '@models';\r\nimport produce from 'immer';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { create, StateCreator } from 'zustand';\r\nimport { devtools, persist } from 'zustand/middleware';\r\n\r\nimport { UNIT } from './constants';\r\nimport { Texture } from 'three';\r\ninterface SelectedModel {\r\n  optionId: Scalars['ID'];\r\n  model?: Maybe<ModelFragment>;\r\n}\r\n\r\ninterface Part {\r\n  part: CustomProductPartFragment;\r\n  material: MaterialFragment;\r\n}\r\n\r\nexport type Vector3Array = [number, number, number];\r\nexport type EulerArray = (string | number | undefined)[];\r\n\r\nexport interface FlagCustomiser {\r\n  key?: string;\r\n  flag?: FlagFragment;\r\n  decalPosition?: Vector3Array;\r\n  decalOrientation?: EulerArray;\r\n  decalRotation?: number;\r\n  decalScale?: number;\r\n  decalFreeze?: boolean;\r\n  edit?: boolean;\r\n  basePrice?: AddonPrice;\r\n  size?: string;\r\n}\r\n\r\nexport interface GraphicCustomiser {\r\n  key?: string;\r\n  graphic?: GraphicFragment;\r\n  decalPosition?: Vector3Array;\r\n  decalOrientation?: EulerArray;\r\n  decalRotation?: number;\r\n  decalScale?: number;\r\n  decalFreeze?: boolean;\r\n  edit?: boolean;\r\n  basePrice?: AddonPrice;\r\n  size?: string;\r\n}\r\n\r\ninterface AddonPrice {\r\n  price?: number;\r\n  quantity: number;\r\n  shopifyVariantId?: Maybe<Scalars['String']>;\r\n}\r\n\r\nexport interface TextCustomiser {\r\n  key?: string;\r\n  text?: string;\r\n  decalPosition?: Vector3Array;\r\n  decalOrientation?: EulerArray;\r\n  decalRotation?: number;\r\n  decalScale?: number;\r\n  decalFreeze?: boolean;\r\n  edit?: boolean;\r\n  hasApplied?: boolean;\r\n  font?: string;\r\n  material?: MaterialFragment;\r\n  outline?: MaterialFragment;\r\n  crystalBackground?: MaterialFragment;\r\n  nameType?: {\r\n    id?: Maybe<Scalars['ID']>;\r\n    name?: Maybe<Scalars['String']>;\r\n  };\r\n  selectedName?: NameEntity;\r\n  basePrice?: AddonPrice;\r\n  letterPrice?: AddonPrice;\r\n  outlinePrice?: AddonPrice;\r\n  puffPrice?: AddonPrice;\r\n  crystalPrice?: AddonPrice;\r\n  totalPrice?: number;\r\n  preview?: Texture;\r\n  normalMap?: Texture;\r\n  emissiveMap?: Texture;\r\n}\r\nexport interface NavItem {\r\n  id?: Scalars['ID'];\r\n  name: Maybe<Scalars['String']>;\r\n  type: 'option' | 'part' | 'fitting' | 'size' | 'flags' | 'names' | 'images';\r\n  index?: number;\r\n  required?: boolean;\r\n  hasActions?: boolean;\r\n}\r\ninterface SizingMeasurement {\r\n  value?: number;\r\n  unit?: string;\r\n}\r\nexport interface CustomiserState {\r\n  canvas?: {\r\n    width: number;\r\n    height: number;\r\n  };\r\n  customProduct?: CustomProductFragment;\r\n  selectedModels: SelectedModel[];\r\n  savedModels: SelectedModel[];\r\n  selectedPart: Maybe<CustomProductPartFragment>;\r\n  navItems: NavItem[];\r\n  selectedNav: Maybe<NavItem>;\r\n  parts: Part[];\r\n  savedParts: Part[];\r\n  flags: FlagCustomiser[];\r\n  graphics: GraphicCustomiser[];\r\n  texts: TextCustomiser[];\r\n  variations: Array<ShopifyProductVariantFragment>;\r\n  sizing?: {\r\n    height?: SizingMeasurement;\r\n    weight?: SizingMeasurement;\r\n    size?: string;\r\n    variation?: ShopifyProductVariantFragment;\r\n  };\r\n  isMinimizedCustomiserNav: boolean;\r\n}\r\n\r\nconst defaultMaterials = {\r\n  roughnessMap:\r\n    'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/satin_white_Roughness_31e017223f.jpg',\r\n  normalMap:\r\n    'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/satin_white_Normal_940f07492a.jpg',\r\n  metalnessMap:\r\n    'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/satin_white_Metallic_342d2f7f8a.jpg',\r\n  displacementMap:\r\n    'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/satin_white_Height_1fcbf95d0c.jpg',\r\n  map: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/satin_white_Base_Color_831f136312.jpg',\r\n  aoMap:\r\n    'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/satin_white_Ambient_Occlusion_426692f37f.jpg',\r\n};\r\n\r\nexport interface CustomiserActions {\r\n  total: () => string;\r\n  setSelectedModel: (optionId: Scalars['ID'], model?: Maybe<ModelFragment>) => void;\r\n  setCustomProduct: (\r\n    customProduct: CustomProductFragment,\r\n    shopifyProduct: ShopifyShopifyGetProductByIdQuery,\r\n  ) => void;\r\n  setSelectedPart: (data: CustomProductPartFragment) => void;\r\n  setPart: (part: CustomProductPartFragment, material: MaterialFragment) => void;\r\n  removePart: (part: CustomProductPartFragment) => void;\r\n  setSelectedNav: (index: number, save?: boolean) => void;\r\n  setCanvasSize: (width: number, height: number) => void;\r\n  setSizing: (\r\n    height?: SizingMeasurement,\r\n    weight?: SizingMeasurement,\r\n    variation?: ShopifyProductVariantFragment,\r\n  ) => void;\r\n  cancelPartChange: () => void;\r\n  addFlag: (flag: FlagCustomiser) => void;\r\n  updateFlag: (key: string, flag: FlagCustomiser) => void;\r\n  deleteFlag: (key: string) => void;\r\n  addGraphic: (graphic: GraphicCustomiser) => void;\r\n  updateGraphic: (key: string, graphic: GraphicCustomiser) => void;\r\n  deleteGraphic: (key: string) => void;\r\n  addText: (text: TextCustomiser) => void;\r\n  updateText: (key: string, text: TextCustomiser) => void;\r\n  deleteText: (key: string) => void;\r\n  resetNav: () => void;\r\n  texture: (nodeId: string) => {\r\n    id?: Maybe<Scalars['ID']>;\r\n    materials: MaterialTextureModel;\r\n    hex: string;\r\n  };\r\n  optional: (nodeId: string) => boolean;\r\n  tassels: (nodeId: string) => boolean;\r\n  reset: () => void;\r\n  resetCustomerSelections: () => void;\r\n  designComplete: () => boolean;\r\n  updateIsMinimizedCustomiserNav: (isMinimized: boolean) => void;\r\n}\r\n\r\nconst initialState: CustomiserState = {\r\n  selectedModels: [],\r\n  savedModels: [],\r\n  selectedPart: null,\r\n  navItems: [],\r\n  selectedNav: null,\r\n  parts: [],\r\n  savedParts: [],\r\n  flags: [],\r\n  graphics: [],\r\n  texts: [],\r\n  variations: [],\r\n  sizing: {\r\n    height: {\r\n      unit: UNIT.HEIGHT.CM,\r\n    },\r\n    weight: {\r\n      unit: UNIT.WEIGHT.KG,\r\n    },\r\n  },\r\n  isMinimizedCustomiserNav: false,\r\n};\r\n\r\nconst createCustomiser: StateCreator<\r\n  CustomiserState & CustomiserActions,\r\n  [['zustand/devtools', never], ['zustand/persist', unknown]],\r\n  []\r\n> = (set, get) => ({\r\n  ...initialState,\r\n  designComplete: () => {\r\n    const navItems = get().navItems;\r\n    let isComplete = true;\r\n\r\n    const sizing = navItems.find((i) => i.type === 'size');\r\n    if (sizing && !get().sizing?.variation) return false;\r\n\r\n    const requiredParts = navItems.filter((i) => i.type === 'part' && i.required);\r\n    for (const part of requiredParts) {\r\n      if (!get().savedParts.find((p) => p.part.id === part.id)) {\r\n        isComplete = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return isComplete;\r\n  },\r\n  total: () => {\r\n    let total = 0;\r\n    const variation = get().sizing?.variation;\r\n    if (variation?.price.amount) {\r\n      total = total + Number(variation.price.amount);\r\n    }\r\n\r\n    get().parts.forEach((part) => {\r\n      const priceAdjust = part.part.areaSize?.data?.attributes?.priceAdjust ?? 1;\r\n      const price = part.material.attributes?.price?.data?.attributes?.price ?? 0;\r\n      const sum = priceAdjust * price;\r\n      total = total + sum;\r\n    });\r\n\r\n    get().texts.forEach((text) => {\r\n      if (text.totalPrice) {\r\n        total = total + text.totalPrice;\r\n      }\r\n    });\r\n\r\n    get().flags.forEach((flag) => {\r\n      if (flag.basePrice?.price) {\r\n        total = total + flag.basePrice.price;\r\n      }\r\n    });\r\n\r\n    return total.toFixed(2);\r\n  },\r\n  setCustomProduct: (customProduct, shopifyProduct) => {\r\n    let dataToSet: {\r\n      customProduct: CustomProductFragment;\r\n      selectedModels?: SelectedModel[];\r\n      savedModels?: SelectedModel[];\r\n      navItems?: NavItem[];\r\n      selectedNav?: NavItem;\r\n      variations?: Array<ShopifyProductVariantFragment>;\r\n    } = {\r\n      customProduct,\r\n      variations: shopifyProduct.product?.variants.nodes,\r\n    };\r\n\r\n    if (!get().selectedModels.length && customProduct.attributes?.options) {\r\n      const models: SelectedModel[] = [];\r\n      customProduct.attributes.options.forEach((option) => {\r\n        if (option?.models?.length && option?.models[0]?.model?.data) {\r\n          models.push({ optionId: option.id, model: option?.models[0]?.model?.data });\r\n        }\r\n      });\r\n\r\n      const navFitting: NavItem = {\r\n        name: 'Fitting',\r\n        type: 'fitting',\r\n        required: true,\r\n        hasActions: true,\r\n      };\r\n\r\n      const navParts: NavItem[] =\r\n        customProduct.attributes.parts?.map((o) => ({\r\n          id: o?.id ?? '',\r\n          name: o?.name ?? '',\r\n          type: 'part',\r\n          required: !o?.optional,\r\n          hasActions: true,\r\n        })) ?? [];\r\n\r\n      const navSize: NavItem = {\r\n        name: 'Size',\r\n        type: 'size',\r\n        required: true,\r\n        hasActions: true,\r\n      };\r\n\r\n      const navFlags: NavItem = {\r\n        name: 'Flags',\r\n        type: 'flags',\r\n        hasActions: true,\r\n      };\r\n\r\n      const navImages: NavItem = {\r\n        name: 'Images',\r\n        type: 'images',\r\n        hasActions: true,\r\n      };\r\n\r\n      const navNames: NavItem = {\r\n        name: 'Text',\r\n        type: 'names',\r\n        hasActions: true,\r\n      };\r\n\r\n      const navItems = [navFitting, ...navParts, navNames, navFlags, navImages, navSize].map(\r\n        (i, index) => {\r\n          i.index = index;\r\n          return i;\r\n        },\r\n      );\r\n\r\n      dataToSet = {\r\n        ...dataToSet,\r\n        selectedModels: models,\r\n        savedModels: models,\r\n        navItems: navItems,\r\n      };\r\n    }\r\n\r\n    set(dataToSet);\r\n  },\r\n  setCanvasSize: (width, height) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        state.canvas = { width, height };\r\n      }),\r\n    );\r\n  },\r\n  setSizing: (height, weight, variation) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        if (height) {\r\n          state.sizing = { ...state.sizing, height };\r\n        }\r\n        if (weight) {\r\n          state.sizing = { ...state.sizing, weight };\r\n        }\r\n        if (variation) {\r\n          state.sizing = { ...state.sizing, variation, size: variation.title };\r\n        }\r\n      }),\r\n    );\r\n  },\r\n  setSelectedModel: (id, model) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        const option = state.selectedModels.find((m) => m.optionId === id);\r\n\r\n        if (option) {\r\n          option.model = model;\r\n        }\r\n      }),\r\n    );\r\n  },\r\n  setPart: (part, material) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        const findPart = state.parts.find((p) => p.part.id === part.id);\r\n        if (findPart) {\r\n          findPart.material = material;\r\n        } else {\r\n          state.parts.push({ part, material });\r\n        }\r\n      }),\r\n    );\r\n  },\r\n  removePart: (part) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        state.parts = state.parts.filter((p) => p.part.id !== part.id);\r\n        state.savedParts = state.savedParts.filter((p) => p.part.id !== part.id);\r\n      }),\r\n    );\r\n  },\r\n  setSelectedPart: (data) => set({ selectedPart: data }),\r\n  setSelectedNav: (index, save) =>\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        const navItem = state.navItems.find((n) => n.index === index);\r\n\r\n        if (navItem) {\r\n          state.selectedNav = navItem;\r\n\r\n          if (navItem.type === 'part') {\r\n            const part = state.customProduct?.attributes?.parts?.find((o) => o?.id === navItem.id);\r\n            if (part) {\r\n              state.selectedPart = part;\r\n            }\r\n          } else {\r\n            state.selectedPart = null;\r\n          }\r\n        }\r\n\r\n        state.savedParts = state.parts;\r\n        state.savedModels = state.selectedModels;\r\n\r\n        state.flags = state.flags.map((f) => {\r\n          f.decalFreeze = false;\r\n          f.edit = false;\r\n          return f;\r\n        });\r\n\r\n        state.texts = state.texts.map((f) => {\r\n          f.decalFreeze = false;\r\n          f.edit = false;\r\n          return f;\r\n        });\r\n\r\n        state.graphics = state.graphics.map((f) => {\r\n          f.decalFreeze = false;\r\n          f.edit = false;\r\n          return f;\r\n        });\r\n      }),\r\n    ),\r\n  resetNav: () => set({ selectedPart: null, selectedNav: null }),\r\n  cancelPartChange: () =>\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        state.parts = state.savedParts;\r\n        state.selectedModels = state.savedModels;\r\n        state.selectedPart = null;\r\n        state.selectedNav = null;\r\n      }),\r\n    ),\r\n  texture: (nodeId) => {\r\n    const parts = get().parts;\r\n    let materials: MaterialTextureModel = {};\r\n    let hex = '';\r\n    let id;\r\n    for (const p of parts) {\r\n      const test = p.part.modelParts?.data.map((mp) => mp?.attributes?.nodeId).indexOf(nodeId);\r\n      if (test != -1 && p?.material?.attributes?.images) {\r\n        hex = p.material.attributes.hex ?? '';\r\n        id = p.material.id;\r\n        p.material.attributes.images?.forEach((image) => {\r\n          materials = {\r\n            ...materials,\r\n            [image?.mapType as string]: image?.image?.data?.attributes?.url as string,\r\n          };\r\n        });\r\n\r\n        break;\r\n      }\r\n    }\r\n    return {\r\n      id,\r\n      materials: {\r\n        // default values\r\n        // Possible improvement would be to get these values from the Material Group Store if that's possible\r\n        ...defaultMaterials,\r\n        // custom values\r\n        ...materials,\r\n      },\r\n      hex,\r\n    };\r\n  },\r\n  optional: (nodeId) => {\r\n    let isOptional = false;\r\n    const parts = get().parts;\r\n    const customProduct = get().customProduct;\r\n    if (customProduct?.attributes?.parts?.length) {\r\n      const optionalParts = customProduct.attributes.parts.filter((p) => p?.optional);\r\n      for (const part of optionalParts) {\r\n        const test = part?.modelParts?.data.map((mp) => mp?.attributes?.nodeId).indexOf(nodeId);\r\n        if (test != -1) {\r\n          isOptional = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const p of parts) {\r\n      const test = p.part.modelParts?.data.map((mp) => mp?.attributes?.nodeId).indexOf(nodeId);\r\n      if (test != -1) {\r\n        isOptional = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return isOptional;\r\n  },\r\n  tassels: (nodeId) => {\r\n    let isTassels = false;\r\n    const customProduct = get().customProduct;\r\n    if (customProduct?.attributes?.parts?.length) {\r\n      const tasselParts = customProduct.attributes.parts.filter((p) => p?.tassels);\r\n      for (const part of tasselParts) {\r\n        const test = part?.modelParts?.data.map((mp) => mp?.attributes?.nodeId).indexOf(nodeId);\r\n        if (test != -1) {\r\n          isTassels = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return isTassels;\r\n  },\r\n  addFlag: (flag) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        const newKey = flag.key ?? uuidv4();\r\n        state.flags = [...state.flags, { ...flag, key: newKey, edit: true, decalFreeze: false }];\r\n      }),\r\n    );\r\n  },\r\n  updateFlag: (key, flag) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        state.flags = [\r\n          ...state.flags.map((f) => {\r\n            if (f.key === key) {\r\n              return { ...f, ...flag };\r\n            }\r\n            return f;\r\n          }),\r\n        ];\r\n      }),\r\n    );\r\n  },\r\n  deleteFlag: (key) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        state.flags = [...state.flags.filter((f) => f.key !== key)];\r\n      }),\r\n    );\r\n  },\r\n  addGraphic: (graphic) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        const newKey = graphic.key ?? uuidv4();\r\n        state.graphics = [\r\n          ...state.graphics,\r\n          { ...graphic, key: newKey, edit: true, decalFreeze: false },\r\n        ];\r\n      }),\r\n    );\r\n  },\r\n  updateGraphic: (key, graphic) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        state.graphics = [\r\n          ...state.graphics.map((f) => {\r\n            if (f.key === key) {\r\n              return { ...f, ...graphic };\r\n            }\r\n            return f;\r\n          }),\r\n        ];\r\n      }),\r\n    );\r\n  },\r\n  deleteGraphic: (key) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        state.graphics = [...state.graphics.filter((f) => f.key !== key)];\r\n      }),\r\n    );\r\n  },\r\n  addText: (text) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        const newKey = text.key ?? uuidv4();\r\n        state.texts = [\r\n          ...state.texts,\r\n          { ...text, key: newKey, edit: true, decalFreeze: false, hasApplied: false },\r\n        ];\r\n      }),\r\n    );\r\n  },\r\n  updateIsMinimizedCustomiserNav: (isMinimized: boolean) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        state.isMinimizedCustomiserNav = isMinimized;\r\n      }),\r\n    );\r\n  },\r\n  updateText: (key, text) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        state.texts = [\r\n          ...state.texts.map((f) => {\r\n            if (f.key === key) {\r\n              const updateText = { ...f, ...text };\r\n              let letterPrice;\r\n              if (updateText.letterPrice && updateText.text) {\r\n                letterPrice = updateText.letterPrice;\r\n                letterPrice.quantity = updateText.text.length;\r\n              }\r\n              const basePriceTotal = updateText.basePrice?.price\r\n                ? updateText.basePrice.price * updateText.basePrice?.quantity\r\n                : 0;\r\n              const letterPriceTotal = updateText.letterPrice?.price\r\n                ? updateText.letterPrice.price * updateText.letterPrice?.quantity\r\n                : 0;\r\n              const outlinePriceTotal = updateText.outlinePrice?.price\r\n                ? updateText.outlinePrice.price * updateText.outlinePrice?.quantity\r\n                : 0;\r\n              const puffPriceTotal = updateText.puffPrice?.price\r\n                ? updateText.puffPrice.price * updateText.puffPrice?.quantity\r\n                : 0;\r\n              const crystalPriceTotal = updateText.crystalPrice?.price\r\n                ? updateText.crystalPrice.price * updateText.crystalPrice?.quantity\r\n                : 0;\r\n              const totalPrice =\r\n                basePriceTotal +\r\n                letterPriceTotal +\r\n                outlinePriceTotal +\r\n                puffPriceTotal +\r\n                crystalPriceTotal;\r\n              return { ...updateText, letterPrice, totalPrice };\r\n            }\r\n            return f;\r\n          }),\r\n        ];\r\n      }),\r\n    );\r\n  },\r\n  deleteText: (key) => {\r\n    set(\r\n      produce((state: CustomiserState) => {\r\n        state.texts = [...state.texts.filter((f) => f.key !== key)];\r\n      }),\r\n    );\r\n  },\r\n  reset: () => {\r\n    set((state) => {\r\n      useCustomiserStore.persist.clearStorage();\r\n      return {\r\n        ...state,\r\n        parts: [],\r\n        savedParts: [],\r\n        texts: [],\r\n        flags: [],\r\n        graphics: [],\r\n        sizing: undefined,\r\n      };\r\n    });\r\n  },\r\n  resetCustomerSelections: () => {\r\n    set((state) => {\r\n      useCustomiserStore.persist.clearStorage();\r\n      return {\r\n        ...state,\r\n        parts: [],\r\n        savedParts: [],\r\n        texts: [],\r\n        flags: [],\r\n        graphics: [],\r\n        sizing: undefined,\r\n        selectedPart: null,\r\n        selectedNav: null,\r\n        selectedModels: [...get().selectedModels],\r\n      };\r\n    });\r\n  },\r\n});\r\n\r\nexport const useCustomiserStore = create<CustomiserState & CustomiserActions>()(\r\n  devtools(\r\n    persist(\r\n      (...a) => ({\r\n        ...createCustomiser(...a),\r\n      }),\r\n      {\r\n        name: '',\r\n        onRehydrateStorage: () => (state) => {\r\n          if (state) {\r\n            // if (state.selectedPart) {\r\n            //   const partNavItem = state.navItems.find(\r\n            //     (navItem) => navItem.id === state.selectedPart?.id,\r\n            //   );\r\n            //   if (partNavItem && partNavItem.index) {\r\n            //     state.setSelectedNav(partNavItem.index);\r\n            //   }\r\n            // } else {\r\n            //   state.selectedNav = null;\r\n            // }\r\n          }\r\n        },\r\n      },\r\n    ),\r\n  ),\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}