{"version":3,"file":"static/js/296.e09e78f8.chunk.js","mappings":"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","sources":["webpack://boxxerworld-customiser/./src/components/ui/OptionButton/OptionButton.module.scss?2035","components/ui/OptionButton/OptionButton.tsx","hooks/usePortalRef/usePortalRef.ts","webpack://boxxerworld-customiser/./src/components/nav/NavButtons/NavButtons.module.scss?b4ae","webpack://boxxerworld-customiser/./src/components/ui/DontShowAgain/DontShowAgain.module.scss?2c56","components/ui/DontShowAgain/DontShowAgain.tsx","components/ui/Button/ContainedButton.tsx","components/nav/NavButtons/NavButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFitting/NavFitting.module.scss?96df","components/nav/NavFitting/NavFitting.tsx","components/ui/Image/getSrcSets.ts","webpack://boxxerworld-customiser/./src/components/ui/Image/Image.module.scss?e41e","components/ui/Image/Image.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavFlags/NavFlags.module.scss?2098","components/nav/NavFlags/NavFlagsSelect.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavDecalAdjust/NavDecalAdjust.module.scss?c425","components/nav/NavDecalAdjust/NavDecalAdjust.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavEditButtons/NavEditButtons.module.scss?6ae0","components/nav/NavEditButtons/NavEditButtons.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavOptionEdit/NavOptionEdit.module.scss?d15e","components/nav/NavOptionEdit/NavOptionEdit.tsx","components/nav/NavFlags/NavFlagsFlag.tsx","components/nav/NavFlags/NavFlags.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavHeader/NavHeader.module.scss?a403","webpack://boxxerworld-customiser/./src/components/ui/InfoButton/InfoButton.module.scss?0cd7","components/ui/InfoButton/InfoDisplay.tsx","components/ui/InfoButton/InfoButton.tsx","components/nav/NavHeader/NavHeader.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavImages/NavImages.module.scss?0415","components/nav/NavImages/NavImagesImage.tsx","components/nav/NavImages/NavImagesUpload.tsx","components/nav/NavImages/NavImagesSelect.tsx","components/nav/NavImages/NavImages.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavOptions/NavOptions.module.scss?6b01","components/nav/NavOptions/NavOptions.tsx","webpack://boxxerworld-customiser/./src/components/ui/PillButton/PillButton.module.scss?5c47","components/ui/PillButton/PillButton.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/MaterialGroup.module.scss?bec8","components/nav/MaterialGroup/MaterialGroupState.ts","components/nav/MaterialGroup/Material.tsx","components/nav/MaterialGroup/MaterialType.tsx","webpack://boxxerworld-customiser/./src/components/nav/MaterialGroup/SelectedMaterialInfo.module.scss?ad46","components/nav/MaterialGroup/SelectedMaterialInfo.tsx","components/nav/MaterialGroup/MaterialGroup.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavPart/NavPart.module.scss?e3f3","components/nav/NavPart/NavPart.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormInput/FormInput.module.scss?a3cb","components/ui/FormInput/FormInput.tsx","webpack://boxxerworld-customiser/./src/components/ui/FormSelect/FormSelect.module.scss?5df1","components/ui/FormSelect/FormSelect.tsx","services/size.ts","webpack://boxxerworld-customiser/./src/components/nav/NavSize/NavSize.module.scss?68ae","components/nav/NavSize/NavSize.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavText.module.scss?7ead","components/ui/Price/Price.module.scss","components/ui/Price/Price.tsx","components/nav/NavText/NavTextFinish.tsx","components/nav/NavText/NavTextNameTypes.tsx","components/nav/NavText/NavTextOutline.tsx","components/nav/NavText/NavTextSelect.tsx","components/nav/NavText/NavTextText.tsx","components/nav/NavText/NavTextsSelection.tsx","lib/canvas.ts","lib/img.util.ts","webpack://boxxerworld-customiser/./src/components/three/CustomiserCanvas/NavTextScene.module.scss?f04f","components/three/CustomiserCanvas/NavTextScene.tsx","components/nav/NavText/NavTextPreview.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavTextCategories.module.scss?c8c9","components/nav/NavText/NavTextCategories.tsx","components/ui/Button/NextStepButton.tsx","components/ui/Button/PrevStepButton.tsx","webpack://boxxerworld-customiser/./src/components/nav/NavText/NavTextNavSteps.module.scss?13e7","components/ui/Button/CancelStepButton.tsx","components/ui/Button/ApplyButton.tsx","components/nav/NavText/NavTextNavSteps.tsx","components/nav/NavText/NavTextInput.tsx","components/nav/NavText/NavText.tsx","webpack://boxxerworld-customiser/./src/components/nav/CustomiserNav/CustomiserNav.module.scss?394a","components/nav/NavHeader/NavHeaderScroll.tsx","components/nav/CustomiserNav/CustomiserNav.tsx","webpack://boxxerworld-customiser/./src/components/layout/Header/Header.module.scss?47aa","components/layout/Header/Header.tsx","webpack://boxxerworld-customiser/./src/components/layout/Customiser/Customiser.module.scss?e94f","components/layout/Customiser/Customiser.tsx","lib/shopify.ts","components/three/Loadable/Loadable.tsx","components/three/MouseHelper/MouseHelper.tsx","webpack://boxxerworld-customiser/./src/components/three/CustomiserCanvas/CustomiserCanvas.module.scss?7972","components/three/CustomiserCanvas/CustomiserCanvas.tsx","components/three/Lights/Lights.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OptionButton_root__M63xT\",\"selected\":\"OptionButton_selected__Mea42\"};","import cn from 'classnames';\r\nimport { ButtonHTMLAttributes } from 'react';\r\n\r\nimport styles from './OptionButton.module.scss';\r\n\r\nexport interface OptionButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  className?: string;\r\n  selected?: boolean;\r\n}\r\n\r\nconst OptionButton = ({ className, selected, children, ...rest }: OptionButtonProps) => {\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      [styles.selected]: selected,\r\n    },\r\n    className,\r\n  );\r\n  return (\r\n    <button className={rootClassName} {...rest}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default OptionButton;\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nexport const usePortalRef = (id: string) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const portalRef = useRef<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) {\r\n      portalRef.current = document.getElementById(id);\r\n      if (portalRef.current) {\r\n        setLoaded(true);\r\n      }\r\n    }\r\n  }, [id, loaded]);\r\n\r\n  return loaded ? portalRef.current : null;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavButtons_root__ON-jJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"DontShowAgain_root__zOI6r\",\"notifContainer\":\"DontShowAgain_notifContainer__adaGf\",\"notifControlContainer\":\"DontShowAgain_notifControlContainer__gVQq0\",\"btnContainer\":\"DontShowAgain_btnContainer__We3vg\"};","import React, { useState, useEffect } from 'react';\r\nimport styles from './DontShowAgain.module.scss';\r\n\r\nconst DontShowAgain = ({\r\n  children,\r\n  notifName = 'hideShowNotification',\r\n  setShowNotification,\r\n  cb,\r\n}: {\r\n  children: React.ReactNode;\r\n  notifName: string;\r\n  setShowNotification: React.Dispatch<React.SetStateAction<boolean>>;\r\n  cb?: () => void;\r\n}) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const handleDismiss = () => {\r\n    setShowNotification(false);\r\n    if (isChecked) {\r\n      localStorage.setItem(notifName, '1');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.root}>\r\n        <span className={styles.notifContainer}>\r\n          {children}\r\n          <div className={styles.notifControlContainer}>\r\n            <label>\r\n              <input type='checkbox' onChange={(e) => setIsChecked(e.target.checked)} />\r\n              Don&apos;t show again\r\n            </label>\r\n            <span className={styles.btnContainer}>\r\n              <button onClick={handleDismiss}>Cancel</button>\r\n              <button\r\n                onClick={() => {\r\n                  handleDismiss();\r\n                  cb && cb();\r\n                }}\r\n              >\r\n                Okay\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DontShowAgain;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface ContainedButtonProps {\r\n  onClick?: () => void;\r\n  isClickable?: boolean;\r\n  classNames?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ContainedButton = ({ onClick, isClickable, classNames, children }: ContainedButtonProps) => {\r\n  const buttonClassNames = `\r\n      ${styles.containedButton}\r\n      ${classNames}\r\n      ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    `;\r\n  return (\r\n    <button className={buttonClassNames} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ContainedButton;\r\n","import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavButtons.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\nimport DontShowAgain from '../../ui/DontShowAgain';\r\nimport { useState } from 'react';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\nexport interface NavButtonsProps {\r\n  className?: string;\r\n  confirmText?: string | Falsey;\r\n  confirmStorage?: string;\r\n}\r\n\r\nconst NavButtons = ({ className, confirmText, confirmStorage }: NavButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const cancelPartChange = useCustomiserStore((state) => state.cancelPartChange);\r\n  const resetNav = useCustomiserStore((state) => state.resetNav);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  const popupPortalRef = usePortalRef('popupContainer');\r\n  const [showPopup, setShowPopup] = useState<boolean>(false);\r\n\r\n  const notifTitle = confirmStorage;\r\n  const localStorageItem = localStorage.getItem(notifTitle || '');\r\n  const shouldShowNotification = !localStorageItem;\r\n\r\n  if (!portalRef || !popupPortalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className={rootClassName}>\r\n        <ContainedButton onClick={() => cancelPartChange()}>Cancel</ContainedButton>\r\n        <ContainedButton\r\n          onClick={() => {\r\n            if (!confirmText) {\r\n              resetNav();\r\n            } else {\r\n              if (shouldShowNotification) {\r\n                setShowPopup(true);\r\n              } else {\r\n                resetNav();\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          Save\r\n        </ContainedButton>\r\n      </div>\r\n      {confirmText &&\r\n        showPopup &&\r\n        shouldShowNotification &&\r\n        notifTitle &&\r\n        ReactDOM.createPortal(\r\n          <DontShowAgain cb={resetNav} setShowNotification={setShowPopup} notifName={notifTitle}>\r\n            <span>{confirmText}</span>\r\n          </DontShowAgain>,\r\n          popupPortalRef,\r\n        )}\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"fittingOption\":\"NavFitting_fittingOption__XQUUG\",\"fittingButtons\":\"NavFitting_fittingButtons__Y1hdd\"};","import OptionButton from '@components/ui/OptionButton';\r\nimport { CustomProductOptionFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { motion } from 'framer-motion';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavFitting.module.scss';\r\nimport { FocusCameraOnPart } from '@components/layout/Customiser/Customiser';\r\n\r\nexport interface FittingOptionProps {\r\n  option: CustomProductOptionFragment;\r\n  focusCameraOnPart?: FocusCameraOnPart;\r\n}\r\n\r\nconst FittingOption = ({ option, focusCameraOnPart }: FittingOptionProps) => {\r\n  const selectedModels = useCustomiserStore((state) => state.selectedModels);\r\n  const setSelectedModel = useCustomiserStore((state) => state.setSelectedModel);\r\n\r\n  if (!option) {\r\n    return null;\r\n  }\r\n\r\n  const getSelected = selectedModels.find((m) => m.optionId === option.id)?.model;\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={styles.fittingOption}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <h3>{option.name}</h3>\r\n        <div className={styles.fittingButtons}>\r\n          {option.models?.map((m) => (\r\n            <OptionButton\r\n              key={m?.id}\r\n              selected={getSelected?.id === m?.model?.data?.id}\r\n              onClick={() => {\r\n                setSelectedModel(option.id, m?.model?.data);\r\n                focusCameraOnPart && focusCameraOnPart(option.name);\r\n              }}\r\n            >\r\n              {m?.model?.data?.attributes?.name}\r\n            </OptionButton>\r\n          ))}\r\n        </div>\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface NavFittingProps {\r\n  focusCameraOnPart?: FocusCameraOnPart;\r\n}\r\nconst NavFitting = ({ focusCameraOnPart }: NavFittingProps) => {\r\n  const fittingOptions = useCustomiserStore(\r\n    (state) => state.customProduct?.attributes?.options,\r\n  ) as Array<CustomProductOptionFragment>;\r\n\r\n  return (\r\n    <>\r\n      {fittingOptions?.map((o) => (\r\n        <FittingOption focusCameraOnPart={focusCameraOnPart} key={o?.id} option={o} />\r\n      ))}\r\n      <NavButtons />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavFitting;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Formats } from './types';\r\n\r\nfunction getSrcSet(formats: Formats): string | null {\r\n  if (!formats) return null;\r\n\r\n  const fff = Object.entries(formats)\r\n    .map((f) => {\r\n      return f[1]\r\n        ? {\r\n            width: f[1].width,\r\n            url: f[1].url,\r\n          }\r\n        : null;\r\n    })\r\n    .filter((format) => format);\r\n\r\n  return !fff.length\r\n    ? null\r\n    : fff\r\n        .sort((a, b) => {\r\n          if (a?.width && b?.width && a.width < b.width) return -1;\r\n          if (a?.width && b?.width && a.width > b.width) return 1;\r\n          return 0;\r\n        })\r\n        .reduce((acc: any, current: any, index: number, array: any) => {\r\n          return acc + `${current.url} ${current.width}w${index < array.length - 1 ? ', ' : ''}`;\r\n        }, '');\r\n}\r\n\r\nexport default function getSrcSets(formats: Formats): string | null {\r\n  return getSrcSet(formats);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Image_root__u7aDb\"};","import { ImageFragment, Maybe } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { CSSProperties, useMemo } from 'react';\r\nimport getSrcSets from './getSrcSets';\r\n\r\nimport styles from './Image.module.scss';\r\n\r\nexport interface ImageProps {\r\n  className?: string;\r\n  image?: Maybe<ImageFragment>;\r\n  sizes?: string;\r\n}\r\n\r\nconst Image = ({ className, image, sizes }: ImageProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  if (!image) {\r\n    return null;\r\n  }\r\n\r\n  const relativeHeight = useMemo(() => {\r\n    if (image.attributes?.height && image.attributes?.width) {\r\n      return (image.attributes.height / image.attributes.width) * 100;\r\n    }\r\n    return 100;\r\n  }, [image]);\r\n\r\n  const style = { '--image-padding-top': `${relativeHeight}%` } as CSSProperties;\r\n\r\n  const srcSet = useMemo(() => getSrcSets(image.attributes?.formats), [image]);\r\n\r\n  return (\r\n    <div className={rootClassName} style={style}>\r\n      {srcSet && (\r\n        <img src={image.attributes?.url} srcSet={srcSet} sizes={sizes ? sizes : '100vw'} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"flags\":\"NavFlags_flags__S52CT\",\"flag\":\"NavFlags_flag__gtrVs\",\"flagItem\":\"NavFlags_flagItem__rI7sv\",\"flagItemImage\":\"NavFlags_flagItemImage__6ov2x\"};","import Image from '@components/ui/Image';\r\nimport { FlagFragment } from '@graphql/generated/graphql';\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\n\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsSelectProps {\r\n  editFlag?: FlagCustomiser;\r\n  flags: FlagFragment[];\r\n}\r\n\r\nexport const NavFlagsSelect = ({ editFlag, flags }: NavFlagsSelectProps) => {\r\n  const { addFlag, updateFlag } = useCustomiserStore((state) => state);\r\n\r\n  const flagSelected = (flag: FlagFragment) => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        flag: flag,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addFlag({\r\n        flag: flag,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flags}>\r\n      {flags?.map((f) => (\r\n        <div className={styles.flag} key={f.id} onClick={() => flagSelected(f)}>\r\n          <Image image={f.attributes?.image.data} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavDecalAdjust_root__t6vBt\",\"root__rotate\":\"NavDecalAdjust_root__rotate__jXeZv\",\"rotate\":\"NavDecalAdjust_rotate__adO98\",\"scale\":\"NavDecalAdjust_scale__gq4ry\",\"iconContainer\":\"NavDecalAdjust_iconContainer__nW-8U\",\"rotateIcon\":\"NavDecalAdjust_rotateIcon__fOqK4\",\"adjustControls\":\"NavDecalAdjust_adjustControls__ioLx3\"};","/* eslint-disable react/prop-types */\r\nimport { GraphicPriceEntity, GraphicPriceFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport ReactSlider from 'react-slider';\r\nimport styles from './NavDecalAdjust.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\nimport { FaCircleMinus, FaCirclePlus } from 'react-icons/fa6';\r\nimport { useState } from 'react';\r\n\r\nimport { GiClockwiseRotation, GiAnticlockwiseRotation } from 'react-icons/gi';\r\n\r\nexport interface NavDecalAdjustProps {\r\n  className?: string;\r\n  prices?: GraphicPriceFragment[];\r\n  scale?: number;\r\n  rotation?: number;\r\n  onScale?: (event: number, price?: GraphicPriceEntity) => void;\r\n  onRotate?: (event: number) => void;\r\n}\r\n\r\nconst range = (start: number, stop: number, step: number) =>\r\n  Array.from({ length: (stop - start) / step + 1 }, (value, index) => start + index * step);\r\n\r\nconst NavDecalAdjust = ({\r\n  className,\r\n  scale = 1,\r\n  rotation = 0,\r\n  prices,\r\n  onScale,\r\n  onRotate,\r\n}: NavDecalAdjustProps) => {\r\n  const scaleAdjust = 0.15;\r\n  const rotateAdjust = 7.5;\r\n  const portalRef = usePortalRef('CustomiserCanvasControls');\r\n\r\n  const [currentScale, setCurrentScale] = useState(scale);\r\n  const [currentRotate, setCurrentRotate] = useState(rotation);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  const rootRotateClassName = cn(styles.root, className, styles.root__rotate);\r\n  const min = 1;\r\n  const max = 2;\r\n  const numberOfSteps = prices?.length ?? 10;\r\n  const step = (max - min) / (numberOfSteps - 1);\r\n  const marks = range(min, max, step);\r\n\r\n  const formattedPrices = prices?.map((p, i) => ({\r\n    ...p,\r\n    markKey: Number(marks[i].toFixed(5)),\r\n  }));\r\n\r\n  const onChange = (value: number) => {\r\n    const price = formattedPrices?.find((p) => p.markKey === value);\r\n    if (onScale) onScale(value, price);\r\n  };\r\n\r\n  const addScale = () => {\r\n    setCurrentScale((cur) => {\r\n      onScale && onScale(cur + scaleAdjust);\r\n      return cur + scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const subtractScale = () => {\r\n    setCurrentScale((cur) => {\r\n      if (cur - scaleAdjust <= 0) return cur;\r\n      onScale && onScale(cur - scaleAdjust);\r\n      return cur - scaleAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur - rotateAdjust);\r\n      return cur - rotateAdjust;\r\n    });\r\n  };\r\n\r\n  const rotateCounterClockwise = () => {\r\n    setCurrentRotate((cur) => {\r\n      onRotate && onRotate(cur + rotateAdjust);\r\n      return cur + rotateAdjust;\r\n    });\r\n  };\r\n\r\n  return createPortal(\r\n    <>\r\n      <div className={rootRotateClassName}>\r\n        <span>\r\n          <h4>Size</h4>\r\n          <span className={styles.iconContainer}>\r\n            <span onClick={subtractScale}>\r\n              <FaCircleMinus />\r\n            </span>\r\n            <span onClick={addScale}>\r\n              <FaCirclePlus />\r\n            </span>\r\n          </span>\r\n        </span>\r\n        <span>\r\n          <h4>Rotate</h4>\r\n          <span className={styles.iconContainer}>\r\n            <span className={styles.rotateIcon} onClick={rotateCounterClockwise}>\r\n              <GiAnticlockwiseRotation />\r\n            </span>\r\n            <span className={styles.rotateIcon} onClick={rotateClockwise}>\r\n              <GiClockwiseRotation />\r\n            </span>\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavDecalAdjust;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavEditButtons_root__43Hm3\"};","import Button from '@components/ui/Button';\r\nimport { usePortalRef } from '@hooks';\r\nimport cn from 'classnames';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport styles from './NavEditButtons.module.scss';\r\n\r\nexport interface NavEditButtonsProps {\r\n  className?: string;\r\n  onApply?: () => void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst NavEditButtons = ({ className, disabled, onApply }: NavEditButtonsProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={rootClassName}>\r\n      <Button onClick={onApply}>Cancel</Button>\r\n      <Button colour='red' onClick={onApply} disabled={disabled}>\r\n        Save\r\n      </Button>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavEditButtons;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavOptionEdit_root__q-pp0\",\"eyeIcon\":\"NavOptionEdit_eyeIcon__v85fP\"};","import cn from 'classnames';\r\n\r\nimport styles from './NavOptionEdit.module.scss';\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa6';\r\nimport { MouseEventHandler } from 'react';\r\n\r\nexport interface NavOptionEditProps {\r\n  className?: string;\r\n  onEdit?: () => void;\r\n  onDelete?: () => void;\r\n  isVisible?: boolean;\r\n  toggleVisibility?: () => void;\r\n}\r\n\r\nconst NavOptionEdit = ({\r\n  className,\r\n  onEdit,\r\n  onDelete,\r\n  isVisible = true,\r\n  toggleVisibility,\r\n}: NavOptionEditProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const isVisibleEye = typeof isVisible === undefined ? true : isVisible;\r\n\r\n  const handleIsVisible: MouseEventHandler<HTMLSpanElement> = (event) => {\r\n    event.stopPropagation();\r\n    toggleVisibility && toggleVisibility();\r\n  };\r\n  return (\r\n    <div className={rootClassName}>\r\n      <span onClick={handleIsVisible} className={styles.eyeIcon}>\r\n        {isVisibleEye ? <FaEye /> : <FaEyeSlash />}\r\n      </span>\r\n      <button onClick={onEdit}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24.785 24.788'>\r\n          <path d='M24.785 6.739 18.046 0 0 18.049v6.739h6.739Zm-6.738-3.218 3.218 3.218-1.351 1.352-3.217-3.218Zm-3.112 3.112 3.218 3.218L7.467 20.538l-3.218-3.22ZM2.489 22.298v-3.219l3.218 3.218Z' />\r\n        </svg>\r\n      </button>\r\n      <button onClick={onDelete}>\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.601 23.219'>\r\n          <path d='m14.601 11.609-1.489-1.489L2.992 0 .001 2.978l8.631 8.631-8.631 8.632 2.991 2.978L13.112 13.1Z' />\r\n          <path d='m9 11.609 1.489 1.489 10.12 10.12L23.6 20.24l-8.631-8.631L23.6 2.977 20.609-.001l-10.12 10.119Z' />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavOptionEdit;\r\n","import Image from '@components/ui/Image';\r\n\r\nimport { FlagCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavFlags.module.scss';\r\n\r\nexport interface NavFlagsFlagProps {\r\n  flag: FlagCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavFlagsFlag = ({ flag, setShowSelector: setSelectModel }: NavFlagsFlagProps) => {\r\n  const { updateFlag, deleteFlag } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (flag.key) {\r\n      updateFlag(flag.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (flag.key) {\r\n      deleteFlag(flag.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.flagItem}>\r\n      <div className={styles.flagItemImage}>\r\n        <Image image={flag.flag?.attributes?.image.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import { startTransition, useState } from 'react';\r\nimport { NavFlagsSelect } from './NavFlagsSelect';\r\n\r\nimport Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\nimport styles from './NavFlags.module.scss';\r\nimport { NavFlagsFlag } from './NavFlagsFlag';\r\nimport { GraphicPriceEntity, useGetFlagsQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nconst NavFlags = () => {\r\n  const flags = useCustomiserStore((state) => state.flags);\r\n  const updateFlag = useCustomiserStore((state) => state.updateFlag);\r\n  const editFlag = flags?.find((g) => g.edit);\r\n\r\n  const [showSelector, setShowSelector] = useState(false);\r\n\r\n  const { data: flagQuery } = useGetFlagsQuery(\r\n    graphQLClient,\r\n    {\r\n      pagination: { limit: 500 },\r\n    },\r\n    {\r\n      select: (data) => ({ flags: data.flags?.data, prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addFlag = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editFlag?.key) updateFlag(editFlag.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyFlag = () => {\r\n    if (editFlag?.key) {\r\n      updateFlag(editFlag.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editFlag?.decalScale}\r\n            rotation={editFlag?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={flagQuery?.prices}\r\n          />\r\n          {flagQuery?.flags && <NavFlagsSelect editFlag={editFlag} flags={flagQuery.flags} />}\r\n          <NavEditButtons disabled={!editFlag} onApply={applyFlag} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Flags</h3>\r\n            {flags?.map((flag) => (\r\n              <NavFlagsFlag key={flag.key} flag={flag} setShowSelector={setShowSelector} />\r\n            ))}\r\n            <Button colour='red' onClick={addFlag}>\r\n              Add Flag\r\n            </Button>\r\n          </div>\r\n          <NavButtons />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavFlags;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavHeader_root__jnadG\",\"menu\":\"NavHeader_menu__Mmpjx\",\"nav\":\"NavHeader_nav__mJbli\",\"title\":\"NavHeader_title__tOyZd\",\"minimizeIcon\":\"NavHeader_minimizeIcon__GKC2n\",\"minimized\":\"NavHeader_minimized__04mp3\",\"navIcon\":\"NavHeader_navIcon__6iUBm\"};","// extracted by mini-css-extract-plugin\nexport default {\"iInfo\":\"InfoButton_iInfo__0SLm4\",\"iInfo__bgOnclick\":\"InfoButton_iInfo__bgOnclick__3oQL8\",\"iInfo__display\":\"InfoButton_iInfo__display__nKOtb\",\"iInfo__header\":\"InfoButton_iInfo__header__IkMmc\",\"iInfo__body\":\"InfoButton_iInfo__body__6LPfY\",\"iInfo__sampleImg\":\"InfoButton_iInfo__sampleImg__bKcTE\",\"iInfo__closebtn\":\"InfoButton_iInfo__closebtn__+Dwj4\",\"iInfo__styleName\":\"InfoButton_iInfo__styleName__3bDQ2\",\"iInfo__title\":\"InfoButton_iInfo__title__SHp10\",\"infoIcon\":\"InfoButton_infoIcon__Yu7F-\",\"imgIcon\":\"InfoButton_imgIcon__oWQbZ\"};","import { ReactNode } from 'react';\r\nimport styles from './InfoButton.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\ninterface Props {\r\n  title: string | Falsey;\r\n  cb?: () => void;\r\n  children?: ReactNode;\r\n}\r\nconst InfoDisplay = ({ title, cb, children }: Props) => {\r\n  return (\r\n    <>\r\n      <div className={styles.iInfo} onClick={(e) => e.stopPropagation()}>\r\n        <div className={styles.iInfo__bgOnclick} onClick={cb} />\r\n        <div className={styles.iInfo__display}>\r\n          <div className={styles.iInfo__header}>\r\n            <span className={styles.iInfo__title}>{`${title}` || 'EXAMPLES'}</span>\r\n            <span className={styles.iInfo__closebtn} onClick={cb}>\r\n              x\r\n            </span>\r\n          </div>\r\n\r\n          <div className={styles.iInfo__body}>\r\n            {children || (\r\n              <>\r\n                <div className={styles.iInfo__styleName}>PRINTED</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119118469/names-printed.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>EMBROIDERY</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119222257/names-flat-embroidery.png'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>3D EMBROIDERY</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119313289/names-3d-embroidery.jpg'\r\n                  alt=''\r\n                />\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119344264/names-3d-embroidery-perspective.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>3D CRYSTALS</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119433059/names-3d-crystals.jpg'\r\n                  alt=''\r\n                />\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526727869947/names-3d-crystal-perspective.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>GLITTER</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119258957/names-glitter.pg.jpg'\r\n                  alt=''\r\n                />\r\n                <div className={styles.iInfo__styleName}>NAME PATCH</div>\r\n                <img\r\n                  className={styles.iInfo__sampleImg}\r\n                  src='https://res.cloudinary.com/dot-to-dot-design/w_868,f_auto,q_auto/boxxer_s3/content/1526119480153/name-patch-on-shorts.jpg'\r\n                  alt=''\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoDisplay;\r\n","import { usePortalRef } from '@hooks';\r\nimport styles from './InfoButton.module.scss';\r\nimport { createPortal } from 'react-dom';\r\nimport { ReactNode, useState } from 'react';\r\nimport { Falsey } from 'lodash';\r\nimport InfoDisplay from './InfoDisplay';\r\n\r\ninterface Props {\r\n  title: string | Falsey;\r\n  propStyles?: {\r\n    [key: string]: string;\r\n  };\r\n  children?: ReactNode;\r\n}\r\n\r\nconst InfoButton = ({ title, propStyles, children }: Props) => {\r\n  const portalRef = usePortalRef('popupContainer');\r\n  const [shouldShow, setShouldShow] = useState<boolean>(false);\r\n\r\n  if (!portalRef) return null;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={styles.infoIcon}\r\n        onClick={(e) => {\r\n          setShouldShow(true);\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <img\r\n          src='/icons/info-icon.png'\r\n          alt='info icon'\r\n          className={`${styles.imgIcon} ${propStyles?.imgIcon}`}\r\n        />\r\n      </div>\r\n      {shouldShow &&\r\n        createPortal(\r\n          <>\r\n            <InfoDisplay\r\n              title={title}\r\n              cb={() => {\r\n                setShouldShow(false);\r\n              }}\r\n            >\r\n              {children}\r\n            </InfoDisplay>\r\n          </>,\r\n          portalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoButton;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport styles from './NavHeader.module.scss';\r\nimport InfoButton from '@components/ui/InfoButton';\r\n\r\nexport interface NavHeaderProps {\r\n  className?: string;\r\n  toggle: () => void;\r\n  isOpen: boolean;\r\n  isMinimized?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst NavHeader = ({ className, toggle, isOpen, isMinimized = false, onClick }: NavHeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedNav = useCustomiserStore((state) => state.selectedNav);\r\n\r\n  if (isOpen) {\r\n    return null;\r\n  }\r\n\r\n  const minimizeIconClassname = cn(styles.minimizeIcon, {\r\n    [styles.minimized]: isMinimized,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div id='NavHeader' className={rootClassName} onClick={onClick}>\r\n        <div className={styles.nav}>\r\n          <div className={styles.title}>{selectedNav?.name}</div>\r\n          <div className={minimizeIconClassname}>\r\n            <svg viewBox='0 0 330 330'>\r\n              <path\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                id='XMLID_224_'\r\n                d='M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394  l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393  C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z'\r\n              />\r\n            </svg>\r\n          </div>\r\n          <InfoButton title={selectedNav?.name} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavHeader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dropZone\":\"NavImages_dropZone__4YMrM\",\"image\":\"NavImages_image__svpqZ\",\"graphicItem\":\"NavImages_graphicItem__XenKS\",\"graphicItemImage\":\"NavImages_graphicItemImage__8GS2T\"};","import Image from '@components/ui/Image';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesImageProps {\r\n  graphic: GraphicCustomiser;\r\n  setShowSelector: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const NavImagesImage = ({\r\n  graphic,\r\n  setShowSelector: setSelectModel,\r\n}: NavImagesImageProps) => {\r\n  const { updateGraphic, deleteGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const editItem = () => {\r\n    if (graphic.key) {\r\n      updateGraphic(graphic.key, { edit: true });\r\n    }\r\n    setSelectModel(true);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (graphic.key) {\r\n      deleteGraphic(graphic.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphicItem}>\r\n      <div className={styles.graphicItemImage}>\r\n        <Image image={graphic.graphic?.attributes?.image?.data} />\r\n      </div>\r\n      <NavOptionEdit onEdit={editItem} onDelete={deleteItem} />\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  GraphicFragment,\r\n  useCreateGraphicMutation,\r\n  useUploadMultipleFilesMutation,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { Dispatch, SetStateAction, useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport styles from './NavImages.module.scss';\r\n\r\nexport interface NavImagesUploadProps {\r\n  setGraphic: (graphic: GraphicFragment) => void;\r\n}\r\n\r\nexport const NavImagesUpload = ({ setGraphic }: NavImagesUploadProps) => {\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const { mutate: createGraphicMutation } = useCreateGraphicMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const graphic = data.createGraphic?.data;\r\n      setSaving(false);\r\n      if (graphic) setGraphic(graphic);\r\n    },\r\n  });\r\n\r\n  const { mutate: fileUploadMutate } = useUploadMultipleFilesMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const fileIDs = data.multipleUpload.map((f) => f?.data?.id) as string[];\r\n      createGraphicMutation({ data: { image: fileIDs[0], customer: true, name: fileIDs[0] } });\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback((acceptedFiles: File[]) => {\r\n    setSaving(true);\r\n    fileUploadMutate({ files: acceptedFiles });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'image/jpeg': [],\r\n      'image/png': [],\r\n    },\r\n    maxFiles: 1,\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h5>Upload an image</h5>\r\n      <div className={styles.dropZone} {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <div>\r\n          <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 23.219 29.191'>\r\n            <g>\r\n              <path d='M11.609 0 10.12 1.489 0 11.609 2.978 14.6l8.631-8.631 8.632 8.631 2.978-2.991L13.1 1.489Z' />\r\n              <path d='M14.356 29.191h-5v-26h5Z' />\r\n            </g>\r\n          </svg>\r\n          {saving ? (\r\n            <h5>Please wait...</h5>\r\n          ) : isDragActive ? (\r\n            <h5>Drop images here ...</h5>\r\n          ) : (\r\n            <h5>Click or drag images here to upload</h5>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { GraphicFragment } from '@graphql/generated/graphql';\r\nimport { GraphicCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState } from 'react';\r\nimport Image from '@components/ui/Image';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesUpload } from './NavImagesUpload';\r\nimport Button from '@components/ui/Button';\r\n\r\nexport interface NavImagesSelectProps {\r\n  editGraphic?: GraphicCustomiser;\r\n  graphic?: GraphicFragment;\r\n}\r\n\r\nexport const NavImagesSelect = ({ editGraphic, graphic }: NavImagesSelectProps) => {\r\n  const [currentGraphic, setCurrentGraphic] = useState<GraphicFragment | undefined>(graphic);\r\n  const { addGraphic, updateGraphic } = useCustomiserStore((state) => state);\r\n\r\n  const graphicSelected = (graphic: GraphicFragment) => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        graphic,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      addGraphic({\r\n        graphic,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setGraphic = (graphic: GraphicFragment) => {\r\n    setCurrentGraphic(graphic);\r\n    graphicSelected(graphic);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.graphics}>\r\n      {currentGraphic ? (\r\n        <>\r\n          <Image className={styles.image} image={currentGraphic.attributes?.image?.data} />\r\n          <Button onClick={() => setCurrentGraphic(undefined)}>Change Image</Button>\r\n        </>\r\n      ) : (\r\n        <NavImagesUpload setGraphic={setGraphic} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import Button from '@components/ui/Button';\r\nimport { GraphicPriceEntity, useGetImagesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { startTransition, useState } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\nimport NavEditButtons from '../NavEditButtons';\r\n\r\nimport styles from './NavImages.module.scss';\r\nimport { NavImagesImage } from './NavImagesImage';\r\nimport { NavImagesSelect } from './NavImagesSelect';\r\n\r\nconst NavImages = () => {\r\n  const [showSelector, setShowSelector] = useState(false);\r\n  const graphics = useCustomiserStore((state) => state.graphics);\r\n  const updateGraphic = useCustomiserStore((state) => state.updateGraphic);\r\n  const editGraphic = graphics?.find((g) => g.edit);\r\n\r\n  const { data: imageQuery } = useGetImagesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => ({ prices: data.graphicPrices?.data }),\r\n    },\r\n  );\r\n\r\n  const addImage = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number, price?: GraphicPriceEntity) => {\r\n    const priceValues =\r\n      price?.attributes?.size && price?.attributes?.basePrice\r\n        ? {\r\n            size: price.attributes.size,\r\n            basePrice: {\r\n              ...price.attributes.basePrice,\r\n              quantity: 1,\r\n            },\r\n          }\r\n        : {};\r\n\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, { decalScale: Number(event), ...priceValues });\r\n    }\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editGraphic?.key) updateGraphic(editGraphic.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const applyImage = () => {\r\n    if (editGraphic?.key) {\r\n      updateGraphic(editGraphic.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n      });\r\n    }\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <>\r\n          <NavDecalAdjust\r\n            scale={editGraphic?.decalScale}\r\n            rotation={editGraphic?.decalRotation}\r\n            onScale={setScale}\r\n            onRotate={setRotation}\r\n            prices={imageQuery?.prices}\r\n          />\r\n          <NavImagesSelect editGraphic={editGraphic} graphic={editGraphic?.graphic} />\r\n          <NavEditButtons disabled={!editGraphic} onApply={applyImage} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={styles.customiserFlags}>\r\n            <h3>Your Images</h3>\r\n            {graphics?.map((graphic) => (\r\n              <NavImagesImage\r\n                key={graphic.key}\r\n                graphic={graphic}\r\n                setShowSelector={setShowSelector}\r\n              />\r\n            ))}\r\n            <Button colour='red' onClick={addImage}>\r\n              Add Image\r\n            </Button>\r\n          </div>\r\n          <NavButtons />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavImages;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavOptions_root__Gotx6\",\"option\":\"NavOptions_option__GpS8E\",\"optionTitle\":\"NavOptions_optionTitle__m6iQF\",\"required\":\"NavOptions_required__Wy+GM\",\"icon\":\"NavOptions_icon__KPrLI\",\"iconSelected\":\"NavOptions_iconSelected__ZnEvu\"};","import { NavItem, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport styles from './NavOptions.module.scss';\r\n\r\nexport interface NavOptionsProps {\r\n  toggle: () => void;\r\n}\r\n\r\nconst NavOptions = ({ toggle }: NavOptionsProps) => {\r\n  const navItems = useCustomiserStore((state) => state.navItems);\r\n  const sizingVariation = useCustomiserStore((state) => state.sizing?.variation);\r\n  const parts = useCustomiserStore((state) => state.savedParts);\r\n  const flags = useCustomiserStore((state) => state.flags);\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n  const setSelectedNav = useCustomiserStore((state) => state.setSelectedNav);\r\n\r\n  const handleClick = (index: number) => {\r\n    toggle();\r\n    setSelectedNav(index);\r\n  };\r\n\r\n  const isSelected = (item: NavItem) => {\r\n    if (item.type === 'fitting') return true;\r\n    if (item.type === 'size' && sizingVariation) return true;\r\n    if (item.type === 'part' && parts.find((p) => p.part.id === item.id)) return true;\r\n    if (item.type === 'flags' && flags.length) return true;\r\n    if (item.type === 'names' && texts.length) return true;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {navItems.map((item) => (\r\n        <button\r\n          className={styles.option}\r\n          key={item.index}\r\n          onClick={() => handleClick(item.index ? item.index : 0)}\r\n        >\r\n          <div className={styles.optionTitle}>\r\n            <h3>{item.name}</h3>\r\n            {item.required && <span className={styles.required}>Required</span>}\r\n          </div>\r\n          <svg\r\n            className={cn(styles.icon, { [styles.iconSelected]: isSelected(item) })}\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            viewBox='0 0 26.223 20.854'\r\n          >\r\n            <path d='m.854 11.955 2.604-3.11L9.952 14.3 21.736.248l3.102 2.614-14.39 17.22Z' />\r\n          </svg>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavOptions;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pillButton\":\"PillButton_pillButton__SdZPI\",\"pillButtonSelected\":\"PillButton_pillButtonSelected__qUXX-\",\"darkGrey\":\"PillButton_darkGrey__Awkzq\",\"black\":\"PillButton_black__SrGWm\"};","import cn from 'classnames';\r\nimport { ButtonHTMLAttributes } from 'react';\r\n\r\nimport styles from './PillButton.module.scss';\r\n\r\nexport interface PillButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  className?: string;\r\n  selected?: boolean;\r\n  color?: 'red' | 'black' | 'darkGrey';\r\n}\r\n\r\nconst PillButton = ({\r\n  className,\r\n  children,\r\n  selected = false,\r\n  color = 'red',\r\n  ...rest\r\n}: PillButtonProps) => {\r\n  const rootClassName = cn(\r\n    styles.pillButton,\r\n    { [styles.pillButtonSelected]: selected, [styles[color]]: color },\r\n    className,\r\n  );\r\n  return (\r\n    <button className={rootClassName} {...rest}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PillButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MaterialGroup_root__M5bHl\",\"colourGroups\":\"MaterialGroup_colourGroups__G3KSo\",\"materialType\":\"MaterialGroup_materialType__X63YP\",\"materialType__title\":\"MaterialGroup_materialType__title__nQjVb\",\"materials\":\"MaterialGroup_materials__iAoDB\",\"selected\":\"MaterialGroup_selected__YMvLv\"};","import { create, StateCreator, StoreApi } from 'zustand';\r\nimport createContext from 'zustand/context';\r\nimport produce from 'immer';\r\nimport { devtools } from 'zustand/middleware';\r\nimport {\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n} from '@graphql/generated/graphql';\r\nimport { uniqBy } from 'lodash';\r\n\r\nconst uniqueColourGroups = (array: MaterialColourGroupEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterialTypes = (array: MaterialTypeEntity[]) => uniqBy(array, 'id');\r\nconst uniqueMaterials = (array: MaterialEntity[]) => uniqBy(array, 'id');\r\ninterface MaterialGroupInitialState {\r\n  colourGroups: MaterialColourGroupEntity[];\r\n  materialTypes: MaterialTypeEntity[];\r\n  materials: MaterialEntity[];\r\n  selectedColourGroup?: MaterialColourGroupEntity;\r\n  selectedMaterialType?: MaterialTypeEntity;\r\n}\r\nexport interface MaterialGroupState extends MaterialGroupInitialState {\r\n  resetMaterialGroup: () => void;\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => void;\r\n  filteredMaterials: () => MaterialEntity[];\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => void;\r\n  setMaterialType: (materialType: MaterialTypeEntity) => void;\r\n}\r\n\r\nconst initialState: MaterialGroupInitialState = {\r\n  colourGroups: [],\r\n  materialTypes: [],\r\n  materials: [],\r\n};\r\n\r\nconst createMaterialGroup: StateCreator<MaterialGroupState, [['zustand/devtools', never]], []> = (\r\n  set,\r\n  get,\r\n) => ({\r\n  ...initialState,\r\n  filteredMaterials: () => {\r\n    const materials = get().materials;\r\n    const colourGroup = get().selectedColourGroup;\r\n    const filteredMaterials = materials.filter((m) =>\r\n      m.attributes?.colourGroups?.data.find((g) => g.id === colourGroup?.id),\r\n    );\r\n    return filteredMaterials;\r\n  },\r\n  resetMaterialGroup: () => set(initialState),\r\n  setMaterials: (\r\n    materials: MaterialEntity[],\r\n    materialType?: Maybe<MaterialTypeEntity>,\r\n    colourGroup?: Maybe<MaterialColourGroupEntity>,\r\n  ) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        const colourGroups = materials.flatMap(\r\n          (d) => d.attributes?.colourGroups?.data,\r\n        ) as MaterialColourGroupEntity[];\r\n        state.colourGroups = uniqueColourGroups(colourGroups);\r\n        if (colourGroup) {\r\n          state.selectedColourGroup = colourGroup;\r\n        } else {\r\n          state.selectedColourGroup = state.colourGroups[0];\r\n        }\r\n\r\n        const materialTypes = materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n\r\n        if (materialType) {\r\n          state.selectedMaterialType = materialType;\r\n        } else {\r\n          state.selectedMaterialType = state.materialTypes[0];\r\n        }\r\n\r\n        state.materials = uniqueMaterials(materials);\r\n      }),\r\n    );\r\n  },\r\n  setColourGroup: (colourGroup: MaterialColourGroupEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedColourGroup = colourGroup;\r\n        const materialTypes = state.materials\r\n          .filter((m) =>\r\n            m.attributes?.colourGroups?.data.find((g) => g.id === state.selectedColourGroup?.id),\r\n          )\r\n          .map((m) => m.attributes?.type?.data) as MaterialTypeEntity[];\r\n        state.materialTypes = uniqueMaterialTypes(materialTypes);\r\n      }),\r\n    );\r\n  },\r\n  setMaterialType: (materialType: MaterialTypeEntity) => {\r\n    set(\r\n      produce((state: MaterialGroupState) => {\r\n        state.selectedMaterialType = materialType;\r\n      }),\r\n    );\r\n  },\r\n});\r\n\r\nexport const { Provider, useStore: useMaterialGroupStore } =\r\n  createContext<StoreApi<MaterialGroupState>>();\r\n\r\nexport const createStore = () => create<MaterialGroupState>()(devtools(createMaterialGroup));\r\n","import { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialProps {\r\n  className?: string;\r\n  material: MaterialFragment;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const Material = ({\r\n  className,\r\n  material,\r\n  onMaterialSelected,\r\n  selectedMaterialId,\r\n}: MaterialProps) => {\r\n  const rootClassName = cn(styles.material, className, {\r\n    [styles.selected]: material.id === selectedMaterialId,\r\n  });\r\n\r\n  const mapImage = material?.attributes?.images?.find((i) => i?.mapType === 'map');\r\n\r\n  const onClick = () => {\r\n    if (material) {\r\n      onMaterialSelected(material);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className={rootClassName} onClick={onClick} data-name={material.attributes?.name}>\r\n      {mapImage && <img src={mapImage?.image?.data?.attributes?.formats['thumbnail'].url} />}\r\n    </button>\r\n  );\r\n};\r\n","import PillButton from '@components/ui/PillButton';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport cn from 'classnames';\r\nimport { Material } from './Material';\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { useMaterialGroupStore } from './MaterialGroupState';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialTypeProps {\r\n  className?: string;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nexport const MaterialType = ({\r\n  className,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  selectedMaterialId,\r\n}: MaterialTypeProps) => {\r\n  const rootClassName = cn(styles.materialType, className);\r\n\r\n  const {\r\n    materialTypes,\r\n    filteredMaterials: getFilteredMaterials,\r\n    materials,\r\n  } = useMaterialGroupStore();\r\n\r\n  const filteredMaterials = hideColorGroups ? materials : getFilteredMaterials();\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && <h5>Texture</h5>}\r\n      {materialTypes.map((mt) => (\r\n        <div key={mt.id} className={styles.materialType}>\r\n          <h6 className={styles.materialType__title}>{mt.attributes?.name}</h6>\r\n          <div className={styles.materials}>\r\n            {filteredMaterials\r\n              .filter((m) => m.attributes?.type?.data?.id === mt.id)\r\n              .map((m) => (\r\n                <Material\r\n                  key={m.id}\r\n                  material={m}\r\n                  onMaterialSelected={onMaterialSelected}\r\n                  selectedMaterialId={selectedMaterialId}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SelectedMaterialInfo_root__kIp+x\",\"root__noMaterial\":\"SelectedMaterialInfo_root__noMaterial__dtWKf\",\"materialName\":\"SelectedMaterialInfo_materialName__vha4F\"};","import { FC, useMemo } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { usePortalRef } from '@hooks';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport styles from './SelectedMaterialInfo.module.scss';\r\n\r\nconst SelectedMaterialInfo: FC = () => {\r\n  const portalRef = usePortalRef('CustomiserNavMaterial');\r\n  const { selectedPart, parts } = useCustomiserStore();\r\n\r\n  const selectedMaterial = useMemo(\r\n    () => parts.find((part) => part.part.id === selectedPart?.id)?.material,\r\n    [selectedPart, parts],\r\n  );\r\n\r\n  if (!portalRef) return null;\r\n\r\n  if (!selectedMaterial) {\r\n    return ReactDOM.createPortal(\r\n      <div className={cn(styles.root, styles.root__noMaterial)}>No material selected.</div>,\r\n      portalRef,\r\n    );\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={styles.root}>\r\n      <div className={styles.materialName}>{selectedMaterial.attributes?.name}</div>\r\n      {/* TODO: Add currency */}\r\n      <div>${selectedMaterial.attributes?.price?.data?.attributes?.price}</div>\r\n      <small>\r\n        <i>TODO: Add currency</i>\r\n      </small>\r\n    </div>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default SelectedMaterialInfo;\r\n","import {\r\n  InputMaybe,\r\n  MaterialColourGroupEntity,\r\n  MaterialEntity,\r\n  MaterialFragment,\r\n  MaterialGroupEntity,\r\n  MaterialTypeEntity,\r\n  Maybe,\r\n  useGetMaterialsQuery,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\n\r\nimport cn from 'classnames';\r\nimport { useEffect } from 'react';\r\n\r\nimport styles from './MaterialGroup.module.scss';\r\nimport { createStore, Provider, useMaterialGroupStore } from './MaterialGroupState';\r\nimport { MaterialType } from './MaterialType';\r\nimport SelectedMaterialInfo from './SelectedMaterialInfo';\r\nimport { Falsey } from 'lodash';\r\n\r\nexport interface MaterialGroupProps {\r\n  className?: string;\r\n  materialGroup?: Maybe<MaterialGroupEntity>;\r\n  materialType?: Maybe<MaterialTypeEntity>;\r\n  colourGroup?: Maybe<MaterialColourGroupEntity>;\r\n  onMaterialSelected: (material: MaterialFragment) => void;\r\n  hideColorGroups?: boolean;\r\n  selectedMaterialId?: Falsey | string;\r\n}\r\n\r\nconst MaterialGroupLoader = ({\r\n  className,\r\n  materialGroup,\r\n  materialType,\r\n  colourGroup,\r\n  onMaterialSelected,\r\n  hideColorGroups,\r\n  selectedMaterialId,\r\n}: MaterialGroupProps) => {\r\n  const colourGroups = useMaterialGroupStore((state) => state.colourGroups);\r\n  const selectedColourGroup = useMaterialGroupStore((state) => state.selectedColourGroup);\r\n  const setMaterials = useMaterialGroupStore((state) => state.setMaterials);\r\n  const setColourGroup = useMaterialGroupStore((state) => state.setColourGroup);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const typeIds = materialGroup?.attributes?.materialTypes\r\n    ? (materialGroup.attributes.materialTypes.data.map((t) => t.id) as InputMaybe<string>[])\r\n    : [];\r\n\r\n  const { data: materials } = useGetMaterialsQuery(\r\n    graphQLClient,\r\n    { filters: { type: { id: { in: typeIds } } }, pagination: { pageSize: 200 } },\r\n    {\r\n      select: (data) => data.materials?.data as MaterialEntity[],\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (materials?.length) {\r\n      // // TODO - remove: temporary for testing rainbow\r\n      // if (!materials.find((a) => a.id === '999')) {\r\n      //   // eslint-disable-next-line\r\n      //   // @ts-ignore\r\n      //   materials.push(testMaterial);\r\n      // }\r\n      // console.log('materials', materials);\r\n      setMaterials(materials, materialType, colourGroup);\r\n    }\r\n  }, [materials]);\r\n\r\n  if (!materialGroup) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      {!hideColorGroups && (\r\n        <>\r\n          <h5>Colour</h5>\r\n          <div className={styles.colourGroups}>\r\n            {colourGroups.map((group) => (\r\n              <button key={group.id} onClick={() => setColourGroup(group)}>\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  viewBox='0 0 42 42'\r\n                  strokeWidth={4}\r\n                  stroke={\r\n                    selectedColourGroup?.id === group.id\r\n                      ? '#000'\r\n                      : group.attributes?.colour ?? '#000'\r\n                  }\r\n                  fill={group.attributes?.colour ?? '#000'}\r\n                >\r\n                  <rect width='100%' height='100%' />\r\n                </svg>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n      <MaterialType\r\n        hideColorGroups={hideColorGroups}\r\n        onMaterialSelected={onMaterialSelected}\r\n        selectedMaterialId={selectedMaterialId}\r\n      />\r\n      <SelectedMaterialInfo />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MaterialGroup = (props: MaterialGroupProps) => {\r\n  return (\r\n    <Provider createStore={createStore}>\r\n      <MaterialGroupLoader {...props} />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default MaterialGroup;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"showOptional\":\"NavPart_showOptional__s6PPL\"};","import PillButton from '@components/ui/PillButton';\r\nimport { CustomProductPartFragment, MaterialFragment } from '@graphql/generated/graphql';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useState } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport NavButtons from '../NavButtons';\r\n\r\nimport styles from './NavPart.module.scss';\r\n\r\nexport interface NavPartProps {\r\n  className?: string;\r\n  part: CustomProductPartFragment;\r\n}\r\n\r\nconst NavPart = ({ className, part }: NavPartProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const selectedPart = useCustomiserStore((state) => state.selectedPart);\r\n  const setPart = useCustomiserStore((state) => state.setPart);\r\n  const removePart = useCustomiserStore((state) => state.removePart);\r\n  const parts = useCustomiserStore((state) => state.parts);\r\n  const currentPart = useMemo(() => parts.find((p) => p.part.id === part?.id), [part]);\r\n  const [showOptional, setShowOptional] = useState(false);\r\n\r\n  let selectedMaterialId = parts.find((part) => part.part.name === selectedPart?.name)?.material.id;\r\n  const confirmText = !selectedMaterialId\r\n    ? 'Are you sure you want to continue with the default color?'\r\n    : null;\r\n\r\n  if (!part?.materialGroup?.data) {\r\n    return null;\r\n  }\r\n\r\n  const onMaterialSelected = (material: MaterialFragment) => {\r\n    if (selectedPart && material) {\r\n      selectedMaterialId = material.id;\r\n      setPart(selectedPart, material);\r\n    }\r\n  };\r\n\r\n  const optionalOnClick = (show: boolean) => {\r\n    setShowOptional(show);\r\n    if (!show) {\r\n      removePart(part);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (part.optional && !showOptional && currentPart) {\r\n      setShowOptional(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        key={part.id}\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        {part.optional && (\r\n          <PillButton\r\n            className={styles.showOptional}\r\n            selected={showOptional}\r\n            onClick={() => optionalOnClick(!showOptional)}\r\n          >\r\n            {showOptional ? 'Remove' : 'Add'} {part.name}\r\n          </PillButton>\r\n        )}\r\n        {(!part.optional || (part.optional && showOptional)) && (\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <MaterialGroup\r\n              materialGroup={part.materialGroup.data}\r\n              materialType={currentPart?.material.attributes?.type?.data}\r\n              colourGroup={currentPart?.material.attributes?.colourGroups?.data[0]}\r\n              onMaterialSelected={onMaterialSelected}\r\n              selectedMaterialId={selectedMaterialId}\r\n            />\r\n          </Suspense>\r\n        )}\r\n      </motion.div>\r\n      <NavButtons confirmStorage='partsMaterial' confirmText={confirmText} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavPart;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormInput_root__cf10F\",\"input\":\"FormInput_input__gRXur\",\"label\":\"FormInput_label__9L2lb\"};","import cn from 'classnames';\r\nimport { InputHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormInput.module.scss';\r\n\r\nexport interface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormInput = ({ className, placeholder, children, ...props }: FormInputProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <input className={styles.input} {...props} placeholder=' ' />\r\n      <label className={styles.label}>{placeholder}</label>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FormSelect_root__li+Rt\",\"select\":\"FormSelect_select__ftYcv\",\"icon\":\"FormSelect_icon__juFw+\"};","import cn from 'classnames';\r\nimport { SelectHTMLAttributes } from 'react';\r\n\r\nimport styles from './FormSelect.module.scss';\r\n\r\nexport interface FormSelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n}\r\n\r\nconst FormSelect = ({ className, children, ...props }: FormSelectProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  return (\r\n    <div className={rootClassName}>\r\n      <select className={styles.select} {...props}>\r\n        {children}\r\n      </select>\r\n      <svg xmlns='http://www.w3.org/2000/svg' className={styles.icon} viewBox='0 0 18.108 30.546'>\r\n        <path d='m2.835 30.545-2.836-2.836 12.387-12.436L0 2.835 2.836-.001l15.272 15.274Z' />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSelect;\r\n","import { ShopifyProductVariantFragment } from '@graphql/generated/graphql-shopify';\r\n\r\nconst getSizeVariation = (\r\n  unit: string,\r\n  weight: number,\r\n  variations: Array<ShopifyProductVariantFragment>,\r\n) => {\r\n  let size = '';\r\n  if (unit === 'KGS') {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 10:\r\n        size = 'BABY';\r\n        break;\r\n      case 10 <= weight && weight < 16:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 16 <= weight && weight < 22:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 22 <= weight && weight < 30:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 30 <= weight && weight < 40:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 40 <= weight && weight < 50:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 50 <= weight && weight < 59:\r\n        size = 'XS';\r\n        break;\r\n      case 59 <= weight && weight < 69:\r\n        size = 'S';\r\n        break;\r\n      case 69 <= weight && weight < 79:\r\n        size = 'M';\r\n        break;\r\n      case 79 <= weight && weight < 90:\r\n        size = 'L';\r\n        break;\r\n      case 90 <= weight && weight < 101:\r\n        size = 'XL';\r\n        break;\r\n      case 101 <= weight && weight < 111:\r\n        size = '2XL';\r\n        break;\r\n      case 111 <= weight && weight < 120:\r\n        size = '3XL';\r\n        break;\r\n      case 120 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  } else {\r\n    switch (true) {\r\n      case 0 <= weight && weight < 22:\r\n        size = 'BABY';\r\n        break;\r\n      case 22 <= weight && weight < 35.3:\r\n        size = 'TODDLER';\r\n        break;\r\n      case 35.3 <= weight && weight < 48.5:\r\n        size = 'S-CHILD';\r\n        break;\r\n      case 48.5 <= weight && weight < 66.1:\r\n        size = 'M-CHILD';\r\n        break;\r\n      case 66.1 <= weight && weight < 88.2:\r\n        size = 'L-CHILD';\r\n        break;\r\n      case 88.2 <= weight && weight < 110.2:\r\n        size = 'YOUTH';\r\n        break;\r\n      case 110.2 <= weight && weight < 130:\r\n        size = 'XS';\r\n        break;\r\n      case 130 <= weight && weight < 152.1:\r\n        size = 'S';\r\n        break;\r\n      case 152.1 <= weight && weight < 174.2:\r\n        size = 'M';\r\n        break;\r\n      case 174.2 <= weight && weight < 198.4:\r\n        size = 'L';\r\n        break;\r\n      case 198.4 <= weight && weight < 222.7:\r\n        size = 'XL';\r\n        break;\r\n      case 222.7 <= weight && weight < 244.7:\r\n        size = '2XL';\r\n        break;\r\n      case 244.7 <= weight && weight < 264.6:\r\n        size = '3XL';\r\n        break;\r\n      case 264.6 <= weight:\r\n        size = '4XL';\r\n        break;\r\n    }\r\n  }\r\n\r\n  return variations.find((v) => v.sku?.endsWith(size));\r\n};\r\n\r\nexport default getSizeVariation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"variations\":\"NavSize_variations__cMdjc\",\"unitToggle\":\"NavSize_unitToggle__LqIuI\",\"toggleButton\":\"NavSize_toggleButton__5PZDI\",\"toggleButtonSelected\":\"NavSize_toggleButtonSelected__au+Rx\"};","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport getSizeVariation from '@services/size';\r\nimport { UNIT } from '@store/constants';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { motion } from 'framer-motion';\r\nimport { ChangeEvent, useEffect } from 'react';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavSize.module.scss';\r\n\r\nexport interface NavSizeProps {\r\n  className?: string;\r\n}\r\n\r\nconst NavSize = ({ className }: NavSizeProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const variations = useCustomiserStore((state) => state.variations);\r\n  const setSizing = useCustomiserStore((state) => state.setSizing);\r\n  const weight = useCustomiserStore((state) => state.sizing?.weight);\r\n  const height = useCustomiserStore((state) => state.sizing?.height);\r\n  const variation = useCustomiserStore((state) => state.sizing?.variation);\r\n\r\n  useEffect(() => {\r\n    if (weight?.value && weight.unit) {\r\n      const variation = getSizeVariation(weight.unit, weight.value, variations);\r\n      setSizing(undefined, undefined, variation);\r\n    }\r\n  }, [weight, variations]);\r\n\r\n  const onHeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing({ value: Number(e.target.value), unit: 'CM' });\r\n  };\r\n\r\n  const onWeightChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSizing(undefined, { value: Number(e.target.value), unit: 'KGS' });\r\n  };\r\n\r\n  const onVariationChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const id = e.target.value;\r\n    const selectedVariation = variations.find((v) => v.id === id);\r\n    setSizing(undefined, undefined, selectedVariation);\r\n  };\r\n\r\n  const setHeightUnit = (unit: string) => {\r\n    setSizing({ value: height?.value, unit });\r\n  };\r\n\r\n  const setWeightUnit = (unit: string) => {\r\n    setSizing(undefined, { value: weight?.value, unit });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={rootClassName}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <h3>Size Details</h3>\r\n        <p>\r\n          To help us make sure the size you’ve selected is correct, enter your height and weight\r\n          below.\r\n        </p>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Height'\r\n          step='0.1'\r\n          required\r\n          value={height?.value ? height.value : ''}\r\n          onChange={onHeightChange}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.CM,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.CM)}\r\n            >\r\n              {UNIT.HEIGHT.CM}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: height?.unit === UNIT.HEIGHT.INCH,\r\n              })}\r\n              onClick={() => setHeightUnit(UNIT.HEIGHT.INCH)}\r\n            >\r\n              {UNIT.HEIGHT.INCH}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <FormInput\r\n          type='number'\r\n          placeholder='Enter Weight'\r\n          step='0.1'\r\n          required\r\n          value={weight?.value ? weight.value : ''}\r\n          onChange={onWeightChange}\r\n        >\r\n          <div className={styles.unitToggle}>\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.KG,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.KG)}\r\n            >\r\n              {UNIT.WEIGHT.KG}\r\n            </button>\r\n            {'/'}\r\n            <button\r\n              className={cn(styles.toggleButton, {\r\n                [styles.toggleButtonSelected]: weight?.unit === UNIT.WEIGHT.LB,\r\n              })}\r\n              onClick={() => setWeightUnit(UNIT.WEIGHT.LB)}\r\n            >\r\n              {UNIT.WEIGHT.LB}\r\n            </button>\r\n          </div>\r\n        </FormInput>\r\n        <h3>Suggested Size</h3>\r\n        <FormSelect value={variation?.id} onChange={onVariationChange}>\r\n          {variations.map((v) => (\r\n            <option key={v.id} value={v.id}>\r\n              {v.title}\r\n            </option>\r\n          ))}\r\n        </FormSelect>\r\n      </motion.div>\r\n      <NavButtons />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavSize;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"arial\":\"NavText_arial__de7L4\",\"oswald\":\"NavText_oswald__siLdE\",\"college\":\"NavText_college__YR6iT\",\"ballantines\":\"NavText_ballantines__1B1LU\",\"navTextEdit\":\"NavText_navTextEdit__8WUIS\",\"textItem\":\"NavText_textItem__nQrv4\",\"textItemText\":\"NavText_textItemText__op7hZ\",\"finishSelections\":\"NavText_finishSelections__fH4yd\",\"disabled\":\"NavText_disabled__M-nHo\",\"showOutline\":\"NavText_showOutline__T7KEv\",\"fontSelection\":\"NavText_fontSelection__AH-QM\",\"font\":\"NavText_font__v43yE\",\"finishSelection\":\"NavText_finishSelection__CfQ+O\",\"selected\":\"NavText_selected__SIXSo\",\"pricing\":\"NavText_pricing__qUsci\",\"materialGroup\":\"NavText_materialGroup__j+DTa\",\"navTextsSelection\":\"NavText_navTextsSelection__gJNy+\",\"title\":\"NavText_title__u+YKh\",\"titleText\":\"NavText_titleText__lFoUP\",\"textPreview\":\"NavText_textPreview__CfhSo\",\"noText\":\"NavText_noText__Parmv\",\"textPreview__imgContainer\":\"NavText_textPreview__imgContainer__6SJ9b\",\"promptMessage\":\"NavText_promptMessage__iKeIZ\",\"applyTextBtnContainer\":\"NavText_applyTextBtnContainer__I8nfd\",\"navHeaderSaveText\":\"NavText_navHeaderSaveText__h8PoA\",\"selectedCategoryItem\":\"NavText_selectedCategoryItem__jjmwJ\",\"finishedCategoryItem\":\"NavText_finishedCategoryItem__AC3wU\",\"categoryDisplayName\":\"NavText_categoryDisplayName__pATtN\",\"textInputContainer\":\"NavText_textInputContainer__KQMDX\",\"textInput\":\"NavText_textInput__Z49KW\",\"textDone\":\"NavText_textDone__rPeDE\",\"textPreviewTextInput\":\"NavText_textPreviewTextInput__lQXU8\"};","// extracted by mini-css-extract-plugin\nexport default {};","import cn from 'classnames';\r\n\r\nimport styles from './Price.module.scss';\r\n\r\nexport interface PriceProps {\r\n  className?: string;\r\n  price?: number;\r\n  priceString?: string;\r\n}\r\n\r\nconst Price = ({ className, price, priceString }: PriceProps) => {\r\n  const rootClassName = cn('price-item', styles.root, className);\r\n  // TODO - Make currency change depending on selected currency.\r\n  const currency = '£';\r\n\r\n  const formattedPrice =\r\n    price !== undefined ? `${currency}${price.toFixed(2)}` : `${currency}${priceString}`;\r\n\r\n  if (!formattedPrice) {\r\n    return null;\r\n  }\r\n\r\n  return <span className={rootClassName}>{formattedPrice}</span>;\r\n};\r\n\r\nexport default Price;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useMemo, useState } from 'react';\r\n\r\nimport Price from '@components/ui/Price';\r\nimport { NAME_TYPE_LUXURY_ID } from '@store/constants';\r\nimport cn from 'classnames';\r\nimport styles from './NavText.module.scss';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\n\r\nexport interface NavTextFinishProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingCrystal?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextFinish: FC<NavTextFinishProps> = ({ editText = {}, setIsPickingCrystal }) => {\r\n  const { selectedName } = editText;\r\n  const selectedMaterialId = editText?.crystalBackground?.id;\r\n\r\n  const [crystals, setCrystals] = useState<boolean>(editText?.crystalPrice ? true : false);\r\n  const [puff, setPuff] = useState<boolean>(editText?.puffPrice ? true : false);\r\n\r\n  const hasPuffOption = useMemo(() => selectedName?.id === NAME_TYPE_LUXURY_ID, [selectedName]);\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  useEffect(() => {\r\n    setPuff(editText.puffPrice ? true : false);\r\n  }, [editText.puffPrice]);\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setCrystalBackground = (crystalBackground: MaterialFragment | undefined) => {\r\n    if (editText?.key) {\r\n      console.log('crystalBackground', crystalBackground);\r\n      updateText(editText.key, {\r\n        crystalBackground,\r\n      });\r\n    }\r\n  };\r\n\r\n  const addCrystals = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setCrystals(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          crystalPrice: {\r\n            price: selectedName.attributes?.crystalPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.crystalPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          crystalPrice: undefined,\r\n          crystalBackground: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const addPuff = (add: boolean) => {\r\n    if (editText?.key) {\r\n      setPuff(add);\r\n      if (add) {\r\n        updateText(editText.key, {\r\n          puffPrice: {\r\n            price: selectedName.attributes?.puffPrice?.price,\r\n            quantity: 1,\r\n            shopifyVariantId: selectedName.attributes?.puffPrice?.shopifyVariantId,\r\n          },\r\n        });\r\n      } else {\r\n        updateText(editText.key, {\r\n          puffPrice: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.finishSelections}>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: !crystals,\r\n          })}\r\n          onClick={() => {\r\n            setIsPickingCrystal && setIsPickingCrystal(false);\r\n            addCrystals(false);\r\n          }}\r\n        >\r\n          No Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, {\r\n            [styles.selected]: crystals,\r\n          })}\r\n          onClick={() => {\r\n            addCrystals(true);\r\n            setIsPickingCrystal && setIsPickingCrystal(true);\r\n          }}\r\n        >\r\n          Add Crystals\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.crystalPrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {!crystals && (\r\n        <div className={styles.finishSelections}>\r\n          <div\r\n            className={cn(styles.finishSelection, { [styles.selected]: !puff })}\r\n            onClick={() => addPuff(false)}\r\n          >\r\n            Flat\r\n            <div className={styles.pricing}>\r\n              {' +'}\r\n              <Price price={0} />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: puff,\r\n              [styles.disabled]: !hasPuffOption,\r\n            })}\r\n            onClick={() => addPuff(true)}\r\n          >\r\n            Add 3D Puff\r\n            {hasPuffOption ? (\r\n              <div className={styles.pricing}>\r\n                {' +'}\r\n                <Price price={selectedName.attributes?.puffPrice?.price} />\r\n              </div>\r\n            ) : (\r\n              <div className={styles.pricing}>(Only available for luxury colors)</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {crystals && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName.attributes?.materialGroup?.data}\r\n          materialType={editText.material?.attributes?.type?.data}\r\n          colourGroup={editText.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setCrystalBackground}\r\n          className={styles.materialGroup}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextFinish;\r\n","import PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment, NameEntity, useGetNamesQuery } from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport MaterialGroup from '../MaterialGroup';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextNameTypesProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextNameTypes = ({ editText = {} }: NavTextNameTypesProps) => {\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const selectedMaterialId = editText?.material?.id;\r\n\r\n  const { selectedName } = editText;\r\n  const prevSelectedName = useRef(selectedName);\r\n\r\n  const { data: names } = useGetNamesQuery(\r\n    graphQLClient,\r\n    {},\r\n    {\r\n      select: (data) => data.names?.data,\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (editText?.key && selectedName && prevSelectedName.current !== selectedName) {\r\n      prevSelectedName.current = selectedName;\r\n\r\n      updateText(editText.key, {\r\n        basePrice: {\r\n          price: selectedName.attributes?.basePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.basePrice?.shopifyVariantId,\r\n        },\r\n        letterPrice: {\r\n          price: selectedName.attributes?.letterPrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.letterPrice?.shopifyVariantId,\r\n        },\r\n        nameType: {\r\n          id: selectedName.id,\r\n          name: selectedName.attributes?.name,\r\n        },\r\n        /**\r\n         * Reset material when selectedName changes.\r\n         *\r\n         * Different name types would have different\r\n         * material groups.\r\n         */\r\n        material: undefined,\r\n        ...(editText.outline\r\n          ? {\r\n              outlinePrice: {\r\n                price: selectedName.attributes?.outlinePrice?.price,\r\n                quantity: 1,\r\n                shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n              },\r\n            }\r\n          : {}),\r\n\r\n        puffPrice: undefined,\r\n      });\r\n    }\r\n  }, [selectedName]);\r\n\r\n  const setMaterial = (material: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        material,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setSelectedName = (name: NameEntity) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        selectedName: name,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!selectedName && <i className={styles.promptMessage}>Select a text color type</i>}\r\n      <div className={styles.categoryDisplayName}>Choose Color:</div>\r\n      <div className={styles.finishSelections}>\r\n        {names?.map((n) => (\r\n          <div\r\n            key={n.id}\r\n            className={cn(styles.finishSelection, {\r\n              [styles.selected]: selectedName && n.id === selectedName.id,\r\n            })}\r\n            onClick={() => setSelectedName(n)}\r\n          >\r\n            {n.attributes?.name}\r\n            <div className={styles.pricing}>\r\n              <Price price={n.attributes?.basePrice?.price} />\r\n              {' + '}\r\n              <Price price={n.attributes?.letterPrice?.price} /> per letter\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedName && (\r\n        <MaterialGroup\r\n          hideColorGroups={true}\r\n          materialGroup={selectedName?.attributes?.materialGroup?.data}\r\n          materialType={editText?.material?.attributes?.type?.data}\r\n          colourGroup={editText?.material?.attributes?.colourGroups?.data[0]}\r\n          onMaterialSelected={setMaterial}\r\n          className={styles.materialGroup}\r\n          selectedMaterialId={selectedMaterialId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNameTypes;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport { FC, useEffect, useState } from 'react';\r\n\r\nimport PillButton from '@components/ui/PillButton';\r\nimport Price from '@components/ui/Price';\r\nimport { MaterialFragment } from '@graphql/generated/graphql';\r\nimport MaterialGroup from '../MaterialGroup';\r\nimport styles from './NavText.module.scss';\r\nimport cn from 'classnames';\r\n\r\nexport interface NavTextOutlineProps {\r\n  editText?: TextCustomiser;\r\n  setIsPickingOutline?: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextOutline: FC<NavTextOutlineProps> = ({ editText = {}, setIsPickingOutline }) => {\r\n  const [showOutline, setShowOutline] = useState<boolean>(editText?.outline ? true : false);\r\n  const selectedMaterialId = editText?.outline?.id;\r\n\r\n  const { updateText } = useCustomiserStore();\r\n\r\n  const { selectedName } = editText;\r\n\r\n  if (!selectedName) {\r\n    return null;\r\n  }\r\n\r\n  const setOutline = (outline: MaterialFragment) => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        outline,\r\n        outlinePrice: {\r\n          price: selectedName.attributes?.outlinePrice?.price,\r\n          quantity: 1,\r\n          shopifyVariantId: selectedName.attributes?.outlinePrice?.shopifyVariantId,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateOutline = (show: boolean) => {\r\n    setShowOutline(show);\r\n    if (!show && editText?.key) {\r\n      updateText(editText.key, {\r\n        outline: undefined,\r\n        outlinePrice: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={cn(styles.showOutline, styles.finishSelections)}>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: !showOutline })}\r\n          onClick={() => {\r\n            updateOutline(false);\r\n            setIsPickingOutline && setIsPickingOutline(false);\r\n          }}\r\n        >\r\n          No Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={0} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={cn(styles.finishSelection, { [styles.selected]: showOutline })}\r\n          onClick={() => {\r\n            updateOutline(true);\r\n            setIsPickingOutline && setIsPickingOutline(true);\r\n          }}\r\n        >\r\n          Add Outline\r\n          <div className={styles.pricing}>\r\n            {' +'}\r\n            <Price price={selectedName.attributes?.outlinePrice?.price} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showOutline && (\r\n        <>\r\n          <MaterialGroup\r\n            hideColorGroups\r\n            materialGroup={selectedName?.attributes?.outlineGroup?.data}\r\n            materialType={editText?.outline?.attributes?.type?.data}\r\n            colourGroup={editText?.outline?.attributes?.colourGroups?.data[0]}\r\n            onMaterialSelected={setOutline}\r\n            className={styles.materialGroup}\r\n            selectedMaterialId={selectedMaterialId}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextOutline;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport FormSelect from '@components/ui/FormSelect';\r\nimport { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { usePortalRef } from '@hooks';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport interface NavTextSelectProps {\r\n  className?: string;\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst fonts = [\r\n  {\r\n    name: 'Arial',\r\n    className: styles.arial,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/arial-bold-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Oswald',\r\n    className: styles.oswald,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/oswald-semibold.woff',\r\n  },\r\n  {\r\n    name: 'College',\r\n    className: styles.college,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/college_block-webfont.woff',\r\n  },\r\n  {\r\n    name: 'Ballantines',\r\n    className: styles.ballantines,\r\n    url: 'https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/ballantines-bold-webfont.woff',\r\n  },\r\n];\r\n\r\nconst NavTextSelect = ({ className, editText }: NavTextSelectProps) => {\r\n  const portalRef = usePortalRef('popupContainer');\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const [font, setFont] = useState<(typeof fonts)[number]>(\r\n    fonts.find((f) => editText?.font === f.url) ?? fonts[0],\r\n  );\r\n  const { addText, updateText } = useCustomiserStore((state) => state);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text, font: font.url });\r\n      }\r\n    }\r\n  }, [text, font]);\r\n\r\n  const setTextOnChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const onFontChange = (font: (typeof fonts)[number]) => {\r\n    setFont(font);\r\n  };\r\n\r\n  if (!portalRef) return null;\r\n\r\n  return (\r\n    <div className={className}>\r\n      {/* {ReactDOM.createPortal(\r\n        <div className={styles.textInputContainer}>\r\n          <FormInput\r\n            className={styles.textInput}\r\n            placeholder='Type text here...'\r\n            value={text}\r\n            onChange={setTextOnChange}\r\n          >\r\n            <span className={styles.textDone}>Done</span>\r\n          </FormInput>\r\n        </div>,\r\n        portalRef,\r\n      )} */}\r\n      <div className={styles.categoryDisplayName}>Choose Font:</div>\r\n      <div className={styles.fontSelection}>\r\n        {fonts.map((_font) => (\r\n          <div\r\n            key={_font.name}\r\n            onClick={() => onFontChange(_font)}\r\n            className={cn(styles.font, _font.className, {\r\n              [styles.selected]: font.name === _font.name,\r\n            })}\r\n          >\r\n            {_font.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {/* <FormSelect\r\n        className={fonts.find((f) => f.url === font)?.className}\r\n        value={font}\r\n        onChange={onFontChange}\r\n      >\r\n        {fonts.map((f) => (\r\n          <option className={f.className} key={f.url} value={f.url}>\r\n            {f.name}\r\n          </option>\r\n        ))}\r\n      </FormSelect> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextSelect;\r\n","import { TextCustomiser, useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { Dispatch, MouseEventHandler, SetStateAction } from 'react';\r\nimport NavOptionEdit from '../NavOptionEdit';\r\n\r\nimport styles from './NavText.module.scss';\r\n\r\nexport interface NavTextTextProps {\r\n  text: TextCustomiser;\r\n  className?: string;\r\n  setShowSelector?: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst NavTextText = ({ className, text, setShowSelector }: NavTextTextProps) => {\r\n  const { updateText, deleteText } = useCustomiserStore((state) => state);\r\n  const rootClassName = cn(styles.root, className);\r\n\r\n  const editItem = () => {\r\n    if (text.key) {\r\n      updateText(text.key, { edit: true });\r\n      setShowSelector && setShowSelector(true);\r\n    }\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    if (!text.key) return;\r\n    updateText(text.key, {\r\n      isVisible: typeof text.isVisible !== 'undefined' ? !text.isVisible : false,\r\n    });\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    if (text.key) {\r\n      deleteText(text.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.textItem} onClick={editItem}>\r\n      <div className={styles.textItemText}>{text.text}</div>\r\n      <NavOptionEdit\r\n        toggleVisibility={toggleVisibility}\r\n        onEdit={editItem}\r\n        onDelete={deleteItem}\r\n        isVisible={text.isVisible}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextText;\r\n","import { FC } from 'react';\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport NavButtons from '../NavButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextText from './NavTextText';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\ntype NavTextsSelectionProps = {\r\n  onAddTextClicked?: () => void;\r\n  onTextSelected?: () => void;\r\n};\r\n\r\nconst NavTextsSelection: FC<NavTextsSelectionProps> = ({ onAddTextClicked, onTextSelected }) => {\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n\r\n  return (\r\n    <div className={styles.navTextsSelection}>\r\n      <div className={styles.title}>\r\n        <h3 className={styles.titleText}>Your Texts</h3>\r\n\r\n        <ContainedButton onClick={onAddTextClicked}>Add Text</ContainedButton>\r\n      </div>\r\n\r\n      {texts.map((t) => (\r\n        <NavTextText key={t.key} text={t} setShowSelector={onTextSelected} />\r\n      ))}\r\n\r\n      <NavButtons\r\n        confirmStorage='saveTextsNotification'\r\n        confirmText='You can still add more text. Save anyway?'\r\n      ></NavButtons>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTextsSelection;\r\n","import type { MaterialFragment } from '@graphql/generated/graphql';\r\nimport type { Falsey } from 'lodash';\r\n// eslint-disable-next-line\r\n// @ts-ignore\r\nimport { NormalMapGenerator } from 'normalmap-online';\r\n\r\nexport function getMaterialUrl(material: MaterialFragment | undefined): string {\r\n  return material?.attributes?.images?.find((imgMap) => imgMap?.mapType === 'map')?.image.data\r\n    ?.attributes?.formats.large.url;\r\n}\r\n\r\n// TODO - Relocate this\r\ninterface ImgToNormalMapParams {\r\n  img: HTMLImageElement | HTMLCanvasElement;\r\n  hasPuff?: boolean;\r\n  blur?: number;\r\n}\r\nconst normalMapGenerator = NormalMapGenerator.instance();\r\nasync function imgToNormalMap({ img, hasPuff, blur }: ImgToNormalMapParams) {\r\n  const blurAmount = hasPuff ? blur || 7 : 1;\r\n  return normalMapGenerator.generateFromImage(img, {\r\n    strength: 0.5,\r\n    blur: blurAmount,\r\n    level: 1,\r\n  });\r\n}\r\n\r\ninterface PreviewText {\r\n  material: HTMLImageElement | undefined;\r\n  outline: HTMLImageElement | undefined;\r\n  previewImg?: HTMLImageElement;\r\n  normalMapPatternImg?: HTMLImageElement | false;\r\n  crystalBgPatternImg?: HTMLImageElement | Falsey;\r\n  crystalBgImg?: HTMLImageElement | Falsey;\r\n}\r\n\r\nexport type PatternType = 'crystals' | 'embroidery' | Falsey;\r\n\r\ninterface CanvasTextConstructor {\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n}\r\n\r\nexport class CanvasText {\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  outlineCanvas: HTMLCanvasElement;\r\n  outlineCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapTextureCanvas: HTMLCanvasElement;\r\n  normalMapTextureCtx: CanvasRenderingContext2D;\r\n  normalMapCanvas: HTMLCanvasElement;\r\n  normalMapCtx: CanvasRenderingContext2D;\r\n\r\n  normalMapOutlineTextureCanvas: HTMLCanvasElement;\r\n  normalMapOutlineTextureCtx: CanvasRenderingContext2D;\r\n  normalMapOutlineCanvas: HTMLCanvasElement;\r\n  normalMapOutlineCtx2: CanvasRenderingContext2D;\r\n\r\n  crystalBgPatternCanvas: HTMLCanvasElement;\r\n  crystalBgPatternCtx: CanvasRenderingContext2D;\r\n\r\n  hasPuff: boolean;\r\n  toNormalMap: boolean;\r\n  patternType: PatternType;\r\n  text?: string;\r\n\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n  fontSize: number;\r\n  outlineWidth: number;\r\n\r\n  constructor({ hasPuff, toNormalMap, text, patternType }: CanvasTextConstructor) {\r\n    this.hasPuff = hasPuff;\r\n    this.toNormalMap = toNormalMap;\r\n    this.patternType = patternType;\r\n    this.text = text;\r\n\r\n    this.fontSize = 360;\r\n    this.canvasHeight = 400;\r\n    this.canvasWidth = 3200;\r\n    this.outlineWidth = 20;\r\n\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.height = this.canvasHeight;\r\n    this.canvas.width = this.canvasWidth;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.outlineCanvas = document.createElement('canvas');\r\n    this.outlineCanvas.height = this.canvasHeight;\r\n    this.outlineCanvas.width = this.canvasWidth;\r\n    this.outlineCtx = this.outlineCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    // Normal map section\r\n\r\n    this.normalMapTextureCanvas = document.createElement('canvas');\r\n    this.normalMapTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapTextureCtx = this.normalMapTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapCanvas = document.createElement('canvas');\r\n    this.normalMapCanvas.height = this.canvasHeight;\r\n    this.normalMapCanvas.width = this.canvasWidth;\r\n    this.normalMapCtx = this.normalMapCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineTextureCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineTextureCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineTextureCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineTextureCtx = this.normalMapOutlineTextureCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    this.normalMapOutlineCanvas = document.createElement('canvas');\r\n    this.normalMapOutlineCanvas.height = this.canvasHeight;\r\n    this.normalMapOutlineCanvas.width = this.canvasWidth;\r\n    this.normalMapOutlineCtx2 = this.normalMapOutlineCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    // TODO - make a function for setting canvas height and ctx instead\r\n    this.crystalBgPatternCanvas = document.createElement('canvas');\r\n    this.crystalBgPatternCanvas.height = this.canvasHeight;\r\n    this.crystalBgPatternCanvas.width = this.canvasWidth;\r\n    this.crystalBgPatternCtx = this.crystalBgPatternCanvas.getContext(\r\n      '2d',\r\n    ) as CanvasRenderingContext2D;\r\n  }\r\n\r\n  public clear() {\r\n    this.ctx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.outlineCtx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n  public async drawImg(ctx: CanvasRenderingContext2D, src: HTMLImageElement) {\r\n    ctx.drawImage(src, 0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  public showTestCanvas(canvas: HTMLCanvasElement) {\r\n    const testPreviewDom = document.getElementById('testPreview'); // TEST ONLY, TO BE REMOVED\r\n    (testPreviewDom as unknown as HTMLElement).innerHTML = ''; // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(canvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineTextureCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.normalMapOutlineCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.crystalBgPatternCanvas); // TEST ONLY, TO BE REMOVED\r\n    // testPreviewDom?.appendChild(this.outlineCanvas); // TEST ONLY, TO BE REMOVED\r\n  }\r\n\r\n  public async maskImage(ctx: CanvasRenderingContext2D, img: HTMLImageElement) {\r\n    ctx.globalCompositeOperation = 'source-in';\r\n    await this.drawImg(ctx, img);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  public drawPreviewText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n  }\r\n\r\n  public drawPreviewOutlineText() {\r\n    if (!this.text) return;\r\n\r\n    this.outlineCtx.font = `${this.fontSize}px testFont`;\r\n    this.outlineCtx.textAlign = 'center';\r\n    this.outlineCtx.lineWidth = this.outlineWidth;\r\n    this.outlineCtx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n  }\r\n\r\n  public drawPreviewOutlineOnlyText(ctx: CanvasRenderingContext2D) {\r\n    if (!this.text) return;\r\n\r\n    ctx.font = `${this.fontSize}px testFont`;\r\n    ctx.textAlign = 'center';\r\n    ctx.lineWidth = 30;\r\n    ctx.fillStyle = 'green';\r\n    ctx.strokeText(\r\n      this.text,\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2 + 15 + this.fontSize / 4,\r\n    );\r\n    ctx.globalCompositeOperation = 'destination-out';\r\n    ctx.fillText(this.text, this.canvas.width / 2, this.canvas.height / 2 + 15 + this.fontSize / 4);\r\n    ctx.globalCompositeOperation = 'source-over'; // reset to default\r\n  }\r\n\r\n  private async drawNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewText(this.normalMapTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      this.normalMapTextureCtx.fillStyle = pattern;\r\n      this.normalMapTextureCtx.fill();\r\n      this.normalMapTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    console.log('toNormalMap', this.toNormalMap);\r\n    const normalMap = this.toNormalMap\r\n      ? await imgToNormalMap({\r\n          img: this.normalMapTextureCanvas,\r\n          hasPuff: this.hasPuff,\r\n        })\r\n      : this.normalMapTextureCanvas;\r\n\r\n    this.normalMapCtx.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawOutlineNormalMap(normalMapPatternImg: HTMLImageElement | Falsey) {\r\n    this.drawPreviewOutlineOnlyText(this.normalMapOutlineTextureCtx);\r\n\r\n    if (normalMapPatternImg) {\r\n      const pattern = this.normalMapOutlineTextureCtx.createPattern(normalMapPatternImg, 'repeat');\r\n\r\n      if (!pattern) return;\r\n\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-in';\r\n      this.normalMapOutlineTextureCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      if (this.patternType !== 'crystals') {\r\n        this.normalMapOutlineTextureCtx.fillStyle = pattern;\r\n      }\r\n      this.normalMapOutlineTextureCtx.fill();\r\n      this.normalMapOutlineTextureCtx.globalCompositeOperation = 'source-over';\r\n    }\r\n\r\n    const normalMap =\r\n      this.toNormalMap || this.patternType === 'crystals'\r\n        ? await imgToNormalMap({\r\n            img: this.normalMapOutlineTextureCanvas,\r\n            hasPuff: this.patternType === 'crystals' ? true : this.hasPuff,\r\n            blur: 4,\r\n          })\r\n        : this.normalMapOutlineTextureCanvas;\r\n    this.normalMapOutlineCtx2.drawImage(normalMap, 0, 0);\r\n  }\r\n\r\n  private async drawCrystalBg(\r\n    crystalBgImg: HTMLImageElement,\r\n    crystalBgPatternImg: HTMLImageElement,\r\n  ) {\r\n    const pattern = this.crystalBgPatternCtx.createPattern(crystalBgPatternImg, 'repeat');\r\n\r\n    if (!pattern) return;\r\n\r\n    this.crystalBgPatternCtx.rect(0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.fillStyle = pattern;\r\n    this.crystalBgPatternCtx.fill();\r\n\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-in';\r\n    this.crystalBgPatternCtx.globalAlpha = 0.9;\r\n    this.crystalBgPatternCtx.drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.drawImage(crystalBgImg, 0, 0, this.canvasWidth, this.canvasHeight);\r\n    this.crystalBgPatternCtx.globalCompositeOperation = 'source-over';\r\n\r\n    this.outlineCtx.drawImage(this.crystalBgPatternCanvas, 0, 0);\r\n  }\r\n\r\n  private printTextMapToStrokeMap() {\r\n    this.normalMapCtx.globalCompositeOperation = 'destination-in';\r\n    this.normalMapCtx.drawImage(this.normalMapTextureCanvas, 0, 0);\r\n    this.normalMapCtx.globalCompositeOperation = 'source-over'; // reset to default\r\n    this.normalMapOutlineCtx2.drawImage(this.normalMapCanvas, 0, 0);\r\n  }\r\n\r\n  public async previewText({\r\n    material,\r\n    outline,\r\n    previewImg,\r\n    normalMapPatternImg,\r\n    crystalBgPatternImg,\r\n    crystalBgImg,\r\n  }: PreviewText) {\r\n    if (!this.text) return;\r\n\r\n    this.clear();\r\n    this.showTestCanvas(this.normalMapTextureCanvas);\r\n\r\n    await this.drawNormalMap(normalMapPatternImg);\r\n    await this.drawOutlineNormalMap(normalMapPatternImg);\r\n\r\n    this.printTextMapToStrokeMap();\r\n\r\n    if (outline) {\r\n      this.drawPreviewOutlineText();\r\n      await this.maskImage(this.outlineCtx, outline);\r\n    }\r\n\r\n    this.drawPreviewText(this.ctx);\r\n\r\n    if (material) {\r\n      await this.maskImage(this.ctx, material);\r\n    }\r\n\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n    if (previewImg) previewImg.src = this.outlineCanvas.toDataURL();\r\n\r\n    if (crystalBgImg && crystalBgPatternImg) {\r\n      this.drawCrystalBg(crystalBgImg, crystalBgPatternImg);\r\n    }\r\n  }\r\n\r\n  public mergeCanvas() {\r\n    this.outlineCtx.drawImage(this.canvas, 0, 0);\r\n  }\r\n\r\n  getOutlineCanvas() {\r\n    return this.outlineCanvas;\r\n  }\r\n  getNormalMapTextureCanvas() {\r\n    return this.normalMapTextureCanvas;\r\n  }\r\n  getNormalMapOutlineCanvas() {\r\n    return this.normalMapOutlineCanvas;\r\n  }\r\n}\r\n","export async function loadImage(src: string): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    if (!src) resolve(img);\r\n    img.crossOrigin = 'anonymous';\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n    img.src = src;\r\n  });\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"canvasClickableCover\":\"NavTextScene_canvasClickableCover__ZoAVe\",\"canvasClickableCover__imgContainer\":\"NavTextScene_canvasClickableCover__imgContainer__qCzZl\",\"navTextSceneFullscreen\":\"NavTextScene_navTextSceneFullscreen__-hgDQ\",\"navTextSceneFullscreen__imgContainer\":\"NavTextScene_navTextSceneFullscreen__imgContainer__kyglX\",\"navTextSceneFullscreen__closeBtn\":\"NavTextScene_navTextSceneFullscreen__closeBtn__jtMmR\",\"navTextSceneFullscreen__zoomContainer\":\"NavTextScene_navTextSceneFullscreen__zoomContainer__struE\"};","import { Decal } from '@react-three/drei';\r\nimport { TextCustomiser } from '@store/customiser';\r\nimport { Texture, Vector2, Vector3 } from 'three';\r\nimport Lights from '../Lights';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport styles from './NavTextScene.module.scss';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { usePortalRef } from '@hooks';\r\n\r\ninterface NavTextPreviewSceneInterface {\r\n  text: TextCustomiser;\r\n}\r\n\r\nconst NavTextPreviewScene = ({ text }: NavTextPreviewSceneInterface) => {\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n  const [shouldShow, setShouldShow] = useState<boolean>(false);\r\n  const [zoom, setZoom] = useState<number>(1);\r\n  const [dataUrl, setDataUrl] = useState<string>('');\r\n\r\n  const portalRef = usePortalRef('popupContainer');\r\n\r\n  const scale = 10;\r\n  const scaleModifier = new Vector3(3.2 * scale, 0.4 * scale, 4);\r\n\r\n  const isLuxury: boolean = text.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = text.puffPrice ? true : false;\r\n  const hasCrystals: boolean = text.crystalPrice ? true : false;\r\n\r\n  const shouldNormalMap =\r\n    text.normalMap instanceof Texture && text.selectedName?.attributes?.name === 'Luxury';\r\n  const normalMap = shouldNormalMap ? text.normalMap : null;\r\n\r\n  let normalScale = 1;\r\n  if (hasCrystals) {\r\n    normalScale = 4;\r\n  } else if (isLuxury && !hasPuff) {\r\n    normalScale = 0.5;\r\n  } else if (isLuxury && hasPuff) {\r\n    normalScale = 3;\r\n  }\r\n\r\n  if (!portalRef) return null;\r\n\r\n  function addZoom() {\r\n    setZoom((cur) => {\r\n      if (cur >= 10) return cur;\r\n      return (cur += 0.1);\r\n    });\r\n  }\r\n  function subtractZoom() {\r\n    setZoom((cur) => {\r\n      if (cur <= 0.1) return cur;\r\n      return (cur -= 0.1);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        ref={(el) => {\r\n          canvasRef.current = el;\r\n        }}\r\n        gl={{\r\n          preserveDrawingBuffer: true,\r\n        }}\r\n      >\r\n        <Lights />\r\n        <mesh>\r\n          <planeBufferGeometry args={[20, 5]} />\r\n          <meshNormalMaterial visible={false} />\r\n          <Decal position={[0, 0, 0]} rotation={[0, 0, 0]} scale={scaleModifier}>\r\n            <meshStandardMaterial\r\n              map={text.preview instanceof Texture ? text.preview : null}\r\n              transparent\r\n              roughness={isLuxury && !hasCrystals ? 0.75 : 0}\r\n              depthTest\r\n              depthWrite={false}\r\n              normalMap={normalMap}\r\n              normalScale={new Vector2(normalScale, normalScale)}\r\n            />\r\n          </Decal>\r\n        </mesh>\r\n      </Canvas>\r\n      <div\r\n        className={styles.canvasClickableCover}\r\n        onClick={() => {\r\n          setShouldShow(true);\r\n          setDataUrl(canvasRef.current?.toDataURL() || '');\r\n        }}\r\n      >\r\n        <span className={styles.canvasClickableCover__imgContainer}>\r\n          <img height={32} width={32} src='/icons/click-icon.png' />\r\n        </span>\r\n      </div>\r\n      {shouldShow &&\r\n        canvasRef &&\r\n        dataUrl &&\r\n        createPortal(\r\n          <>\r\n            <div className={styles.navTextSceneFullscreen}>\r\n              <span\r\n                onClick={() => setShouldShow(false)}\r\n                className={styles.navTextSceneFullscreen__closeBtn}\r\n              >\r\n                x\r\n              </span>\r\n              <span className={styles.navTextSceneFullscreen__imgContainer}>\r\n                <img style={{ zoom }} src={dataUrl} alt='Text Preview' />\r\n              </span>\r\n              <span className={styles.navTextSceneFullscreen__zoomContainer}>\r\n                <img\r\n                  onClick={addZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-in-icon.png'\r\n                  alt='zoom in'\r\n                />\r\n                <img\r\n                  onClick={subtractZoom}\r\n                  height='32'\r\n                  width='32'\r\n                  src='/icons/zoom-out-icon.png'\r\n                  alt='zoom out'\r\n                />\r\n              </span>\r\n            </div>\r\n          </>,\r\n          portalRef,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextPreviewScene;\r\n","import { CanvasText, PatternType, getMaterialUrl } from '@lib/canvas';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { CanvasTexture } from 'three';\r\nimport type { NavTextSelectProps } from './NavTextSelect';\r\nimport { usePortalRef } from '@hooks';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport styles from './NavText.module.scss';\r\nimport { loadImage } from '@lib/img.util';\r\nimport NavTextPreviewScene from '@components/three/CustomiserCanvas/NavTextScene';\r\nimport FormInput from '@components/ui/FormInput';\r\n\r\n// TODO - Pre load the fonts somewhere\r\nasync function loadFonts(fontUrl: string) {\r\n  const font = new FontFace('testFont', `url(${fontUrl})`);\r\n  await font.load();\r\n  document.fonts.add(font);\r\n}\r\n\r\nfunction getPatternType({\r\n  hasCrystals,\r\n  isLuxury,\r\n}: {\r\n  hasCrystals: boolean;\r\n  isLuxury: boolean;\r\n}): PatternType {\r\n  if (!hasCrystals && isLuxury) return 'embroidery';\r\n  else if (hasCrystals) return 'crystals';\r\n\r\n  return '';\r\n}\r\n\r\ninterface NavTextPreviewProps extends NavTextSelectProps {\r\n  mainTextInputRef: React.MutableRefObject<HTMLInputElement | null>;\r\n}\r\n\r\nconst NavTextPreview = ({ editText, mainTextInputRef }: NavTextPreviewProps) => {\r\n  const previewImgRef = useRef<HTMLImageElement | null>(null);\r\n  const [fontFamily, setFontFamily] = useState<string | undefined>(editText?.font);\r\n  const [isVisiblePreview, setIsVisiblePreview] = useState(false);\r\n\r\n  const hasCrystals: boolean = editText?.crystalPrice ? true : false;\r\n  const isLuxury: boolean = editText?.selectedName?.id === '2' ? true : false;\r\n  const hasPuff: boolean = editText?.puffPrice && !hasCrystals ? true : false; // 3D puff\r\n  const toNormalMap = hasCrystals ? false : true;\r\n  const patternType = getPatternType({ hasCrystals, isLuxury });\r\n\r\n  const { updateText, addText } = useCustomiserStore();\r\n\r\n  const portalRef = usePortalRef('NavHeaderAfter');\r\n\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (editText?.key) {\r\n      updateText(editText?.key, {\r\n        text: e.target.value,\r\n      });\r\n    } else {\r\n      if (e.target.value) {\r\n        addText({ text: e.target.value });\r\n      }\r\n    }\r\n    mainTextInputRef?.current?.focus();\r\n  };\r\n\r\n  /**\r\n   * Save image here\r\n   */\r\n  const materialImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.material));\r\n  }, [editText?.material]);\r\n  const outlineImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.outline));\r\n  }, [editText?.outline]);\r\n  const fabricPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/Fabric_Knitted_006_height_small.png');\r\n  }, []);\r\n  const crystalNormalMapImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-12.png');\r\n  }, []);\r\n  const crystalBgImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage(getMaterialUrl(editText?.crystalBackground));\r\n  }, [editText?.crystalBackground]);\r\n  const crystalBgPatternImgMemo = useMemo<Promise<HTMLImageElement>>(() => {\r\n    return loadImage('/crystal-bg-pattern.png');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const previewImgDom = previewImgRef.current as HTMLImageElement;\r\n\r\n    (async () => {\r\n      const canvasText = new CanvasText({\r\n        hasPuff,\r\n        toNormalMap,\r\n        patternType,\r\n        text: editText?.text,\r\n      });\r\n\r\n      if (!editText || !editText.key || !isVisiblePreview) {\r\n        canvasText.clear();\r\n        return;\r\n      }\r\n\r\n      if (!editText.text) {\r\n        canvasText.clear();\r\n        updateText(editText.key, {\r\n          preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Adjust this once preloading fonts has been implemented\r\n      if (fontFamily !== editText?.font) {\r\n        setFontFamily(editText?.font);\r\n        await loadFonts(editText?.font as string);\r\n      }\r\n\r\n      const img = editText?.material && (await materialImgMemo);\r\n      const outlineImg = editText?.outline && (await outlineImgMemo);\r\n      const embroideryPattern = await fabricPatternImgMemo;\r\n      const crystalNormalMap = await crystalNormalMapImgMemo;\r\n      const crystalBgPatternImg = await crystalBgPatternImgMemo;\r\n      const crystalBgImg = editText?.crystalBackground && (await crystalBgImgMemo);\r\n\r\n      const shouldUsePattern = isLuxury && !hasPuff;\r\n      const patternImg = shouldUsePattern && (hasCrystals ? crystalNormalMap : embroideryPattern);\r\n\r\n      await canvasText.previewText({\r\n        material: img,\r\n        outline: outlineImg,\r\n        previewImg: previewImgDom,\r\n        normalMapPatternImg: patternImg,\r\n        crystalBgPatternImg,\r\n        crystalBgImg,\r\n      });\r\n\r\n      updateText(editText.key, {\r\n        preview: new CanvasTexture(canvasText.getOutlineCanvas()),\r\n        normalMap: new CanvasTexture(canvasText.getNormalMapOutlineCanvas()),\r\n      });\r\n    })();\r\n  }, [\r\n    editText?.text,\r\n    editText?.material,\r\n    editText?.outline,\r\n    editText?.font,\r\n    editText?.crystalBackground,\r\n    isVisiblePreview,\r\n    editText?.puffPrice,\r\n    editText?.crystalPrice,\r\n  ]);\r\n\r\n  if (!portalRef) {\r\n    return null;\r\n  }\r\n\r\n  return createPortal(\r\n    <>\r\n      <div id='testPreview' style={{ position: 'absolute', zIndex: '100' }} />\r\n      <div className={styles.textPreview}>\r\n        <div>\r\n          {!editText?.text ? (\r\n            // <div className={styles.noText}>Enter text to show preview</div>\r\n            <FormInput\r\n              onChange={handleOnChange}\r\n              value={editText?.text}\r\n              placeholder='Type text here...'\r\n              className={styles.textPreviewTextInput}\r\n            />\r\n          ) : (\r\n            <>\r\n              {/* Image is no longer needed, remove this */}\r\n              <div className={styles.textPreview__imgContainer} style={{ display: 'none' }}>\r\n                <img\r\n                  height={80}\r\n                  width={640}\r\n                  ref={(el) => {\r\n                    previewImgRef.current = el;\r\n                    setIsVisiblePreview(!!el);\r\n                  }}\r\n                />\r\n              </div>\r\n              {previewImgRef.current?.src ? (\r\n                <>\r\n                  <NavTextPreviewScene text={editText} />\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>,\r\n    portalRef,\r\n  );\r\n};\r\n\r\nexport default NavTextPreview;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"NavTextCategories_main__aV8kW\",\"selected\":\"NavTextCategories_selected__NTJgj\"};","import styles from './NavTextCategories.module.scss';\r\n\r\ninterface NavTextCategoriesProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst NavTextCategories = ({ children }: NavTextCategoriesProps) => {\r\n  return <div className={styles.main}>{children}</div>;\r\n};\r\n\r\nexport default NavTextCategories;\r\n","import { FaArrowRightLong } from 'react-icons/fa6';\r\nimport styles from './Button.module.scss';\r\n\r\ninterface NextStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst NextStepButton = ({ onClick, isClickable, isVisible }: NextStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__next}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Next Step &nbsp;\r\n      <FaArrowRightLong />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default NextStepButton;\r\n","import { FaArrowLeftLong } from 'react-icons/fa6';\r\nimport styles from './Button.module.scss';\r\n\r\ninterface PrevStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst PrevStepButton = ({ onClick, isClickable, isVisible }: PrevStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__prev}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      <FaArrowLeftLong /> &nbsp; Previous\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PrevStepButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NavTextNavSteps_root__Ys0fR\"};","import styles from './Button.module.scss';\r\n\r\ninterface CancelStepButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst CancelStepButton = ({ onClick, isClickable, isVisible }: CancelStepButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__cancel}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Cancel\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CancelStepButton;\r\n","import styles from './Button.module.scss';\r\n\r\ninterface ApplyButtonProps {\r\n  onClick: () => void;\r\n  isClickable?: boolean;\r\n  isVisible?: boolean;\r\n}\r\n\r\nconst ApplyButton = ({ onClick, isClickable, isVisible }: ApplyButtonProps) => {\r\n  const classNames = `\r\n    ${styles.stepsNavButtons}\r\n    ${styles.stepsNavButtons__next}\r\n    ${typeof isClickable === 'undefined' || isClickable ? styles.clickable : ''}\r\n    ${typeof isVisible === 'undefined' || isVisible ? styles.visible : ''}\r\n  `;\r\n  return (\r\n    <button className={classNames} onClick={onClick}>\r\n      Apply Text\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ApplyButton;\r\n","import NextStepButton from '@components/ui/Button/NextStepButton';\r\nimport PrevStepButton from '@components/ui/Button/PrevStepButton';\r\nimport { usePortalRef } from '@hooks';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './NavTextNavSteps.module.scss';\r\nimport CancelStepButton from '@components/ui/Button/CancelStepButton';\r\nimport ApplyButton from '@components/ui/Button/ApplyButton';\r\nimport InfoDisplay from '@components/ui/InfoButton/InfoDisplay';\r\n\r\ninterface NavTextNavStepsProps {\r\n  isClickableNext?: boolean;\r\n  isClickablePrev?: boolean;\r\n  isVisibleNext?: boolean;\r\n  isVisiblePrev?: boolean;\r\n\r\n  onClickNext?: () => void;\r\n  onClickPrev?: () => void;\r\n  onClickCancel?: () => void;\r\n  onClickSave?: () => void;\r\n}\r\n\r\nconst NavTextNavSteps = ({\r\n  isClickableNext,\r\n  isClickablePrev,\r\n  isVisibleNext,\r\n  isVisiblePrev,\r\n  onClickNext,\r\n  onClickPrev,\r\n  onClickCancel,\r\n  onClickSave,\r\n}: NavTextNavStepsProps) => {\r\n  const portalRef = usePortalRef('CustomiserNavActions');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n\r\n  if (!portalRef || !popupContainerRef) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      {/* {ReactDOM.createPortal(\r\n        <InfoDisplay>\r\n          <h5>Click where you want the text to go</h5>\r\n        </InfoDisplay>,\r\n        popupContainerRef,\r\n      )} */}\r\n      {ReactDOM.createPortal(\r\n        <div className={styles.root}>\r\n          {isVisiblePrev !== true && (\r\n            <CancelStepButton\r\n              onClick={\r\n                onClickCancel ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {(typeof isVisiblePrev === 'undefined' || isVisiblePrev) && (\r\n            <PrevStepButton\r\n              isClickable={isClickablePrev}\r\n              isVisible={isVisiblePrev}\r\n              onClick={\r\n                onClickPrev ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {(typeof isVisibleNext === 'undefined' || isVisibleNext) && (\r\n            <NextStepButton\r\n              isClickable={isClickableNext}\r\n              isVisible={isVisibleNext}\r\n              onClick={\r\n                onClickNext ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {isVisibleNext !== true && (\r\n            <ApplyButton\r\n              onClick={\r\n                onClickSave ||\r\n                (() => {\r\n                  return;\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        </div>,\r\n        portalRef,\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavTextNavSteps;\r\n","import FormInput from '@components/ui/FormInput';\r\nimport styles from './NavText.module.scss';\r\nimport { useCustomiserStore, type TextCustomiser } from '@store/customiser';\r\nimport { LegacyRef, forwardRef, useEffect, useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport inputStyles from './../../ui/FormInput/FormInput.module.scss';\r\n\r\ninterface NavTextInputProps {\r\n  editText?: TextCustomiser;\r\n}\r\n\r\nconst NavTextInput = forwardRef(({ editText }: NavTextInputProps, ref) => {\r\n  const [text, setText] = useState<string | undefined>(editText?.text);\r\n  const { updateText, addText } = useCustomiserStore((state) => state);\r\n\r\n  const setTextOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const rootClassName = cn(inputStyles.root, styles.textInput);\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        text,\r\n        // font: font.url,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      if (text) {\r\n        addText({ text });\r\n      }\r\n    }\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    console.log('ref', ref);\r\n  }, [ref]);\r\n\r\n  return (\r\n    <div className={styles.textInputContainer}>\r\n      {/* <FormInput\r\n        ref={inputRef}\r\n        className={styles.textInput}\r\n        placeholder='Type text here...'\r\n        value={editText?.text}\r\n        onChange={setTextOnChange}\r\n      /> */}\r\n      <div className={rootClassName}>\r\n        <input\r\n          className={inputStyles.input}\r\n          onChange={setTextOnChange}\r\n          ref={ref as LegacyRef<HTMLInputElement> | undefined}\r\n          placeholder='Type text here...'\r\n          value={editText?.text}\r\n        />\r\n        {/* <label className={inputStyles.label}>Type text here</label> */}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nNavTextInput.displayName = 'NavTextInput';\r\n\r\nexport default NavTextInput;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport { LegacyRef, startTransition, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavDecalAdjust from '../NavDecalAdjust';\r\n\r\nimport Accordion from '@components/ui/Accordion/Accordion';\r\nimport NavStepButtons from '../NavStepButtons';\r\nimport styles from './NavText.module.scss';\r\nimport NavTextFinish from './NavTextFinish';\r\nimport NavTextNameTypes from './NavTextNameTypes';\r\nimport NavTextOutline from './NavTextOutline';\r\nimport NavTextSelect from './NavTextSelect';\r\nimport NavTextsSelection from './NavTextsSelection';\r\nimport NavTextPreview from './NavTextPreview';\r\nimport { usePortalRef } from '@hooks';\r\nimport Button from '@components/ui/Button';\r\nimport { createPortal } from 'react-dom';\r\nimport NavTextCategories from './NavTextCategories';\r\nimport NavTextNavSteps from './NavTextNavSteps';\r\nimport { has } from 'lodash';\r\nimport FormInput from '@components/ui/FormInput';\r\nimport NavTextInput from './NavTextInput';\r\nimport ContainedButton from '@components/ui/Button/ContainedButton';\r\n\r\n// export interface NavTextProps {\r\n\r\n// }\r\n\r\nconst NavText = () => {\r\n  const [step, setStep] = useState<number | undefined>(0);\r\n\r\n  const texts = useCustomiserStore((state) => state.texts);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const deleteText = useCustomiserStore((state) => state.deleteText);\r\n  const updateIsMinimizedCustomiserNav = useCustomiserStore(\r\n    (state) => state.updateIsMinimizedCustomiserNav,\r\n  );\r\n  const isMinimizedCustomiserNav = useCustomiserStore((state) => state.isMinimizedCustomiserNav);\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const [showSelector, setShowSelector] = useState(editText?.key !== undefined);\r\n  const [isPickingOutline, setIsPickingOutline] = useState(false);\r\n  const [isPickingCrystal, setIsPickingCrystal] = useState(false);\r\n  const navHeaderRef = usePortalRef('NavHeader');\r\n  const popupContainerRef = usePortalRef('popupContainer');\r\n\r\n  const mainTextInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const noOutlineSelected = step === 2 && isPickingOutline && !editText?.outline;\r\n  const noCrystalSelected = step === 3 && isPickingCrystal && !editText?.crystalBackground;\r\n  const hasFinishedAllSteps = step === 3 && (editText?.crystalBackground || !isPickingCrystal);\r\n\r\n  const hasFinishedStep1 = !!editText?.text;\r\n  const hasFinishedStep2 = !!editText?.material;\r\n  const hasFinishedStep3 = !!editText?.outline;\r\n  const hasFinishedStep4 = !!editText?.crystalBackground;\r\n\r\n  const finishedSteps = [\r\n    hasFinishedStep1,\r\n    hasFinishedStep2,\r\n    !noOutlineSelected,\r\n    !noCrystalSelected,\r\n  ];\r\n\r\n  const isVisiblePrev = step !== 0;\r\n  const isClickableNext = finishedSteps[step || 0];\r\n  const isVisibleNext = typeof step === 'number' ? step < 3 : false;\r\n  console.log('isVisibleNext', isVisibleNext);\r\n  console.log('step', step);\r\n\r\n  const saveAndApplyChecker = () => {\r\n    if (!hasFinishedStep1) {\r\n      alert('Please enter a text to continue');\r\n      setStep(0);\r\n      return false;\r\n    } else if (!hasFinishedStep2) {\r\n      alert('Select a text color to continue');\r\n      setStep(1);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editText?.key) {\r\n      setShowSelector(true);\r\n    } else {\r\n      setShowSelector(false);\r\n    }\r\n  }, [editText]);\r\n\r\n  const addText = () => {\r\n    setShowSelector(true);\r\n  };\r\n\r\n  const setScale = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalScale: Number(event) });\r\n    });\r\n  };\r\n\r\n  const setRotation = (event: number) => {\r\n    startTransition(() => {\r\n      if (editText?.key) updateText(editText.key, { decalRotation: Number(event) });\r\n    });\r\n  };\r\n\r\n  const placeText = () => {\r\n    if (isPickingCrystal && noCrystalSelected) {\r\n      alert('Select a crystal type');\r\n      return;\r\n    }\r\n    if (editText?.key && !editText?.decalPosition) {\r\n      updateText(editText.key, {\r\n        decalFreeze: true,\r\n        decalPosition: [-0.01989325641440387, 2.436930108198209, 1.6226380277735046],\r\n        decalOrientation: [\r\n          -0.14799034762565572,\r\n          -0.17866277612764514,\r\n          -0.026487426629834374,\r\n          'XYZ',\r\n        ],\r\n      });\r\n    }\r\n    updateIsMinimizedCustomiserNav(true);\r\n  };\r\n\r\n  const applyText = () => {\r\n    if (editText?.key) {\r\n      updateText(editText.key, {\r\n        decalFreeze: false,\r\n        edit: false,\r\n        hasApplied: true,\r\n      });\r\n    }\r\n\r\n    setStep(0);\r\n\r\n    setShowSelector(false);\r\n  };\r\n\r\n  const cancelText = () => {\r\n    if (!editText?.text || (editText?.text && confirm('Cancel text customization?'))) {\r\n      applyText();\r\n      if (editText?.key && !editText?.hasApplied) {\r\n        deleteText(editText.key);\r\n      }\r\n      setStep(0);\r\n      setShowSelector(false);\r\n    }\r\n  };\r\n\r\n  const handleTitleClick = (_step: number | string) => {\r\n    if (_step === step) {\r\n      setStep(undefined);\r\n    } else {\r\n      setStep(_step as number);\r\n    }\r\n  };\r\n\r\n  const maxStep = 4;\r\n\r\n  const handleNext = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step < maxStep - 1) {\r\n      switch (step) {\r\n        case 0:\r\n          if (!editText?.text) {\r\n            alert('Please enter a text to continue');\r\n            return;\r\n          }\r\n          break;\r\n        case 1:\r\n          if (!editText?.selectedName) {\r\n            alert('Select a text color type');\r\n            return;\r\n          } else if (!editText?.material) {\r\n            alert('Select a color for text');\r\n            return;\r\n          }\r\n          break;\r\n        case 2:\r\n          if (isPickingOutline && !editText?.outline) {\r\n            alert('Select an outline');\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      console.log('editText', editText);\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (step === undefined) {\r\n      setStep(0);\r\n    } else if (step > 0) {\r\n      setStep(step - 1);\r\n    }\r\n  };\r\n\r\n  const navCategoryNames = ['Font', 'Color', 'Outline', 'Finish'];\r\n  const NavTextCategoriesItems = () => {\r\n    const handleOnClick = (index: number) => {\r\n      if (navCategoryNames[index] === 'Outline' || navCategoryNames[index] === 'Finish') {\r\n        if (!saveAndApplyChecker()) return;\r\n      }\r\n      if (!editText?.text) {\r\n        alert('Please enter a text to continue');\r\n        return;\r\n      }\r\n      handleTitleClick(index);\r\n    };\r\n\r\n    const finishedCategories = [\r\n      hasFinishedStep1,\r\n      hasFinishedStep2,\r\n      hasFinishedStep3,\r\n      hasFinishedStep4,\r\n    ];\r\n\r\n    return navCategoryNames.map((name, index) => {\r\n      const isSelectedCategory = step === index;\r\n      const categoryClassNames = `\r\n        ${isSelectedCategory ? styles.selectedCategoryItem : ''}\r\n        ${finishedCategories[index] ? styles.finishedCategoryItem : ''}\r\n      `;\r\n      return (\r\n        <div key={index} className={categoryClassNames} onClick={() => handleOnClick(index)}>\r\n          {name}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const CategoryDisplay = () => {\r\n    switch (step) {\r\n      case 0:\r\n        return <NavTextSelect editText={editText} />;\r\n      case 1:\r\n        return <NavTextNameTypes editText={editText} />;\r\n      case 2:\r\n        return <NavTextOutline editText={editText} setIsPickingOutline={setIsPickingOutline} />;\r\n      case 3:\r\n        return (\r\n          <NavTextFinish\r\n            setIsPickingCrystal={setIsPickingCrystal}\r\n            editText={editText}\r\n          ></NavTextFinish>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showSelector ? (\r\n        <div className={styles.navTextEdit}>\r\n          <NavTextPreview mainTextInputRef={mainTextInputRef} editText={editText} />\r\n          <NavTextCategories>{NavTextCategoriesItems()}</NavTextCategories>\r\n          {CategoryDisplay()}\r\n\r\n          {/* <Accordion\r\n            step={0}\r\n            title='Text and Font'\r\n            hasFinishedStep={hasFinishedStep1}\r\n            currentStep={step ?? -1}\r\n            onTitleClick={handleTitleClick}\r\n          >\r\n            <NavTextSelect editText={editText} />\r\n          </Accordion>\r\n          <Accordion\r\n            step={1}\r\n            title='Text Color'\r\n            hasFinishedStep={hasFinishedStep2}\r\n            currentStep={step ?? -1}\r\n            onTitleClick={handleTitleClick}\r\n          >\r\n            <NavTextNameTypes editText={editText} />\r\n          </Accordion>\r\n          <Accordion\r\n            step={2}\r\n            title='Outline'\r\n            hasFinishedStep={hasFinishedStep3}\r\n            currentStep={step ?? -1}\r\n            onTitleClick={() => {\r\n              if (!saveAndApplyChecker()) return;\r\n              handleTitleClick(2);\r\n            }}\r\n          >\r\n            <NavTextOutline editText={editText} setIsPickingOutline={setIsPickingOutline} />\r\n          </Accordion>\r\n          <Accordion\r\n            step={3}\r\n            title='Finish'\r\n            currentStep={step ?? -1}\r\n            hasFinishedStep={hasFinishedStep4}\r\n            onTitleClick={() => {\r\n              if (!saveAndApplyChecker()) return;\r\n              handleTitleClick(3);\r\n            }}\r\n          >\r\n            <NavTextFinish\r\n              setIsPickingCrystal={setIsPickingCrystal}\r\n              editText={editText}\r\n            ></NavTextFinish>\r\n          </Accordion> */}\r\n          {/* <NavStepButtons\r\n            step={step}\r\n            maxStep={maxStep - 1}\r\n            onNext={handleNext}\r\n            onPrevious={handlePrevious}\r\n            onApply={applyText}\r\n            onCancel={cancelText}\r\n            onPlace={() => {\r\n              if (!saveAndApplyChecker()) return;\r\n              placeText();\r\n            }}\r\n            editText={editText}\r\n            noCrystalSelected={noCrystalSelected}\r\n          /> */}\r\n          <NavTextNavSteps\r\n            onClickNext={handleNext}\r\n            onClickPrev={handlePrevious}\r\n            onClickCancel={cancelText}\r\n            onClickSave={placeText}\r\n            isVisiblePrev={isVisiblePrev}\r\n            isVisibleNext={isVisibleNext}\r\n            isClickableNext={isClickableNext}\r\n          />\r\n          {editText?.key && editText.decalPosition && (\r\n            <NavDecalAdjust\r\n              scale={editText?.decalScale}\r\n              rotation={editText?.decalRotation}\r\n              onScale={setScale}\r\n              onRotate={setRotation}\r\n            />\r\n          )}\r\n          {editText &&\r\n            isMinimizedCustomiserNav &&\r\n            navHeaderRef &&\r\n            hasFinishedAllSteps &&\r\n            createPortal(\r\n              <ContainedButton\r\n                onClick={() => {\r\n                  if (!saveAndApplyChecker()) {\r\n                    return updateIsMinimizedCustomiserNav(false);\r\n                  }\r\n\r\n                  applyText();\r\n                  updateIsMinimizedCustomiserNav(false);\r\n                }}\r\n                classNames={styles.navHeaderSaveText}\r\n              >\r\n                SAVE\r\n              </ContainedButton>,\r\n              navHeaderRef,\r\n            )}\r\n          {popupContainerRef &&\r\n            createPortal(\r\n              <NavTextInput ref={mainTextInputRef} editText={editText} />,\r\n              popupContainerRef,\r\n            )}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <NavTextsSelection onAddTextClicked={addText}></NavTextsSelection>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavText;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CustomiserNav_root__rgnWr\",\"open\":\"CustomiserNav_open__6TgJc\",\"isFullscreen\":\"CustomiserNav_isFullscreen__xo92v\",\"minimized\":\"CustomiserNav_minimized__-4C1L\",\"actions\":\"CustomiserNav_actions__B0fm0\",\"content\":\"CustomiserNav_content__whsIx\",\"headerAfter\":\"CustomiserNav_headerAfter__bXrUD\",\"navHeaderScroll\":\"CustomiserNav_navHeaderScroll__0nzPV\",\"selected\":\"CustomiserNav_selected__x6zsL\",\"hasActions\":\"CustomiserNav_hasActions__xe43g\"};","import { useCustomiserStore } from '@store/customiser';\r\n\r\ninterface NavHeaderScrollProps {\r\n  styles?: {\r\n    readonly [key: string]: string;\r\n  };\r\n}\r\n\r\nconst NavHeaderScroll = ({ styles }: NavHeaderScrollProps) => {\r\n  const { navItems, selectedNav, setSelectedNav } = useCustomiserStore();\r\n  return (\r\n    <div className={styles?.navHeaderScroll}>\r\n      {navItems.map((item, index) => {\r\n        const classes = selectedNav?.name === item.name ? styles?.selected : '';\r\n        return (\r\n          <div className={classes} key={index} onClick={() => setSelectedNav(index)}>\r\n            {item.name}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavHeaderScroll;\r\n","import { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\r\nimport NavFitting from '../NavFitting';\r\nimport NavFlags from '../NavFlags';\r\nimport NavHeader from '../NavHeader';\r\nimport NavImages from '../NavImages';\r\nimport NavOptions from '../NavOptions';\r\nimport NavPart from '../NavPart';\r\nimport NavMinimize from '../NavMinimize';\r\nimport NavSize from '../NavSize';\r\nimport NavText from '../NavText';\r\n\r\nimport styles from './CustomiserNav.module.scss';\r\nimport { FocusCameraOnPart } from '@components/layout/Customiser/Customiser';\r\nimport NavHeaderScroll from '../NavHeader/NavHeaderScroll';\r\n\r\nexport interface CustomiserNavProps {\r\n  className?: string;\r\n  focusCameraOnPart?: FocusCameraOnPart;\r\n}\r\n\r\nconst CustomiserNav = ({ className, focusCameraOnPart }: CustomiserNavProps) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [scrollCoordinates, setScrollCoordinates] = useState({ left: 0, top: 0 });\r\n\r\n  const {\r\n    selectedPart,\r\n    selectedNav,\r\n    texts,\r\n    isMinimizedCustomiserNav,\r\n    updateIsMinimizedCustomiserNav,\r\n  } = useCustomiserStore();\r\n\r\n  const scrollableRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const editText = useMemo(() => texts?.find((g) => g.edit), [texts]);\r\n  const isFullscreen = useMemo(\r\n    () => selectedNav?.name === 'Text' && editText,\r\n    [selectedNav, editText],\r\n  );\r\n\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    {\r\n      [styles.open]: isOpen,\r\n      [styles.minimized]: isMinimizedCustomiserNav,\r\n      [styles.hasActions]: selectedNav?.hasActions,\r\n      [styles.isFullscreen]: false,\r\n    },\r\n    className,\r\n  );\r\n\r\n  const saveScrollCoordinates = () => {\r\n    if (isOpen && scrollableRef.current) {\r\n      setScrollCoordinates({\r\n        left: scrollableRef.current.scrollLeft,\r\n        top: scrollableRef.current.scrollTop,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen && scrollableRef.current) {\r\n      scrollableRef.current.scrollTo({\r\n        ...scrollCoordinates,\r\n        // Typescript issue: https://github.com/Microsoft/TypeScript/issues/28755\r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        behavior: 'instant',\r\n      });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const toggleOpen = () => {\r\n    saveScrollCoordinates();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedNav === null && selectedPart === null) {\r\n      setIsOpen(true);\r\n    } else {\r\n      setIsOpen(false);\r\n      updateIsMinimizedCustomiserNav(false);\r\n    }\r\n  }, [selectedPart, selectedNav]);\r\n\r\n  return (\r\n    <motion.nav\r\n      layout='preserve-aspect'\r\n      transition={{\r\n        type: 'spring',\r\n        stiffness: 700,\r\n        damping: 40,\r\n      }}\r\n      className={rootClassName}\r\n    >\r\n      {/* {!isOpen && (\r\n        <NavMinimize\r\n          isMinimizedCustomiserNav={isMinimizedCustomiserNav}\r\n          onMinimize={() => updateIsMinimizedCustomiserNav(true)}\r\n          onMaximize={() => updateIsMinimizedCustomiserNav(false)}\r\n        />\r\n      )} */}\r\n      <NavHeader\r\n        className={styles.header}\r\n        toggle={() => toggleOpen()}\r\n        isOpen={isOpen}\r\n        onClick={() => {\r\n          updateIsMinimizedCustomiserNav(!isMinimizedCustomiserNav);\r\n        }}\r\n        isMinimized={isMinimizedCustomiserNav}\r\n      />\r\n      {selectedNav && <NavHeaderScroll styles={styles} />}\r\n      <div id='NavHeaderAfter' className={styles.headerAfter}></div>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <AnimatePresence initial={false}>\r\n          <motion.div\r\n            id='scrollable'\r\n            className={styles.content}\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n              open: { opacity: 1 },\r\n              collapsed: { opacity: 0 },\r\n            }}\r\n            ref={(el) => {\r\n              scrollableRef.current = el;\r\n            }}\r\n          >\r\n            {isOpen ? (\r\n              <NavOptions toggle={() => toggleOpen()} />\r\n            ) : selectedNav?.type === 'fitting' ? (\r\n              <NavFitting focusCameraOnPart={focusCameraOnPart} />\r\n            ) : selectedNav?.type === 'names' ? (\r\n              <NavText />\r\n            ) : selectedNav?.type === 'flags' ? (\r\n              <NavFlags />\r\n            ) : selectedNav?.type === 'images' ? (\r\n              <NavImages />\r\n            ) : selectedNav?.type === 'size' ? (\r\n              <NavSize />\r\n            ) : selectedPart ? (\r\n              <NavPart part={selectedPart} />\r\n            ) : null}\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </Suspense>\r\n      {!isOpen && selectedNav?.hasActions && (\r\n        <div className={styles.actions}>\r\n          {selectedPart && <div id='CustomiserNavMaterial'></div>}\r\n          <div id='CustomiserNavActions'></div>\r\n        </div>\r\n      )}\r\n    </motion.nav>\r\n  );\r\n};\r\n\r\nexport default CustomiserNav;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Header_root__cz6kt\",\"total\":\"Header_total__nSueF\",\"price\":\"Header_price__GikHZ\",\"resetBtn\":\"Header_resetBtn__yzIQA\",\"addToBasket\":\"Header_addToBasket__T8GpW\"};","import Button from '@components/ui/Button';\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport cn from 'classnames';\r\n\r\nimport { useDesignStore } from '@store/design';\r\nimport styles from './Header.module.scss';\r\nimport Price from '@components/ui/Price';\r\n\r\nexport interface HeaderProps {\r\n  className?: string;\r\n}\r\n\r\nconst Header = ({ className }: HeaderProps) => {\r\n  const rootClassName = cn(styles.root, className);\r\n  const total = useCustomiserStore((state) => state.total());\r\n  const designComplete = useCustomiserStore((state) => state.designComplete());\r\n  const setResetCamera = useDesignStore((state) => state.setResetCamera);\r\n  const addingToCart = useDesignStore((state) => state.addingToCart);\r\n\r\n  const resetCustomerSelections = useCustomiserStore((state) => state.resetCustomerSelections);\r\n\r\n  const saveDesign = () => {\r\n    setResetCamera();\r\n  };\r\n\r\n  const resetPopup = () => {\r\n    if (confirm('Reset everything?')) {\r\n      resetCustomerSelections();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div id='reset-btn-container' className={styles.resetBtn}>\r\n        <Button onClick={resetPopup}>CLEAR</Button>\r\n      </div>\r\n      <div className={styles.total}>\r\n        Current <Price className={styles.price} priceString={total} />\r\n      </div>\r\n      <Button\r\n        className={styles.addToBasket}\r\n        onClick={saveDesign}\r\n        disabled={!designComplete || addingToCart}\r\n      >\r\n        {addingToCart ? 'Saving' : 'Add to basket'}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Customiser_root__+9xV1\",\"nav\":\"Customiser_nav__xnqzP\",\"model\":\"Customiser_model__jxaOf\",\"controls\":\"Customiser_controls__Ar93L\",\"background\":\"Customiser_background__qq7nU\",\"loading\":\"Customiser_loading__vNYyO\",\"header\":\"Customiser_header__1SFjA\",\"close\":\"Customiser_close__sH1pv\"};","import CustomiserNav from '@components/nav/CustomiserNav';\r\nimport Button from '@components/ui/Button';\r\nimport { useDesignStore } from '@store/design';\r\nimport cn from 'classnames';\r\nimport { lazy, Suspense, useRef } from 'react';\r\nimport Header from '../Header';\r\n\r\nconst CustomiserCanvas = lazy(() => import('@components/three/CustomiserCanvas'));\r\n\r\nimport { useCustomiserStore } from '@store/customiser';\r\nimport styles from './Customiser.module.scss';\r\nimport { Camera } from 'three';\r\nimport { Falsey } from 'lodash';\r\nimport { cameraDefault } from '@components/three/CustomiserCanvas/CustomiserCanvas';\r\n\r\nexport interface CustomiserProps {\r\n  className?: string;\r\n}\r\n\r\nconst cameraLegCutPosition: [x: number, y: number, z: number] = [\r\n  -0.95422573319504, -0.8257934547233227, 0.48109793465966844,\r\n];\r\n\r\nexport type FocusCameraOnPart = (part?: string | Falsey) => void;\r\n\r\nconst Customiser = ({ className }: CustomiserProps) => {\r\n  const setShow = useDesignStore((state) => state.setShow);\r\n  const { selectedNav, remountTrigger } = useCustomiserStore();\r\n\r\n  const cameraRef = useRef<Camera | null>(null);\r\n  const handleCameraRef = (ref: Camera | null) => {\r\n    cameraRef.current = ref;\r\n  };\r\n\r\n  const focusCameraOnPart = (part?: string | Falsey) => {\r\n    const focusCamera = (coordinates: number[]) => {\r\n      const camera = cameraRef.current;\r\n      if (camera) {\r\n        camera.position.set(coordinates[0], coordinates[1], coordinates[2]);\r\n      }\r\n    };\r\n\r\n    switch (part && part.toLowerCase()) {\r\n      case 'leg cut':\r\n        focusCamera(cameraLegCutPosition);\r\n        break;\r\n      default:\r\n        focusCamera(cameraDefault);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const rootClassName = cn(styles.root, className, {\r\n    // [styles.navOpen]: selectedNav !== null,\r\n  });\r\n\r\n  return (\r\n    <div className={rootClassName}>\r\n      <div\r\n        id='popupContainer'\r\n        style={{\r\n          // re-figure out again how to put styled ID in scss\r\n          position: 'absolute',\r\n          zIndex: '201',\r\n        }}\r\n      />\r\n      <CustomiserNav className={styles.nav} focusCameraOnPart={focusCameraOnPart} />\r\n      <Header className={styles.header} />\r\n      <svg\r\n        className={styles.background}\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 114.383 97.088'\r\n      >\r\n        <defs>\r\n          <clipPath id='a'>\r\n            <path d='M0 0h114.383v97.088H0z' />\r\n          </clipPath>\r\n        </defs>\r\n        <g clipPath='url(#a)' fillRule='evenodd'>\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='M8.567 88.645v-.044c1.487-.24 2.986-.466 4.472-.716a1.278 1.278 0 0 0 .743-1.862 1.019 1.019 0 0 0-.949-.409c-2.928.338-5.845.747-8.785 1.147-.492.069-.709.447-.687 1.262.012 1.216.126 1.481.721 1.375 1.5-.243 3.008-.506 4.484-.753M23.905 77.54c-1.224.072-1.842.39-1.9 2.044a69.405 69.405 0 0 0 .011 5.312c.057 1.481.606 2.112 1.716 1.99q4.444-.488 8.888-1.012a1.851 1.851 0 0 0 1.659-1.975c.057-.853.1-1.709.1-2.562.023-.856.023-1.247 0-2.093-.068-1.6-.755-1.769-2.024-1.7Zm9.982-6.006c2.119 0 3.229 1.3 3.744 3.247a8.461 8.461 0 0 1 .32 2.222 225.099 225.099 0 0 1 0 7.896 8.3 8.3 0 0 1-.869 3.622 3.721 3.721 0 0 1-2.8 2.269c-4.072.553-8.121 1.15-12.182 1.784-1.773.306-3.145-1.253-3.523-3.993a25.755 25.755 0 0 1-.229-3.54c-.011-1.275-.006-2.556 0-3.834s.046-2.562.115-3.834c.091-1.944.606-4.015 1.887-5.128a2.565 2.565 0 0 1 1.533-.709Zm61.427 6.006v-6.006h13.325c1.682-.069 2.768 1.381 3.409 3.771a16.91 16.91 0 0 1 .538 4.281 18.216 18.216 0 0 1-.515 4.3 5.807 5.807 0 0 1-1.945 3.4c-.217.181-.469.34-.652.472.8 1.45 1.611 2.926 2.4 4.443a883.295 883.295 0 0 1 2.505 4.856c-.743-.163-1.453-.331-2.139-.472-1.041-.219-2.1-.381-3.157-.644a1.328 1.328 0 0 1-.732-.643c-.641-1.2-1.285-2.373-1.933-3.55-.633-1.148-1.292-2.3-1.91-3.431-.309-.522-.606-.819-1.041-.862a90.174 90.174 0 0 1-3.74-.481c-.366-.056-.481.116-.481.656.011 1.04.011 2.081.011 3.128v3.172c-1.235-.228-2.7-.472-3.946-.691v-12.17c3.752.156 7.526.293 11.278.4.492.013 1-.006 1.487 0 .56.016.789-.769.881-1.541.091-1.2-.149-2.053-.686-2.234a3.757 3.757 0 0 0-1.19-.16Zm-11.255 0v2.709l9.585.616v4.047l-9.631-.944v2.3l9.631 1.065v5.58c-4.838-.834-8.59-1.4-13.429-2.08v-19.3h13.431v6.006ZM37.072 90.367a232.526 232.526 0 0 1 3.775-5.125 219.554 219.554 0 0 1 3.786-4.809c-1.281-1.453-2.562-2.919-3.832-4.415s-2.439-2.915-3.709-4.484h5.5a1.331 1.331 0 0 1 .881.488c.7.84 1.322 1.559 2.02 2.375s1.407 1.625 2.116 2.431c.709-.84 1.417-1.682 2.127-2.512s1.413-1.643 2.128-2.466a.948.948 0 0 1 .652-.316h5.322c-1.224 1.384-2.475 2.827-3.7 4.237s-2.448 2.853-3.672 4.287c1.3 1.472 2.628 2.933 3.935 4.387s2.619 2.919 3.924 4.409c-1.865-.006-3.741.028-5.6.091a1.194 1.194 0 0 1-.789-.422q-1.116-1.213-2.23-2.434c-.732-.8-1.476-1.625-2.208-2.45-.755.928-1.511 1.855-2.265 2.8s-1.5 1.913-2.253 2.9c-.106.138-.274.327-.423.344-1.818.208-3.66.434-5.479.685m21.618-1.509c1.258-1.422 2.528-2.816 3.786-4.215s2.516-2.809 3.775-4.218q-1.922-2.231-3.832-4.428c-1.273-1.46-2.615-2.993-3.884-4.462h5.412a1.339 1.339 0 0 1 .881.459c.7.8 1.59 1.79 2.282 2.594s1.407 1.637 2.116 2.456c.709-.822 1.422-1.647 2.128-2.481s1.557-1.842 2.268-2.7a.959.959 0 0 1 .64-.34c1.773-.006 3.534 0 5.319.012-1.235 1.516-2.584 3.175-3.812 4.64s-2.459 2.884-3.683 4.293a234.511 234.511 0 0 1 3.935 4.959 262.195 262.195 0 0 1 3.935 5.293 296.137 296.137 0 0 0-5.6-.772 1.472 1.472 0 0 1-.8-.569c-.739-.948-1.48-1.9-2.219-2.822s-1.487-1.831-2.219-2.725q-1.132 1.247-2.253 2.49c-.749.829-1.511 1.652-2.265 2.478-.1.115-.274.26-.412.253a205.452 205.452 0 0 0-5.49-.2m-43.271-6.7a3.858 3.858 0 0 1 1.979 2.993 11.586 11.586 0 0 1-.24 5.3c-.549 1.89-1.6 3-2.962 3.29C9.494 94.797 4.8 95.888.1 97.088a.159.159 0 0 1-.1-.05V81.205c.274-.019.572-.041.881-.066 3.763-.328 7.5-.656 11.255-.981.377-.031.789 0 1.018-.622.32-.9-.034-2.037-.755-2H0V71.53h12.857a3.24 3.24 0 0 1 3.2 1.944 9.3 9.3 0 0 1 .721 4.4 8.384 8.384 0 0 1-1.361 4.277'\r\n          />\r\n          <path\r\n            fill='#e7e6e6'\r\n            d='m75.165 48.1-6.079-9.03v.049c-.057 1.036-.095 2.076-.183 3.112a2.019 2.019 0 0 1-.3.929l-8.448 12.034c-.249.368-.854 1.239-1.255 1.374a.382.382 0 0 1-.448-.158 2.924 2.924 0 0 1-.17-1.252v-.015l.451-9.913a.888.888 0 0 1 .121-.521l6.771-9.393a1.068 1.068 0 0 0 0-1.4l-6.516-9.933a3.453 3.453 0 0 1-.372-1.536l-.564-9.434c-.136-2.082.98-1.647 2.035 0l9.86 15.392 5.074-7.607c.439-.71.756-1.16 1.67-1.2a28.863 28.863 0 0 0 6.026-.866 2.49 2.49 0 0 1 .955-.113.381.381 0 0 1 .292.365 7.753 7.753 0 0 1-1.169 2.293L74.64 33.912a.971.971 0 0 0-.011 1.253l8.1 12.066a7.386 7.386 0 0 1 1.192 2.336.379.379 0 0 1-.247.33 2.314 2.314 0 0 1-1.008-.05 43.691 43.691 0 0 0-6.495-.95c-.5-.024-.775-.421-1.012-.8m-17.2-18.084 2.675 4.223a.378.378 0 0 1-.005.42L57.97 38.64a.386.386 0 0 1-.639 0l-2.729-4a.379.379 0 0 1-.005-.426l2.719-4.206a.386.386 0 0 1 .65 0m-13.64-.628 10.716-16.367c.911-1.366 2.032-2.329 1.921 0l-.453 9.457a3.209 3.209 0 0 1-.565 1.514l-6.217 9.551c-.31.474-.372.717-.048 1.2l6.446 9.577a1.569 1.569 0 0 1 .389.861l.454 9.969v.025a3.345 3.345 0 0 1-.187 1.236.385.385 0 0 1-.494.158 4.869 4.869 0 0 1-1.172-1.361l-9.863-14.918c-.149.21-.3.418-.441.636-1.474 2.327-2.954 4.649-4.408 6.989a1.51 1.51 0 0 1-1.168.806h-.025a40.188 40.188 0 0 0-6.467 1.047 3.664 3.664 0 0 1-1.08.156.385.385 0 0 1-.325-.453 11.67 11.67 0 0 1 1.3-2.279L40.716 34.9a.978.978 0 0 0 0-1.256L32.349 21.23a8.345 8.345 0 0 1-1.185-2.257.382.382 0 0 1 .294-.383 2.706 2.706 0 0 1 .969.1c1.112.258 2.222.524 3.342.747a22.428 22.428 0 0 0 3.334.462c.711.032 1.093.653 1.429 1.19 1 1.6 2.087 3.16 3.146 4.727a3.685 3.685 0 0 1 .542 2.108ZM57.652 0 45.465 18.084a.386.386 0 0 1-.628.017c-1.5-2-2.426-3.151-5.06-3.4a68.259 68.259 0 0 1-11.375-2.346c-3.454-.947-6.874-2.013-10.321-2.979l16.621 24.707a.379.379 0 0 1 0 .426L19.854 57.187c3.235-.656 6.473-1.24 9.736-1.751 3.484-.546 6.978-1.03 10.465-1.553a6.441 6.441 0 0 0 4.394-2.608l.623-.841a.385.385 0 0 1 .633.019L57.652 68.8l11.947-18.351a.386.386 0 0 1 .633-.019l.623.841a6.442 6.442 0 0 0 4.394 2.608c3.488.523 6.982 1.007 10.465 1.553 3.263.511 6.5 1.095 9.736 1.751L80.601 34.51a.378.378 0 0 1 0-.426L97.225 9.376c-3.447.965-6.868 2.031-10.321 2.979A68.266 68.266 0 0 1 75.528 14.7c-2.635.249-3.557 1.4-5.06 3.4a.386.386 0 0 1-.628-.017Z'\r\n          />\r\n        </g>\r\n      </svg>\r\n      <div id='CustomiserCanvasControls' className={styles.controls}></div>\r\n      <Suspense fallback={<div className={styles.loading}>Loading ...</div>}>\r\n        <CustomiserCanvas\r\n          key={remountTrigger}\r\n          className={styles.model}\r\n          onCameraRef={handleCameraRef}\r\n        />\r\n      </Suspense>\r\n      {selectedNav === null && (\r\n        <Button className={styles.close} onClick={() => setShow(false)}>\r\n          Close\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customiser;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const addToCart = async (data: any) => {\r\n  return fetch(window.Shopify.routes.root + 'cart/add.js', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n};\r\n","/* eslint-disable react/display-name */\r\nimport { FC, Suspense, forwardRef } from 'react';\r\n\r\nexport interface LoadableProps {\r\n  className?: string;\r\n}\r\n\r\n// eslint-disable-next-line react/display-name, @typescript-eslint/no-explicit-any\r\nconst Loadable = (Component: FC<any>) =>\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  forwardRef((props: any, ref) => (\r\n    <Suspense fallback={<></>}>\r\n      <Component {...props} ref={ref} />\r\n    </Suspense>\r\n  ));\r\n\r\nexport default Loadable;\r\n","import { ThreeElements, Vector3 } from '@react-three/fiber';\r\nimport { forwardRef } from 'react';\r\nimport { Mesh } from 'three';\r\n\r\nexport interface MouseHelperProps {\r\n  position?: Vector3;\r\n}\r\n\r\nconst MouseHelper = forwardRef<Mesh, MouseHelperProps>((props, ref) => {\r\n  const BoxProps: ThreeElements['boxGeometry'] = {\r\n    args: [1, 1, 200],\r\n  };\r\n\r\n  return (\r\n    <mesh ref={ref} visible={false} scale={0.1}>\r\n      <boxGeometry {...BoxProps} />\r\n      <meshNormalMaterial />\r\n    </mesh>\r\n  );\r\n});\r\n\r\nMouseHelper.displayName = 'MouseHelper';\r\n\r\nexport default MouseHelper;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CustomiserCanvas_root__1vMOn\",\"save\":\"CustomiserCanvas_save__V9j3S\"};","import { OrbitControls } from '@react-three/drei';\r\nimport { Canvas, ThreeEvent } from '@react-three/fiber';\r\nimport cn from 'classnames';\r\nimport { CSSProperties, lazy, useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nimport {\r\n  CustomDesignEntity,\r\n  CustomDesignInput,\r\n  Maybe,\r\n  useCreateCustomDesignMutation,\r\n  useUploadMultipleFilesMutation,\r\n} from '@graphql/generated/graphql';\r\nimport { graphQLClient } from '@graphql/graphql-client';\r\nimport { addToCart } from '@lib/shopify';\r\nimport { CustomiserState, useCustomiserStore } from '@store/customiser';\r\nimport { useDesignStore } from '@store/design';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { Camera, Euler, Group, Mesh, Vector3 } from 'three';\r\n\r\nimport Lights from '../Lights';\r\nimport Loadable from '../Loadable';\r\nimport MouseHelper from '../MouseHelper';\r\nimport { SceneProps } from '../Scene/Scene';\r\nimport styles from './CustomiserCanvas.module.scss';\r\n\r\nimport ThreeScene from '@components/three/Scene';\r\n\r\nconst Scene = Loadable(lazy(() => import('@components/three/Scene'))) as typeof ThreeScene;\r\n\r\nexport interface CustomiserCanvasProps {\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  onCameraRef: (ref: Camera | null) => void;\r\n}\r\n\r\nconst getCustomDesignData = (state: CustomiserState, files: string[]): CustomDesignInput => ({\r\n  customProduct: state.customProduct?.id,\r\n  parts: state.savedParts.map((p) => ({\r\n    name: p.part.name,\r\n    areaSize: p.part.areaSize?.data?.id,\r\n    material: p.material.id,\r\n  })),\r\n  texts: state.texts.map((t) => ({\r\n    text: t.text,\r\n    decalPosition: t.decalPosition,\r\n    decalOrientation: t.decalOrientation,\r\n    decalRotation: t.decalRotation,\r\n    decalScale: t.decalScale,\r\n    basePriceVariantId: t.basePrice?.shopifyVariantId,\r\n    letterPriceVariantId: t.letterPrice?.shopifyVariantId,\r\n    outlinePriceVariantId: t.outlinePrice?.shopifyVariantId,\r\n    puffPriceVariantId: t.puffPrice?.shopifyVariantId,\r\n    crystalPriceVariantId: t.crystalPrice?.shopifyVariantId,\r\n  })),\r\n  flags: state.flags.map((f) => ({\r\n    flag: f.flag?.id,\r\n    decalPosition: f.decalPosition,\r\n    decalOrientation: f.decalOrientation,\r\n    decalRotation: f.decalRotation,\r\n    decalScale: f.decalScale,\r\n    size: f.size,\r\n    shopifyVariantId: f.basePrice?.shopifyVariantId,\r\n  })),\r\n  graphics: state.graphics.map((g) => ({\r\n    graphic: g.graphic?.id,\r\n    decalPosition: g.decalPosition,\r\n    decalOrientation: g.decalOrientation,\r\n    decalRotation: g.decalRotation,\r\n    decalScale: g.decalScale,\r\n    size: g.size,\r\n    shopifyVariantId: g.basePrice?.shopifyVariantId,\r\n  })),\r\n  images: files,\r\n  sizing: {\r\n    shopifyVariantId: state.sizing?.variation?.id,\r\n    size: state.sizing?.size,\r\n    height: state.sizing?.height?.value?.toString(),\r\n    heightUnit: state.sizing?.height?.unit,\r\n    weight: state.sizing?.weight?.value,\r\n    weightUnit: state.sizing?.weight?.unit,\r\n  },\r\n});\r\n\r\nconst getCartVariations = (customDesignEntity?: CustomDesignEntity) => {\r\n  const customDesignId = customDesignEntity?.id;\r\n  const customDesign = customDesignEntity?.attributes;\r\n\r\n  if (!customDesign || !customDesignId) {\r\n    return [];\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const items: Array<{ id?: string; quantity: number; properties: any }> = [];\r\n  const id = (id?: Maybe<string>) => id?.replace('gid://shopify/ProductVariant/', '');\r\n  const getItem = (id?: string) => items.find((i) => i.id === id);\r\n  const addOrUpdate = (variantId: string, addQty = 1) => {\r\n    const checkItem = getItem(variantId);\r\n    if (checkItem) {\r\n      const newQuantity = checkItem.quantity + addQty;\r\n      checkItem.quantity = newQuantity;\r\n      checkItem.properties._customDesignQuantity = newQuantity;\r\n    } else {\r\n      items.push({\r\n        id: variantId,\r\n        quantity: addQty,\r\n        properties: {\r\n          _customDesignAddon: customDesignId,\r\n          _customDesignQuantity: addQty,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (customDesign.parts?.length) {\r\n    customDesign.parts.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.flags?.length) {\r\n    customDesign.flags.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.graphics?.length) {\r\n    customDesign.graphics.forEach((p) => {\r\n      const variantId = id(p?.shopifyVariantId);\r\n      if (variantId) addOrUpdate(variantId);\r\n    });\r\n  }\r\n\r\n  if (customDesign.texts?.length) {\r\n    customDesign.texts.forEach((t) => {\r\n      const basePrice = id(t?.basePriceVariantId);\r\n      if (basePrice) addOrUpdate(basePrice);\r\n      const letterPrice = id(t?.letterPriceVariantId);\r\n      if (letterPrice) addOrUpdate(letterPrice, t?.text?.length);\r\n      const outlinePrice = id(t?.outlinePriceVariantId);\r\n      if (outlinePrice) addOrUpdate(outlinePrice);\r\n      const puffPrice = id(t?.puffPriceVariantId);\r\n      if (puffPrice) addOrUpdate(puffPrice);\r\n      const crystalPrice = id(t?.crystalPriceVariantId);\r\n      if (crystalPrice) addOrUpdate(crystalPrice);\r\n    });\r\n  }\r\n\r\n  if (customDesign.sizing?.shopifyVariantId) {\r\n    items.push({\r\n      id: id(customDesign.sizing.shopifyVariantId),\r\n      quantity: 1,\r\n      properties: {\r\n        _customDesign: customDesignId,\r\n      },\r\n    });\r\n  }\r\n\r\n  return items;\r\n};\r\n\r\nexport const cameraDefault: [x: number, y: number, z: number] = [\r\n  0, 2.1970893240496195e-15, 15.31024512625285,\r\n];\r\n\r\nconst CustomiserCanvas = ({\r\n  className,\r\n  style,\r\n  onCameraRef,\r\n}: CustomiserCanvasProps): JSX.Element => {\r\n  const cameraRef = useRef<Camera | null>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const images = useRef<File[]>([]);\r\n  const positionRef = useRef<Vector3>(new Vector3());\r\n  const orientationRef = useRef<Euler>(new Euler());\r\n  const groupRef = useRef<Group>(null);\r\n  const editFlag = useCustomiserStore((state) => state.flags.find((f) => f.edit));\r\n  const editText = useCustomiserStore((state) => state.texts.find((f) => f.edit));\r\n  const editGraphic = useCustomiserStore((state) => state.graphics.find((f) => f.edit));\r\n  const updateGraphic = useCustomiserStore((state) => state.updateGraphic);\r\n  const updateFlag = useCustomiserStore((state) => state.updateFlag);\r\n  const updateText = useCustomiserStore((state) => state.updateText);\r\n  const setCanvasSize = useCustomiserStore((state) => state.setCanvasSize);\r\n  const resetCamera = useDesignStore((state) => state.resetCamera);\r\n  const addingToCart = useDesignStore((state) => state.addingToCart);\r\n  const modelRotation = useDesignStore((state) => state.modelRotation);\r\n  const setAddingToCart = useDesignStore((state) => state.setAddingToCart);\r\n  const setModelRotation = useDesignStore((state) => state.setModelRotation);\r\n  const reset = useCustomiserStore((state) => state.reset);\r\n  const rootClassName = cn(styles.root, className);\r\n  const mouseHelperRef = useRef<Mesh>(null);\r\n  const state = useCustomiserStore((state) => state);\r\n\r\n  const [isPointerDown, setIsPointerDown] = useState(false);\r\n  const [isPointerMoved, setIsPointerMoved] = useState(false);\r\n\r\n  const setPosition = useCallback(\r\n    (event: ThreeEvent<MouseEvent>) => {\r\n      const p = event.point;\r\n      const n = event?.face?.normal.clone();\r\n      if (mouseHelperRef.current && n && groupRef.current) {\r\n        n.transformDirection(groupRef.current.matrixWorld);\r\n        n.multiplyScalar(10);\r\n        n.add(p);\r\n        mouseHelperRef.current.position.copy(p);\r\n        mouseHelperRef.current.lookAt(n);\r\n      }\r\n    },\r\n    [mouseHelperRef],\r\n  );\r\n\r\n  const onClick = useCallback<Required<SceneProps>['onClick']>(\r\n    (event) => {\r\n      setIsPointerDown(false);\r\n      setIsPointerMoved(false);\r\n\r\n      if (!isPointerDown || isPointerMoved) {\r\n        return;\r\n      }\r\n\r\n      if (editFlag?.key) {\r\n        event.stopPropagation();\r\n\r\n        updateFlag(editFlag.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateFlag(editFlag.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (editGraphic?.key) {\r\n        event.stopPropagation();\r\n\r\n        updateGraphic(editGraphic.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateGraphic(editGraphic.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (editText?.key) {\r\n        event.stopPropagation();\r\n        updateText(editText.key, { decalFreeze: true });\r\n        setPosition(event);\r\n        if (mouseHelperRef.current && positionRef.current && orientationRef.current) {\r\n          positionRef.current.copy(event.point);\r\n          orientationRef.current.copy(mouseHelperRef.current.rotation);\r\n          updateText(editText.key, {\r\n            decalPosition: positionRef.current.clone().toArray(),\r\n            decalOrientation: orientationRef.current.clone().toArray(),\r\n          });\r\n        }\r\n      }\r\n    },\r\n    [editFlag, editGraphic, editText, isPointerDown, isPointerMoved],\r\n  );\r\n\r\n  const onPointerDown = useCallback<Required<SceneProps>['onPointerDown']>(() => {\r\n    setIsPointerDown(true);\r\n  }, []);\r\n\r\n  const onPointerMove = useCallback<Required<SceneProps>['onPointerMove']>(\r\n    (e) => {\r\n      setIsPointerDown((cur) => {\r\n        if (cur) {\r\n          setIsPointerMoved(true);\r\n        }\r\n        return cur;\r\n      });\r\n    },\r\n    [isPointerDown],\r\n  );\r\n\r\n  const shopifyAddToCart = useMutation({\r\n    mutationFn: addToCart,\r\n    onSuccess: () => {\r\n      window.location.href = window.Shopify.routes.root + 'cart';\r\n      reset();\r\n    },\r\n  });\r\n\r\n  const { mutate } = useCreateCustomDesignMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      if (data.createCustomDesign?.data) {\r\n        const items = getCartVariations(data.createCustomDesign.data);\r\n        shopifyAddToCart.mutate({ items: items });\r\n      }\r\n    },\r\n  });\r\n\r\n  const { mutateAsync } = useUploadMultipleFilesMutation(graphQLClient, {\r\n    onSuccess(data) {\r\n      const fileIDs = data.multipleUpload.map((f) => f?.data?.id) as string[];\r\n      mutate({ data: getCustomDesignData(state, fileIDs) });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (addingToCart && modelRotation < 360) {\r\n      setTimeout(() => {\r\n        canvasRef?.current?.toBlob((blob) => {\r\n          if (blob) {\r\n            const file = new File([blob], 'fileName.png', { type: 'image/png' });\r\n            images.current.push(file);\r\n            setModelRotation(modelRotation + 90);\r\n          }\r\n        }, 'image/png');\r\n      }, 50);\r\n    } else if (addingToCart) {\r\n      const upload = async () => {\r\n        await mutateAsync({ files: images.current });\r\n      };\r\n      upload();\r\n    }\r\n  }, [modelRotation, addingToCart, images]);\r\n\r\n  useEffect(() => {\r\n    const camera = cameraRef.current;\r\n    if (!camera) {\r\n      return;\r\n    }\r\n    if (resetCamera) {\r\n      camera.position.set(cameraDefault[0], cameraDefault[1], cameraDefault[2]);\r\n      setAddingToCart();\r\n    }\r\n  }, [resetCamera]);\r\n\r\n  useEffect(() => {\r\n    if (onCameraRef && cameraRef.current) {\r\n      onCameraRef(cameraRef.current);\r\n    }\r\n  }, [onCameraRef]);\r\n\r\n  const isEditing = editFlag || editGraphic || editText;\r\n\r\n  return (\r\n    <div className={rootClassName} style={style}>\r\n      <Canvas\r\n        linear\r\n        flat\r\n        camera={{\r\n          position: cameraDefault,\r\n          fov: 45,\r\n        }}\r\n        dpr={window.devicePixelRatio}\r\n        gl={{ preserveDrawingBuffer: true }}\r\n        ref={canvasRef}\r\n        onCreated={(state) => {\r\n          setCanvasSize(state.size.width, state.size.height);\r\n          cameraRef.current = state.camera;\r\n        }}\r\n        frameloop='demand'\r\n      >\r\n        <Scene\r\n          onClick={onClick}\r\n          onPointerDown={onPointerDown}\r\n          onPointerMove={onPointerMove}\r\n          ref={groupRef}\r\n        />\r\n        <Lights />\r\n        {isEditing && <MouseHelper ref={mouseHelperRef} />}\r\n        <OrbitControls\r\n          enableZoom={true}\r\n          maxDistance={50}\r\n          minDistance={5}\r\n          minPolarAngle={Math.PI / 3}\r\n          maxPolarAngle={Math.PI / 1.9}\r\n          enableDamping={false}\r\n        />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomiserCanvas;\r\n","import { SpotLight, useHelper } from '@react-three/drei';\r\nimport { useRef } from 'react';\r\nimport { SpotLightHelper, Vector3, SpotLight as SpotLightRef } from 'three';\r\nconst config = {\r\n  ambientLight: {\r\n    // color: 16777215,\r\n    // groundColor: 4473924,\r\n    intensity: 0.1,\r\n  },\r\n  directionalLights: [\r\n    {\r\n      color: 16777215,\r\n      intensity: 0.3,\r\n      position: new Vector3(0, 6, -200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 16759931,\r\n      intensity: 0.2,\r\n      position: new Vector3(-150, 0, 200),\r\n      castShadow: true,\r\n    },\r\n    {\r\n      color: 10213119,\r\n      intensity: 0.2,\r\n      position: new Vector3(100, 0, 200),\r\n    },\r\n  ],\r\n};\r\n\r\nconst Lights = () => {\r\n  const light = useRef<SpotLightRef>(null);\r\n  // useHelper(light.current, SpotLightHelper, 'cyan');\r\n  return (\r\n    <group>\r\n      <hemisphereLight {...config.ambientLight}></hemisphereLight>\r\n      <pointLight position={[-800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[-800, 0, 1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n      <pointLight position={[800, 0, 1000]} intensity={0.5} decay={120} power={7} castShadow />\r\n      <pointLight position={[800, 0, -1000]} intensity={0.5} decay={12} power={7} castShadow />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Lights;\r\n"],"names":["_ref","className","selected","children","rest","rootClassName","cn","styles","_jsx","usePortalRef","id","loaded","setLoaded","useState","portalRef","useRef","useEffect","current","document","getElementById","notifName","setShowNotification","cb","isChecked","setIsChecked","handleDismiss","localStorage","setItem","_Fragment","_jsxs","type","onChange","e","target","checked","onClick","isClickable","classNames","buttonClassNames","concat","containedButton","clickable","confirmText","confirmStorage","cancelPartChange","useCustomiserStore","state","resetNav","popupPortalRef","showPopup","setShowPopup","notifTitle","shouldShowNotification","getItem","ReactDOM","ContainedButton","DontShowAgain","FittingOption","_selectedModels$find","_option$models","option","focusCameraOnPart","selectedModels","setSelectedModel","getSelected","find","m","optionId","model","motion","div","initial","opacity","animate","exit","name","models","map","_m$model","_m$model$data","_m$model3","_m$model3$data","_m$model3$data$attrib","OptionButton","data","_m$model2","attributes","_ref2","fittingOptions","_state$customProduct","_state$customProduct$","customProduct","options","o","NavButtons","getSrcSets","formats","fff","Object","entries","f","width","url","filter","format","length","sort","a","b","reduce","acc","index","array","getSrcSet","_image$attributes4","image","sizes","relativeHeight","useMemo","_image$attributes","_image$attributes2","height","style","srcSet","_image$attributes3","src","NavFlagsSelect","editFlag","flags","addFlag","updateFlag","_f$attributes","flag","flagSelected","key","edit","Image","_prices$length","scale","rotation","prices","onScale","onRotate","scaleAdjust","rotateAdjust","currentScale","setCurrentScale","currentRotate","setCurrentRotate","rootRotateClassName","marks","range","start","stop","step","Array","from","value","p","i","markKey","Number","toFixed","createPortal","subtractScale","cur","FaCircleMinus","addScale","FaCirclePlus","rotateCounterClockwise","GiAnticlockwiseRotation","rotateClockwise","GiClockwiseRotation","disabled","onApply","Button","colour","onEdit","onDelete","isVisible","toggleVisibility","isVisibleEye","undefined","event","stopPropagation","FaEye","FaEyeSlash","xmlns","viewBox","d","NavFlagsFlag","_flag$flag","_flag$flag$attributes","setShowSelector","setSelectModel","deleteFlag","flagItem","flagItemImage","NavOptionEdit","editItem","deleteItem","NavFlags","g","showSelector","flagQuery","useGetFlagsQuery","graphQLClient","pagination","limit","select","_data$flags","_data$graphicPrices","graphicPrices","NavDecalAdjust","decalScale","decalRotation","setScale","price","_price$attributes","_price$attributes2","priceValues","size","basePrice","quantity","startTransition","NavEditButtons","applyFlag","decalFreeze","customiserFlags","title","alt","propStyles","shouldShow","setShouldShow","imgIcon","InfoDisplay","toggle","isOpen","isMinimized","selectedNav","minimizeIconClassname","InfoButton","NavImagesImage","_graphic$graphic","_graphic$graphic$attr","_graphic$graphic$attr2","graphic","updateGraphic","deleteGraphic","graphicItem","graphicItemImage","NavImagesUpload","setGraphic","saving","setSaving","mutate","createGraphicMutation","useCreateGraphicMutation","onSuccess","_data$createGraphic","createGraphic","fileUploadMutate","useUploadMultipleFilesMutation","fileIDs","multipleUpload","_f$data","customer","onDrop","useCallback","acceptedFiles","files","getRootProps","getInputProps","isDragActive","useDropzone","accept","maxFiles","multiple","dropZone","NavImagesSelect","_currentGraphic$attri","_currentGraphic$attri2","editGraphic","currentGraphic","setCurrentGraphic","addGraphic","graphics","graphicSelected","NavImages","imageQuery","useGetImagesQuery","applyImage","addImage","navItems","sizingVariation","_state$sizing","sizing","variation","parts","savedParts","texts","setSelectedNav","isSelected","item","part","handleClick","required","color","pillButton","pillButtonSelected","uniqueMaterialTypes","uniqBy","initialState","colourGroups","materialTypes","materials","createMaterialGroup","set","get","filteredMaterials","colourGroup","selectedColourGroup","_m$attributes","_m$attributes$colourG","resetMaterialGroup","setMaterials","materialType","produce","flatMap","_d$attributes","_d$attributes$colourG","_m$attributes2","_m$attributes2$colour","_state$selectedColour","_m$attributes3","_m$attributes3$type","selectedMaterialType","uniqueMaterials","setColourGroup","_m$attributes4","_m$attributes4$colour","_state$selectedColour2","_m$attributes5","_m$attributes5$type","setMaterialType","Provider","useStore","useMaterialGroupStore","createContext","createStore","create","devtools","Material","_material$attributes","_material$attributes$","_material$attributes2","_mapImage$image","_mapImage$image$data","_mapImage$image$data$","material","onMaterialSelected","selectedMaterialId","mapImage","images","mapType","MaterialType","hideColorGroups","getFilteredMaterials","mt","_mt$attributes","materialType__title","_m$attributes$type","_m$attributes$type$da","SelectedMaterialInfo","_selectedMaterial$att","_selectedMaterial$att2","_selectedMaterial$att3","_selectedMaterial$att4","_selectedMaterial$att5","selectedPart","selectedMaterial","_parts$find","MaterialGroupLoader","_materialGroup$attrib","materialGroup","root","typeIds","t","useGetMaterialsQuery","filters","in","pageSize","_data$materials","group","_group$attributes$col","_group$attributes","_group$attributes$col2","_group$attributes2","strokeWidth","stroke","fill","props","_part$materialGroup","_currentPart$material","_currentPart$material2","_currentPart$material3","_currentPart$material4","setPart","removePart","currentPart","showOptional","setShowOptional","optional","PillButton","optionalOnClick","show","Suspense","fallback","MaterialGroup","placeholder","getSizeVariation","unit","weight","variations","v","_v$sku","sku","endsWith","setSizing","_state$sizing2","_state$sizing3","setHeightUnit","setWeightUnit","FormInput","unitToggle","toggleButton","toggleButtonSelected","UNIT","HEIGHT","CM","INCH","WEIGHT","KG","LB","FormSelect","selectedVariation","priceString","formattedPrice","_editText$crystalBack","_selectedName$attribu9","_selectedName$attribu10","_selectedName$attribu11","_selectedName$attribu12","_selectedName$attribu13","_selectedName$attribu14","_editText$material","_editText$material$at","_editText$material$at2","_editText$material2","_editText$material2$a","_editText$material2$a2","editText","setIsPickingCrystal","selectedName","crystalBackground","crystals","setCrystals","crystalPrice","puff","setPuff","puffPrice","hasPuffOption","NAME_TYPE_LUXURY_ID","updateText","addCrystals","add","_selectedName$attribu","_selectedName$attribu2","_selectedName$attribu3","_selectedName$attribu4","shopifyVariantId","addPuff","_selectedName$attribu5","_selectedName$attribu6","_selectedName$attribu7","_selectedName$attribu8","finishSelections","finishSelection","pricing","Price","console","log","_selectedName$attribu15","_editText$material3","_editText$material3$a","_editText$material3$a2","prevSelectedName","names","useGetNamesQuery","_data$names","letterPrice","nameType","outline","outlinePrice","promptMessage","categoryDisplayName","n","_n$attributes","_n$attributes2","_n$attributes2$basePr","_n$attributes3","_n$attributes3$letter","setSelectedName","_editText$outline","_editText$outline2","_editText$outline2$at","_editText$outline2$at2","_editText$outline3","_editText$outline3$at","_editText$outline3$at2","setIsPickingOutline","showOutline","setShowOutline","updateOutline","outlineGroup","fonts","arial","oswald","college","ballantines","_fonts$find","text","setText","font","setFont","addText","fontSelection","_font","onFontChange","deleteText","textItem","textItemText","onAddTextClicked","onTextSelected","navTextsSelection","titleText","NavTextText","getMaterialUrl","_material$attributes$2","_material$attributes$3","_material$attributes$4","imgMap","large","normalMapGenerator","NormalMapGenerator","instance","async","imgToNormalMap","img","hasPuff","blur","blurAmount","generateFromImage","strength","level","CanvasText","constructor","toNormalMap","patternType","canvas","ctx","outlineCanvas","outlineCtx","normalMapTextureCanvas","normalMapTextureCtx","normalMapCanvas","normalMapCtx","normalMapOutlineTextureCanvas","normalMapOutlineTextureCtx","normalMapOutlineCanvas","normalMapOutlineCtx2","crystalBgPatternCanvas","crystalBgPatternCtx","canvasHeight","canvasWidth","fontSize","outlineWidth","this","createElement","getContext","clear","_this$ctx","_this$outlineCtx","clearRect","drawImg","drawImage","showTestCanvas","innerHTML","maskImage","globalCompositeOperation","drawPreviewText","textAlign","fillText","drawPreviewOutlineText","lineWidth","strokeText","drawPreviewOutlineOnlyText","fillStyle","drawNormalMap","normalMapPatternImg","pattern","createPattern","rect","normalMap","drawOutlineNormalMap","drawCrystalBg","crystalBgImg","crystalBgPatternImg","globalAlpha","printTextMapToStrokeMap","previewText","_ref3","previewImg","toDataURL","mergeCanvas","getOutlineCanvas","getNormalMapTextureCanvas","getNormalMapOutlineCanvas","loadImage","Promise","resolve","reject","crossOrigin","onload","onerror","_text$selectedName","_text$selectedName2","_text$selectedName2$a","canvasRef","zoom","setZoom","dataUrl","setDataUrl","scaleModifier","Vector3","isLuxury","hasCrystals","Texture","normalScale","Canvas","ref","el","gl","preserveDrawingBuffer","Lights","args","visible","Decal","position","preview","transparent","roughness","depthTest","depthWrite","Vector2","_canvasRef$current","_editText$selectedNam","_previewImgRef$curren","mainTextInputRef","previewImgRef","fontFamily","setFontFamily","isVisiblePreview","setIsVisiblePreview","getPatternType","materialImgMemo","outlineImgMemo","fabricPatternImgMemo","crystalNormalMapImgMemo","crystalBgImgMemo","crystalBgPatternImgMemo","previewImgDom","canvasText","CanvasTexture","fontUrl","FontFace","load","loadFonts","outlineImg","embroideryPattern","crystalNormalMap","patternImg","zIndex","textPreview","textPreview__imgContainer","display","NavTextPreviewScene","_mainTextInputRef$cur","focus","textPreviewTextInput","stepsNavButtons","stepsNavButtons__next","FaArrowRightLong","stepsNavButtons__prev","FaArrowLeftLong","stepsNavButtons__cancel","isClickableNext","isClickablePrev","isVisibleNext","isVisiblePrev","onClickNext","onClickPrev","onClickCancel","onClickSave","popupContainerRef","CancelStepButton","PrevStepButton","NextStepButton","ApplyButton","NavTextInput","forwardRef","inputStyles","textInput","textInputContainer","displayName","NavText","setStep","updateIsMinimizedCustomiserNav","isMinimizedCustomiserNav","isPickingOutline","isPickingCrystal","navHeaderRef","noOutlineSelected","noCrystalSelected","hasFinishedAllSteps","hasFinishedStep1","hasFinishedStep2","hasFinishedStep3","hasFinishedStep4","saveAndApplyChecker","alert","applyText","hasApplied","navCategoryNames","navTextEdit","NavTextPreview","NavTextCategories","NavTextCategoriesItems","handleOnClick","_step","finishedCategories","categoryClassNames","selectedCategoryItem","finishedCategoryItem","CategoryDisplay","NavTextSelect","NavTextNameTypes","NavTextOutline","NavTextFinish","NavTextNavSteps","handleNext","maxStep","handlePrevious","cancelText","confirm","placeText","decalPosition","decalOrientation","navHeaderSaveText","NavTextsSelection","navHeaderScroll","classes","setIsOpen","scrollCoordinates","setScrollCoordinates","left","top","scrollableRef","open","minimized","hasActions","isFullscreen","scrollTo","behavior","toggleOpen","scrollLeft","scrollTop","nav","layout","transition","stiffness","damping","NavHeader","header","NavHeaderScroll","headerAfter","AnimatePresence","content","variants","collapsed","NavOptions","NavFitting","NavSize","NavPart","actions","total","designComplete","setResetCamera","useDesignStore","addingToCart","resetCustomerSelections","resetPopup","saveDesign","CustomiserCanvas","lazy","cameraLegCutPosition","setShow","remountTrigger","cameraRef","CustomiserNav","focusCamera","coordinates","camera","toLowerCase","cameraDefault","Header","clipPath","fillRule","onCameraRef","addToCart","fetch","window","Shopify","routes","method","headers","body","JSON","stringify","Component","MouseHelper","Scene","Loadable","getCustomDesignData","_state$sizing$variati","_state$sizing3$height","_state$sizing3$height2","_state$sizing4","_state$sizing4$height","_state$sizing5","_state$sizing5$weight","_state$sizing6","_state$sizing6$weight","_p$part$areaSize","_p$part$areaSize$data","areaSize","_t$basePrice","_t$letterPrice","_t$outlinePrice","_t$puffPrice","_t$crystalPrice","basePriceVariantId","letterPriceVariantId","outlinePriceVariantId","puffPriceVariantId","crystalPriceVariantId","_f$flag","_f$basePrice","_g$graphic","_g$basePrice","toString","heightUnit","weightUnit","getCartVariations","customDesignEntity","_customDesign$parts","_customDesign$flags","_customDesign$graphic","_customDesign$texts","_customDesign$sizing","customDesignId","customDesign","items","replace","addOrUpdate","variantId","addQty","arguments","checkItem","newQuantity","properties","_customDesignQuantity","push","_customDesignAddon","forEach","_t$text","_customDesign","positionRef","orientationRef","Euler","groupRef","setCanvasSize","resetCamera","modelRotation","setAddingToCart","setModelRotation","reset","mouseHelperRef","isPointerDown","setIsPointerDown","isPointerMoved","setIsPointerMoved","setPosition","_event$face","point","face","normal","clone","transformDirection","matrixWorld","multiplyScalar","copy","lookAt","toArray","onPointerDown","onPointerMove","shopifyAddToCart","useMutation","mutationFn","location","href","useCreateCustomDesignMutation","_data$createCustomDes","createCustomDesign","mutateAsync","setTimeout","toBlob","blob","file","File","upload","isEditing","linear","flat","fov","dpr","devicePixelRatio","onCreated","frameloop","OrbitControls","enableZoom","maxDistance","minDistance","minPolarAngle","Math","PI","maxPolarAngle","enableDamping","config","intensity","decay","power","castShadow"],"sourceRoot":""}