{"version":3,"file":"static/css/311.ae8ef968.chunk.css","mappings":"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","sources":["components/ui/OptionButton/OptionButton.module.scss","styles/_variables.scss","components/nav/NavButtons/NavButtons.module.scss","components/nav/NavFitting/NavFitting.module.scss","components/ui/Image/Image.module.scss","components/nav/NavFlags/NavFlags.module.scss","components/nav/NavDecalAdjust/NavDecalAdjust.module.scss","../node_modules/sass-mq/_mq.scss","components/nav/NavEditButtons/NavEditButtons.module.scss","components/nav/NavOptionEdit/NavOptionEdit.module.scss","components/nav/NavHeader/NavHeader.module.scss","components/ui/InfoButton/InfoButton.module.scss","components/nav/NavImages/NavImages.module.scss","components/nav/NavOptions/NavOptions.module.scss","components/ui/PillButton/PillButton.module.scss","components/nav/MaterialGroup/MaterialGroup.module.scss","components/nav/MaterialGroup/SelectedMaterialInfo.module.scss","components/nav/NavPart/NavPart.module.scss","components/ui/FormInput/FormInput.module.scss","components/ui/FormSelect/FormSelect.module.scss","components/nav/NavSize/NavSize.module.scss","components/ui/Accordion/Accordion.module.scss","components/nav/NavStepButtons/NavStepButtons.module.scss","components/nav/NavText/NavText.module.scss","components/nav/CustomiserNav/CustomiserNav.module.scss","components/layout/Header/Header.module.scss","components/layout/Customiser/Customiser.module.scss"],"sourcesContent":["@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  font-family: $displayFont;\r\n  padding: srem.convert(13px) srem.convert(18px) srem.convert(7px);\r\n  font-size: srem.convert(20px);\r\n  border: 1px solid $midGrey;\r\n  font-weight: 900;\r\n  color: $grey;\r\n}\r\n\r\n.selected {\r\n  background-color: $black;\r\n  color: $white;\r\n}\r\n","// Colours\r\n\r\n$black: #000000;\r\n$yellow: #fcd02f;\r\n$red: #cc0101;\r\n$white: #fff;\r\n$lightGrey: #f2f2f2;\r\n$midGrey: #dddddd;\r\n$grey: #909090;\r\n$darkGrey: #696969;\r\n\r\n// Fonts\r\n\r\n$defaultFont: roboto, sans-serif;\r\n$displayFont: bebas-neue-by-fontfabric, sans-serif;\r\n","@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: srem.convert(15px);\r\n  // border-top: 1px solid $midGrey;\r\n  background-color: $lightGrey;\r\n}\r\n","@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.fittingOption {\r\n  margin-bottom: srem.convert(30px);\r\n}\r\n\r\n.fittingButtons {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: srem.convert(15px);\r\n}\r\n",".root {\r\n  box-sizing: border-box;\r\n  display: block;\r\n  overflow: hidden;\r\n  width: initial;\r\n  height: initial;\r\n  background: none;\r\n  opacity: 1;\r\n  border: 0px;\r\n  margin: 0px;\r\n  padding: 0px;\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: '';\r\n    box-sizing: border-box;\r\n    display: block;\r\n    width: initial;\r\n    height: initial;\r\n    background: none;\r\n    opacity: 1;\r\n    border: 0px;\r\n    margin: 0px;\r\n    padding-top: var(--image-padding-top, 100%);\r\n  }\r\n\r\n  img {\r\n    position: absolute;\r\n    inset: 0px;\r\n    box-sizing: border-box;\r\n    padding: 0px;\r\n    border: none;\r\n    margin: auto;\r\n    display: block;\r\n    width: 0px;\r\n    height: 0px;\r\n    min-width: 100%;\r\n    max-width: 100%;\r\n    min-height: 100%;\r\n    max-height: 100%;\r\n    object-fit: cover;\r\n  }\r\n}\r\n","@use '~sass-rem' as srem;\r\n@import '@styles/variables';\r\n\r\n.flags {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: srem.convert(14px);\r\n}\r\n\r\n.flag {\r\n  width: calc((100% / 7) - srem.convert(14px) * 6 / 7);\r\n  padding: srem.convert(5px);\r\n  background-color: $midGrey;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n}\r\n\r\n.flagItem {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: srem.convert(20px);\r\n}\r\n\r\n.flagItemImage {\r\n  width: srem.convert(50px);\r\n  margin-right: auto;\r\n}\r\n","@use '~sass-rem' as srem;\r\n@use '~sass-mq/mq' as *;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  position: absolute;\r\n  // background-color: white;\r\n  pointer-events: all;\r\n  padding: srem.convert(16px);\r\n  text-align: center;\r\n\r\n  div:empty {\r\n    display: block;\r\n  }\r\n\r\n  &__rotate {\r\n    width: 90%;\r\n    bottom: 0;\r\n    padding-bottom: srem.convert(8px);\r\n\r\n    @include mq($from: tablet) {\r\n      padding-bottom: srem.convert(24px);\r\n    }\r\n  }\r\n\r\n  &__scale {\r\n    writing-mode: vertical-rl;\r\n    right: 0;\r\n    height: 90%;\r\n    padding-right: srem.convert(8px);\r\n\r\n    @include mq($from: tablet) {\r\n      padding-right: srem.convert(24px);\r\n    }\r\n  }\r\n\r\n  :global {\r\n    h4 {\r\n      margin: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.rotate {\r\n  height: 20px;\r\n\r\n  :global {\r\n    .track {\r\n      top: 9px;\r\n      height: 2px;\r\n    }\r\n\r\n    .mark {\r\n      top: 6px;\r\n      margin-left: 10px;\r\n      width: 1.5px;\r\n      height: 8px;\r\n    }\r\n  }\r\n}\r\n\r\n.scale {\r\n  // writing-mode: horizontal-tb;\r\n  width: 20px;\r\n\r\n  :global {\r\n    .track {\r\n      right: 9px;\r\n      width: 2px;\r\n    }\r\n\r\n    .mark {\r\n      right: 6px;\r\n      // margin-top: 5px;\r\n      transform: translateY(-10px);\r\n      height: 1.5px;\r\n      width: 8px;\r\n    }\r\n  }\r\n}\r\n\r\n.scale,\r\n.rotate {\r\n  :global .range-slider__thumb[data-lower] {\r\n    width: 0;\r\n  }\r\n\r\n  :global .range-slider__range {\r\n    border-radius: 6px;\r\n  }\r\n\r\n  :global {\r\n    .track {\r\n      background: $black;\r\n\r\n      &.track-0 {\r\n        background: $black;\r\n      }\r\n    }\r\n\r\n    .thumb {\r\n      cursor: pointer;\r\n      background: white;\r\n      border: 2px solid $black;\r\n      width: 20px;\r\n      height: 20px;\r\n      border-radius: 100%;\r\n      outline: none;\r\n    }\r\n\r\n    .mark {\r\n      cursor: pointer;\r\n      background-color: $black;\r\n\r\n      &.mark-before {\r\n        background-color: $black;\r\n      }\r\n\r\n      &.mark-active {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@use 'sass:math';\n@use 'sass:map';\n@use 'sass:list';\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$breakpoints: (\n  mobile: 320px,\n  tablet: 740px,\n  desktop: 980px,\n  wide: 1300px,\n) !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   @use 'path/to/mq' with ($show-breakpoints: ('mobile', 'tablet', 'desktop'));\n///\n///\n/// @type map\n$show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// If you want to overried the media type, you can use this option.\n/// @example scss\n///   @use 'path/to/mq' with ($media-type: 'screen');\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and example\n$media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n///\n/// @example scss\n///  $font-size-in-ems: px2em(16px);\n///  p { font-size: px2em(16px); }\n///\n/// @returns {Number}\n\n@function px2em($px) {\n  @if math.is-unitless($px) {\n    @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n    @return px2em($px * 1px);\n  }\n  // if $px is compatible with em units, then return value unchanged\n  @if math.compatible($px, 1em) {\n    @return $px;\n  }\n  @return math.div($px, 16px) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $breakpoints\n///\n/// @example scss\n///  $tablet-width: get-breakpoint-width(tablet);\n///  @media (min-width: get-breakpoint-width(tablet)) {}\n///\n/// @requires {Variable} $breakpoints\n///\n/// @returns {Number} Value in pixels\n@function get-breakpoint-width($name, $breakpoints: $breakpoints) {\n  @if map.has-key($breakpoints, $name) {\n    @return map.get($breakpoints, $name);\n  } @else {\n    @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    @return null;\n  }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $breakpoints\n/// @param {String | Boolean} $until [false] - One of $breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$media-type] - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$breakpoints]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $media-type\n/// @requires {Variable} $breakpoints\n/// @requires {function} px2em\n/// @requires {function} get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  @use 'path/to/mq' as *;\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n  $from: false,\n  $until: false,\n  $and: false,\n  $media-type: $media-type,\n  $breakpoints: $breakpoints\n) {\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: '';\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if type-of($from) == number {\n      $min-width: px2em($from);\n    } @else {\n      $min-width: px2em(get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if type-of($until) == number {\n      $max-width: px2em($until);\n    } @else {\n      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;\n    }\n  }\n\n  @if $min-width != 0 {\n    $media-query: '#{$media-query} and (min-width: #{$min-width})';\n  }\n  @if $max-width != 0 {\n    $media-query: '#{$media-query} and (max-width: #{$max-width})';\n  }\n  @if $and {\n    $media-query: '#{$media-query} and #{$and}';\n  }\n\n  // Remove unnecessary media query prefix 'all and '\n  @if ($media-type == 'all' and $media-query != '') {\n    $media-type: '';\n    $media-query: str-slice(unquote($media-query), 6);\n  }\n\n  @media #{$media-type + $media-query} {\n    @content;\n  }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _quick-sort($list) {\n  $less: ();\n  $equal: ();\n  $large: ();\n\n  @if length($list) > 1 {\n    $seed: list.nth($list, math.ceil(math.div(length($list), 2)));\n\n    @each $item in $list {\n      @if ($item == $seed) {\n        $equal: list.append($equal, $item);\n      } @else if ($item < $seed) {\n        $less: list.append($less, $item);\n      } @else if ($item > $seed) {\n        $large: list.append($large, $item);\n      }\n    }\n\n    @return join(join(_quick-sort($less), $equal), _quick-sort($large));\n  }\n\n  @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _map-sort-by-value($map) {\n  $map-sorted: ();\n  $map-keys: map.keys($map);\n  $map-values: map.values($map);\n  $map-values-sorted: _quick-sort($map-values);\n\n  // Reorder key/value pairs based on key values\n  @each $value in $map-values-sorted {\n    $index: index($map-values, $value);\n    $key: list.nth($map-keys, $index);\n    $map-sorted: map.merge(\n      $map-sorted,\n      (\n        $key: $value,\n      )\n    );\n\n    // Unset the value in $map-values to prevent the loop\n    // from finding the same index twice\n    $map-values: list.set-nth($map-values, $index, 0);\n  }\n\n  @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $breakpoints\n///\n/// @example scss\n///  @include add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin add-breakpoint($name, $width) {\n  $new-breakpoint: (\n    $name: $width,\n  );\n  $breakpoints: map.merge($breakpoints, $new-breakpoint) !global;\n  $breakpoints: _map-sort-by-value($breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $breakpoints\n/// @requires {Variable} $show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin show-breakpoints(\n  $show-breakpoints: $show-breakpoints,\n  $breakpoints: $breakpoints\n) {\n  body:before {\n    background-color: #fcf8e3;\n    border-bottom: 1px solid #fbeed5;\n    border-left: 1px solid #fbeed5;\n    color: #c09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: '#{$show-breakpoint} ≥ #{$width} (#{px2em($width)})';\n      }\n    }\n  }\n}\n\n@if list.length($show-breakpoints) > 0 {\n  @include show-breakpoints;\n}\n","@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: srem.convert(15px);\r\n  // border-top: 1px solid $midGrey;\r\n  background-color: $lightGrey;\r\n}\r\n","@use '~sass-rem' as srem;\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: srem.convert(13px);\r\n\r\n  button {\r\n    svg {\r\n      width: srem.convert(23px);\r\n    }\r\n  }\r\n}\r\n","@use '~sass-mq/mq' as *;\r\n@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  display: grid;\r\n  grid-auto-rows: 1fr;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: 1fr;\r\n  gap: 0px 0px;\r\n  grid-area: header;\r\n  // border-bottom: 1px solid $midGrey;\r\n  background-color: $lightGrey;\r\n}\r\n\r\n.menu {\r\n  grid-area: menu;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-right: 1px solid $midGrey;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  font-family: $displayFont;\r\n  font-size: srem.convert(32px);\r\n  margin-top: srem.convert(4px);\r\n  font-weight: 900;\r\n}\r\n\r\n.minimizeIcon {\r\n  padding-left: 0.8rem;\r\n  width: 40px;\r\n  flex-shrink: 0;\r\n  transform: scaleY(-1);\r\n\r\n  &.minimized {\r\n    transform: scaleY(1);\r\n  }\r\n\r\n  @include mq($from: tablet) {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.navIcon {\r\n  border: 0;\r\n  background: none;\r\n  padding: 0;\r\n  cursor: pointer;\r\n  padding: 0 srem.convert(15px);\r\n\r\n  svg {\r\n    width: srem.convert(15px);\r\n  }\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n\r\n    svg {\r\n      fill: $midGrey;\r\n    }\r\n  }\r\n}\r\n",".iInfo {\r\n  $defaultPadding: 2rem;\r\n\r\n  position: absolute;\r\n  z-index: 201;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &__bgOnclick {\r\n    background: rgba(0, 0, 0, 0.465);\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n  }\r\n  &__display {\r\n    background: white;\r\n    width: 75%;\r\n    height: 75%;\r\n    position: relative;\r\n    border: 2px solid black;\r\n    border-radius: 1rem;\r\n    display: grid;\r\n  }\r\n  &__header {\r\n    padding: $defaultPadding;\r\n    font-weight: 900;\r\n    font-size: 2rem;\r\n    width: inherit;\r\n  }\r\n  &__body {\r\n    padding: $defaultPadding;\r\n    height: 100%;\r\n    overflow-y: scroll;\r\n  }\r\n  &__sampleImg {\r\n    width: 100%;\r\n  }\r\n\r\n  &__closebtn {\r\n    font-size: 16px;\r\n    background: black;\r\n    color: white;\r\n    position: absolute;\r\n    right: 1rem;\r\n    top: 1rem;\r\n    height: 2rem;\r\n    width: 2rem;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    text-align: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 3px solid black;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &__styleName {\r\n    font-weight: 700;\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  &__title {\r\n    text-transform: uppercase;\r\n  }\r\n}\r\n\r\n.infoIcon {\r\n  display: flex;\r\n  cursor: pointer;\r\n  align-items: center;\r\n}\r\n\r\n.imgIcon {\r\n  height: 32px;\r\n}\r\n","@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n}\r\n\r\n.dropZone {\r\n  border: 1px dashed #707070;\r\n  padding: srem.convert(70px) srem.convert(18px) srem.convert(40px);\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    width: srem.convert(23px);\r\n    margin-bottom: srem.convert(25px);\r\n  }\r\n\r\n  h5 {\r\n    margin: 0;\r\n    color: $grey;\r\n  }\r\n}\r\n\r\n.image {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.graphicItem {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: srem.convert(20px);\r\n}\r\n\r\n.graphicItemImage {\r\n  width: srem.convert(50px);\r\n  margin-right: auto;\r\n}\r\n","@use '~sass-rem' as srem;\r\n@use '~sass-mq/mq' as *;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 100%;\r\n  margin: 0 srem.convert(-30px);\r\n\r\n  @include mq($from: tablet) {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n.option {\r\n  display: flex;\r\n  padding: 0 srem.convert(20px);\r\n  text-align: left;\r\n  color: $black;\r\n  min-width: srem.convert(250px);\r\n\r\n  &:not(:last-child) {\r\n    border-right: 3px solid $midGrey;\r\n  }\r\n\r\n  @include mq($from: tablet) {\r\n    padding: srem.convert(20px) 0;\r\n    min-width: 0;\r\n\r\n    &:not(:last-child) {\r\n      border-bottom: 1px solid $midGrey;\r\n      border-right: none;\r\n    }\r\n  }\r\n}\r\n\r\n.optionTitle {\r\n  flex: 1;\r\n\r\n  h3 {\r\n    font-size: 260%;\r\n    margin: 0;\r\n  }\r\n\r\n  .required {\r\n    font-style: italic;\r\n  }\r\n}\r\n\r\n.icon {\r\n  width: srem.convert(26px);\r\n  align-self: flex-start;\r\n  fill: $midGrey;\r\n}\r\n\r\n.iconSelected {\r\n  fill: rgb(93, 220, 47);\r\n}\r\n","@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.pillButton {\r\n  padding: srem.convert(7px) srem.convert(17px);\r\n  border-radius: 50vw;\r\n  background-color: $lightGrey;\r\n  white-space: nowrap;\r\n  width: fit-content;\r\n  color: $black;\r\n}\r\n\r\n.pillButtonSelected {\r\n  background-color: $red;\r\n  color: $white;\r\n\r\n  &.darkGrey {\r\n    background-color: $darkGrey;\r\n  }\r\n\r\n  &.black {\r\n    background-color: black;\r\n  }\r\n}\r\n","@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  padding: srem.convert(20px) 0;\r\n}\r\n\r\n.colourGroups {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  column-gap: srem.convert(6px);\r\n  row-gap: srem.convert(10px);\r\n  margin-bottom: srem.convert(40px);\r\n\r\n  button {\r\n    width: calc((100% / 7) - srem.convert(6px) * 6 / 7);\r\n  }\r\n}\r\n\r\n.materialType {\r\n  margin-bottom: srem.convert(20px);\r\n\r\n  &__title {\r\n    color: $darkGrey;\r\n    font-size: 100%;\r\n    font-style: italic;\r\n    margin-bottom: srem.convert(10px);\r\n    letter-spacing: 1px;\r\n  }\r\n}\r\n\r\n.materials {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: srem.convert(14px);\r\n\r\n  button {\r\n    width: calc(25% - srem.convert(14px) * 3 / 4);\r\n    position: relative;\r\n    overflow: hidden;\r\n\r\n    &::before {\r\n      content: '';\r\n      padding-bottom: 100%;\r\n      display: block;\r\n    }\r\n\r\n    img {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      max-width: 100%;\r\n      max-height: 100%;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n}\r\n","@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  padding: srem.convert(15px);\r\n  background-color: $yellow;\r\n  text-transform: capitalize;\r\n\r\n  &__noMaterial {\r\n    background-color: $darkGrey;\r\n    color: white;\r\n    text-transform: none;\r\n    letter-spacing: 1px;\r\n    font-family: $displayFont;\r\n  }\r\n}\r\n\r\n.materialName {\r\n  font-size: 105%;\r\n  font-weight: 600;\r\n}\r\n",".root {\r\n}\r\n\r\n.showOptional {\r\n  margin-bottom: 1rem;\r\n}\r\n","@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  border: 1px solid $midGrey;\r\n  margin-bottom: srem.convert(20px);\r\n  position: relative;\r\n  padding: 0 srem.convert(16px);\r\n  display: flex;\r\n  column-gap: srem.convert(16px);\r\n}\r\n\r\n.input {\r\n  appearance: none;\r\n  background-color: $white;\r\n  color: $black;\r\n  font-size: srem.convert(20px);\r\n  padding: srem.convert(25px) 0 srem.convert(9px);\r\n  width: 100%;\r\n  border-radius: 0;\r\n  position: relative;\r\n  border: 0;\r\n  outline: none;\r\n\r\n  &:focus,\r\n  &:active,\r\n  &:not(:placeholder-shown) {\r\n    + .label {\r\n      font-size: srem.convert(12px);\r\n      top: srem.convert(15px);\r\n    }\r\n  }\r\n}\r\n\r\n.label {\r\n  position: absolute;\r\n  left: srem.convert(16px);\r\n  top: 50%;\r\n  transform: translateY(calc(-50% + 2px));\r\n  font-family: $displayFont;\r\n  font-weight: 900;\r\n  font-size: srem.convert(20px);\r\n  transition: all 0.2s ease-in-out;\r\n  pointer-events: none;\r\n  color: $grey;\r\n}\r\n","@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  border: 1px solid $midGrey;\r\n  margin-bottom: srem.convert(20px);\r\n  position: relative;\r\n}\r\n\r\n.select {\r\n  border: none;\r\n  appearance: none;\r\n  font-family: inherit;\r\n  font-weight: 900;\r\n  font-size: srem.convert(20px);\r\n  outline: none;\r\n  width: 100%;\r\n  padding: srem.convert(18px) srem.convert(16px) srem.convert(12px);\r\n}\r\n\r\n.icon {\r\n  height: srem.convert(16px);\r\n  pointer-events: none;\r\n  position: absolute;\r\n  right: srem.convert(16px);\r\n  top: 50%;\r\n  transform: translateY(-50%) rotate(90deg);\r\n}\r\n","@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.variations {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: srem.convert(15px);\r\n}\r\n\r\n.unitToggle {\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: $displayFont;\r\n  font-weight: 900;\r\n  font-size: srem.convert(20px);\r\n  column-gap: srem.convert(5px);\r\n  color: $grey;\r\n}\r\n\r\n.toggleButton {\r\n  font-family: $displayFont;\r\n  font-weight: 900;\r\n  font-size: srem.convert(20px);\r\n  color: $grey;\r\n}\r\n\r\n.toggleButtonSelected {\r\n  color: $black;\r\n}\r\n","@use '~sass-rem' as srem;\r\n@import '@styles/variables';\r\n\r\n.titleContainer {\r\n  display: flex;\r\n  margin-bottom: srem.convert(20px);\r\n  align-items: flex-start;\r\n\r\n  .titleStep {\r\n    // background-color: $yellow;\r\n    // transform: scale(1.2);\r\n    font-size: 150%;\r\n    z-index: 10;\r\n    // padding: 0.8rem;\r\n  }\r\n\r\n  &.active {\r\n    .titleStep {\r\n      background-color: $red;\r\n    }\r\n\r\n    .titleButton {\r\n      background-color: $red;\r\n    }\r\n  }\r\n}\r\n\r\n.titleStep,\r\n.titleStep span {\r\n  text-wrap: nowrap;\r\n  white-space: nowrap;\r\n}\r\n\r\n.titleButton {\r\n  width: 100%;\r\n  // text-align: left;\r\n  justify-content: flex-start;\r\n  & > span {\r\n    display: flex;\r\n  }\r\n}\r\n\r\n.content {\r\n  padding-bottom: srem.convert(20px);\r\n}\r\n\r\n.imgIcon {\r\n  height: 20px;\r\n  filter: invert(1);\r\n  margin-left: 4px;\r\n}\r\n","@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: srem.convert(15px);\r\n  // border-top: 1px solid $midGrey;\r\n  background-color: $lightGrey;\r\n}\r\n","@use '~sass-rem' as srem;\r\n@import '@styles/variables';\r\n\r\n@font-face {\r\n  font-family: 'Arial';\r\n  src: url('https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/arial-bold-webfont.woff');\r\n}\r\n\r\n@font-face {\r\n  font-family: 'Oswald';\r\n  src: url('https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/oswald-semibold.woff');\r\n}\r\n\r\n@font-face {\r\n  font-family: 'College';\r\n  src: url('https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/college_block-webfont.woff');\r\n}\r\n\r\n@font-face {\r\n  font-family: 'Ballantines';\r\n  src: url('https://boxxer-api-dev.nyc3.cdn.digitaloceanspaces.com/fonts/ballantines-bold-webfont.woff');\r\n}\r\n\r\n.arial {\r\n  font-family: 'Arial';\r\n}\r\n.oswald {\r\n  font-family: 'Oswald';\r\n}\r\n.college {\r\n  font-family: 'College';\r\n}\r\n.ballantines {\r\n  font-family: 'Ballantines';\r\n}\r\n\r\n.navTextEdit {\r\n  padding-top: srem.convert(10px);\r\n}\r\n\r\n.textItem {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: srem.convert(10px);\r\n  background: #f6f6f6;\r\n\r\n  cursor: pointer;\r\n\r\n  &:nth-child(even) {\r\n    background: #e9e9e9;\r\n  }\r\n}\r\n\r\n.textItemText {\r\n  margin-right: auto;\r\n  padding: srem.convert(10px) 0;\r\n}\r\n\r\n.finishSelections {\r\n  margin-bottom: 2rem;\r\n\r\n  .disabled {\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n    color: #9a9a9a;\r\n  }\r\n}\r\n\r\n.showOutline {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: srem.convert(20px);\r\n\r\n  button {\r\n    margin-right: srem.convert(10px);\r\n  }\r\n}\r\n\r\n.fontSelection {\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  font-weight: 900;\r\n}\r\n\r\n.fontSelection,\r\n.finishSelections {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  .font,\r\n  .finishSelection {\r\n    flex-basis: 50%;\r\n    cursor: pointer;\r\n    // padding: 0.25rem;\r\n    text-align: center;\r\n    background-color: $lightGrey;\r\n    border: 1px solid white;\r\n\r\n    &:hover {\r\n      background-color: $midGrey;\r\n    }\r\n\r\n    &.selected {\r\n      background-color: $yellow;\r\n    }\r\n  }\r\n\r\n  .font {\r\n    font-size: 150%;\r\n    line-height: 200%;\r\n  }\r\n\r\n  .finishSelection {\r\n    padding: 1rem 0.5rem;\r\n    text-transform: uppercase;\r\n    font-weight: 800;\r\n\r\n    .pricing {\r\n      text-align: center;\r\n      text-transform: lowercase;\r\n      // margin-top: srem.convert(10px);\r\n      font-weight: normal;\r\n      font-size: smaller;\r\n    }\r\n  }\r\n}\r\n\r\n.navTextEdit {\r\n  .materialGroup {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n}\r\n\r\n.navTextsSelection {\r\n  margin-top: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n\r\n  .title {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    margin-bottom: 1.5rem;\r\n\r\n    .titleText {\r\n      margin: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.textPreview {\r\n  border-bottom: 5px solid #f4f4f4;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  max-height: 88px;\r\n  overflow: hidden;\r\n\r\n  .noText {\r\n    margin-bottom: 0.5rem;\r\n    margin-top: 0.5rem;\r\n    text-align: center;\r\n    font-style: italic;\r\n  }\r\n\r\n  &__imgContainer {\r\n    width: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\n.promptMessage {\r\n  color: red;\r\n}\r\n","@use '~sass-mq/mq' as *;\r\n@use '~sass-rem' as srem;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: 73px auto 1fr;\r\n  gap: 0px 0px;\r\n  grid-template-areas:\r\n    'header'\r\n    'header-after'\r\n    'content';\r\n  background-color: white;\r\n  max-width: 500px;\r\n  height: 100%;\r\n  z-index: 200;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n\r\n  &.open {\r\n    grid-template-areas:\r\n      'content'\r\n      'content';\r\n  }\r\n\r\n  @include mq($until: tablet) {\r\n    height: 66%;\r\n    position: absolute;\r\n    width: 100%;\r\n    max-width: none;\r\n\r\n    &.open {\r\n      height: 100px;\r\n    }\r\n\r\n    &.isFullscreen {\r\n      height: 100%;\r\n    }\r\n\r\n    &.minimized {\r\n      grid-template-areas: 'header';\r\n      grid-template-rows: 1fr;\r\n      height: 100px;\r\n\r\n      .actions,\r\n      .content {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.headerAfter {\r\n  grid-area: header-after;\r\n}\r\n\r\n.hasActions {\r\n  grid-template-rows: 73px auto 1fr auto;\r\n  grid-template-areas:\r\n    'header'\r\n    'header-after'\r\n    'content'\r\n    'actions';\r\n}\r\n\r\n.content {\r\n  grid-area: content;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: srem.convert(10px) srem.convert(30px);\r\n  overflow-y: scroll;\r\n  scroll-behavior: smooth;\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n  height: calc(100% + 1px);\r\n  /* Hide scrollbar for Chrome, Safari and Opera */\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.actions {\r\n  grid-area: actions;\r\n}\r\n","@use '~sass-rem' as srem;\r\n@use '~sass-mq/mq' as *;\r\n\r\n@import '@styles/variables';\r\n\r\n.root {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 srem.convert(16px);\r\n  z-index: 100;\r\n\r\n  @include mq($from: tablet) {\r\n    justify-content: flex-end;\r\n    padding: 0;\r\n  }\r\n}\r\n\r\n.total {\r\n  font-family: $displayFont;\r\n  font-weight: 900;\r\n  font-size: srem.convert(20px);\r\n  margin-right: srem.convert(40px);\r\n}\r\n\r\n.price {\r\n  color: $red;\r\n}\r\n","@use '~sass-mq/mq' as *;\r\n@use '~sass-rem' as srem;\r\n\r\n.root {\r\n  display: grid;\r\n  grid-template-columns: 100%;\r\n  grid-template-rows: 60px calc(100% - 160px);\r\n\r\n  gap: 0px 0px;\r\n  grid-template-areas:\r\n    'header'\r\n    'model';\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  background-color: #ededed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 999;\r\n\r\n  @include mq($from: tablet) {\r\n    grid-template-columns: 33.33% calc(66.66% - 80px) 80px;\r\n    grid-template-rows: 60px 60px 1fr 60px;\r\n    grid-template-areas:\r\n      'nav . .'\r\n      'nav header .'\r\n      'nav model .'\r\n      'nav . .';\r\n  }\r\n\r\n  &:before {\r\n    display: none;\r\n\r\n    @include mq($until: tablet, $and: '(orientation: landscape)') {\r\n      content: url(\"data:image/svg+xml,%3Csvg viewBox='0 0 700 700' width='100' height='100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M323.75 17.5h-192.5a43.77 43.77 0 0 0-30.938 12.812A43.766 43.766 0 0 0 87.5 61.25v437.5a43.77 43.77 0 0 0 12.812 30.938A43.766 43.766 0 0 0 131.25 542.5h192.5a43.77 43.77 0 0 0 30.938-12.812A43.766 43.766 0 0 0 367.5 498.75V61.25a43.77 43.77 0 0 0-12.812-30.938A43.766 43.766 0 0 0 323.75 17.5zM350 498.75c0 6.96-2.766 13.641-7.688 18.562S330.71 525 323.75 525h-192.5c-6.96 0-13.64-2.766-18.562-7.688s-7.687-11.602-7.687-18.562V61.25c0-6.96 2.766-13.641 7.687-18.562S124.29 35 131.25 35h26.25v8.75a8.752 8.752 0 0 0 8.75 8.75h122.5a8.752 8.752 0 0 0 8.75-8.75V35h26.25c6.961 0 13.641 2.766 18.562 7.688S350 54.29 350 61.25zM568.75 262.5H402.5a8.75 8.75 0 0 0 0 17.5h166.25c6.96 0 13.641 2.766 18.562 7.688S595 299.29 595 306.25v26.25h-8.75a8.75 8.75 0 0 0-8.75 8.75v122.5a8.752 8.752 0 0 0 8.75 8.75H595v26.25c0 6.96-2.766 13.64-7.688 18.562s-11.602 7.687-18.562 7.687H385a8.75 8.75 0 0 0 0 17.5h183.75a43.77 43.77 0 0 0 30.938-12.812 43.766 43.766 0 0 0 12.812-30.938v-192.5a43.77 43.77 0 0 0-12.812-30.938 43.766 43.766 0 0 0-30.938-12.812zM421.75 119a8.927 8.927 0 0 0 7 3.5 8.577 8.577 0 0 0 5.25-1.75c3.867-2.898 4.648-8.383 1.75-12.25l-13.824-18.551a165.41 165.41 0 0 1 82.633 39.934 165.402 165.402 0 0 1 48.617 77.844l-23.801-14a8.758 8.758 0 0 0-6.95-1.488 8.753 8.753 0 0 0-6.53 11.23 8.738 8.738 0 0 0 4.73 5.305L558.25 231a8.236 8.236 0 0 0 4.375 1.226h2.273a7.701 7.701 0 0 0 5.25-4.027l22.227-37.625a8.92 8.92 0 0 0-2.976-12.074 8.924 8.924 0 0 0-12.074 3.149l-8.926 15.227a182.496 182.496 0 0 0-54.363-81.898 182.54 182.54 0 0 0-88.96-41.828l17.5-13.301v.004c3.866-2.903 4.647-8.387 1.75-12.25a8.746 8.746 0 0 0-12.25-1.75l-35 26.25a8.753 8.753 0 0 0-1.75 12.25z'/%3E%3C/svg%3E\");\r\n      display: flex;\r\n      position: fixed;\r\n      width: 100%;\r\n      height: 100%;\r\n      position: fixed;\r\n      background-color: white;\r\n      z-index: 9999;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n  }\r\n}\r\n\r\n.nav {\r\n  grid-area: nav;\r\n}\r\n\r\n.model {\r\n  grid-area: model;\r\n  justify-self: stretch;\r\n}\r\n\r\n.controls {\r\n  position: relative;\r\n  z-index: 100;\r\n  pointer-events: none;\r\n\r\n  grid-column: 2 /4;\r\n  grid-row: 2 / 5;\r\n\r\n  @include mq($until: tablet) {\r\n    grid-column: 1 /2;\r\n    grid-row: 2 / 3;\r\n  }\r\n}\r\n\r\n.background {\r\n  grid-area: model;\r\n  align-self: center;\r\n  justify-self: center;\r\n  width: 90%;\r\n}\r\n\r\n.loading {\r\n  grid-area: model;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.header {\r\n  grid-area: header;\r\n}\r\n\r\n.close {\r\n  grid-area: model;\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 20px;\r\n\r\n  @include mq($from: tablet) {\r\n    bottom: 0px;\r\n    right: 0px;\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}